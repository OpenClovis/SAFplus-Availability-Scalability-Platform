
/*********************************************************************
* ModuleName  : idl
*********************************************************************/
/*********************************************************************
* Description : This file contains the declartions for client stub
*               routines
*     
* THIS FILE IS AUTO-GENERATED BY OPENCLOVIS IDE. EDIT THIS FILE AT
* YOUR OWN RISK. ANY CHANGE TO THIS FILE WILL BE OVERWRITTEN ON
* RE-GENERATION.
*     
*********************************************************************/
#ifndef _CKPT_EO_CKPT_SERVER_MASTER_DEPUTY_CLIENT_H_
#define _CKPT_EO_CKPT_SERVER_MASTER_DEPUTY_CLIENT_H_
#ifdef __cplusplus
extern "C" {
#endif
#include <clXdrApi.h>
#include <clIdlApi.h>
#include "../clientIDDefinitions.h"
#include "xdrClCkptIOVectorElementT.h"
#include "xdrCkptMasterDBClientInfoT.h"
#include "xdrCkptXlationDBEntryT.h"
#include "xdrCkptPeerListInfoT.h"
#include "xdrClCkptCheckpointCreationAttributesT.h"
#include "xdrClCkptSectionIdT.h"
#include "xdrCkptHdlDbT.h"
#include "xdrClCkptSectionDescriptorT.h"
#include "xdrCkptMasterDBEntryIDLT.h"
#include "xdrCkptMasterDBInfoIDLT.h"
#include "xdrClCkptSectionCreationAttributesT.h"
#include "xdrClCkptCheckpointDescriptorT.h"



ClRcT clCkptDeputyMasterInfoSyncupClientSync_4_0_0(CL_IN ClIdlHandleT handle, CL_INOUT ClVersionT* pVersion, CL_OUT ClUint32T* numOfCkpts, CL_OUT CkptXlationDBEntryT_4_0_0** pXlationInfo, CL_OUT CkptMasterDBInfoIDLT_4_0_0* pMasterInfo, CL_OUT ClUint32T* mastHdlCount, CL_OUT CkptMasterDBEntryIDLT_4_0_0** pMasterDBInfo, CL_OUT ClUint32T* peerCount, CL_OUT CkptPeerListInfoT_4_0_0** pPeerListInfo, CL_OUT ClUint32T* clientHdlCount, CL_OUT CkptMasterDBClientInfoT_4_0_0** pClientDBInfo);

typedef void (*CkptEoClCkptDeputyMasterInfoSyncupAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_INOUT ClVersionT* pVersion, CL_OUT ClUint32T* numOfCkpts, CL_OUT CkptXlationDBEntryT_4_0_0** pXlationInfo, CL_OUT CkptMasterDBInfoIDLT_4_0_0* pMasterInfo, CL_OUT ClUint32T* mastHdlCount, CL_OUT CkptMasterDBEntryIDLT_4_0_0** pMasterDBInfo, CL_OUT ClUint32T* peerCount, CL_OUT CkptPeerListInfoT_4_0_0** pPeerListInfo, CL_OUT ClUint32T* clientHdlCount, CL_OUT CkptMasterDBClientInfoT_4_0_0** pClientDBInfo, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef CkptEoClCkptDeputyMasterInfoSyncupAsyncCallbackT_4_0_0 CkptEoClCkptDeputyMasterInfoSyncupAsyncCallbackT;

ClRcT clCkptDeputyMasterInfoSyncupClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_INOUT ClVersionT* pVersion, CL_OUT ClUint32T* numOfCkpts, CL_OUT CkptXlationDBEntryT_4_0_0** pXlationInfo, CL_OUT CkptMasterDBInfoIDLT_4_0_0* pMasterInfo, CL_OUT ClUint32T* mastHdlCount, CL_OUT CkptMasterDBEntryIDLT_4_0_0** pMasterDBInfo, CL_OUT ClUint32T* peerCount, CL_OUT CkptPeerListInfoT_4_0_0** pPeerListInfo, CL_OUT ClUint32T* clientHdlCount, CL_OUT CkptMasterDBClientInfoT_4_0_0** pClientDBInfo,CL_IN CkptEoClCkptDeputyMasterInfoSyncupAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);

ClRcT clCkptLeaderAddrUpdateClientSync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClUint32T masterAddr, CL_IN ClUint32T deputyAddr);

typedef void (*CkptEoClCkptLeaderAddrUpdateAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_IN ClUint32T  masterAddr, CL_IN ClUint32T  deputyAddr, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef CkptEoClCkptLeaderAddrUpdateAsyncCallbackT_4_0_0 CkptEoClCkptLeaderAddrUpdateAsyncCallbackT;

ClRcT clCkptLeaderAddrUpdateClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClUint32T  masterAddr, CL_IN ClUint32T  deputyAddr,CL_IN CkptEoClCkptLeaderAddrUpdateAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);


#ifdef __cplusplus
}
#endif
#endif /*_CKPT_EO_CKPT_SERVER_MASTER_DEPUTY_CLIENT_H_*/
