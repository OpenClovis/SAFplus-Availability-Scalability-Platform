
/*********************************************************************
* File: 
*********************************************************************/
/*********************************************************************
* Description : This file contains the declartions for server stub
*               routines
*     
* THIS FILE IS AUTO-GENERATED BY OPENCLOVIS IDE. EDIT THIS FILE AT
* YOUR OWN RISK. ANY CHANGE TO THIS FILE WILL BE OVERWRITTEN ON
* RE-GENERATION.
*     
*********************************************************************/

#ifndef _CKPTEOCKPTSERVERMASTERACTIVE_SERVER_H_
#define _CKPTEOCKPTSERVERMASTERACTIVE_SERVER_H_
#ifdef __cplusplus
extern "C" {
#endif
#include <clXdrApi.h>
#include <clIdlApi.h>
#include <ipi/clRmdIpi.h>
#include "../clientIDDefinitions.h"
#include "xdrClCkptIOVectorElementT.h"
#include "xdrCkptMasterDBClientInfoT.h"
#include "xdrCkptDynamicSyncupT.h"
#include "xdrCkptXlationDBEntryT.h"
#include "xdrCkptPeerListInfoT.h"
#include "xdrCkptCreateInfoT.h"
#include "xdrClCkptCheckpointCreationAttributesT.h"
#include "xdrClCkptSectionIdT.h"
#include "xdrCkptHdlDbT.h"
#include "xdrClCkptSectionDescriptorT.h"
#include "xdrCkptInfoT.h"
#include "xdrCkptMasterDBEntryIDLT.h"
#include "xdrCkptMasterDBInfoIDLT.h"
#include "xdrCkptOpenInfoT.h"
#include "xdrClCkptSectionCreationAttributesT.h"
#include "xdrClCkptCheckpointDescriptorT.h"
#include "xdrCkptDynamicInfoT.h"



ClRcT clCkptDeputyCkptCreate_4_0_0(CL_IN ClHandleT  ckptMastHdl, CL_IN ClHandleT  ckptClntHdl, CL_IN ClNameT*  pCkptName, CL_IN ClCkptCheckpointCreationAttributesT_4_0_0*  pCkptCreatAtrr, CL_IN ClUint32T  localAddr, CL_IN ClUint32T  portId, CL_INOUT ClVersionT*  pVersion);

ClRcT clCkptDeputyCkptCreateResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_INOUT  ClVersionT  pVersion);

ClRcT clCkptDeputyCkptOpen_4_0_0(CL_IN ClHandleT  ckptMastHdl, CL_IN ClHandleT  ckptClntHdl, CL_IN ClUint32T  localAddr, CL_IN ClUint32T  portId, CL_INOUT ClVersionT*  pVersion);

ClRcT clCkptDeputyCkptOpenResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_INOUT  ClVersionT  pVersion);

ClRcT clCkptDeputyCkptInfoUpdate_4_0_0(CL_INOUT ClVersionT*  pVersion, CL_IN ClUint32T  numOfCkpts, CL_IN CkptInfoT_4_0_0*  pCkptInfo);

ClRcT clCkptDeputyCkptInfoUpdateResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_INOUT  ClVersionT  pVersion);

ClRcT clCkptDeputyCkptInfoUpdate_5_0_0(CL_INOUT ClVersionT*  pVersion, CL_IN ClUint32T  numOfCkpts, CL_IN CkptInfoT_5_0_0*  pCkptInfo);

ClRcT clCkptDeputyCkptInfoUpdateResponseSend_5_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_INOUT  ClVersionT  pVersion);

ClRcT clCkptCreateInfoDeputyUpdate_4_0_0(CL_INOUT ClVersionT*  pVersion, CL_IN CkptOpenInfoT_4_0_0*  openInfo, CL_IN CkptCreateInfoT_4_0_0*  pCreateInfo);

ClRcT clCkptCreateInfoDeputyUpdateResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_INOUT  ClVersionT  pVersion);

ClRcT clCkptActiveCkptOpen_4_0_0(CL_INOUT ClVersionT*  pVersion, CL_IN ClHandleT  ckptMastHdl, CL_IN ClNameT*  pCkptName, CL_IN ClUint32T  ckptOpenFlags, CL_IN ClCkptCheckpointCreationAttributesT_4_0_0*  pCkptCreateAttr, CL_IN ClUint32T  peerAddr, CL_IN ClUint32T  portId);

ClRcT clCkptActiveCkptOpenResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_INOUT  ClVersionT  pVersion);

ClRcT clCkptReplicaNotify_4_0_0(CL_INOUT ClVersionT*  pVersion, CL_IN ClHandleT  ckptMastHdl, CL_IN ClUint32T  ckptActiveAddr);

ClRcT clCkptReplicaNotifyResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_INOUT  ClVersionT  pVersion);

ClRcT clCkptDeputyReplicaListUpdate_4_0_0(CL_IN ClVersionT*  pVersion, CL_IN ClHandleT  ckptMastHdl, CL_IN ClUint32T  peerAddr, CL_IN ClUint32T  addToList);

ClRcT clCkptDeputyReplicaListUpdateResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode);

ClRcT clCkptActiveCkptDelete_4_0_0(CL_IN ClVersionT  inVersion, CL_IN ClHandleT  ckptActiveHdl);

ClRcT clCkptActiveCkptDeleteResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode);

ClRcT clCkptActiveAddrSet_4_0_0(CL_IN ClVersionT  inVersion, CL_IN ClHandleT  masterHdl, CL_IN ClUint32T  prevActiveAddr);

ClRcT clCkptActiveAddrSetResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode);

ClRcT clCkptActiveAddrInform_4_0_0(CL_IN ClVersionT  inVersion, CL_IN ClHandleT  masterHdl, CL_IN ClUint32T  activeAddr);

ClRcT clCkptActiveAddrInformResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode);

ClRcT clCkptDeputyDynamicUpdate_4_0_0(CL_INOUT ClVersionT*  pVersion, CL_IN CkptDynamicSyncupT_4_0_0  updateFlag, CL_IN CkptDynamicInfoT_4_0_0*  pDynamicInfo);

ClRcT clCkptDeputyDynamicUpdateResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_INOUT  ClVersionT  pVersion);

ClRcT clCkptDeputyPeerListUpdate_4_0_0(CL_IN ClVersionT  version, CL_IN ClUint32T  peerAddr, CL_IN ClUint8T  credential);

ClRcT clCkptDeputyPeerListUpdateResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode);


#ifdef __cplusplus
}
#endif
#endif /*_CKPTEOCKPTSERVERMASTERACTIVE_SERVER_H_*/
