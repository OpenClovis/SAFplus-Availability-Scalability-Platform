
/*********************************************************************
* File: 
*********************************************************************/
/*********************************************************************
* Description : This file contains the declartions for server stub
*               routines
*     
* THIS FILE IS AUTO-GENERATED BY OPENCLOVIS IDE. EDIT THIS FILE AT
* YOUR OWN RISK. ANY CHANGE TO THIS FILE WILL BE OVERWRITTEN ON
* RE-GENERATION.
*     
*********************************************************************/

#ifndef _CKPTEOCKPTSERVERPEERPEER_SERVER_H_
#define _CKPTEOCKPTSERVERPEERPEER_SERVER_H_
#ifdef __cplusplus
extern "C" {
#endif
#include <clXdrApi.h>
#include <clIdlApi.h>
#include <ipi/clRmdIpi.h>
#include "../clientIDDefinitions.h"
#include "xdrClCkptIOVectorElementT.h"
#include "xdrCkptMasterDBClientInfoT.h"
#include "xdrCkptDynamicSyncupT.h"
#include "xdrCkptXlationDBEntryT.h"
#include "xdrCkptPeerListInfoT.h"
#include "xdrCkptCreateInfoT.h"
#include "xdrClCkptCheckpointCreationAttributesT.h"
#include "xdrClCkptSectionIdT.h"
#include "xdrCkptHdlDbT.h"
#include "xdrClCkptSectionDescriptorT.h"
#include "xdrCkptInfoT.h"
#include "xdrCkptMasterDBEntryIDLT.h"
#include "xdrCkptMasterDBInfoIDLT.h"
#include "xdrCkptOpenInfoT.h"
#include "xdrClCkptSectionCreationAttributesT.h"
#include "xdrClCkptCheckpointDescriptorT.h"
#include "xdrCkptDynamicInfoT.h"



ClRcT clCkptAllReplicaPresenceListUpdate_4_0_0(CL_IN ClVersionT  inVersion, CL_IN ClHandleT  ckptActiveHdl, CL_IN ClUint32T  peerAddr);

ClRcT clCkptAllReplicaPresenceListUpdateResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode);

ClRcT clCkptRemSvrWelcome_4_0_0(CL_INOUT ClVersionT*  pVersion, CL_IN ClUint32T  peerAddr, CL_IN ClUint8T  credential);

ClRcT clCkptRemSvrWelcomeResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_INOUT  ClVersionT  pVersion);

ClRcT clCkptRemSvrBye_4_0_0(CL_IN ClVersionT  pVersion, CL_IN ClUint32T  peerAddr, CL_IN ClUint32T  portId, CL_IN ClUint32T  flags);

ClRcT clCkptRemSvrByeResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode);

ClRcT clCkptNackReceive_4_0_0(CL_IN ClVersionT  version, CL_IN ClUint32T  nackId);

ClRcT clCkptNackReceiveResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode);

ClRcT clCkptMasterStatusInfoGet_4_0_0(CL_IN ClHandleT  ckptActiveHdl, CL_OUT ClInt64T*  time, CL_OUT ClUint32T*  actAddr, CL_OUT ClUint32T*  refCount, CL_OUT ClUint8T*  flag);

ClRcT clCkptMasterStatusInfoGetResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_OUT  ClInt64T  time,CL_OUT  ClUint32T  actAddr,CL_OUT  ClUint32T  refCount,CL_OUT  ClUint8T  flag);


#ifdef __cplusplus
}
#endif
#endif /*_CKPTEOCKPTSERVERPEERPEER_SERVER_H_*/
