
/*********************************************************************
* File: 
*********************************************************************/
/*********************************************************************
* Description : This file contains the declartions for server stub
*               routines
*     
* THIS FILE IS AUTO-GENERATED BY OPENCLOVIS IDE. EDIT THIS FILE AT
* YOUR OWN RISK. ANY CHANGE TO THIS FILE WILL BE OVERWRITTEN ON
* RE-GENERATION.
*     
*********************************************************************/

#ifndef _CKPTEOCKPTSERVEREXTCLISERVERFUNC_SERVER_H_
#define _CKPTEOCKPTSERVEREXTCLISERVERFUNC_SERVER_H_
#ifdef __cplusplus
extern "C" {
#endif
#include <clXdrApi.h>
#include <clIdlApi.h>
#include <ipi/clRmdIpi.h>
#include "../clientIDDefinitions.h"
#include "xdrCkptPeerListInfoT.h"
#include "xdrCkptCPInfoT.h"
#include "xdrClCkptIOVectorElementT.h"
#include "xdrClCkptSectionIdT.h"
#include "xdrCkptMasterDBEntryIDLT.h"
#include "xdrCkptDPInfoT.h"
#include "xdrCkptCreateInfoT.h"
#include "xdrClCkptSectionDescriptorT.h"
#include "xdrCkptMasterDBInfoIDLT.h"
#include "xdrCkptXlationDBEntryT.h"
#include "xdrCkptHdlDbT.h"
#include "xdrClCkptDifferenceIOVectorElementT.h"
#include "xdrCkptInfoT.h"
#include "xdrCkptOpenInfoT.h"
#include "xdrClCkptCheckpointDescriptorT.h"
#include "xdrCkptUpdateFlagT.h"
#include "xdrCkptDynamicInfoT.h"
#include "xdrCkptMasterDBClientInfoT.h"
#include "xdrCkptDynamicSyncupT.h"
#include "xdrCkptSectionInfoT.h"
#include "xdrClCkptCheckpointCreationAttributesT.h"
#include "xdrClCkptSectionCreationAttributesT.h"



ClRcT _ckptCheckpointWriteVector_4_0_0(CL_IN ClHandleT  ckptHandle, CL_IN ClUint32T  nodeAddr, CL_IN ClUint32T  portId, CL_IN ClUint32T  numberOfElements, CL_IN ClCkptDifferenceIOVectorElementT_4_0_0*  pDifferenceIoVector, CL_OUT ClUint32T*  pError, CL_INOUT ClVersionT*  pVersion);

ClRcT _ckptCheckpointWriteVectorResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_OUT  ClUint32T  pError,CL_INOUT  ClVersionT  pVersion);

ClRcT _ckptSectionOverwriteVector_4_0_0(CL_IN ClHandleT  ckptHandle, CL_IN ClUint32T  nodeAddr, CL_IN ClUint32T  portId, CL_IN ClUint16T  srcClient, CL_IN ClCkptSectionIdT_4_0_0*  pSecId, CL_IN ClInt64T  expryTime, CL_IN ClUint64T  dataSize, CL_IN ClDifferenceVectorT*  pDifferenceVector, CL_INOUT ClVersionT*  pVersion);

ClRcT _ckptSectionOverwriteVectorResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_INOUT  ClVersionT  pVersion);

ClRcT clCkptRemSvrCkptWriteVector_4_0_0(CL_INOUT ClVersionT*  pVersion, CL_IN ClHandleT  ckptHandle, CL_IN ClUint32T  nodeAddr, CL_IN ClUint32T  portId, CL_IN ClUint32T  numberOfElements, CL_IN ClCkptDifferenceIOVectorElementT_4_0_0*  pDifferenceIoVector);

ClRcT clCkptRemSvrCkptWriteVectorResponseSend_4_0_0(CL_IN ClIdlHandleT idlHdl,CL_IN ClRcT retCode,CL_INOUT  ClVersionT  pVersion);


#ifdef __cplusplus
}
#endif
#endif /*_CKPTEOCKPTSERVEREXTCLISERVERFUNC_SERVER_H_*/
