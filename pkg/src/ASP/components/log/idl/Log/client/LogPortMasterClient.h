
/*********************************************************************
* ModuleName  : idl
*********************************************************************/
/*********************************************************************
* Description : This file contains the declartions for client stub
*               routines
*     
* THIS FILE IS AUTO-GENERATED BY OPENCLOVIS IDE. EDIT THIS FILE AT
* YOUR OWN RISK. ANY CHANGE TO THIS FILE WILL BE OVERWRITTEN ON
* RE-GENERATION.
*     
*********************************************************************/
#ifndef _LOG_PORT_MASTER_CLIENT_H_
#define _LOG_PORT_MASTER_CLIENT_H_
#ifdef __cplusplus
extern "C" {
#endif
#include <clXdrApi.h>
#include <clIdlApi.h>
#include "../clientIDDefinitions.h"
#include "xdrClLogStreamAttrIDLT.h"
#include "xdrClLogCompDataT.h"



typedef void (*LogClLogMasterAttrVerifyNGetAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_IN ClLogStreamAttrIDLT_4_0_0* pStreamAttr, CL_INOUT ClNameT* pStreamName, CL_INOUT ClUint32T* pStreamScope, CL_INOUT ClNameT* pStreamScopeNode, CL_INOUT ClUint16T* pStreamId, CL_OUT ClUint64T* pStreamMcastAddr, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef LogClLogMasterAttrVerifyNGetAsyncCallbackT_4_0_0 LogClLogMasterAttrVerifyNGetAsyncCallbackT;

ClRcT clLogMasterAttrVerifyNGetClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClLogStreamAttrIDLT_4_0_0* pStreamAttr, CL_INOUT ClNameT* pStreamName, CL_INOUT ClUint32T* pStreamScope, CL_INOUT ClNameT* pStreamScopeNode, CL_INOUT ClUint16T* pStreamId, CL_OUT ClUint64T* pStreamMcastAddr,CL_IN LogClLogMasterAttrVerifyNGetAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);

typedef void (*LogClLogMasterStreamCloseNotifyAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_IN ClStringT* pFileName, CL_IN ClStringT* pFileLocation, CL_IN ClNameT* pStreamName, CL_IN ClUint32T  pStreamScope, CL_IN ClNameT* pStreamScopeNode, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef LogClLogMasterStreamCloseNotifyAsyncCallbackT_4_0_0 LogClLogMasterStreamCloseNotifyAsyncCallbackT;

ClRcT clLogMasterStreamCloseNotifyClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClStringT* pFileName, CL_IN ClStringT* pFileLocation, CL_IN ClNameT* pStreamName, CL_IN ClUint32T  pStreamScope, CL_IN ClNameT* pStreamScopeNode,CL_IN LogClLogMasterStreamCloseNotifyAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);

ClRcT clLogMasterStreamListGetClientSync_4_0_0(CL_IN ClIdlHandleT handle, CL_OUT ClUint32T* pNumStreams, CL_OUT ClUint32T* pBuffLen, CL_OUT ClUint8T** pBuffer);

typedef void (*LogClLogMasterStreamListGetAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_OUT ClUint32T* pNumStreams, CL_OUT ClUint32T* pBuffLen, CL_OUT ClUint8T** pBuffer, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef LogClLogMasterStreamListGetAsyncCallbackT_4_0_0 LogClLogMasterStreamListGetAsyncCallbackT;

ClRcT clLogMasterStreamListGetClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_OUT ClUint32T* pNumStreams, CL_OUT ClUint32T* pBuffLen, CL_OUT ClUint8T** pBuffer,CL_IN LogClLogMasterStreamListGetAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);

ClRcT clLogMasterCompIdChkNGetClientSync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClNameT* pCompName, CL_INOUT ClUint32T* pClientId);

ClRcT clLogMasterCompListGetClientSync_4_0_0(CL_IN ClIdlHandleT handle, CL_OUT ClUint32T* pNumStreams, CL_OUT ClUint32T* pBuffLen, CL_OUT ClUint8T** pBuffer);

typedef void (*LogClLogMasterCompListGetAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_OUT ClUint32T* pNumStreams, CL_OUT ClUint32T* pBuffLen, CL_OUT ClUint8T** pBuffer, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef LogClLogMasterCompListGetAsyncCallbackT_4_0_0 LogClLogMasterCompListGetAsyncCallbackT;

ClRcT clLogMasterCompListGetClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_OUT ClUint32T* pNumStreams, CL_OUT ClUint32T* pBuffLen, CL_OUT ClUint8T** pBuffer,CL_IN LogClLogMasterCompListGetAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);

typedef void (*LogClLogMasterCompListNotifyAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_IN ClUint32T  pNumEntries, CL_IN ClLogCompDataT_4_0_0* pCompData, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef LogClLogMasterCompListNotifyAsyncCallbackT_4_0_0 LogClLogMasterCompListNotifyAsyncCallbackT;

ClRcT clLogMasterCompListNotifyClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClUint32T  pNumEntries, CL_IN ClLogCompDataT_4_0_0* pCompData,CL_IN LogClLogMasterCompListNotifyAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);


#ifdef __cplusplus
}
#endif
#endif /*_LOG_PORT_MASTER_CLIENT_H_*/
