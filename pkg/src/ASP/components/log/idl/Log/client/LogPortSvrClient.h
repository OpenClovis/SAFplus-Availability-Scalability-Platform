
/*********************************************************************
* ModuleName  : idl
*********************************************************************/
/*********************************************************************
* Description : This file contains the declartions for client stub
*               routines
*     
* THIS FILE IS AUTO-GENERATED BY OPENCLOVIS IDE. EDIT THIS FILE AT
* YOUR OWN RISK. ANY CHANGE TO THIS FILE WILL BE OVERWRITTEN ON
* RE-GENERATION.
*     
*********************************************************************/
#ifndef _LOG_PORT_SVR_CLIENT_H_
#define _LOG_PORT_SVR_CLIENT_H_
#ifdef __cplusplus
extern "C" {
#endif
#include <clXdrApi.h>
#include <clIdlApi.h>
#include "../clientIDDefinitions.h"
#include "xdrClLogFilterT.h"
#include "xdrClLogStreamAttrIDLT.h"
#include "xdrClLogCompDataT.h"



ClRcT clLogSvrStreamOpenClientSync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClNameT* streamName, CL_IN ClUint32T streamScope, CL_IN ClNameT* streamScopeNode, CL_IN ClLogStreamAttrIDLT_4_0_0* pStreamAttr, CL_IN ClUint8T streamOpenFlags, CL_IN ClUint32T compId, CL_IN ClUint32T portId, CL_OUT ClStringT* pShmName, CL_OUT ClUint32T* pShmSize);

typedef void (*LogClLogSvrStreamOpenAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_IN ClNameT* streamName, CL_IN ClUint32T  streamScope, CL_IN ClNameT* streamScopeNode, CL_IN ClLogStreamAttrIDLT_4_0_0* pStreamAttr, CL_IN ClUint8T  streamOpenFlags, CL_IN ClUint32T  compId, CL_IN ClUint32T  portId, CL_OUT ClStringT* pShmName, CL_OUT ClUint32T* pShmSize, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef LogClLogSvrStreamOpenAsyncCallbackT_4_0_0 LogClLogSvrStreamOpenAsyncCallbackT;

ClRcT clLogSvrStreamOpenClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClNameT* streamName, CL_IN ClUint32T  streamScope, CL_IN ClNameT* streamScopeNode, CL_IN ClLogStreamAttrIDLT_4_0_0* pStreamAttr, CL_IN ClUint8T  streamOpenFlags, CL_IN ClUint32T  compId, CL_IN ClUint32T  portId, CL_OUT ClStringT* pShmName, CL_OUT ClUint32T* pShmSize,CL_IN LogClLogSvrStreamOpenAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);

ClRcT clLogSvrStreamCloseClientSync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClNameT* streamName, CL_IN ClUint32T streamScope, CL_IN ClNameT* streamScopeNode, CL_IN ClUint32T compId);

typedef void (*LogClLogSvrStreamCloseAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_IN ClNameT* streamName, CL_IN ClUint32T  streamScope, CL_IN ClNameT* streamScopeNode, CL_IN ClUint32T  compId, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef LogClLogSvrStreamCloseAsyncCallbackT_4_0_0 LogClLogSvrStreamCloseAsyncCallbackT;

ClRcT clLogSvrStreamCloseClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClNameT* streamName, CL_IN ClUint32T  streamScope, CL_IN ClNameT* streamScopeNode, CL_IN ClUint32T  compId,CL_IN LogClLogSvrStreamCloseAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);

typedef void (*LogClLogSvrFilterSetAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_IN ClNameT* pStreamName, CL_IN ClUint32T  streamScope, CL_IN ClNameT* pStreamScopeNode, CL_IN ClLogFilterT_4_0_0* pFilter, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef LogClLogSvrFilterSetAsyncCallbackT_4_0_0 LogClLogSvrFilterSetAsyncCallbackT;

ClRcT clLogSvrFilterSetClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClNameT* pStreamName, CL_IN ClUint32T  streamScope, CL_IN ClNameT* pStreamScopeNode, CL_IN ClLogFilterT_4_0_0* pFilter,CL_IN LogClLogSvrFilterSetAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);

typedef void (*LogClLogSvrStreamHandleFlagsUpdateAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_IN ClNameT* pStreamName, CL_IN ClUint32T  streamScope, CL_IN ClNameT* pStreamScopeNode, CL_IN ClUint8T  handleFlags, CL_IN ClUint16T  setFlags, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef LogClLogSvrStreamHandleFlagsUpdateAsyncCallbackT_4_0_0 LogClLogSvrStreamHandleFlagsUpdateAsyncCallbackT;

ClRcT clLogSvrStreamHandleFlagsUpdateClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClNameT* pStreamName, CL_IN ClUint32T  streamScope, CL_IN ClNameT* pStreamScopeNode, CL_IN ClUint8T  handleFlags, CL_IN ClUint16T  setFlags,CL_IN LogClLogSvrStreamHandleFlagsUpdateAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);

typedef void (*LogClLogHandlerSvrAckSendAsyncCallbackT_4_0_0) (CL_IN ClIdlHandleT handle, CL_IN ClNameT* pStreamName, CL_IN ClNameT* pNodeName, CL_IN ClUint32T  streamScope, CL_IN ClUint32T  sequenceNumber, CL_IN ClUint32T  numRecords, CL_IN ClHandleT  flushCookie, CL_IN ClRcT rc, CL_IN void* pCookie);

typedef LogClLogHandlerSvrAckSendAsyncCallbackT_4_0_0 LogClLogHandlerSvrAckSendAsyncCallbackT;

ClRcT clLogHandlerSvrAckSendClientAsync_4_0_0(CL_IN ClIdlHandleT handle, CL_IN ClNameT* pStreamName, CL_IN ClNameT* pNodeName, CL_IN ClUint32T  streamScope, CL_IN ClUint32T  sequenceNumber, CL_IN ClUint32T  numRecords, CL_IN ClHandleT  flushCookie,CL_IN LogClLogHandlerSvrAckSendAsyncCallbackT_4_0_0 fpAsyncCallback, CL_IN void *cookie);


#ifdef __cplusplus
}
#endif
#endif /*_LOG_PORT_SVR_CLIENT_H_*/
