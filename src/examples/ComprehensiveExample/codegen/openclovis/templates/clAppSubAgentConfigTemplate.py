from string import Template

clAppSubAgentConfigHeaderFileTemplate = Template("""
/*******************************************************************************
*
* This headerfile is auto-generated by OpenClovis IDE
*
* clAppSubAgentConfig.h
*
********************************************************************************/

#ifndef _CL_APP_SUBAGENT_CONFIG_H_
#define _CL_APP_SUBAGENT_CONFIG_H_

${headerIncludes}                                                                                                                  
                                                                                                                             
#define CL_SNMP_MAX_OID_STR_LEN (CL_SNMP_MAX_OID_LEN * sizeof(unsigned long))

typedef struct ClSNMPRequestInfo
{
    /* This is the application independent part*/
    ClInt32T    tableType;
    ClCharT     oid[CL_SNMP_MAX_OID_STR_LEN];
    ClInt32T    oidLen;
    ClSnmpOpCodeT    opCode;
    ClUint32T   dataLen;    
    /* Change the definition of union based on the indices for the application
     * MIB*/
    union
    {
${unions}
    }index;
}ClSNMPRequestInfoT;

/*
 * Information regarding all the tables on which the sub-agent is operating.
 */
typedef enum {
${enums}
    CL_SNMP_TABLE_MAX

} ClSNMPMibObjectsT;

void init_appMIB();

#endif /* _CL_APP_SUBAGENT_CONFIG_H_ */
""")

scalarUnionTemplate = Template("""\
		ClUint32T scalarType;
""")

scalarEnumTemplate = Template("""\
	CL_${moduleName}_SCALARS,
""")

tableUnionTemplate = Template("""\
		ClSnmp${tableName}IndexInfoT ${tableName}Info;
""")

tableEnumTemplate = Template("""\
	CL_${tableName},
""")

clAppSubAgentConfigSourceFileTemplate = Template("""\
#include <clAppSubAgentConfig.h>
${sourceIncludes}                                                                                                                  
                                                                                                                             
/*
 * This structure contains information regarding oid of the table and the 
 * type of index. The index  can  either be  a string value or a non-string value.
 * Any SNMP type apart from string is treated as non-string.
 */

ClSnmpOidInfoT appOidInfo[] =
{
${appOidInfos}    
    {0, NULL, 0, {{0,0}}, NULL, NULL}
};

/*
 * This provides mapping between trap oid and the notification call back function 
 * generated by mib2c. When an alarm is raised this mapping is used to call the
 * corresponding notification function.
 */
ClSnmpNtfyCallbackTableT clSnmpAppCallback[]= {
${trapInfos}
    {NULL, NULL, NULL}
};

void init_appMIB()
{
${moduleInits}
}
""")

appOidInfoTemplate = Template("""\
	{    ${tableType}, "${oid}",
		${numAttr} /* no. of indexes */,
        {
${attrTypes}            
        },
        ${fpIndexGet}, ${fpInstXlator}, ${fpInstCompare}
    },
""")

attrTypeTemplate = Template("""\
	        { ${type}, ${size} },
""")

trapTemplate = Template("""\
    {"${trapOid}", ${fpIndexGet}, ${notifyCallback}},
""")

includeTemplate = Template("""\
#include <${includeFileName}>
""")
