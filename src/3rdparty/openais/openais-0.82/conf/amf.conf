# AMF Test configuration file
# - Times in milliseconds
# - clccli_path can be set on any level from application and down and will be
# added to the CLI commands if they are not already specified with an absolute
# path (begins with /).
# WL - WorkLoad

safAmfCluster = TEST_CLUSTER {
	saAmfClusterStartupTimeout=3000
	safAmfNode = AMF1 {
		saAmfNodeSuFailOverProb=2000
		saAmfNodeSuFailoverMax=2
		saAmfNodeClmNode=p01
	}
	safAmfNode = AMF2 {
		saAmfNodeSuFailOverProb=2000
		saAmfNodeSuFailoverMax=2
		saAmfNodeClmNode=p02
	}
	safApp = APP-1 {
		safSg = RAID {
			saAmfSGRedundancyModel=nplusm	
			saAmfSGNumPrefActiveSUs=1
			saAmfSGMaxActiveSIsperSUs=2
			saAmfSGNumPrefStandbySUs=1
			saAmfSGMaxStandbySIsperSUs=2
			saAmfSGCompRestartProb=100000
			saAmfSGCompRestartMax=1
			saAmfSGSuRestartProb=20000	
			saAmfSGSuRestartMax=1
			saAmfSGAutoAdjustProb=5000
			safSu = SERVICE_X_1 {
				saAmfSUHostedByNode=AMF1
				saAmfSUNumComponents=1
				safComp = A {
					saAmfCompCategory=sa_aware
					saAmfCompCapability=x_active_or_y_standby
					saAmfCompNumMaxActiveCsi=1
					saAmfCompNumMaxStandbyCsi=1
					saAmfCompDefaultClcCliTimeout = 500
					saAmfCompDefaultCallbackTimeOut = 500
					saAmfCompInstantiateCmd = /tmp/aistest/clc_cli_script
					saAmfCompInstantiateCmdArgv= instantiate /tmp/aistest/testamf1
					saAmfCompTerminateCmd = /tmp/aistest/clc_cli_script
					saAmfCompTerminateCmdArgv = terminate
					saAmfCompCleanupCmd = /tmp/aistest/clc_cli_script
					saAmfCompCleanupCmdArgv = cleanup
					saAmfCompCsTypes {
						A
					}
					saAmfCompCmdEnv {
						var1=val1
						var2=val2
					}
					saAmfCompRecoveryOnError=component_restart
					safHealthcheckKey = amfInvoked {
						saAmfHealthcheckPeriod = 4000
						saAmfHealthcheckMaxDuration = 350
					}
					safHealthcheckKey = compInvoked {
						saAmfHealthcheckPeriod = 5000
					}
				}
				safComp = B {
					saAmfCompCategory=sa_aware
					saAmfCompCapability=x_active_or_y_standby
					saAmfCompNumMaxActiveCsi=1
					saAmfCompNumMaxStandbyCsi=1
					saAmfCompDefaultClcCliTimeout = 500
					saAmfCompDefaultCallbackTimeOut = 500
					saAmfCompInstantiateCmd = /tmp/aistest/clc_cli_script
					saAmfCompInstantiateCmdArgv= instantiate /tmp/aistest/testamf1
					saAmfCompTerminateCmd = /tmp/aistest/clc_cli_script
					saAmfCompTerminateCmdArgv = terminate
					saAmfCompCleanupCmd = /tmp/aistest/clc_cli_script
					saAmfCompCleanupCmdArgv = cleanup
					saAmfCompCsTypes {
						B
					}
					saAmfCompCmdEnv {
						var1=val1
						var2=val2
					}
					saAmfCompRecoveryOnError=component_restart
					safHealthcheckKey = amfInvoked {
						saAmfHealthcheckPeriod = 4000
						saAmfHealthcheckMaxDuration = 350
					}
					safHealthcheckKey = compInvoked {
						saAmfHealthcheckPeriod = 5000
					}
				}
			}
			safSu = SERVICE_X_2 {
				clccli_path=/tmp/aistest
				saAmfSUHostedByNode=AMF2
				saAmfSUNumComponents=1
				safComp = A {
					saAmfCompCategory=sa_aware
					saAmfCompCapability=x_active_or_y_standby
					saAmfCompNumMaxActiveCsi=1
					saAmfCompNumMaxStandbyCsi=1
					saAmfCompDefaultClcCliTimeout = 500
					saAmfCompDefaultCallbackTimeOut = 500
					saAmfCompInstantiateCmd = clc_cli_script
					saAmfCompInstantiateCmdArgv= instantiate
					saAmfCompTerminateCmd = clc_cli_script
					saAmfCompTerminateCmdArgv = terminate
					saAmfCompCleanupCmd = clc_cli_script
					saAmfCompCleanupCmdArgv = cleanup
					saAmfCompCsTypes {
						A
					}
					saAmfCompCmdEnv {
						COMP_BINARY_PATH=/tmp/aistest
						COMP_BINARY_NAME=testamf1
						var1=val1
						var2=val2
					}
					saAmfCompRecoveryOnError=component_restart
					safHealthcheckKey = amfInvoked {
						saAmfHealthcheckPeriod = 4000
						saAmfHealthcheckMaxDuration = 350
					}
					safHealthcheckKey = compInvoked {
						saAmfHealthcheckPeriod = 5000
					}
				}
				safComp = B {
					saAmfCompCategory=sa_aware
					saAmfCompCapability=x_active_or_y_standby
					saAmfCompNumMaxActiveCsi=1
					saAmfCompNumMaxStandbyCsi=1
					saAmfCompDefaultClcCliTimeout = 500
					saAmfCompDefaultCallbackTimeOut = 500
					saAmfCompInstantiateCmd = /tmp/aistest/clc_cli_script
					saAmfCompInstantiateCmdArgv= instantiate /tmp/aistest/testamf1
					saAmfCompTerminateCmd = /tmp/aistest/clc_cli_script
					saAmfCompTerminateCmdArgv = terminate
					saAmfCompCleanupCmd = /tmp/aistest/clc_cli_script
					saAmfCompCleanupCmdArgv = cleanup
					saAmfCompCsTypes {
						B
					}
					saAmfCompCmdEnv {
						var1=val1
						var2=val2
					}
					saAmfCompRecoveryOnError=component_restart
					safHealthcheckKey = amfInvoked {
						saAmfHealthcheckPeriod = 4000
						saAmfHealthcheckMaxDuration = 350
					}
					safHealthcheckKey = compInvoked {
						saAmfHealthcheckPeriod = 5000
					}
				}
			}
		}
		safSi = WL1 {
			saAmfSINumCSIs=2
			safCsi = WL1-1 {
				saAmfCSTypeName = A
			}
			safCsi = WL1-2 {
				saAmfCSTypeName = B
				safCSIAttr = attr1 {
					val1
					val2
				}
				safCSIAttr = good_health_limit {
					100000
				}
			}
		}
		safSi = WL2 {
			saAmfSINumCSIs=2
			safCsi = WL2-1 {
				saAmfCSTypeName = A
			}
			safCsi = WL2-2 {
				saAmfCSTypeName = B
				safCSIAttr = attr1 {
					val1
					val2
				}
				safCSIAttr = good_health_limit {
					100000
				}
			}
		}
		safCSType = A {
			safAmfCSAttrName = attr1
			safAmfCSAttrName = good_health_limit
		}
		safCSType = B {
		}
	}
}

