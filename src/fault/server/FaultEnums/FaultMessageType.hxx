/* 
 * File FaultMessageType.hxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#pragma once
#ifndef FAULTMESSAGETYPE_HXX_
#define FAULTMESSAGETYPE_HXX_

#include "FaultEnumsCommon.hxx"
#include <iostream>
#include "MgtEnumType.hxx"

namespace FaultEnums
  {

    enum class FaultMessageType
      {
        MSG_UNDEFINED, MSG_ENTITY_JOIN, MSG_ENTITY_LEAVE, MSG_ENTITY_FAULT, MSG_ENTITY_STATE_CHANGE, MSG_ENTITY_JOIN_BROADCAST, MSG_ENTITY_LEAVE_BROADCAST, MSG_ENTITY_FAULT_BROADCAST, MSG_ENTITY_STATE_CHANGE_BROADCAST
      };
    std::ostream& operator<<(std::ostream& os, const FaultMessageType& e);
    std::istream& operator>>(std::istream& is, FaultMessageType& e);
    const char* c_str(const FaultMessageType& e);

    /*
     * This is the class that will handle the conversion for us.
     */
    class FaultMessageTypeManager : public SAFplus::MgtEnumType<FaultMessageTypeManager, FaultMessageType> {
        FaultMessageTypeManager();  // private to prevent instantiation
    public:
        static const map_t en2str_map;  // This is the lookup table.
    };
}
/* namespace ::FaultEnums */
#endif /* FAULTMESSAGETYPE_HXX_ */
