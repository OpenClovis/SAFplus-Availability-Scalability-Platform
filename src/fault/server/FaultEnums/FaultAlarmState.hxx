/* 
 * File FaultAlarmState.hxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#pragma once
#ifndef FAULTALARMSTATE_HXX_
#define FAULTALARMSTATE_HXX_

#include "FaultEnumsCommon.hxx"
#include <iostream>
#include "MgtEnumType.hxx"

namespace FaultEnums
  {

    enum class FaultAlarmState
      {
        ALARM_STATE_CLEAR, ALARM_STATE_ASSERT, ALARM_STATE_SUPPRESSED, ALARM_STATE_UNDER_SOAKING, ALARM_STATE_INVALID, ALARM_STATE_COUNT
      };
    std::ostream& operator<<(std::ostream& os, const FaultAlarmState& e);
    std::istream& operator>>(std::istream& is, FaultAlarmState& e);
    const char* c_str(const FaultAlarmState& e);

    /*
     * This is the class that will handle the conversion for us.
     */
    class FaultAlarmStateManager : public SAFplus::MgtEnumType<FaultAlarmStateManager, FaultAlarmState> {
        FaultAlarmStateManager();  // private to prevent instantiation
    public:
        static const map_t en2str_map;  // This is the lookup table.
    };
}
/* namespace ::FaultEnums */
#endif /* FAULTALARMSTATE_HXX_ */
