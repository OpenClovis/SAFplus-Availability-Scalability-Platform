/* 
 * File FaultAlarmState.cxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#include "FaultEnumsCommon.hxx"
#include <iostream>
#include "MgtEnumType.hxx"
#include "FaultAlarmState.hxx"


namespace FaultEnums
  {

    /*
     * Provide an implementation of the en2str_map lookup table.
     */
    const FaultAlarmStateManager::map_t FaultAlarmStateManager::en2str_map = {
            pair_t(FaultAlarmState::ALARM_STATE_CLEAR, "ALARM_STATE_CLEAR"),
            pair_t(FaultAlarmState::ALARM_STATE_ASSERT, "ALARM_STATE_ASSERT"),
            pair_t(FaultAlarmState::ALARM_STATE_SUPPRESSED, "ALARM_STATE_SUPPRESSED"),
            pair_t(FaultAlarmState::ALARM_STATE_UNDER_SOAKING, "ALARM_STATE_UNDER_SOAKING"),
            pair_t(FaultAlarmState::ALARM_STATE_INVALID, "ALARM_STATE_INVALID"),
            pair_t(FaultAlarmState::ALARM_STATE_COUNT, "ALARM_STATE_COUNT")
    }; // uses c++11 initializer lists 

    const char* c_str(const ::FaultEnums::FaultAlarmState &faultAlarmState)
    {
        return FaultAlarmStateManager::c_str(faultAlarmState);
    };

    std::ostream& operator<<(std::ostream &os, const ::FaultEnums::FaultAlarmState &faultAlarmState)
    {
        return os << FaultAlarmStateManager::toString(faultAlarmState);
    };

    std::istream& operator>>(std::istream &is, ::FaultEnums::FaultAlarmState &faultAlarmState)
    {
        std::string buf;
        is >> buf;
        faultAlarmState = FaultAlarmStateManager::toEnum(buf);
        return is;
    };

}
/* namespace ::FaultEnums */
