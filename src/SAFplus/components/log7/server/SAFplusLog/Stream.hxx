/* 
 * File Stream.hxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#pragma once
#ifndef STREAM_HXX_
#define STREAM_HXX_
#include "SAFplusLogCommon.hxx"

#include "StreamStatistics.hxx"
#include <vector>
#include "MgtFactory.hxx"
#include <string>
#include "StreamStatistics.hxx"
#include "StreamAttributes.hxx"

namespace SAFplusLog
  {

    class Stream : public StreamAttributes {

        /* Apply MGT object factory */
        MGT_REGISTER(Stream);

    public:
        Stream();
        Stream(std::string myNameValue);
        void toString(std::stringstream &xmlString);
        std::vector<std::string> getKeys();
        std::vector<std::string>* getChildNames();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/StreamStatistics
         */
        SAFplusLog::StreamStatistics* getStreamStatistics();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/StreamStatistics
         */
        void addStreamStatistics(SAFplusLog::StreamStatistics *StreamStatisticsValue);
        ~Stream();
     /* Custom code -- NOT autogenerated */
  
     FILE* fp;  // If this stream will be output to a file on this node, this is pointer to that file handle.  Otherwise NULL
     int fileIdx;  // If the file is being rotated, this is the current file count.  i.e. file name is ("%s%d.log",fileName,fileIdx)
     int fileSize; // Current length of the open file
     //boost::asio::streambuf fileBuffer; //char* fileBuffer; // logs are spooled to this buffer and then written to the file all at once
     //std::ostream fileStream;
     //boost::asio::streambuf msgBuffer; //char* msgBuffer; // logs are spooled to this buffer and then written to the network as one packet
     //std::ostream msgStream;
     SAFplus::DoublingCharBuffer fileBuffer; // logs are spooled to this buffer and then written to the file all at once
     SAFplus::DoublingCharBuffer msgBuffer;  // logs are spooled to this buffer and then written to the network as one packet
     bool sendMsg;                               // Does this stream need to be sent to anyone else?
     bool dirty;                             // Has this stream been changed?
     /* End custom code */

    };
}
/* namespace SAFplusLog */
#endif /* STREAM_HXX_ */
