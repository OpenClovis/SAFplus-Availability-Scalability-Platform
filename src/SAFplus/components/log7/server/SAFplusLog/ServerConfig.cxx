/* 
 * File ServerConfig.cxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 
#include "SAFplusLogCommon.hxx"

#include <vector>
#include "MgtFactory.hxx"
#include "clMgtContainer.hxx"
#include "clMgtProv.hxx"
#include "ServerConfig.hxx"


namespace SAFplusLog
  {

    /* Apply MGT object factory */
    MGT_REGISTER_IMPL(ServerConfig, /SAFplusLog/ServerConfig)

    ServerConfig::ServerConfig(): SAFplus::MgtContainer("ServerConfig"), maximumStreams("maximumStreams"), maximumComponents("maximumComponents"), maximumSharedMemoryPages("maximumSharedMemoryPages"), maximumRecordsInPacket("maximumRecordsInPacket"), processingInterval("processingInterval")
    {
        this->addChildObject(&maximumStreams, "maximumStreams");
        this->addChildObject(&maximumComponents, "maximumComponents");
        this->addChildObject(&maximumSharedMemoryPages, "maximumSharedMemoryPages");
        this->addChildObject(&maximumRecordsInPacket, "maximumRecordsInPacket");
        this->addChildObject(&processingInterval, "processingInterval");
    };

    void ServerConfig::toString(std::stringstream &xmlString)
    {
        /* TODO:  */
    };

    std::vector<std::string>* ServerConfig::getChildNames()
    {
        std::string childNames[] = { "maximumStreams", "maximumComponents", "maximumSharedMemoryPages", "maximumRecordsInPacket", "processingInterval" };
        return new std::vector<std::string> (childNames, childNames + sizeof(childNames) / sizeof(childNames[0]));
    };

    /*
     * XPATH: /SAFplusLog/ServerConfig/maximumStreams
     */
    unsigned int ServerConfig::getMaximumStreams()
    {
        return this->maximumStreams.value;
    };

    /*
     * XPATH: /SAFplusLog/ServerConfig/maximumStreams
     */
    void ServerConfig::setMaximumStreams(unsigned int maximumStreamsValue)
    {
        this->maximumStreams.value = maximumStreamsValue;
    };

    /*
     * XPATH: /SAFplusLog/ServerConfig/maximumComponents
     */
    unsigned int ServerConfig::getMaximumComponents()
    {
        return this->maximumComponents.value;
    };

    /*
     * XPATH: /SAFplusLog/ServerConfig/maximumComponents
     */
    void ServerConfig::setMaximumComponents(unsigned int maximumComponentsValue)
    {
        this->maximumComponents.value = maximumComponentsValue;
    };

    /*
     * XPATH: /SAFplusLog/ServerConfig/maximumSharedMemoryPages
     */
    unsigned int ServerConfig::getMaximumSharedMemoryPages()
    {
        return this->maximumSharedMemoryPages.value;
    };

    /*
     * XPATH: /SAFplusLog/ServerConfig/maximumSharedMemoryPages
     */
    void ServerConfig::setMaximumSharedMemoryPages(unsigned int maximumSharedMemoryPagesValue)
    {
        this->maximumSharedMemoryPages.value = maximumSharedMemoryPagesValue;
    };

    /*
     * XPATH: /SAFplusLog/ServerConfig/maximumRecordsInPacket
     */
    unsigned int ServerConfig::getMaximumRecordsInPacket()
    {
        return this->maximumRecordsInPacket.value;
    };

    /*
     * XPATH: /SAFplusLog/ServerConfig/maximumRecordsInPacket
     */
    void ServerConfig::setMaximumRecordsInPacket(unsigned int maximumRecordsInPacketValue)
    {
        this->maximumRecordsInPacket.value = maximumRecordsInPacketValue;
    };

    /*
     * XPATH: /SAFplusLog/ServerConfig/processingInterval
     */
    unsigned long int ServerConfig::getProcessingInterval()
    {
        return this->processingInterval.value;
    };

    /*
     * XPATH: /SAFplusLog/ServerConfig/processingInterval
     */
    void ServerConfig::setProcessingInterval(unsigned long int processingIntervalValue)
    {
        this->processingInterval.value = processingIntervalValue;
    };

    ServerConfig::~ServerConfig()
    {
    };

}
/* namespace SAFplusLog */
