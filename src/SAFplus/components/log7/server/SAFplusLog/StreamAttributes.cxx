/* 
 * File StreamAttributes.cxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 
#include "SAFplusLogCommon.hxx"

#include <string>
#include "clTransaction.hxx"
#include "clMgtProv.hxx"
#include "FileFullAction.hxx"
#include <vector>
#include "clMgtContainer.hxx"
#include "StreamScope.hxx"
#include "StreamAttributes.hxx"


namespace SAFplusLog
  {

    StreamAttributes::StreamAttributes(): SAFplus::MgtContainer("StreamAttributes"), myName("myName"), fileName("fileName"), fileLocation("fileLocation"), fileUnitSize("fileUnitSize"), recordSize("recordSize"), fileFullAction("fileFullAction"), maximumFilesRotated("maximumFilesRotated"), flushFreq("flushFreq"), flushInterval("flushInterval"), syslog("syslog"), streamScope("streamScope")
    {
        this->addChildObject(&myName, "myName");
        this->addChildObject(&fileName, "fileName");
        this->addChildObject(&fileLocation, "fileLocation");
        this->addChildObject(&fileUnitSize, "fileUnitSize");
        this->addChildObject(&recordSize, "recordSize");
        this->addChildObject(&fileFullAction, "fileFullAction");
        this->addChildObject(&maximumFilesRotated, "maximumFilesRotated");
        this->addChildObject(&flushFreq, "flushFreq");
        this->addChildObject(&flushInterval, "flushInterval");
        this->addChildObject(&syslog, "syslog");
        this->addChildObject(&streamScope, "streamScope");
    };

    void StreamAttributes::toString(std::stringstream &xmlString)
    {
        /* TODO:  */
    };

    std::vector<std::string>* StreamAttributes::getChildNames()
    {
        std::string childNames[] = { "myName", "fileName", "fileLocation", "fileUnitSize", "recordSize", "fileFullAction", "maximumFilesRotated", "flushFreq", "flushInterval", "syslog", "streamScope" };
        return new std::vector<std::string> (childNames, childNames + sizeof(childNames) / sizeof(childNames[0]));
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/myName
     */
    std::string StreamAttributes::getMyName()
    {
        return this->myName.value;
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/myName
     */
    void StreamAttributes::setMyName(std::string myNameValue, SAFplus::Transaction &txn)
    {
        this->myName.set(myNameValue,txn);
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/fileName
     */
    std::string StreamAttributes::getFileName()
    {
        return this->fileName.value;
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/fileName
     */
    void StreamAttributes::setFileName(std::string fileNameValue, SAFplus::Transaction &txn)
    {
        this->fileName.set(fileNameValue,txn);
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/fileLocation
     */
    std::string StreamAttributes::getFileLocation()
    {
        return this->fileLocation.value;
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/fileLocation
     */
    void StreamAttributes::setFileLocation(std::string fileLocationValue, SAFplus::Transaction &txn)
    {
        this->fileLocation.set(fileLocationValue,txn);
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/fileUnitSize
     */
    unsigned long int StreamAttributes::getFileUnitSize()
    {
        return this->fileUnitSize.value;
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/fileUnitSize
     */
    void StreamAttributes::setFileUnitSize(unsigned long int fileUnitSizeValue, SAFplus::Transaction &txn)
    {
        this->fileUnitSize.set(fileUnitSizeValue,txn);
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/recordSize
     */
    unsigned long int StreamAttributes::getRecordSize()
    {
        return this->recordSize.value;
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/recordSize
     */
    void StreamAttributes::setRecordSize(unsigned long int recordSizeValue, SAFplus::Transaction &txn)
    {
        this->recordSize.set(recordSizeValue,txn);
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/fileFullAction
     */
    SAFplusLog::FileFullAction StreamAttributes::getFileFullAction()
    {
        return this->fileFullAction.value;
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/fileFullAction
     */
    void StreamAttributes::setFileFullAction(SAFplusLog::FileFullAction fileFullActionValue, SAFplus::Transaction &txn)
    {
        this->fileFullAction.set(fileFullActionValue,txn);
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/maximumFilesRotated
     */
    unsigned int StreamAttributes::getMaximumFilesRotated()
    {
        return this->maximumFilesRotated.value;
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/maximumFilesRotated
     */
    void StreamAttributes::setMaximumFilesRotated(unsigned int maximumFilesRotatedValue, SAFplus::Transaction &txn)
    {
        this->maximumFilesRotated.set(maximumFilesRotatedValue,txn);
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/flushFreq
     */
    unsigned int StreamAttributes::getFlushFreq()
    {
        return this->flushFreq.value;
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/flushFreq
     */
    void StreamAttributes::setFlushFreq(unsigned int flushFreqValue, SAFplus::Transaction &txn)
    {
        this->flushFreq.set(flushFreqValue,txn);
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/flushInterval
     */
    unsigned long int StreamAttributes::getFlushInterval()
    {
        return this->flushInterval.value;
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/flushInterval
     */
    void StreamAttributes::setFlushInterval(unsigned long int flushIntervalValue, SAFplus::Transaction &txn)
    {
        this->flushInterval.set(flushIntervalValue,txn);
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/syslog
     */
    bool StreamAttributes::getSyslog()
    {
        return this->syslog.value;
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/syslog
     */
    void StreamAttributes::setSyslog(bool syslogValue, SAFplus::Transaction &txn)
    {
        this->syslog.set(syslogValue,txn);
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/streamScope
     */
    SAFplusLog::StreamScope StreamAttributes::getStreamScope()
    {
        return this->streamScope.value;
    };

    /*
     * XPATH: /SAFplusLog/StreamAttributes/streamScope
     */
    void StreamAttributes::setStreamScope(SAFplusLog::StreamScope streamScopeValue, SAFplus::Transaction &txn)
    {
        this->streamScope.set(streamScopeValue,txn);
    };

    StreamAttributes::~StreamAttributes()
    {
    };

}
/* namespace SAFplusLog */
