/* 
 * File NumLogs.cxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#include "clMgtObject.hxx"
#include "clMgtProv.hxx"
#include <vector>
#include "MgtFactory.hxx"
#include "clMgtProvList.hxx"
#include "NumLogs.hxx"

using namespace std;

namespace SAFplusLog {

    /* Apply MGT object factory */
    REGISTERIMPL(NumLogs, /SAFplusLog/StreamConfig/stream/numLogs)

    NumLogs::NumLogs(): ClMgtObject("numLogs"), current("current"), history10sec("history10sec"), history1min("history1min"), history10min("history10min"), history1hour("history1hour"), history12hour("history12hour"), history1day("history1day"), history1week("history1week"), history1month("history1month") {
        this->addChildObject(&current, "current");
        this->addChildObject(&history10sec, "history10sec");
        this->addChildObject(&history1min, "history1min");
        this->addChildObject(&history10min, "history10min");
        this->addChildObject(&history1hour, "history1hour");
        this->addChildObject(&history12hour, "history12hour");
        this->addChildObject(&history1day, "history1day");
        this->addChildObject(&history1week, "history1week");
        this->addChildObject(&history1month, "history1month");
    };

    vector<string> *NumLogs::getChildNames() {
        string childNames[] = { "current", "history10sec", "history1min", "history10min", "history1hour", "history12hour", "history1day", "history1week", "history1month" };
        return new vector<string> (childNames, childNames + sizeof(childNames) / sizeof(childNames[0]));
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/current
     */
    unsigned long int NumLogs::getCurrent() {
        return this->current.Value;
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/current
     */
    void NumLogs::setCurrent(unsigned long int currentValue) {
        this->current.Value = currentValue;
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history10sec
     */
    vector<unsigned long int> NumLogs::getHistory10sec() {
        return this->history10sec.Value;
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history10sec
     */
    void NumLogs::setHistory10sec(unsigned long int history10secValue) {
        this->history10sec.Value.push_back(history10secValue);
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1min
     */
    vector<unsigned long int> NumLogs::getHistory1min() {
        return this->history1min.Value;
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1min
     */
    void NumLogs::setHistory1min(unsigned long int history1minValue) {
        this->history1min.Value.push_back(history1minValue);
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history10min
     */
    vector<unsigned long int> NumLogs::getHistory10min() {
        return this->history10min.Value;
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history10min
     */
    void NumLogs::setHistory10min(unsigned long int history10minValue) {
        this->history10min.Value.push_back(history10minValue);
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1hour
     */
    vector<unsigned long int> NumLogs::getHistory1hour() {
        return this->history1hour.Value;
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1hour
     */
    void NumLogs::setHistory1hour(unsigned long int history1hourValue) {
        this->history1hour.Value.push_back(history1hourValue);
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history12hour
     */
    vector<unsigned long int> NumLogs::getHistory12hour() {
        return this->history12hour.Value;
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history12hour
     */
    void NumLogs::setHistory12hour(unsigned long int history12hourValue) {
        this->history12hour.Value.push_back(history12hourValue);
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1day
     */
    vector<unsigned long int> NumLogs::getHistory1day() {
        return this->history1day.Value;
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1day
     */
    void NumLogs::setHistory1day(unsigned long int history1dayValue) {
        this->history1day.Value.push_back(history1dayValue);
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1week
     */
    vector<unsigned long int> NumLogs::getHistory1week() {
        return this->history1week.Value;
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1week
     */
    void NumLogs::setHistory1week(unsigned long int history1weekValue) {
        this->history1week.Value.push_back(history1weekValue);
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1month
     */
    vector<unsigned long int> NumLogs::getHistory1month() {
        return this->history1month.Value;
    };

    /*
     * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1month
     */
    void NumLogs::setHistory1month(unsigned long int history1monthValue) {
        this->history1month.Value.push_back(history1monthValue);
    };

    NumLogs::~NumLogs() {
    };

}
/* namespace SAFplusLog */
