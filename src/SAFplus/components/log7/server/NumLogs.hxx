/* 
 * File NumLogs.hxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#ifndef NUMLOGS_HXX_
#define NUMLOGS_HXX_

#include "clMgtObject.hxx"
#include "clMgtProv.hxx"
#include <vector>
#include "MgtFactory.hxx"
#include "clMgtProvList.hxx"

using namespace std;

namespace SAFplusLog {

    class NumLogs : public ClMgtObject {

        /* Apply MGT object factory */
        REGISTER(NumLogs);

    public:
        ClMgtProv<unsigned long int> current;
        ClMgtProvList<unsigned long int> history10sec;
        ClMgtProvList<unsigned long int> history1min;
        ClMgtProvList<unsigned long int> history10min;
        ClMgtProvList<unsigned long int> history1hour;
        ClMgtProvList<unsigned long int> history12hour;
        ClMgtProvList<unsigned long int> history1day;
        ClMgtProvList<unsigned long int> history1week;
        ClMgtProvList<unsigned long int> history1month;

    public:
        NumLogs();
        vector<string> *getChildNames();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/current
         */
        unsigned long int getCurrentValue();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/current
         */
        void setCurrentValue(unsigned long int currentValue);

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history10sec
         */
        vector<unsigned long int> getHistory10secValue();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history10sec
         */
        void setHistory10secValue(unsigned long int history10secValue);

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1min
         */
        vector<unsigned long int> getHistory1minValue();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1min
         */
        void setHistory1minValue(unsigned long int history1minValue);

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history10min
         */
        vector<unsigned long int> getHistory10minValue();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history10min
         */
        void setHistory10minValue(unsigned long int history10minValue);

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1hour
         */
        vector<unsigned long int> getHistory1hourValue();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1hour
         */
        void setHistory1hourValue(unsigned long int history1hourValue);

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history12hour
         */
        vector<unsigned long int> getHistory12hourValue();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history12hour
         */
        void setHistory12hourValue(unsigned long int history12hourValue);

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1day
         */
        vector<unsigned long int> getHistory1dayValue();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1day
         */
        void setHistory1dayValue(unsigned long int history1dayValue);

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1week
         */
        vector<unsigned long int> getHistory1weekValue();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1week
         */
        void setHistory1weekValue(unsigned long int history1weekValue);

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1month
         */
        vector<unsigned long int> getHistory1monthValue();

        /*
         * XPATH: /SAFplusLog/StreamConfig/stream/numLogs/history1month
         */
        void setHistory1monthValue(unsigned long int history1monthValue);
        ~NumLogs();

    };
}
/* namespace SAFplusLog */
#endif /* NUMLOGS_HXX_ */
