# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_safplusCApi', [dirname(__file__)])
        except ImportError:
            import _safplusCApi
            return _safplusCApi
        if fp is not None:
            try:
                _mod = imp.load_module('_safplusCApi', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _safplusCApi = swig_import_helper()
    del swig_import_helper
else:
    import _safplusCApi
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


CL_TRUE = _safplusCApi.CL_TRUE
CL_FALSE = _safplusCApi.CL_FALSE
CL_YES = _safplusCApi.CL_YES
CL_NO = _safplusCApi.CL_NO
CL_ENABLE = _safplusCApi.CL_ENABLE
CL_DISABLE = _safplusCApi.CL_DISABLE
CL_STATUS_DOWN = _safplusCApi.CL_STATUS_DOWN
CL_STATUS_UP = _safplusCApi.CL_STATUS_UP
CL_MICRO_TO_NANO = _safplusCApi.CL_MICRO_TO_NANO
CL_MILLI_TO_MICRO = _safplusCApi.CL_MILLI_TO_MICRO
CL_SEC_TO_MILLI = _safplusCApi.CL_SEC_TO_MILLI
CL_MILLI_TO_NANO = _safplusCApi.CL_MILLI_TO_NANO
CL_SEC_TO_NANO = _safplusCApi.CL_SEC_TO_NANO
CL_TIME_END = _safplusCApi.CL_TIME_END
CL_TIME_FOREVER = _safplusCApi.CL_TIME_FOREVER
class ClUnion64T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClUnion64T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClUnion64T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dWords"] = _safplusCApi.ClUnion64T_dWords_set
    __swig_getmethods__["dWords"] = _safplusCApi.ClUnion64T_dWords_get
    if _newclass:dWords = _swig_property(_safplusCApi.ClUnion64T_dWords_get, _safplusCApi.ClUnion64T_dWords_set)
    __swig_setmethods__["words"] = _safplusCApi.ClUnion64T_words_set
    __swig_getmethods__["words"] = _safplusCApi.ClUnion64T_words_get
    if _newclass:words = _swig_property(_safplusCApi.ClUnion64T_words_get, _safplusCApi.ClUnion64T_words_set)
    __swig_setmethods__["bytes"] = _safplusCApi.ClUnion64T_bytes_set
    __swig_getmethods__["bytes"] = _safplusCApi.ClUnion64T_bytes_get
    if _newclass:bytes = _swig_property(_safplusCApi.ClUnion64T_bytes_get, _safplusCApi.ClUnion64T_bytes_set)
    __swig_getmethods__["DWord"] = _safplusCApi.ClUnion64T_DWord_get
    if _newclass:DWord = _swig_property(_safplusCApi.ClUnion64T_DWord_get)
    def __init__(self): 
        this = _safplusCApi.new_ClUnion64T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClUnion64T
    __del__ = lambda self : None;
ClUnion64T_swigregister = _safplusCApi.ClUnion64T_swigregister
ClUnion64T_swigregister(ClUnion64T)

class ClUnion64T_DWord(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClUnion64T_DWord, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClUnion64T_DWord, name)
    __repr__ = _swig_repr
    __swig_setmethods__["high"] = _safplusCApi.ClUnion64T_DWord_high_set
    __swig_getmethods__["high"] = _safplusCApi.ClUnion64T_DWord_high_get
    if _newclass:high = _swig_property(_safplusCApi.ClUnion64T_DWord_high_get, _safplusCApi.ClUnion64T_DWord_high_set)
    __swig_setmethods__["low"] = _safplusCApi.ClUnion64T_DWord_low_set
    __swig_getmethods__["low"] = _safplusCApi.ClUnion64T_DWord_low_get
    if _newclass:low = _swig_property(_safplusCApi.ClUnion64T_DWord_low_get, _safplusCApi.ClUnion64T_DWord_low_set)
    def __init__(self): 
        this = _safplusCApi.new_ClUnion64T_DWord()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClUnion64T_DWord
    __del__ = lambda self : None;
ClUnion64T_DWord_swigregister = _safplusCApi.ClUnion64T_DWord_swigregister
ClUnion64T_DWord_swigregister(ClUnion64T_DWord)

CL_MAX_NAME_LENGTH = _safplusCApi.CL_MAX_NAME_LENGTH

def saNameSet(*args):
  return _safplusCApi.saNameSet(*args)
saNameSet = _safplusCApi.saNameSet

def saNameCopy(*args):
  return _safplusCApi.saNameCopy(*args)
saNameCopy = _safplusCApi.saNameCopy

def saNameConcat(*args):
  return _safplusCApi.saNameConcat(*args)
saNameConcat = _safplusCApi.saNameConcat

def clStrdup(*args):
  return _safplusCApi.clStrdup(*args)
clStrdup = _safplusCApi.clStrdup

def clParseEnvBoolean(*args):
  return _safplusCApi.clParseEnvBoolean(*args)
clParseEnvBoolean = _safplusCApi.clParseEnvBoolean

def clParseEnvStr(*args):
  return _safplusCApi.clParseEnvStr(*args)
clParseEnvStr = _safplusCApi.clParseEnvStr

def clCreatePipe(*args):
  return _safplusCApi.clCreatePipe(*args)
clCreatePipe = _safplusCApi.clCreatePipe

def clBinaryPower(*args):
  return _safplusCApi.clBinaryPower(*args)
clBinaryPower = _safplusCApi.clBinaryPower
class ClVersionT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClVersionT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClVersionT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["releaseCode"] = _safplusCApi.ClVersionT_releaseCode_set
    __swig_getmethods__["releaseCode"] = _safplusCApi.ClVersionT_releaseCode_get
    if _newclass:releaseCode = _swig_property(_safplusCApi.ClVersionT_releaseCode_get, _safplusCApi.ClVersionT_releaseCode_set)
    __swig_setmethods__["majorVersion"] = _safplusCApi.ClVersionT_majorVersion_set
    __swig_getmethods__["majorVersion"] = _safplusCApi.ClVersionT_majorVersion_get
    if _newclass:majorVersion = _swig_property(_safplusCApi.ClVersionT_majorVersion_get, _safplusCApi.ClVersionT_majorVersion_set)
    __swig_setmethods__["minorVersion"] = _safplusCApi.ClVersionT_minorVersion_set
    __swig_getmethods__["minorVersion"] = _safplusCApi.ClVersionT_minorVersion_get
    if _newclass:minorVersion = _swig_property(_safplusCApi.ClVersionT_minorVersion_get, _safplusCApi.ClVersionT_minorVersion_set)
    def __init__(self): 
        this = _safplusCApi.new_ClVersionT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClVersionT
    __del__ = lambda self : None;
ClVersionT_swigregister = _safplusCApi.ClVersionT_swigregister
ClVersionT_swigregister(ClVersionT)

CL_DISPATCH_ONE = _safplusCApi.CL_DISPATCH_ONE
CL_DISPATCH_ALL = _safplusCApi.CL_DISPATCH_ALL
CL_DISPATCH_BLOCKING = _safplusCApi.CL_DISPATCH_BLOCKING
CL_FORCED_TO_8BITS = _safplusCApi.CL_FORCED_TO_8BITS
CL_FORCED_TO_16BITS = _safplusCApi.CL_FORCED_TO_16BITS
CL_FORCED_TO_32BITS = _safplusCApi.CL_FORCED_TO_32BITS
CL_BITS_PER_BYTE = _safplusCApi.CL_BITS_PER_BYTE
CL_CID_UNSPECIFIED = _safplusCApi.CL_CID_UNSPECIFIED
CL_CID_OSAL = _safplusCApi.CL_CID_OSAL
CL_CID_HAL = _safplusCApi.CL_CID_HAL
CL_CID_DBAL = _safplusCApi.CL_CID_DBAL
CL_CID_EO = _safplusCApi.CL_CID_EO
CL_CID_IOC = _safplusCApi.CL_CID_IOC
CL_CID_RMD = _safplusCApi.CL_CID_RMD
CL_CID_NAMES = _safplusCApi.CL_CID_NAMES
CL_CID_TIMER = _safplusCApi.CL_CID_TIMER
CL_CID_SHM = _safplusCApi.CL_CID_SHM
CL_CID_DSHM = _safplusCApi.CL_CID_DSHM
CL_CID_LOG = _safplusCApi.CL_CID_LOG
CL_CID_MSG = _safplusCApi.CL_CID_MSG
CL_CID_DIAG = _safplusCApi.CL_CID_DIAG
CL_CID_DEBUG = _safplusCApi.CL_CID_DEBUG
CL_CID_CPM = _safplusCApi.CL_CID_CPM
CL_CID_CAP = _safplusCApi.CL_CID_CAP
CL_CID_RES = _safplusCApi.CL_CID_RES
CL_CID_GMS = _safplusCApi.CL_CID_GMS
CL_CID_EVENTS = _safplusCApi.CL_CID_EVENTS
CL_CID_DLOCK = _safplusCApi.CL_CID_DLOCK
CL_CID_TXN = _safplusCApi.CL_CID_TXN
CL_CID_CKPT = _safplusCApi.CL_CID_CKPT
CL_CID_COR = _safplusCApi.CL_CID_COR
CL_CID_CNT = _safplusCApi.CL_CID_CNT
CL_CID_DCNT = _safplusCApi.CL_CID_DCNT
CL_CID_RCNT = _safplusCApi.CL_CID_RCNT
CL_CID_ALARMS = _safplusCApi.CL_CID_ALARMS
CL_CID_POLICY = _safplusCApi.CL_CID_POLICY
CL_CID_RULE = _safplusCApi.CL_CID_RULE
CL_CID_SCRIPTING = _safplusCApi.CL_CID_SCRIPTING
CL_CID_CM = _safplusCApi.CL_CID_CM
CL_CID_HPI = _safplusCApi.CL_CID_HPI
CL_CID_FAULTS = _safplusCApi.CL_CID_FAULTS
CL_CID_AMS = _safplusCApi.CL_CID_AMS
CL_CID_MED = _safplusCApi.CL_CID_MED
CL_CID_BUFFER = _safplusCApi.CL_CID_BUFFER
CL_CID_QUEUE = _safplusCApi.CL_CID_QUEUE
CL_CID_CLIST = _safplusCApi.CL_CID_CLIST
CL_CID_SNMP = _safplusCApi.CL_CID_SNMP
CL_CID_NS = _safplusCApi.CL_CID_NS
CL_CID_OM = _safplusCApi.CL_CID_OM
CL_CID_POOL = _safplusCApi.CL_CID_POOL
CL_CID_CD = _safplusCApi.CL_CID_CD
CL_CID_DM = _safplusCApi.CL_CID_DM
CL_CID_OAMP_RT = _safplusCApi.CL_CID_OAMP_RT
CL_CID_PROV = _safplusCApi.CL_CID_PROV
CL_CID_UM = _safplusCApi.CL_CID_UM
CL_CID_HANDLE = _safplusCApi.CL_CID_HANDLE
CL_CID_VERSION = _safplusCApi.CL_CID_VERSION
CL_CID_XDR = _safplusCApi.CL_CID_XDR
CL_CID_IDL = _safplusCApi.CL_CID_IDL
CL_CID_HEAP = _safplusCApi.CL_CID_HEAP
CL_CID_MEM = _safplusCApi.CL_CID_MEM
CL_CID_PARSER = _safplusCApi.CL_CID_PARSER
CL_CID_BACKING_STORAGE = _safplusCApi.CL_CID_BACKING_STORAGE
CL_CID_JOB = _safplusCApi.CL_CID_JOB
CL_CID_JOBQUEUE = _safplusCApi.CL_CID_JOBQUEUE
CL_CID_THREADPOOL = _safplusCApi.CL_CID_THREADPOOL
CL_CID_TASKPOOL = _safplusCApi.CL_CID_TASKPOOL
CL_CID_BITMAP = _safplusCApi.CL_CID_BITMAP
CL_CID_LEAKY_BUCKET = _safplusCApi.CL_CID_LEAKY_BUCKET
CL_CID_MSO = _safplusCApi.CL_CID_MSO
CL_CID_PM = _safplusCApi.CL_CID_PM
CL_CID_NF = _safplusCApi.CL_CID_NF
CL_CID_MAX = _safplusCApi.CL_CID_MAX
class ClWaterMarkT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClWaterMarkT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClWaterMarkT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["lowLimit"] = _safplusCApi.ClWaterMarkT_lowLimit_set
    __swig_getmethods__["lowLimit"] = _safplusCApi.ClWaterMarkT_lowLimit_get
    if _newclass:lowLimit = _swig_property(_safplusCApi.ClWaterMarkT_lowLimit_get, _safplusCApi.ClWaterMarkT_lowLimit_set)
    __swig_setmethods__["highLimit"] = _safplusCApi.ClWaterMarkT_highLimit_set
    __swig_getmethods__["highLimit"] = _safplusCApi.ClWaterMarkT_highLimit_get
    if _newclass:highLimit = _swig_property(_safplusCApi.ClWaterMarkT_highLimit_get, _safplusCApi.ClWaterMarkT_highLimit_set)
    def __init__(self): 
        this = _safplusCApi.new_ClWaterMarkT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClWaterMarkT
    __del__ = lambda self : None;
ClWaterMarkT_swigregister = _safplusCApi.ClWaterMarkT_swigregister
ClWaterMarkT_swigregister(ClWaterMarkT)

CL_WM_LOW_LIMIT = _safplusCApi.CL_WM_LOW_LIMIT
CL_WM_HIGH_LIMIT = _safplusCApi.CL_WM_HIGH_LIMIT
CL_WM_LOW = _safplusCApi.CL_WM_LOW
CL_WM_HIGH = _safplusCApi.CL_WM_HIGH
CL_WM_MED = _safplusCApi.CL_WM_MED
CL_WM_SENDQ = _safplusCApi.CL_WM_SENDQ
CL_WM_RECVQ = _safplusCApi.CL_WM_RECVQ
CL_WM_MAX = _safplusCApi.CL_WM_MAX
CL_EO_ACTION_CUSTOM = _safplusCApi.CL_EO_ACTION_CUSTOM
CL_EO_ACTION_EVENT = _safplusCApi.CL_EO_ACTION_EVENT
CL_EO_ACTION_LOG = _safplusCApi.CL_EO_ACTION_LOG
CL_EO_ACTION_NOT = _safplusCApi.CL_EO_ACTION_NOT
CL_EO_ACTION_MAX = _safplusCApi.CL_EO_ACTION_MAX
class ClEoActionInfoT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClEoActionInfoT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClEoActionInfoT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["bitMap"] = _safplusCApi.ClEoActionInfoT_bitMap_set
    __swig_getmethods__["bitMap"] = _safplusCApi.ClEoActionInfoT_bitMap_get
    if _newclass:bitMap = _swig_property(_safplusCApi.ClEoActionInfoT_bitMap_get, _safplusCApi.ClEoActionInfoT_bitMap_set)
    def __init__(self): 
        this = _safplusCApi.new_ClEoActionInfoT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClEoActionInfoT
    __del__ = lambda self : None;
ClEoActionInfoT_swigregister = _safplusCApi.ClEoActionInfoT_swigregister
ClEoActionInfoT_swigregister(ClEoActionInfoT)

class ClStringT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClStringT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClStringT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["length"] = _safplusCApi.ClStringT_length_set
    __swig_getmethods__["length"] = _safplusCApi.ClStringT_length_get
    if _newclass:length = _swig_property(_safplusCApi.ClStringT_length_get, _safplusCApi.ClStringT_length_set)
    __swig_setmethods__["pValue"] = _safplusCApi.ClStringT_pValue_set
    __swig_getmethods__["pValue"] = _safplusCApi.ClStringT_pValue_get
    if _newclass:pValue = _swig_property(_safplusCApi.ClStringT_pValue_get, _safplusCApi.ClStringT_pValue_set)
    def __init__(self): 
        this = _safplusCApi.new_ClStringT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClStringT
    __del__ = lambda self : None;
ClStringT_swigregister = _safplusCApi.ClStringT_swigregister
ClStringT_swigregister(ClStringT)


def clStringDup(*args):
  return _safplusCApi.clStringDup(*args)
clStringDup = _safplusCApi.clStringDup
CL_OK = _safplusCApi.CL_OK
CL_ERR_NO_MEMORY = _safplusCApi.CL_ERR_NO_MEMORY
CL_ERR_INVALID_PARAMETER = _safplusCApi.CL_ERR_INVALID_PARAMETER
CL_ERR_NULL_POINTER = _safplusCApi.CL_ERR_NULL_POINTER
CL_ERR_NOT_EXIST = _safplusCApi.CL_ERR_NOT_EXIST
CL_ERR_INVALID_HANDLE = _safplusCApi.CL_ERR_INVALID_HANDLE
CL_ERR_INVALID_BUFFER = _safplusCApi.CL_ERR_INVALID_BUFFER
CL_ERR_NOT_IMPLEMENTED = _safplusCApi.CL_ERR_NOT_IMPLEMENTED
CL_ERR_DUPLICATE = _safplusCApi.CL_ERR_DUPLICATE
CL_ERR_QUEUE_NOT_AVAILABLE = _safplusCApi.CL_ERR_QUEUE_NOT_AVAILABLE
CL_ERR_OUT_OF_RANGE = _safplusCApi.CL_ERR_OUT_OF_RANGE
CL_ERR_NO_RESOURCE = _safplusCApi.CL_ERR_NO_RESOURCE
CL_ERR_INITIALIZED = _safplusCApi.CL_ERR_INITIALIZED
CL_ERR_BUFFER_OVERRUN = _safplusCApi.CL_ERR_BUFFER_OVERRUN
CL_ERR_NOT_INITIALIZED = _safplusCApi.CL_ERR_NOT_INITIALIZED
CL_ERR_VERSION_MISMATCH = _safplusCApi.CL_ERR_VERSION_MISMATCH
CL_ERR_ALREADY_EXIST = _safplusCApi.CL_ERR_ALREADY_EXIST
CL_ERR_UNSPECIFIED = _safplusCApi.CL_ERR_UNSPECIFIED
CL_ERR_INVALID_STATE = _safplusCApi.CL_ERR_INVALID_STATE
CL_ERR_DOESNT_EXIST = _safplusCApi.CL_ERR_DOESNT_EXIST
CL_ERR_TIMEOUT = _safplusCApi.CL_ERR_TIMEOUT
CL_ERR_INUSE = _safplusCApi.CL_ERR_INUSE
CL_ERR_TRY_AGAIN = _safplusCApi.CL_ERR_TRY_AGAIN
CL_ERR_NO_CALLBACK = _safplusCApi.CL_ERR_NO_CALLBACK
CL_ERR_MUTEX_ERROR = _safplusCApi.CL_ERR_MUTEX_ERROR
CL_ERR_NO_OP = _safplusCApi.CL_ERR_NO_OP
CL_ERR_NAME_TOO_LONG = _safplusCApi.CL_ERR_NAME_TOO_LONG
CL_ERR_NAME_NOT_FOUND = _safplusCApi.CL_ERR_NAME_NOT_FOUND
CL_ERR_MESSAGE_ERROR = _safplusCApi.CL_ERR_MESSAGE_ERROR
CL_ERR_TOO_BIG = _safplusCApi.CL_ERR_TOO_BIG
CL_ERR_NO_SECTIONS = _safplusCApi.CL_ERR_NO_SECTIONS
CL_ERR_FAILED_OPERATION = _safplusCApi.CL_ERR_FAILED_OPERATION
CL_ERR_OP_NOT_PERMITTED = _safplusCApi.CL_ERR_OP_NOT_PERMITTED
CL_ERR_NO_SPACE = _safplusCApi.CL_ERR_NO_SPACE
CL_ERR_BAD_FLAG = _safplusCApi.CL_ERR_BAD_FLAG
CL_ERR_BAD_OPERATION = _safplusCApi.CL_ERR_BAD_OPERATION
CL_ERR_LIBRARY = _safplusCApi.CL_ERR_LIBRARY
CL_ERR_NOT_SUPPORTED = _safplusCApi.CL_ERR_NOT_SUPPORTED
CL_ERR_INTERRUPT = _safplusCApi.CL_ERR_INTERRUPT
CL_ERR_CONTINUE = _safplusCApi.CL_ERR_CONTINUE
CL_ERR_COMMON_MAX = _safplusCApi.CL_ERR_COMMON_MAX
CL_CID_OFFSET = _safplusCApi.CL_CID_OFFSET
CL_ERROR_CODE_MASK = _safplusCApi.CL_ERROR_CODE_MASK
CL_AMS_ERR_INVALID_COMP = _safplusCApi.CL_AMS_ERR_INVALID_COMP
CL_AMS_ERR_INVALID_ENTITY = _safplusCApi.CL_AMS_ERR_INVALID_ENTITY
CL_AMS_ERR_INVALID_ENTITY_STATE = _safplusCApi.CL_AMS_ERR_INVALID_ENTITY_STATE
CL_AMS_ERR_INVALID_ENTITY_LIST = _safplusCApi.CL_AMS_ERR_INVALID_ENTITY_LIST
CL_AMS_ERR_ENTITY_NOT_ENABLED = _safplusCApi.CL_AMS_ERR_ENTITY_NOT_ENABLED
CL_AMS_ERR_BAD_CONFIG = _safplusCApi.CL_AMS_ERR_BAD_CONFIG
CL_AMS_ERR_INVALID_ARGS = _safplusCApi.CL_AMS_ERR_INVALID_ARGS
CL_AMS_ERR_INVALID_OPERATION = _safplusCApi.CL_AMS_ERR_INVALID_OPERATION
CL_AMS_ERR_OPERATION_FAILED = _safplusCApi.CL_AMS_ERR_OPERATION_FAILED
CL_AMS_ERR_SI_NOT_ASSIGNABLE = _safplusCApi.CL_AMS_ERR_SI_NOT_ASSIGNABLE
CL_AMS_ERR_CSI_NOT_ASSIGNABLE = _safplusCApi.CL_AMS_ERR_CSI_NOT_ASSIGNABLE
CL_AMS_ERR_UNMARSHALING_FAILED = _safplusCApi.CL_AMS_ERR_UNMARSHALING_FAILED

def new_SaNameT_p():
  return _safplusCApi.new_SaNameT_p()
new_SaNameT_p = _safplusCApi.new_SaNameT_p

def copy_SaNameT_p(*args):
  return _safplusCApi.copy_SaNameT_p(*args)
copy_SaNameT_p = _safplusCApi.copy_SaNameT_p

def delete_SaNameT_p(*args):
  return _safplusCApi.delete_SaNameT_p(*args)
delete_SaNameT_p = _safplusCApi.delete_SaNameT_p

def SaNameT_p_assign(*args):
  return _safplusCApi.SaNameT_p_assign(*args)
SaNameT_p_assign = _safplusCApi.SaNameT_p_assign

def SaNameT_p_value(*args):
  return _safplusCApi.SaNameT_p_value(*args)
SaNameT_p_value = _safplusCApi.SaNameT_p_value

def new_SaNameT_array(*args):
  return _safplusCApi.new_SaNameT_array(*args)
new_SaNameT_array = _safplusCApi.new_SaNameT_array

def delete_SaNameT_array(*args):
  return _safplusCApi.delete_SaNameT_array(*args)
delete_SaNameT_array = _safplusCApi.delete_SaNameT_array

def SaNameT_array_getitem(*args):
  return _safplusCApi.SaNameT_array_getitem(*args)
SaNameT_array_getitem = _safplusCApi.SaNameT_array_getitem

def SaNameT_array_setitem(*args):
  return _safplusCApi.SaNameT_array_setitem(*args)
SaNameT_array_setitem = _safplusCApi.SaNameT_array_setitem

def new_ClAmsCSINameValuePairT_array(*args):
  return _safplusCApi.new_ClAmsCSINameValuePairT_array(*args)
new_ClAmsCSINameValuePairT_array = _safplusCApi.new_ClAmsCSINameValuePairT_array

def delete_ClAmsCSINameValuePairT_array(*args):
  return _safplusCApi.delete_ClAmsCSINameValuePairT_array(*args)
delete_ClAmsCSINameValuePairT_array = _safplusCApi.delete_ClAmsCSINameValuePairT_array

def ClAmsCSINameValuePairT_array_getitem(*args):
  return _safplusCApi.ClAmsCSINameValuePairT_array_getitem(*args)
ClAmsCSINameValuePairT_array_getitem = _safplusCApi.ClAmsCSINameValuePairT_array_getitem

def ClAmsCSINameValuePairT_array_setitem(*args):
  return _safplusCApi.ClAmsCSINameValuePairT_array_setitem(*args)
ClAmsCSINameValuePairT_array_setitem = _safplusCApi.ClAmsCSINameValuePairT_array_setitem

def new_ClAmsEntityT_array(*args):
  return _safplusCApi.new_ClAmsEntityT_array(*args)
new_ClAmsEntityT_array = _safplusCApi.new_ClAmsEntityT_array

def delete_ClAmsEntityT_array(*args):
  return _safplusCApi.delete_ClAmsEntityT_array(*args)
delete_ClAmsEntityT_array = _safplusCApi.delete_ClAmsEntityT_array

def ClAmsEntityT_array_getitem(*args):
  return _safplusCApi.ClAmsEntityT_array_getitem(*args)
ClAmsEntityT_array_getitem = _safplusCApi.ClAmsEntityT_array_getitem

def ClAmsEntityT_array_setitem(*args):
  return _safplusCApi.ClAmsEntityT_array_setitem(*args)
ClAmsEntityT_array_setitem = _safplusCApi.ClAmsEntityT_array_setitem

def clLogMsgWrite(*args):
  return _safplusCApi.clLogMsgWrite(*args)
clLogMsgWrite = _safplusCApi.clLogMsgWrite
CL_LOG_STREAM_CREATE = _safplusCApi.CL_LOG_STREAM_CREATE

def clLogInitialize(*args):
  return _safplusCApi.clLogInitialize(*args)
clLogInitialize = _safplusCApi.clLogInitialize

def clLogFinalize(*args):
  return _safplusCApi.clLogFinalize(*args)
clLogFinalize = _safplusCApi.clLogFinalize
CL_LOG_STREAM_GLOBAL = _safplusCApi.CL_LOG_STREAM_GLOBAL
CL_LOG_STREAM_LOCAL = _safplusCApi.CL_LOG_STREAM_LOCAL
CL_LOG_FILE_FULL_ACTION_ROTATE = _safplusCApi.CL_LOG_FILE_FULL_ACTION_ROTATE
CL_LOG_FILE_FULL_ACTION_WRAP = _safplusCApi.CL_LOG_FILE_FULL_ACTION_WRAP
CL_LOG_FILE_FULL_ACTION_HALT = _safplusCApi.CL_LOG_FILE_FULL_ACTION_HALT
class ClLogStreamAttributesT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClLogStreamAttributesT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClLogStreamAttributesT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["fileName"] = _safplusCApi.ClLogStreamAttributesT_fileName_set
    __swig_getmethods__["fileName"] = _safplusCApi.ClLogStreamAttributesT_fileName_get
    if _newclass:fileName = _swig_property(_safplusCApi.ClLogStreamAttributesT_fileName_get, _safplusCApi.ClLogStreamAttributesT_fileName_set)
    __swig_setmethods__["fileLocation"] = _safplusCApi.ClLogStreamAttributesT_fileLocation_set
    __swig_getmethods__["fileLocation"] = _safplusCApi.ClLogStreamAttributesT_fileLocation_get
    if _newclass:fileLocation = _swig_property(_safplusCApi.ClLogStreamAttributesT_fileLocation_get, _safplusCApi.ClLogStreamAttributesT_fileLocation_set)
    __swig_setmethods__["fileUnitSize"] = _safplusCApi.ClLogStreamAttributesT_fileUnitSize_set
    __swig_getmethods__["fileUnitSize"] = _safplusCApi.ClLogStreamAttributesT_fileUnitSize_get
    if _newclass:fileUnitSize = _swig_property(_safplusCApi.ClLogStreamAttributesT_fileUnitSize_get, _safplusCApi.ClLogStreamAttributesT_fileUnitSize_set)
    __swig_setmethods__["recordSize"] = _safplusCApi.ClLogStreamAttributesT_recordSize_set
    __swig_getmethods__["recordSize"] = _safplusCApi.ClLogStreamAttributesT_recordSize_get
    if _newclass:recordSize = _swig_property(_safplusCApi.ClLogStreamAttributesT_recordSize_get, _safplusCApi.ClLogStreamAttributesT_recordSize_set)
    __swig_setmethods__["haProperty"] = _safplusCApi.ClLogStreamAttributesT_haProperty_set
    __swig_getmethods__["haProperty"] = _safplusCApi.ClLogStreamAttributesT_haProperty_get
    if _newclass:haProperty = _swig_property(_safplusCApi.ClLogStreamAttributesT_haProperty_get, _safplusCApi.ClLogStreamAttributesT_haProperty_set)
    __swig_setmethods__["fileFullAction"] = _safplusCApi.ClLogStreamAttributesT_fileFullAction_set
    __swig_getmethods__["fileFullAction"] = _safplusCApi.ClLogStreamAttributesT_fileFullAction_get
    if _newclass:fileFullAction = _swig_property(_safplusCApi.ClLogStreamAttributesT_fileFullAction_get, _safplusCApi.ClLogStreamAttributesT_fileFullAction_set)
    __swig_setmethods__["maxFilesRotated"] = _safplusCApi.ClLogStreamAttributesT_maxFilesRotated_set
    __swig_getmethods__["maxFilesRotated"] = _safplusCApi.ClLogStreamAttributesT_maxFilesRotated_get
    if _newclass:maxFilesRotated = _swig_property(_safplusCApi.ClLogStreamAttributesT_maxFilesRotated_get, _safplusCApi.ClLogStreamAttributesT_maxFilesRotated_set)
    __swig_setmethods__["flushFreq"] = _safplusCApi.ClLogStreamAttributesT_flushFreq_set
    __swig_getmethods__["flushFreq"] = _safplusCApi.ClLogStreamAttributesT_flushFreq_get
    if _newclass:flushFreq = _swig_property(_safplusCApi.ClLogStreamAttributesT_flushFreq_get, _safplusCApi.ClLogStreamAttributesT_flushFreq_set)
    __swig_setmethods__["flushInterval"] = _safplusCApi.ClLogStreamAttributesT_flushInterval_set
    __swig_getmethods__["flushInterval"] = _safplusCApi.ClLogStreamAttributesT_flushInterval_get
    if _newclass:flushInterval = _swig_property(_safplusCApi.ClLogStreamAttributesT_flushInterval_get, _safplusCApi.ClLogStreamAttributesT_flushInterval_set)
    __swig_setmethods__["waterMark"] = _safplusCApi.ClLogStreamAttributesT_waterMark_set
    __swig_getmethods__["waterMark"] = _safplusCApi.ClLogStreamAttributesT_waterMark_get
    if _newclass:waterMark = _swig_property(_safplusCApi.ClLogStreamAttributesT_waterMark_get, _safplusCApi.ClLogStreamAttributesT_waterMark_set)
    def __init__(self): 
        this = _safplusCApi.new_ClLogStreamAttributesT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClLogStreamAttributesT
    __del__ = lambda self : None;
ClLogStreamAttributesT_swigregister = _safplusCApi.ClLogStreamAttributesT_swigregister
ClLogStreamAttributesT_swigregister(ClLogStreamAttributesT)
cvar = _safplusCApi.cvar


def clLogStreamOpen(*args):
  return _safplusCApi.clLogStreamOpen(*args)
clLogStreamOpen = _safplusCApi.clLogStreamOpen
CL_LOG_AREA_UNSPECIFIED = _safplusCApi.CL_LOG_AREA_UNSPECIFIED
CL_LOG_CONTEXT_UNSPECIFIED = _safplusCApi.CL_LOG_CONTEXT_UNSPECIFIED
CL_LOG_DEFAULT_SYS_SERVICE_ID = _safplusCApi.CL_LOG_DEFAULT_SYS_SERVICE_ID
CL_LOG_SEV_EMERGENCY = _safplusCApi.CL_LOG_SEV_EMERGENCY
CL_LOG_SEV_ALERT = _safplusCApi.CL_LOG_SEV_ALERT
CL_LOG_SEV_CRITICAL = _safplusCApi.CL_LOG_SEV_CRITICAL
CL_LOG_SEV_ERROR = _safplusCApi.CL_LOG_SEV_ERROR
CL_LOG_SEV_WARNING = _safplusCApi.CL_LOG_SEV_WARNING
CL_LOG_SEV_NOTICE = _safplusCApi.CL_LOG_SEV_NOTICE
CL_LOG_SEV_INFO = _safplusCApi.CL_LOG_SEV_INFO
CL_LOG_SEV_DEBUG = _safplusCApi.CL_LOG_SEV_DEBUG
CL_LOG_SEV_DEBUG1 = _safplusCApi.CL_LOG_SEV_DEBUG1
CL_LOG_SEV_DEBUG2 = _safplusCApi.CL_LOG_SEV_DEBUG2
CL_LOG_SEV_DEBUG3 = _safplusCApi.CL_LOG_SEV_DEBUG3
CL_LOG_SEV_DEBUG4 = _safplusCApi.CL_LOG_SEV_DEBUG4
CL_LOG_SEV_DEBUG5 = _safplusCApi.CL_LOG_SEV_DEBUG5
CL_LOG_SEV_TRACE = _safplusCApi.CL_LOG_SEV_TRACE
CL_LOG_SEV_DEBUG6 = _safplusCApi.CL_LOG_SEV_DEBUG6
CL_LOG_SEV_DEBUG7 = _safplusCApi.CL_LOG_SEV_DEBUG7
CL_LOG_SEV_DEBUG8 = _safplusCApi.CL_LOG_SEV_DEBUG8
CL_LOG_SEV_DEBUG9 = _safplusCApi.CL_LOG_SEV_DEBUG9
CL_LOG_SEV_MAX = _safplusCApi.CL_LOG_SEV_MAX
CL_METRIC_NO_OPTIONS = _safplusCApi.CL_METRIC_NO_OPTIONS
CL_METRIC_NO_DEBOUNCE = _safplusCApi.CL_METRIC_NO_DEBOUNCE
CL_METRIC_NO_CLEAR = _safplusCApi.CL_METRIC_NO_CLEAR
CL_METRIC_NO_SKIP = _safplusCApi.CL_METRIC_NO_SKIP
CL_METRIC_PERCENT = _safplusCApi.CL_METRIC_PERCENT
CL_METRIC_MILLISEC = _safplusCApi.CL_METRIC_MILLISEC
CL_METRIC_BYTES = _safplusCApi.CL_METRIC_BYTES
CL_METRIC_MEGABYTES = _safplusCApi.CL_METRIC_MEGABYTES
CL_METRIC_UNITS = _safplusCApi.CL_METRIC_UNITS
class ClMetric2T(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClMetric2T, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClMetric2T, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mgd"] = _safplusCApi.ClMetric2T_mgd_set
    __swig_getmethods__["mgd"] = _safplusCApi.ClMetric2T_mgd_get
    if _newclass:mgd = _swig_property(_safplusCApi.ClMetric2T_mgd_get, _safplusCApi.ClMetric2T_mgd_set)
    __swig_setmethods__["desc"] = _safplusCApi.ClMetric2T_desc_set
    __swig_getmethods__["desc"] = _safplusCApi.ClMetric2T_desc_get
    if _newclass:desc = _swig_property(_safplusCApi.ClMetric2T_desc_get, _safplusCApi.ClMetric2T_desc_set)
    __swig_setmethods__["type"] = _safplusCApi.ClMetric2T_type_set
    __swig_getmethods__["type"] = _safplusCApi.ClMetric2T_type_get
    if _newclass:type = _swig_property(_safplusCApi.ClMetric2T_type_get, _safplusCApi.ClMetric2T_type_set)
    __swig_setmethods__["value"] = _safplusCApi.ClMetric2T_value_set
    __swig_getmethods__["value"] = _safplusCApi.ClMetric2T_value_get
    if _newclass:value = _swig_property(_safplusCApi.ClMetric2T_value_get, _safplusCApi.ClMetric2T_value_set)
    __swig_setmethods__["flags"] = _safplusCApi.ClMetric2T_flags_set
    __swig_getmethods__["flags"] = _safplusCApi.ClMetric2T_flags_get
    if _newclass:flags = _swig_property(_safplusCApi.ClMetric2T_flags_get, _safplusCApi.ClMetric2T_flags_set)
    __swig_setmethods__["lowThreshold"] = _safplusCApi.ClMetric2T_lowThreshold_set
    __swig_getmethods__["lowThreshold"] = _safplusCApi.ClMetric2T_lowThreshold_get
    if _newclass:lowThreshold = _swig_property(_safplusCApi.ClMetric2T_lowThreshold_get, _safplusCApi.ClMetric2T_lowThreshold_set)
    __swig_setmethods__["highThreshold"] = _safplusCApi.ClMetric2T_highThreshold_set
    __swig_getmethods__["highThreshold"] = _safplusCApi.ClMetric2T_highThreshold_get
    if _newclass:highThreshold = _swig_property(_safplusCApi.ClMetric2T_highThreshold_get, _safplusCApi.ClMetric2T_highThreshold_set)
    __swig_setmethods__["callback"] = _safplusCApi.ClMetric2T_callback_set
    __swig_getmethods__["callback"] = _safplusCApi.ClMetric2T_callback_get
    if _newclass:callback = _swig_property(_safplusCApi.ClMetric2T_callback_get, _safplusCApi.ClMetric2T_callback_set)
    def __init__(self): 
        this = _safplusCApi.new_ClMetric2T()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClMetric2T
    __del__ = lambda self : None;
ClMetric2T_swigregister = _safplusCApi.ClMetric2T_swigregister
ClMetric2T_swigregister(ClMetric2T)

CL_METRIC_ALL = _safplusCApi.CL_METRIC_ALL
CL_METRIC_CPU = _safplusCApi.CL_METRIC_CPU
CL_METRIC_MEM = _safplusCApi.CL_METRIC_MEM
CL_METRIC_MAX = _safplusCApi.CL_METRIC_MAX
class ClMetricT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClMetricT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClMetricT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["pType"] = _safplusCApi.ClMetricT_pType_set
    __swig_getmethods__["pType"] = _safplusCApi.ClMetricT_pType_get
    if _newclass:pType = _swig_property(_safplusCApi.ClMetricT_pType_get, _safplusCApi.ClMetricT_pType_set)
    __swig_setmethods__["id"] = _safplusCApi.ClMetricT_id_set
    __swig_getmethods__["id"] = _safplusCApi.ClMetricT_id_get
    if _newclass:id = _swig_property(_safplusCApi.ClMetricT_id_get, _safplusCApi.ClMetricT_id_set)
    __swig_setmethods__["maxThreshold"] = _safplusCApi.ClMetricT_maxThreshold_set
    __swig_getmethods__["maxThreshold"] = _safplusCApi.ClMetricT_maxThreshold_get
    if _newclass:maxThreshold = _swig_property(_safplusCApi.ClMetricT_maxThreshold_get, _safplusCApi.ClMetricT_maxThreshold_set)
    __swig_setmethods__["currentThreshold"] = _safplusCApi.ClMetricT_currentThreshold_set
    __swig_getmethods__["currentThreshold"] = _safplusCApi.ClMetricT_currentThreshold_get
    if _newclass:currentThreshold = _swig_property(_safplusCApi.ClMetricT_currentThreshold_get, _safplusCApi.ClMetricT_currentThreshold_set)
    __swig_setmethods__["maxOccurences"] = _safplusCApi.ClMetricT_maxOccurences_set
    __swig_getmethods__["maxOccurences"] = _safplusCApi.ClMetricT_maxOccurences_get
    if _newclass:maxOccurences = _swig_property(_safplusCApi.ClMetricT_maxOccurences_get, _safplusCApi.ClMetricT_maxOccurences_set)
    __swig_setmethods__["numOccurences"] = _safplusCApi.ClMetricT_numOccurences_set
    __swig_getmethods__["numOccurences"] = _safplusCApi.ClMetricT_numOccurences_get
    if _newclass:numOccurences = _swig_property(_safplusCApi.ClMetricT_numOccurences_get, _safplusCApi.ClMetricT_numOccurences_set)
    def __init__(self): 
        this = _safplusCApi.new_ClMetricT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClMetricT
    __del__ = lambda self : None;
ClMetricT_swigregister = _safplusCApi.ClMetricT_swigregister
ClMetricT_swigregister(ClMetricT)


def clMetricInit(*args):
  return _safplusCApi.clMetricInit(*args)
clMetricInit = _safplusCApi.clMetricInit

def clMetricDelete(*args):
  return _safplusCApi.clMetricDelete(*args)
clMetricDelete = _safplusCApi.clMetricDelete

def clMetricSetLowWatermark(*args):
  return _safplusCApi.clMetricSetLowWatermark(*args)
clMetricSetLowWatermark = _safplusCApi.clMetricSetLowWatermark

def clMetricSetHighWatermark(*args):
  return _safplusCApi.clMetricSetHighWatermark(*args)
clMetricSetHighWatermark = _safplusCApi.clMetricSetHighWatermark

def clMetricAdjust(*args):
  return _safplusCApi.clMetricAdjust(*args)
clMetricAdjust = _safplusCApi.clMetricAdjust

def clMetricSet(*args):
  return _safplusCApi.clMetricSet(*args)
clMetricSet = _safplusCApi.clMetricSet
SA_TIME_END = _safplusCApi.SA_TIME_END
SA_TIME_BEGIN = _safplusCApi.SA_TIME_BEGIN
SA_TIME_UNKNOWN = _safplusCApi.SA_TIME_UNKNOWN
SA_TIME_ONE_MICROSECOND = _safplusCApi.SA_TIME_ONE_MICROSECOND
SA_TIME_ONE_MILLISECOND = _safplusCApi.SA_TIME_ONE_MILLISECOND
SA_TIME_ONE_SECOND = _safplusCApi.SA_TIME_ONE_SECOND
SA_TIME_ONE_MINUTE = _safplusCApi.SA_TIME_ONE_MINUTE
SA_TIME_ONE_HOUR = _safplusCApi.SA_TIME_ONE_HOUR
SA_TIME_ONE_DAY = _safplusCApi.SA_TIME_ONE_DAY
SA_TIME_MAX = _safplusCApi.SA_TIME_MAX
SA_MAX_NAME_LENGTH = _safplusCApi.SA_MAX_NAME_LENGTH
SA_TRACK_CURRENT = _safplusCApi.SA_TRACK_CURRENT
SA_TRACK_CHANGES = _safplusCApi.SA_TRACK_CHANGES
SA_TRACK_CHANGES_ONLY = _safplusCApi.SA_TRACK_CHANGES_ONLY
SA_TRACK_LOCAL = _safplusCApi.SA_TRACK_LOCAL
SA_TRACK_START_STEP = _safplusCApi.SA_TRACK_START_STEP
SA_TRACK_VALIDATE_STEP = _safplusCApi.SA_TRACK_VALIDATE_STEP
SA_FALSE = _safplusCApi.SA_FALSE
SA_TRUE = _safplusCApi.SA_TRUE
SA_DISPATCH_ONE = _safplusCApi.SA_DISPATCH_ONE
SA_DISPATCH_ALL = _safplusCApi.SA_DISPATCH_ALL
SA_DISPATCH_BLOCKING = _safplusCApi.SA_DISPATCH_BLOCKING
SA_AIS_OK = _safplusCApi.SA_AIS_OK
SA_AIS_ERR_LIBRARY = _safplusCApi.SA_AIS_ERR_LIBRARY
SA_AIS_ERR_VERSION = _safplusCApi.SA_AIS_ERR_VERSION
SA_AIS_ERR_INIT = _safplusCApi.SA_AIS_ERR_INIT
SA_AIS_ERR_TIMEOUT = _safplusCApi.SA_AIS_ERR_TIMEOUT
SA_AIS_ERR_TRY_AGAIN = _safplusCApi.SA_AIS_ERR_TRY_AGAIN
SA_AIS_ERR_INVALID_PARAM = _safplusCApi.SA_AIS_ERR_INVALID_PARAM
SA_AIS_ERR_NO_MEMORY = _safplusCApi.SA_AIS_ERR_NO_MEMORY
SA_AIS_ERR_BAD_HANDLE = _safplusCApi.SA_AIS_ERR_BAD_HANDLE
SA_AIS_ERR_BUSY = _safplusCApi.SA_AIS_ERR_BUSY
SA_AIS_ERR_ACCESS = _safplusCApi.SA_AIS_ERR_ACCESS
SA_AIS_ERR_NOT_EXIST = _safplusCApi.SA_AIS_ERR_NOT_EXIST
SA_AIS_ERR_NAME_TOO_LONG = _safplusCApi.SA_AIS_ERR_NAME_TOO_LONG
SA_AIS_ERR_EXIST = _safplusCApi.SA_AIS_ERR_EXIST
SA_AIS_ERR_NO_SPACE = _safplusCApi.SA_AIS_ERR_NO_SPACE
SA_AIS_ERR_INTERRUPT = _safplusCApi.SA_AIS_ERR_INTERRUPT
SA_AIS_ERR_NAME_NOT_FOUND = _safplusCApi.SA_AIS_ERR_NAME_NOT_FOUND
SA_AIS_ERR_NO_RESOURCES = _safplusCApi.SA_AIS_ERR_NO_RESOURCES
SA_AIS_ERR_NOT_SUPPORTED = _safplusCApi.SA_AIS_ERR_NOT_SUPPORTED
SA_AIS_ERR_BAD_OPERATION = _safplusCApi.SA_AIS_ERR_BAD_OPERATION
SA_AIS_ERR_FAILED_OPERATION = _safplusCApi.SA_AIS_ERR_FAILED_OPERATION
SA_AIS_ERR_MESSAGE_ERROR = _safplusCApi.SA_AIS_ERR_MESSAGE_ERROR
SA_AIS_ERR_QUEUE_FULL = _safplusCApi.SA_AIS_ERR_QUEUE_FULL
SA_AIS_ERR_QUEUE_NOT_AVAILABLE = _safplusCApi.SA_AIS_ERR_QUEUE_NOT_AVAILABLE
SA_AIS_ERR_BAD_FLAGS = _safplusCApi.SA_AIS_ERR_BAD_FLAGS
SA_AIS_ERR_TOO_BIG = _safplusCApi.SA_AIS_ERR_TOO_BIG
SA_AIS_ERR_NO_SECTIONS = _safplusCApi.SA_AIS_ERR_NO_SECTIONS
SA_AIS_ERR_NO_OP = _safplusCApi.SA_AIS_ERR_NO_OP
SA_AIS_ERR_REPAIR_PENDING = _safplusCApi.SA_AIS_ERR_REPAIR_PENDING
SA_AIS_ERR_NO_BINDINGS = _safplusCApi.SA_AIS_ERR_NO_BINDINGS
SA_AIS_ERR_UNAVAILABLE = _safplusCApi.SA_AIS_ERR_UNAVAILABLE
SA_AIS_ERR_CAMPAIGN_ERROR_DETECTED = _safplusCApi.SA_AIS_ERR_CAMPAIGN_ERROR_DETECTED
SA_AIS_ERR_CAMPAIGN_PROC_FAILED = _safplusCApi.SA_AIS_ERR_CAMPAIGN_PROC_FAILED
SA_AIS_ERR_CAMPAIGN_CANCELED = _safplusCApi.SA_AIS_ERR_CAMPAIGN_CANCELED
SA_AIS_ERR_CAMPAIGN_FAILED = _safplusCApi.SA_AIS_ERR_CAMPAIGN_FAILED
SA_AIS_ERR_CAMPAIGN_SUSPENDED = _safplusCApi.SA_AIS_ERR_CAMPAIGN_SUSPENDED
SA_AIS_ERR_CAMPAIGN_SUSPENDING = _safplusCApi.SA_AIS_ERR_CAMPAIGN_SUSPENDING
SA_AIS_ERR_ACCESS_DENIED = _safplusCApi.SA_AIS_ERR_ACCESS_DENIED
SA_AIS_ERR_NOT_READY = _safplusCApi.SA_AIS_ERR_NOT_READY
SA_AIS_ERR_DEPLOYMENT = _safplusCApi.SA_AIS_ERR_DEPLOYMENT
SA_SVC_HPI = _safplusCApi.SA_SVC_HPI
SA_SVC_AMF = _safplusCApi.SA_SVC_AMF
SA_SVC_CLM = _safplusCApi.SA_SVC_CLM
SA_SVC_CKPT = _safplusCApi.SA_SVC_CKPT
SA_SVC_EVT = _safplusCApi.SA_SVC_EVT
SA_SVC_MSG = _safplusCApi.SA_SVC_MSG
SA_SVC_LCK = _safplusCApi.SA_SVC_LCK
SA_SVC_IMMS = _safplusCApi.SA_SVC_IMMS
SA_SCV_LOG = _safplusCApi.SA_SCV_LOG
SA_SVC_NTF = _safplusCApi.SA_SVC_NTF
SA_SVC_NAM = _safplusCApi.SA_SVC_NAM
SA_SVC_TMR = _safplusCApi.SA_SVC_TMR
SA_SVC_SMF = _safplusCApi.SA_SVC_SMF
SA_SVC_SEC = _safplusCApi.SA_SVC_SEC
SA_SVC_PLM = _safplusCApi.SA_SVC_PLM
class SaAnyT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaAnyT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaAnyT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["bufferSize"] = _safplusCApi.SaAnyT_bufferSize_set
    __swig_getmethods__["bufferSize"] = _safplusCApi.SaAnyT_bufferSize_get
    if _newclass:bufferSize = _swig_property(_safplusCApi.SaAnyT_bufferSize_get, _safplusCApi.SaAnyT_bufferSize_set)
    __swig_setmethods__["bufferAddr"] = _safplusCApi.SaAnyT_bufferAddr_set
    __swig_getmethods__["bufferAddr"] = _safplusCApi.SaAnyT_bufferAddr_get
    if _newclass:bufferAddr = _swig_property(_safplusCApi.SaAnyT_bufferAddr_get, _safplusCApi.SaAnyT_bufferAddr_set)
    def __init__(self): 
        this = _safplusCApi.new_SaAnyT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaAnyT
    __del__ = lambda self : None;
SaAnyT_swigregister = _safplusCApi.SaAnyT_swigregister
SaAnyT_swigregister(SaAnyT)

class SaNameT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaNameT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaNameT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["length"] = _safplusCApi.SaNameT_length_set
    __swig_getmethods__["length"] = _safplusCApi.SaNameT_length_get
    if _newclass:length = _swig_property(_safplusCApi.SaNameT_length_get, _safplusCApi.SaNameT_length_set)
    __swig_setmethods__["value"] = _safplusCApi.SaNameT_value_set
    __swig_getmethods__["value"] = _safplusCApi.SaNameT_value_get
    if _newclass:value = _swig_property(_safplusCApi.SaNameT_value_get, _safplusCApi.SaNameT_value_set)
    def __init__(self): 
        this = _safplusCApi.new_SaNameT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaNameT
    __del__ = lambda self : None;
SaNameT_swigregister = _safplusCApi.SaNameT_swigregister
SaNameT_swigregister(SaNameT)

class SaVersionT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaVersionT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaVersionT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["releaseCode"] = _safplusCApi.SaVersionT_releaseCode_set
    __swig_getmethods__["releaseCode"] = _safplusCApi.SaVersionT_releaseCode_get
    if _newclass:releaseCode = _swig_property(_safplusCApi.SaVersionT_releaseCode_get, _safplusCApi.SaVersionT_releaseCode_set)
    __swig_setmethods__["majorVersion"] = _safplusCApi.SaVersionT_majorVersion_set
    __swig_getmethods__["majorVersion"] = _safplusCApi.SaVersionT_majorVersion_get
    if _newclass:majorVersion = _swig_property(_safplusCApi.SaVersionT_majorVersion_get, _safplusCApi.SaVersionT_majorVersion_set)
    __swig_setmethods__["minorVersion"] = _safplusCApi.SaVersionT_minorVersion_set
    __swig_getmethods__["minorVersion"] = _safplusCApi.SaVersionT_minorVersion_get
    if _newclass:minorVersion = _swig_property(_safplusCApi.SaVersionT_minorVersion_get, _safplusCApi.SaVersionT_minorVersion_set)
    def __init__(self): 
        this = _safplusCApi.new_SaVersionT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaVersionT
    __del__ = lambda self : None;
SaVersionT_swigregister = _safplusCApi.SaVersionT_swigregister
SaVersionT_swigregister(SaVersionT)

class SaLimitValueT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaLimitValueT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaLimitValueT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["int64Value"] = _safplusCApi.SaLimitValueT_int64Value_set
    __swig_getmethods__["int64Value"] = _safplusCApi.SaLimitValueT_int64Value_get
    if _newclass:int64Value = _swig_property(_safplusCApi.SaLimitValueT_int64Value_get, _safplusCApi.SaLimitValueT_int64Value_set)
    __swig_setmethods__["uint64Value"] = _safplusCApi.SaLimitValueT_uint64Value_set
    __swig_getmethods__["uint64Value"] = _safplusCApi.SaLimitValueT_uint64Value_get
    if _newclass:uint64Value = _swig_property(_safplusCApi.SaLimitValueT_uint64Value_get, _safplusCApi.SaLimitValueT_uint64Value_set)
    __swig_setmethods__["timeValue"] = _safplusCApi.SaLimitValueT_timeValue_set
    __swig_getmethods__["timeValue"] = _safplusCApi.SaLimitValueT_timeValue_get
    if _newclass:timeValue = _swig_property(_safplusCApi.SaLimitValueT_timeValue_get, _safplusCApi.SaLimitValueT_timeValue_set)
    __swig_setmethods__["floatValue"] = _safplusCApi.SaLimitValueT_floatValue_set
    __swig_getmethods__["floatValue"] = _safplusCApi.SaLimitValueT_floatValue_get
    if _newclass:floatValue = _swig_property(_safplusCApi.SaLimitValueT_floatValue_get, _safplusCApi.SaLimitValueT_floatValue_set)
    __swig_setmethods__["doubleValue"] = _safplusCApi.SaLimitValueT_doubleValue_set
    __swig_getmethods__["doubleValue"] = _safplusCApi.SaLimitValueT_doubleValue_get
    if _newclass:doubleValue = _swig_property(_safplusCApi.SaLimitValueT_doubleValue_get, _safplusCApi.SaLimitValueT_doubleValue_set)
    def __init__(self): 
        this = _safplusCApi.new_SaLimitValueT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaLimitValueT
    __del__ = lambda self : None;
SaLimitValueT_swigregister = _safplusCApi.SaLimitValueT_swigregister
SaLimitValueT_swigregister(SaLimitValueT)

class SaEvtCallbacksT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaEvtCallbacksT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaEvtCallbacksT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["saEvtChannelOpenCallback"] = _safplusCApi.SaEvtCallbacksT_saEvtChannelOpenCallback_set
    __swig_getmethods__["saEvtChannelOpenCallback"] = _safplusCApi.SaEvtCallbacksT_saEvtChannelOpenCallback_get
    if _newclass:saEvtChannelOpenCallback = _swig_property(_safplusCApi.SaEvtCallbacksT_saEvtChannelOpenCallback_get, _safplusCApi.SaEvtCallbacksT_saEvtChannelOpenCallback_set)
    __swig_setmethods__["saEvtEventDeliverCallback"] = _safplusCApi.SaEvtCallbacksT_saEvtEventDeliverCallback_set
    __swig_getmethods__["saEvtEventDeliverCallback"] = _safplusCApi.SaEvtCallbacksT_saEvtEventDeliverCallback_get
    if _newclass:saEvtEventDeliverCallback = _swig_property(_safplusCApi.SaEvtCallbacksT_saEvtEventDeliverCallback_get, _safplusCApi.SaEvtCallbacksT_saEvtEventDeliverCallback_set)
    def __init__(self): 
        this = _safplusCApi.new_SaEvtCallbacksT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaEvtCallbacksT
    __del__ = lambda self : None;
SaEvtCallbacksT_swigregister = _safplusCApi.SaEvtCallbacksT_swigregister
SaEvtCallbacksT_swigregister(SaEvtCallbacksT)

SA_EVT_CHANNEL_PUBLISHER = _safplusCApi.SA_EVT_CHANNEL_PUBLISHER
SA_EVT_CHANNEL_SUBSCRIBER = _safplusCApi.SA_EVT_CHANNEL_SUBSCRIBER
SA_EVT_CHANNEL_CREATE = _safplusCApi.SA_EVT_CHANNEL_CREATE
class SaEvtEventPatternT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaEvtEventPatternT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaEvtEventPatternT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["allocatedSize"] = _safplusCApi.SaEvtEventPatternT_allocatedSize_set
    __swig_getmethods__["allocatedSize"] = _safplusCApi.SaEvtEventPatternT_allocatedSize_get
    if _newclass:allocatedSize = _swig_property(_safplusCApi.SaEvtEventPatternT_allocatedSize_get, _safplusCApi.SaEvtEventPatternT_allocatedSize_set)
    __swig_setmethods__["patternSize"] = _safplusCApi.SaEvtEventPatternT_patternSize_set
    __swig_getmethods__["patternSize"] = _safplusCApi.SaEvtEventPatternT_patternSize_get
    if _newclass:patternSize = _swig_property(_safplusCApi.SaEvtEventPatternT_patternSize_get, _safplusCApi.SaEvtEventPatternT_patternSize_set)
    __swig_setmethods__["pattern"] = _safplusCApi.SaEvtEventPatternT_pattern_set
    __swig_getmethods__["pattern"] = _safplusCApi.SaEvtEventPatternT_pattern_get
    if _newclass:pattern = _swig_property(_safplusCApi.SaEvtEventPatternT_pattern_get, _safplusCApi.SaEvtEventPatternT_pattern_set)
    def __init__(self): 
        this = _safplusCApi.new_SaEvtEventPatternT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaEvtEventPatternT
    __del__ = lambda self : None;
SaEvtEventPatternT_swigregister = _safplusCApi.SaEvtEventPatternT_swigregister
SaEvtEventPatternT_swigregister(SaEvtEventPatternT)

class SaEvtEventPatternArrayT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaEvtEventPatternArrayT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaEvtEventPatternArrayT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["allocatedNumber"] = _safplusCApi.SaEvtEventPatternArrayT_allocatedNumber_set
    __swig_getmethods__["allocatedNumber"] = _safplusCApi.SaEvtEventPatternArrayT_allocatedNumber_get
    if _newclass:allocatedNumber = _swig_property(_safplusCApi.SaEvtEventPatternArrayT_allocatedNumber_get, _safplusCApi.SaEvtEventPatternArrayT_allocatedNumber_set)
    __swig_setmethods__["patternsNumber"] = _safplusCApi.SaEvtEventPatternArrayT_patternsNumber_set
    __swig_getmethods__["patternsNumber"] = _safplusCApi.SaEvtEventPatternArrayT_patternsNumber_get
    if _newclass:patternsNumber = _swig_property(_safplusCApi.SaEvtEventPatternArrayT_patternsNumber_get, _safplusCApi.SaEvtEventPatternArrayT_patternsNumber_set)
    __swig_setmethods__["patterns"] = _safplusCApi.SaEvtEventPatternArrayT_patterns_set
    __swig_getmethods__["patterns"] = _safplusCApi.SaEvtEventPatternArrayT_patterns_get
    if _newclass:patterns = _swig_property(_safplusCApi.SaEvtEventPatternArrayT_patterns_get, _safplusCApi.SaEvtEventPatternArrayT_patterns_set)
    def __init__(self): 
        this = _safplusCApi.new_SaEvtEventPatternArrayT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaEvtEventPatternArrayT
    __del__ = lambda self : None;
SaEvtEventPatternArrayT_swigregister = _safplusCApi.SaEvtEventPatternArrayT_swigregister
SaEvtEventPatternArrayT_swigregister(SaEvtEventPatternArrayT)

SA_EVT_HIGHEST_PRIORITY = _safplusCApi.SA_EVT_HIGHEST_PRIORITY
SA_EVT_LOWEST_PRIORITY = _safplusCApi.SA_EVT_LOWEST_PRIORITY
SA_EVT_EVENTID_NONE = _safplusCApi.SA_EVT_EVENTID_NONE
SA_EVT_EVENTID_LOST = _safplusCApi.SA_EVT_EVENTID_LOST
SA_EVT_LOST_EVENT = _safplusCApi.SA_EVT_LOST_EVENT
SA_EVT_PREFIX_FILTER = _safplusCApi.SA_EVT_PREFIX_FILTER
SA_EVT_SUFFIX_FILTER = _safplusCApi.SA_EVT_SUFFIX_FILTER
SA_EVT_EXACT_FILTER = _safplusCApi.SA_EVT_EXACT_FILTER
SA_EVT_PASS_ALL_FILTER = _safplusCApi.SA_EVT_PASS_ALL_FILTER
class SaEvtEventFilterT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaEvtEventFilterT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaEvtEventFilterT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["filterType"] = _safplusCApi.SaEvtEventFilterT_filterType_set
    __swig_getmethods__["filterType"] = _safplusCApi.SaEvtEventFilterT_filterType_get
    if _newclass:filterType = _swig_property(_safplusCApi.SaEvtEventFilterT_filterType_get, _safplusCApi.SaEvtEventFilterT_filterType_set)
    __swig_setmethods__["filter"] = _safplusCApi.SaEvtEventFilterT_filter_set
    __swig_getmethods__["filter"] = _safplusCApi.SaEvtEventFilterT_filter_get
    if _newclass:filter = _swig_property(_safplusCApi.SaEvtEventFilterT_filter_get, _safplusCApi.SaEvtEventFilterT_filter_set)
    def __init__(self): 
        this = _safplusCApi.new_SaEvtEventFilterT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaEvtEventFilterT
    __del__ = lambda self : None;
SaEvtEventFilterT_swigregister = _safplusCApi.SaEvtEventFilterT_swigregister
SaEvtEventFilterT_swigregister(SaEvtEventFilterT)

class SaEvtEventFilterArrayT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaEvtEventFilterArrayT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaEvtEventFilterArrayT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["filtersNumber"] = _safplusCApi.SaEvtEventFilterArrayT_filtersNumber_set
    __swig_getmethods__["filtersNumber"] = _safplusCApi.SaEvtEventFilterArrayT_filtersNumber_get
    if _newclass:filtersNumber = _swig_property(_safplusCApi.SaEvtEventFilterArrayT_filtersNumber_get, _safplusCApi.SaEvtEventFilterArrayT_filtersNumber_set)
    __swig_setmethods__["filters"] = _safplusCApi.SaEvtEventFilterArrayT_filters_set
    __swig_getmethods__["filters"] = _safplusCApi.SaEvtEventFilterArrayT_filters_get
    if _newclass:filters = _swig_property(_safplusCApi.SaEvtEventFilterArrayT_filters_get, _safplusCApi.SaEvtEventFilterArrayT_filters_set)
    def __init__(self): 
        this = _safplusCApi.new_SaEvtEventFilterArrayT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaEvtEventFilterArrayT
    __del__ = lambda self : None;
SaEvtEventFilterArrayT_swigregister = _safplusCApi.SaEvtEventFilterArrayT_swigregister
SaEvtEventFilterArrayT_swigregister(SaEvtEventFilterArrayT)


def saEvtInitialize(*args):
  return _safplusCApi.saEvtInitialize(*args)
saEvtInitialize = _safplusCApi.saEvtInitialize

def saEvtSelectionObjectGet(*args):
  return _safplusCApi.saEvtSelectionObjectGet(*args)
saEvtSelectionObjectGet = _safplusCApi.saEvtSelectionObjectGet

def saEvtDispatch(*args):
  return _safplusCApi.saEvtDispatch(*args)
saEvtDispatch = _safplusCApi.saEvtDispatch

def saEvtFinalize(*args):
  return _safplusCApi.saEvtFinalize(*args)
saEvtFinalize = _safplusCApi.saEvtFinalize

def saEvtChannelOpen(*args):
  return _safplusCApi.saEvtChannelOpen(*args)
saEvtChannelOpen = _safplusCApi.saEvtChannelOpen

def saEvtChannelOpenAsync(*args):
  return _safplusCApi.saEvtChannelOpenAsync(*args)
saEvtChannelOpenAsync = _safplusCApi.saEvtChannelOpenAsync

def saEvtChannelClose(*args):
  return _safplusCApi.saEvtChannelClose(*args)
saEvtChannelClose = _safplusCApi.saEvtChannelClose

def saEvtChannelUnlink(*args):
  return _safplusCApi.saEvtChannelUnlink(*args)
saEvtChannelUnlink = _safplusCApi.saEvtChannelUnlink

def saEvtEventAllocate(*args):
  return _safplusCApi.saEvtEventAllocate(*args)
saEvtEventAllocate = _safplusCApi.saEvtEventAllocate

def saEvtEventFree(*args):
  return _safplusCApi.saEvtEventFree(*args)
saEvtEventFree = _safplusCApi.saEvtEventFree

def saEvtEventAttributesSet(*args):
  return _safplusCApi.saEvtEventAttributesSet(*args)
saEvtEventAttributesSet = _safplusCApi.saEvtEventAttributesSet

def saEvtEventAttributesGet(*args):
  return _safplusCApi.saEvtEventAttributesGet(*args)
saEvtEventAttributesGet = _safplusCApi.saEvtEventAttributesGet

def saEvtEventDataGet(*args):
  return _safplusCApi.saEvtEventDataGet(*args)
saEvtEventDataGet = _safplusCApi.saEvtEventDataGet

def saEvtEventPublish(*args):
  return _safplusCApi.saEvtEventPublish(*args)
saEvtEventPublish = _safplusCApi.saEvtEventPublish

def saEvtEventSubscribe(*args):
  return _safplusCApi.saEvtEventSubscribe(*args)
saEvtEventSubscribe = _safplusCApi.saEvtEventSubscribe

def saEvtEventUnsubscribe(*args):
  return _safplusCApi.saEvtEventUnsubscribe(*args)
saEvtEventUnsubscribe = _safplusCApi.saEvtEventUnsubscribe

def saEvtEventRetentionTimeClear(*args):
  return _safplusCApi.saEvtEventRetentionTimeClear(*args)
saEvtEventRetentionTimeClear = _safplusCApi.saEvtEventRetentionTimeClear
CL_AMS_ENTITY_TYPE_ENTITY = _safplusCApi.CL_AMS_ENTITY_TYPE_ENTITY
CL_AMS_ENTITY_TYPE_NODE = _safplusCApi.CL_AMS_ENTITY_TYPE_NODE
CL_AMS_ENTITY_TYPE_APP = _safplusCApi.CL_AMS_ENTITY_TYPE_APP
CL_AMS_ENTITY_TYPE_SG = _safplusCApi.CL_AMS_ENTITY_TYPE_SG
CL_AMS_ENTITY_TYPE_SU = _safplusCApi.CL_AMS_ENTITY_TYPE_SU
CL_AMS_ENTITY_TYPE_SI = _safplusCApi.CL_AMS_ENTITY_TYPE_SI
CL_AMS_ENTITY_TYPE_COMP = _safplusCApi.CL_AMS_ENTITY_TYPE_COMP
CL_AMS_ENTITY_TYPE_CSI = _safplusCApi.CL_AMS_ENTITY_TYPE_CSI
CL_AMS_ENTITY_TYPE_CLUSTER = _safplusCApi.CL_AMS_ENTITY_TYPE_CLUSTER
CL_AMS_ENTITY_TYPE_MAX = _safplusCApi.CL_AMS_ENTITY_TYPE_MAX
class ClAmsEntityOpStackT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityOpStackT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityOpStackT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["numOps"] = _safplusCApi.ClAmsEntityOpStackT_numOps_set
    __swig_getmethods__["numOps"] = _safplusCApi.ClAmsEntityOpStackT_numOps_get
    if _newclass:numOps = _swig_property(_safplusCApi.ClAmsEntityOpStackT_numOps_get, _safplusCApi.ClAmsEntityOpStackT_numOps_set)
    __swig_setmethods__["opList"] = _safplusCApi.ClAmsEntityOpStackT_opList_set
    __swig_getmethods__["opList"] = _safplusCApi.ClAmsEntityOpStackT_opList_get
    if _newclass:opList = _swig_property(_safplusCApi.ClAmsEntityOpStackT_opList_get, _safplusCApi.ClAmsEntityOpStackT_opList_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityOpStackT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityOpStackT
    __del__ = lambda self : None;
ClAmsEntityOpStackT_swigregister = _safplusCApi.ClAmsEntityOpStackT_swigregister
ClAmsEntityOpStackT_swigregister(ClAmsEntityOpStackT)

class ClAmsEntityConfigT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityConfigT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityConfigT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _safplusCApi.ClAmsEntityConfigT_type_set
    __swig_getmethods__["type"] = _safplusCApi.ClAmsEntityConfigT_type_get
    if _newclass:type = _swig_property(_safplusCApi.ClAmsEntityConfigT_type_get, _safplusCApi.ClAmsEntityConfigT_type_set)
    __swig_setmethods__["name"] = _safplusCApi.ClAmsEntityConfigT_name_set
    __swig_getmethods__["name"] = _safplusCApi.ClAmsEntityConfigT_name_get
    if _newclass:name = _swig_property(_safplusCApi.ClAmsEntityConfigT_name_get, _safplusCApi.ClAmsEntityConfigT_name_set)
    __swig_setmethods__["debugFlags"] = _safplusCApi.ClAmsEntityConfigT_debugFlags_set
    __swig_getmethods__["debugFlags"] = _safplusCApi.ClAmsEntityConfigT_debugFlags_get
    if _newclass:debugFlags = _swig_property(_safplusCApi.ClAmsEntityConfigT_debugFlags_get, _safplusCApi.ClAmsEntityConfigT_debugFlags_set)
    __swig_setmethods__["flags"] = _safplusCApi.ClAmsEntityConfigT_flags_set
    __swig_getmethods__["flags"] = _safplusCApi.ClAmsEntityConfigT_flags_get
    if _newclass:flags = _swig_property(_safplusCApi.ClAmsEntityConfigT_flags_get, _safplusCApi.ClAmsEntityConfigT_flags_set)
    __swig_setmethods__["dirtyList"] = _safplusCApi.ClAmsEntityConfigT_dirtyList_set
    __swig_getmethods__["dirtyList"] = _safplusCApi.ClAmsEntityConfigT_dirtyList_get
    if _newclass:dirtyList = _swig_property(_safplusCApi.ClAmsEntityConfigT_dirtyList_get, _safplusCApi.ClAmsEntityConfigT_dirtyList_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityConfigT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityConfigT
    __del__ = lambda self : None;
ClAmsEntityConfigT_swigregister = _safplusCApi.ClAmsEntityConfigT_swigregister
ClAmsEntityConfigT_swigregister(ClAmsEntityConfigT)
CL_AMS_FLAG_CONFIG_DIRTY = _safplusCApi.CL_AMS_FLAG_CONFIG_DIRTY
CL_AMS_FLAG_STATUS_DIRTY = _safplusCApi.CL_AMS_FLAG_STATUS_DIRTY
CL_AMS_FLAG_SEEN = _safplusCApi.CL_AMS_FLAG_SEEN
CL_AMS_FLAG_FREE = _safplusCApi.CL_AMS_FLAG_FREE
CL_AMS_FLAG_DIRTY = _safplusCApi.CL_AMS_FLAG_DIRTY

class ClAmsEntityStatusT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityStatusT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityStatusT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["epoch"] = _safplusCApi.ClAmsEntityStatusT_epoch_set
    __swig_getmethods__["epoch"] = _safplusCApi.ClAmsEntityStatusT_epoch_get
    if _newclass:epoch = _swig_property(_safplusCApi.ClAmsEntityStatusT_epoch_get, _safplusCApi.ClAmsEntityStatusT_epoch_set)
    __swig_setmethods__["timerCount"] = _safplusCApi.ClAmsEntityStatusT_timerCount_set
    __swig_getmethods__["timerCount"] = _safplusCApi.ClAmsEntityStatusT_timerCount_get
    if _newclass:timerCount = _swig_property(_safplusCApi.ClAmsEntityStatusT_timerCount_get, _safplusCApi.ClAmsEntityStatusT_timerCount_set)
    __swig_setmethods__["opStack"] = _safplusCApi.ClAmsEntityStatusT_opStack_set
    __swig_getmethods__["opStack"] = _safplusCApi.ClAmsEntityStatusT_opStack_get
    if _newclass:opStack = _swig_property(_safplusCApi.ClAmsEntityStatusT_opStack_get, _safplusCApi.ClAmsEntityStatusT_opStack_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityStatusT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityStatusT
    __del__ = lambda self : None;
ClAmsEntityStatusT_swigregister = _safplusCApi.ClAmsEntityStatusT_swigregister
ClAmsEntityStatusT_swigregister(ClAmsEntityStatusT)

class ClAmsEntityMethodsT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityMethodsT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityMethodsT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["printOut"] = _safplusCApi.ClAmsEntityMethodsT_printOut_set
    __swig_getmethods__["printOut"] = _safplusCApi.ClAmsEntityMethodsT_printOut_get
    if _newclass:printOut = _swig_property(_safplusCApi.ClAmsEntityMethodsT_printOut_get, _safplusCApi.ClAmsEntityMethodsT_printOut_set)
    __swig_setmethods__["validateConfig"] = _safplusCApi.ClAmsEntityMethodsT_validateConfig_set
    __swig_getmethods__["validateConfig"] = _safplusCApi.ClAmsEntityMethodsT_validateConfig_get
    if _newclass:validateConfig = _swig_property(_safplusCApi.ClAmsEntityMethodsT_validateConfig_get, _safplusCApi.ClAmsEntityMethodsT_validateConfig_set)
    __swig_setmethods__["validateRelationships"] = _safplusCApi.ClAmsEntityMethodsT_validateRelationships_set
    __swig_getmethods__["validateRelationships"] = _safplusCApi.ClAmsEntityMethodsT_validateRelationships_get
    if _newclass:validateRelationships = _swig_property(_safplusCApi.ClAmsEntityMethodsT_validateRelationships_get, _safplusCApi.ClAmsEntityMethodsT_validateRelationships_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityMethodsT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityMethodsT
    __del__ = lambda self : None;
ClAmsEntityMethodsT_swigregister = _safplusCApi.ClAmsEntityMethodsT_swigregister
ClAmsEntityMethodsT_swigregister(ClAmsEntityMethodsT)

class ClAmsEntityOpT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityOpT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityOpT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["op"] = _safplusCApi.ClAmsEntityOpT_op_set
    __swig_getmethods__["op"] = _safplusCApi.ClAmsEntityOpT_op_get
    if _newclass:op = _swig_property(_safplusCApi.ClAmsEntityOpT_op_get, _safplusCApi.ClAmsEntityOpT_op_set)
    __swig_setmethods__["dataSize"] = _safplusCApi.ClAmsEntityOpT_dataSize_set
    __swig_getmethods__["dataSize"] = _safplusCApi.ClAmsEntityOpT_dataSize_get
    if _newclass:dataSize = _swig_property(_safplusCApi.ClAmsEntityOpT_dataSize_get, _safplusCApi.ClAmsEntityOpT_dataSize_set)
    __swig_setmethods__["data"] = _safplusCApi.ClAmsEntityOpT_data_set
    __swig_getmethods__["data"] = _safplusCApi.ClAmsEntityOpT_data_get
    if _newclass:data = _swig_property(_safplusCApi.ClAmsEntityOpT_data_get, _safplusCApi.ClAmsEntityOpT_data_set)
    __swig_setmethods__["list"] = _safplusCApi.ClAmsEntityOpT_list_set
    __swig_getmethods__["list"] = _safplusCApi.ClAmsEntityOpT_list_get
    if _newclass:list = _swig_property(_safplusCApi.ClAmsEntityOpT_list_get, _safplusCApi.ClAmsEntityOpT_list_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityOpT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityOpT
    __del__ = lambda self : None;
ClAmsEntityOpT_swigregister = _safplusCApi.ClAmsEntityOpT_swigregister
ClAmsEntityOpT_swigregister(ClAmsEntityOpT)
CL_AMS_ENTITY_OP_REMOVE_MPLUSN = _safplusCApi.CL_AMS_ENTITY_OP_REMOVE_MPLUSN
CL_AMS_ENTITY_OP_SWAP_REMOVE_MPLUSN = _safplusCApi.CL_AMS_ENTITY_OP_SWAP_REMOVE_MPLUSN
CL_AMS_ENTITY_OP_REDUCE_REMOVE_MPLUSN = _safplusCApi.CL_AMS_ENTITY_OP_REDUCE_REMOVE_MPLUSN
CL_AMS_ENTITY_OP_ACTIVE_REMOVE_MPLUSN = _safplusCApi.CL_AMS_ENTITY_OP_ACTIVE_REMOVE_MPLUSN
CL_AMS_ENTITY_OP_REMOVES_MPLUSN = _safplusCApi.CL_AMS_ENTITY_OP_REMOVES_MPLUSN
CL_AMS_ENTITY_OP_SWAP_ACTIVE_MPLUSN = _safplusCApi.CL_AMS_ENTITY_OP_SWAP_ACTIVE_MPLUSN
CL_AMS_ENTITY_OP_SI_REASSIGN_MPLUSN = _safplusCApi.CL_AMS_ENTITY_OP_SI_REASSIGN_MPLUSN
CL_AMS_ENTITY_OP_ACTIVE_REMOVE_REF_MPLUSN = _safplusCApi.CL_AMS_ENTITY_OP_ACTIVE_REMOVE_REF_MPLUSN

class ClAmsEntityRemoveOpT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityRemoveOpT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityRemoveOpT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsEntityRemoveOpT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsEntityRemoveOpT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsEntityRemoveOpT_entity_get, _safplusCApi.ClAmsEntityRemoveOpT_entity_set)
    __swig_setmethods__["sisRemoved"] = _safplusCApi.ClAmsEntityRemoveOpT_sisRemoved_set
    __swig_getmethods__["sisRemoved"] = _safplusCApi.ClAmsEntityRemoveOpT_sisRemoved_get
    if _newclass:sisRemoved = _swig_property(_safplusCApi.ClAmsEntityRemoveOpT_sisRemoved_get, _safplusCApi.ClAmsEntityRemoveOpT_sisRemoved_set)
    __swig_setmethods__["switchoverMode"] = _safplusCApi.ClAmsEntityRemoveOpT_switchoverMode_set
    __swig_getmethods__["switchoverMode"] = _safplusCApi.ClAmsEntityRemoveOpT_switchoverMode_get
    if _newclass:switchoverMode = _swig_property(_safplusCApi.ClAmsEntityRemoveOpT_switchoverMode_get, _safplusCApi.ClAmsEntityRemoveOpT_switchoverMode_set)
    __swig_setmethods__["error"] = _safplusCApi.ClAmsEntityRemoveOpT_error_set
    __swig_getmethods__["error"] = _safplusCApi.ClAmsEntityRemoveOpT_error_get
    if _newclass:error = _swig_property(_safplusCApi.ClAmsEntityRemoveOpT_error_get, _safplusCApi.ClAmsEntityRemoveOpT_error_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityRemoveOpT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityRemoveOpT
    __del__ = lambda self : None;
ClAmsEntityRemoveOpT_swigregister = _safplusCApi.ClAmsEntityRemoveOpT_swigregister
ClAmsEntityRemoveOpT_swigregister(ClAmsEntityRemoveOpT)

class ClAmsEntitySwapRemoveOpT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntitySwapRemoveOpT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntitySwapRemoveOpT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsEntitySwapRemoveOpT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsEntitySwapRemoveOpT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsEntitySwapRemoveOpT_entity_get, _safplusCApi.ClAmsEntitySwapRemoveOpT_entity_set)
    __swig_setmethods__["sisRemoved"] = _safplusCApi.ClAmsEntitySwapRemoveOpT_sisRemoved_set
    __swig_getmethods__["sisRemoved"] = _safplusCApi.ClAmsEntitySwapRemoveOpT_sisRemoved_get
    if _newclass:sisRemoved = _swig_property(_safplusCApi.ClAmsEntitySwapRemoveOpT_sisRemoved_get, _safplusCApi.ClAmsEntitySwapRemoveOpT_sisRemoved_set)
    __swig_setmethods__["numOtherSIs"] = _safplusCApi.ClAmsEntitySwapRemoveOpT_numOtherSIs_set
    __swig_getmethods__["numOtherSIs"] = _safplusCApi.ClAmsEntitySwapRemoveOpT_numOtherSIs_get
    if _newclass:numOtherSIs = _swig_property(_safplusCApi.ClAmsEntitySwapRemoveOpT_numOtherSIs_get, _safplusCApi.ClAmsEntitySwapRemoveOpT_numOtherSIs_set)
    __swig_setmethods__["otherSIs"] = _safplusCApi.ClAmsEntitySwapRemoveOpT_otherSIs_set
    __swig_getmethods__["otherSIs"] = _safplusCApi.ClAmsEntitySwapRemoveOpT_otherSIs_get
    if _newclass:otherSIs = _swig_property(_safplusCApi.ClAmsEntitySwapRemoveOpT_otherSIs_get, _safplusCApi.ClAmsEntitySwapRemoveOpT_otherSIs_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntitySwapRemoveOpT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntitySwapRemoveOpT
    __del__ = lambda self : None;
ClAmsEntitySwapRemoveOpT_swigregister = _safplusCApi.ClAmsEntitySwapRemoveOpT_swigregister
ClAmsEntitySwapRemoveOpT_swigregister(ClAmsEntitySwapRemoveOpT)

class ClAmsEntityReduceRemoveOpT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityReduceRemoveOpT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityReduceRemoveOpT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sisRemoved"] = _safplusCApi.ClAmsEntityReduceRemoveOpT_sisRemoved_set
    __swig_getmethods__["sisRemoved"] = _safplusCApi.ClAmsEntityReduceRemoveOpT_sisRemoved_get
    if _newclass:sisRemoved = _swig_property(_safplusCApi.ClAmsEntityReduceRemoveOpT_sisRemoved_get, _safplusCApi.ClAmsEntityReduceRemoveOpT_sisRemoved_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityReduceRemoveOpT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityReduceRemoveOpT
    __del__ = lambda self : None;
ClAmsEntityReduceRemoveOpT_swigregister = _safplusCApi.ClAmsEntityReduceRemoveOpT_swigregister
ClAmsEntityReduceRemoveOpT_swigregister(ClAmsEntityReduceRemoveOpT)

class ClAmsEntitySwapActiveOpT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntitySwapActiveOpT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntitySwapActiveOpT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sisReassigned"] = _safplusCApi.ClAmsEntitySwapActiveOpT_sisReassigned_set
    __swig_getmethods__["sisReassigned"] = _safplusCApi.ClAmsEntitySwapActiveOpT_sisReassigned_get
    if _newclass:sisReassigned = _swig_property(_safplusCApi.ClAmsEntitySwapActiveOpT_sisReassigned_get, _safplusCApi.ClAmsEntitySwapActiveOpT_sisReassigned_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntitySwapActiveOpT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntitySwapActiveOpT
    __del__ = lambda self : None;
ClAmsEntitySwapActiveOpT_swigregister = _safplusCApi.ClAmsEntitySwapActiveOpT_swigregister
ClAmsEntitySwapActiveOpT_swigregister(ClAmsEntitySwapActiveOpT)

class ClAmsSIReassignOpT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSIReassignOpT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSIReassignOpT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["su"] = _safplusCApi.ClAmsSIReassignOpT_su_set
    __swig_getmethods__["su"] = _safplusCApi.ClAmsSIReassignOpT_su_get
    if _newclass:su = _swig_property(_safplusCApi.ClAmsSIReassignOpT_su_get, _safplusCApi.ClAmsSIReassignOpT_su_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSIReassignOpT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSIReassignOpT
    __del__ = lambda self : None;
ClAmsSIReassignOpT_swigregister = _safplusCApi.ClAmsSIReassignOpT_swigregister
ClAmsSIReassignOpT_swigregister(ClAmsSIReassignOpT)

CL_AMS_SG_ADJUST_DURATION = _safplusCApi.CL_AMS_SG_ADJUST_DURATION
CL_AMS_SG_ADJUST_PROBATION = _safplusCApi.CL_AMS_SG_ADJUST_PROBATION
CL_AMS_SU_ASSIGNMENT_DELAY = _safplusCApi.CL_AMS_SU_ASSIGNMENT_DELAY
CL_AMS_NODE_TIMER_SUFAILOVER = _safplusCApi.CL_AMS_NODE_TIMER_SUFAILOVER
CL_AMS_SG_TIMER_INSTANTIATE = _safplusCApi.CL_AMS_SG_TIMER_INSTANTIATE
CL_AMS_SG_TIMER_ADJUST = _safplusCApi.CL_AMS_SG_TIMER_ADJUST
CL_AMS_SG_TIMER_ADJUST_PROBATION = _safplusCApi.CL_AMS_SG_TIMER_ADJUST_PROBATION
CL_AMS_SU_TIMER_COMPRESTART = _safplusCApi.CL_AMS_SU_TIMER_COMPRESTART
CL_AMS_SU_TIMER_SURESTART = _safplusCApi.CL_AMS_SU_TIMER_SURESTART
CL_AMS_SU_TIMER_PROBATION = _safplusCApi.CL_AMS_SU_TIMER_PROBATION
CL_AMS_SU_TIMER_ASSIGNMENT = _safplusCApi.CL_AMS_SU_TIMER_ASSIGNMENT
CL_AMS_COMP_TIMER_INSTANTIATE = _safplusCApi.CL_AMS_COMP_TIMER_INSTANTIATE
CL_AMS_COMP_TIMER_TERMINATE = _safplusCApi.CL_AMS_COMP_TIMER_TERMINATE
CL_AMS_COMP_TIMER_CLEANUP = _safplusCApi.CL_AMS_COMP_TIMER_CLEANUP
CL_AMS_COMP_TIMER_AMSTART = _safplusCApi.CL_AMS_COMP_TIMER_AMSTART
CL_AMS_COMP_TIMER_AMSTOP = _safplusCApi.CL_AMS_COMP_TIMER_AMSTOP
CL_AMS_COMP_TIMER_QUIESCINGCOMPLETE = _safplusCApi.CL_AMS_COMP_TIMER_QUIESCINGCOMPLETE
CL_AMS_COMP_TIMER_CSISET = _safplusCApi.CL_AMS_COMP_TIMER_CSISET
CL_AMS_COMP_TIMER_CSIREMOVE = _safplusCApi.CL_AMS_COMP_TIMER_CSIREMOVE
CL_AMS_COMP_TIMER_PROXIEDCOMPINSTANTIATE = _safplusCApi.CL_AMS_COMP_TIMER_PROXIEDCOMPINSTANTIATE
CL_AMS_COMP_TIMER_PROXIEDCOMPCLEANUP = _safplusCApi.CL_AMS_COMP_TIMER_PROXIEDCOMPCLEANUP
CL_AMS_COMP_TIMER_INSTANTIATEDELAY = _safplusCApi.CL_AMS_COMP_TIMER_INSTANTIATEDELAY
CL_AMS_COMP_TIMER_MAX = _safplusCApi.CL_AMS_COMP_TIMER_MAX
class ClAmsEntityTimerT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityTimerT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityTimerT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _safplusCApi.ClAmsEntityTimerT_type_set
    __swig_getmethods__["type"] = _safplusCApi.ClAmsEntityTimerT_type_get
    if _newclass:type = _swig_property(_safplusCApi.ClAmsEntityTimerT_type_get, _safplusCApi.ClAmsEntityTimerT_type_set)
    __swig_setmethods__["count"] = _safplusCApi.ClAmsEntityTimerT_count_set
    __swig_getmethods__["count"] = _safplusCApi.ClAmsEntityTimerT_count_get
    if _newclass:count = _swig_property(_safplusCApi.ClAmsEntityTimerT_count_get, _safplusCApi.ClAmsEntityTimerT_count_set)
    __swig_setmethods__["handle"] = _safplusCApi.ClAmsEntityTimerT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.ClAmsEntityTimerT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.ClAmsEntityTimerT_handle_get, _safplusCApi.ClAmsEntityTimerT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsEntityTimerT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsEntityTimerT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsEntityTimerT_entity_get, _safplusCApi.ClAmsEntityTimerT_entity_set)
    __swig_setmethods__["currentOp"] = _safplusCApi.ClAmsEntityTimerT_currentOp_set
    __swig_getmethods__["currentOp"] = _safplusCApi.ClAmsEntityTimerT_currentOp_get
    if _newclass:currentOp = _swig_property(_safplusCApi.ClAmsEntityTimerT_currentOp_get, _safplusCApi.ClAmsEntityTimerT_currentOp_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityTimerT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityTimerT
    __del__ = lambda self : None;
ClAmsEntityTimerT_swigregister = _safplusCApi.ClAmsEntityTimerT_swigregister
ClAmsEntityTimerT_swigregister(ClAmsEntityTimerT)

class ClAmsEntityRefT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityRefT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityRefT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsEntityRefT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsEntityRefT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsEntityRefT_entity_get, _safplusCApi.ClAmsEntityRefT_entity_set)
    __swig_setmethods__["ptr"] = _safplusCApi.ClAmsEntityRefT_ptr_set
    __swig_getmethods__["ptr"] = _safplusCApi.ClAmsEntityRefT_ptr_get
    if _newclass:ptr = _swig_property(_safplusCApi.ClAmsEntityRefT_ptr_get, _safplusCApi.ClAmsEntityRefT_ptr_set)
    __swig_setmethods__["nodeHandle"] = _safplusCApi.ClAmsEntityRefT_nodeHandle_set
    __swig_getmethods__["nodeHandle"] = _safplusCApi.ClAmsEntityRefT_nodeHandle_get
    if _newclass:nodeHandle = _swig_property(_safplusCApi.ClAmsEntityRefT_nodeHandle_get, _safplusCApi.ClAmsEntityRefT_nodeHandle_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityRefT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityRefT
    __del__ = lambda self : None;
ClAmsEntityRefT_swigregister = _safplusCApi.ClAmsEntityRefT_swigregister
ClAmsEntityRefT_swigregister(ClAmsEntityRefT)

CL_AMS_ENTITY_REF_TYPE_ENTITY = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_ENTITY
CL_AMS_ENTITY_REF_TYPE_NODE = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_NODE
CL_AMS_ENTITY_REF_TYPE_APP = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_APP
CL_AMS_ENTITY_REF_TYPE_SG = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_SG
CL_AMS_ENTITY_REF_TYPE_SU = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_SU
CL_AMS_ENTITY_REF_TYPE_SI = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_SI
CL_AMS_ENTITY_REF_TYPE_COMP = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_COMP
CL_AMS_ENTITY_REF_TYPE_CSI = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_CSI
CL_AMS_ENTITY_REF_TYPE_SUSI = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_SUSI
CL_AMS_ENTITY_REF_TYPE_SISU = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_SISU
CL_AMS_ENTITY_REF_TYPE_COMPCSI = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_COMPCSI
CL_AMS_ENTITY_REF_TYPE_CSICOMP = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_CSICOMP
CL_AMS_ENTITY_REF_TYPE_MAX = _safplusCApi.CL_AMS_ENTITY_REF_TYPE_MAX
class ClAmsEntityListT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityListT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityListT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _safplusCApi.ClAmsEntityListT_type_set
    __swig_getmethods__["type"] = _safplusCApi.ClAmsEntityListT_type_get
    if _newclass:type = _swig_property(_safplusCApi.ClAmsEntityListT_type_get, _safplusCApi.ClAmsEntityListT_type_set)
    __swig_setmethods__["isRankedList"] = _safplusCApi.ClAmsEntityListT_isRankedList_set
    __swig_getmethods__["isRankedList"] = _safplusCApi.ClAmsEntityListT_isRankedList_get
    if _newclass:isRankedList = _swig_property(_safplusCApi.ClAmsEntityListT_isRankedList_get, _safplusCApi.ClAmsEntityListT_isRankedList_set)
    __swig_setmethods__["isValid"] = _safplusCApi.ClAmsEntityListT_isValid_set
    __swig_getmethods__["isValid"] = _safplusCApi.ClAmsEntityListT_isValid_get
    if _newclass:isValid = _swig_property(_safplusCApi.ClAmsEntityListT_isValid_get, _safplusCApi.ClAmsEntityListT_isValid_set)
    __swig_setmethods__["numEntities"] = _safplusCApi.ClAmsEntityListT_numEntities_set
    __swig_getmethods__["numEntities"] = _safplusCApi.ClAmsEntityListT_numEntities_get
    if _newclass:numEntities = _swig_property(_safplusCApi.ClAmsEntityListT_numEntities_get, _safplusCApi.ClAmsEntityListT_numEntities_set)
    __swig_setmethods__["list"] = _safplusCApi.ClAmsEntityListT_list_set
    __swig_getmethods__["list"] = _safplusCApi.ClAmsEntityListT_list_get
    if _newclass:list = _swig_property(_safplusCApi.ClAmsEntityListT_list_get, _safplusCApi.ClAmsEntityListT_list_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityListT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityListT
    __del__ = lambda self : None;
ClAmsEntityListT_swigregister = _safplusCApi.ClAmsEntityListT_swigregister
ClAmsEntityListT_swigregister(ClAmsEntityListT)

CL_AMS_START_LIST = _safplusCApi.CL_AMS_START_LIST
CL_AMS_CONFIG_LIST_START = _safplusCApi.CL_AMS_CONFIG_LIST_START
CL_AMS_NODE_CONFIG_NODE_DEPENDENT_LIST = _safplusCApi.CL_AMS_NODE_CONFIG_NODE_DEPENDENT_LIST
CL_AMS_NODE_CONFIG_NODE_DEPENDENCIES_LIST = _safplusCApi.CL_AMS_NODE_CONFIG_NODE_DEPENDENCIES_LIST
CL_AMS_NODE_CONFIG_SU_LIST = _safplusCApi.CL_AMS_NODE_CONFIG_SU_LIST
CL_AMS_SG_CONFIG_SU_LIST = _safplusCApi.CL_AMS_SG_CONFIG_SU_LIST
CL_AMS_SG_CONFIG_SI_LIST = _safplusCApi.CL_AMS_SG_CONFIG_SI_LIST
CL_AMS_SU_CONFIG_COMP_LIST = _safplusCApi.CL_AMS_SU_CONFIG_COMP_LIST
CL_AMS_SI_CONFIG_SU_RANK_LIST = _safplusCApi.CL_AMS_SI_CONFIG_SU_RANK_LIST
CL_AMS_SI_CONFIG_SI_DEPENDENTS_LIST = _safplusCApi.CL_AMS_SI_CONFIG_SI_DEPENDENTS_LIST
CL_AMS_SI_CONFIG_SI_DEPENDENCIES_LIST = _safplusCApi.CL_AMS_SI_CONFIG_SI_DEPENDENCIES_LIST
CL_AMS_SI_CONFIG_CSI_LIST = _safplusCApi.CL_AMS_SI_CONFIG_CSI_LIST
CL_AMS_CSI_CONFIG_NVP_LIST = _safplusCApi.CL_AMS_CSI_CONFIG_NVP_LIST
CL_AMS_CSI_CONFIG_CSI_DEPENDENTS_LIST = _safplusCApi.CL_AMS_CSI_CONFIG_CSI_DEPENDENTS_LIST
CL_AMS_CSI_CONFIG_CSI_DEPENDENCIES_LIST = _safplusCApi.CL_AMS_CSI_CONFIG_CSI_DEPENDENCIES_LIST
CL_AMS_CONFIG_LIST_END = _safplusCApi.CL_AMS_CONFIG_LIST_END
CL_AMS_SG_STATUS_INSTANTIABLE_SU_LIST = _safplusCApi.CL_AMS_SG_STATUS_INSTANTIABLE_SU_LIST
CL_AMS_SG_STATUS_INSTANTIATED_SU_LIST = _safplusCApi.CL_AMS_SG_STATUS_INSTANTIATED_SU_LIST
CL_AMS_SG_STATUS_IN_SERVICE_SPARE_SU_LIST = _safplusCApi.CL_AMS_SG_STATUS_IN_SERVICE_SPARE_SU_LIST
CL_AMS_SG_STATUS_ASSIGNED_SU_LIST = _safplusCApi.CL_AMS_SG_STATUS_ASSIGNED_SU_LIST
CL_AMS_SG_STATUS_FAULTY_SU_LIST = _safplusCApi.CL_AMS_SG_STATUS_FAULTY_SU_LIST
CL_AMS_SU_STATUS_SI_LIST = _safplusCApi.CL_AMS_SU_STATUS_SI_LIST
CL_AMS_SI_STATUS_SU_LIST = _safplusCApi.CL_AMS_SI_STATUS_SU_LIST
CL_AMS_COMP_STATUS_CSI_LIST = _safplusCApi.CL_AMS_COMP_STATUS_CSI_LIST
CL_AMS_CSI_STATUS_PG_LIST = _safplusCApi.CL_AMS_CSI_STATUS_PG_LIST
CL_AMS_ENTITY_LIST_ALL_START = _safplusCApi.CL_AMS_ENTITY_LIST_ALL_START
CL_AMS_SG_LIST = _safplusCApi.CL_AMS_SG_LIST
CL_AMS_SI_LIST = _safplusCApi.CL_AMS_SI_LIST
CL_AMS_NODE_LIST = _safplusCApi.CL_AMS_NODE_LIST
CL_AMS_SU_LIST = _safplusCApi.CL_AMS_SU_LIST
CL_AMS_COMP_LIST = _safplusCApi.CL_AMS_COMP_LIST
CL_AMS_CSI_LIST = _safplusCApi.CL_AMS_CSI_LIST
CL_AMS_ENTITY_LIST_ALL_END = _safplusCApi.CL_AMS_ENTITY_LIST_ALL_END
CL_AMS_CSI_PGTRACK_CLIENT_LIST = _safplusCApi.CL_AMS_CSI_PGTRACK_CLIENT_LIST
CL_AMS_SU_STATUS_SI_EXTENDED_LIST = _safplusCApi.CL_AMS_SU_STATUS_SI_EXTENDED_LIST
CL_AMS_SI_STATUS_SU_EXTENDED_LIST = _safplusCApi.CL_AMS_SI_STATUS_SU_EXTENDED_LIST
CL_AMS_END_LIST = _safplusCApi.CL_AMS_END_LIST
class ClAmsEntityParamsT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityParamsT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityParamsT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["typeString"] = _safplusCApi.ClAmsEntityParamsT_typeString_set
    __swig_getmethods__["typeString"] = _safplusCApi.ClAmsEntityParamsT_typeString_get
    if _newclass:typeString = _swig_property(_safplusCApi.ClAmsEntityParamsT_typeString_get, _safplusCApi.ClAmsEntityParamsT_typeString_set)
    __swig_setmethods__["defaultConfig"] = _safplusCApi.ClAmsEntityParamsT_defaultConfig_set
    __swig_getmethods__["defaultConfig"] = _safplusCApi.ClAmsEntityParamsT_defaultConfig_get
    if _newclass:defaultConfig = _swig_property(_safplusCApi.ClAmsEntityParamsT_defaultConfig_get, _safplusCApi.ClAmsEntityParamsT_defaultConfig_set)
    __swig_setmethods__["configSize"] = _safplusCApi.ClAmsEntityParamsT_configSize_set
    __swig_getmethods__["configSize"] = _safplusCApi.ClAmsEntityParamsT_configSize_get
    if _newclass:configSize = _swig_property(_safplusCApi.ClAmsEntityParamsT_configSize_get, _safplusCApi.ClAmsEntityParamsT_configSize_set)
    __swig_setmethods__["defaultMethods"] = _safplusCApi.ClAmsEntityParamsT_defaultMethods_set
    __swig_getmethods__["defaultMethods"] = _safplusCApi.ClAmsEntityParamsT_defaultMethods_get
    if _newclass:defaultMethods = _swig_property(_safplusCApi.ClAmsEntityParamsT_defaultMethods_get, _safplusCApi.ClAmsEntityParamsT_defaultMethods_set)
    __swig_setmethods__["methodSize"] = _safplusCApi.ClAmsEntityParamsT_methodSize_set
    __swig_getmethods__["methodSize"] = _safplusCApi.ClAmsEntityParamsT_methodSize_get
    if _newclass:methodSize = _swig_property(_safplusCApi.ClAmsEntityParamsT_methodSize_get, _safplusCApi.ClAmsEntityParamsT_methodSize_set)
    __swig_setmethods__["entitySize"] = _safplusCApi.ClAmsEntityParamsT_entitySize_set
    __swig_getmethods__["entitySize"] = _safplusCApi.ClAmsEntityParamsT_entitySize_get
    if _newclass:entitySize = _swig_property(_safplusCApi.ClAmsEntityParamsT_entitySize_get, _safplusCApi.ClAmsEntityParamsT_entitySize_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityParamsT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityParamsT
    __del__ = lambda self : None;
ClAmsEntityParamsT_swigregister = _safplusCApi.ClAmsEntityParamsT_swigregister
ClAmsEntityParamsT_swigregister(ClAmsEntityParamsT)

class ClAmsNodeConfigT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsNodeConfigT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsNodeConfigT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsNodeConfigT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsNodeConfigT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsNodeConfigT_entity_get, _safplusCApi.ClAmsNodeConfigT_entity_set)
    __swig_setmethods__["adminState"] = _safplusCApi.ClAmsNodeConfigT_adminState_set
    __swig_getmethods__["adminState"] = _safplusCApi.ClAmsNodeConfigT_adminState_get
    if _newclass:adminState = _swig_property(_safplusCApi.ClAmsNodeConfigT_adminState_get, _safplusCApi.ClAmsNodeConfigT_adminState_set)
    __swig_setmethods__["id"] = _safplusCApi.ClAmsNodeConfigT_id_set
    __swig_getmethods__["id"] = _safplusCApi.ClAmsNodeConfigT_id_get
    if _newclass:id = _swig_property(_safplusCApi.ClAmsNodeConfigT_id_get, _safplusCApi.ClAmsNodeConfigT_id_set)
    __swig_setmethods__["classType"] = _safplusCApi.ClAmsNodeConfigT_classType_set
    __swig_getmethods__["classType"] = _safplusCApi.ClAmsNodeConfigT_classType_get
    if _newclass:classType = _swig_property(_safplusCApi.ClAmsNodeConfigT_classType_get, _safplusCApi.ClAmsNodeConfigT_classType_set)
    __swig_setmethods__["subClassType"] = _safplusCApi.ClAmsNodeConfigT_subClassType_set
    __swig_getmethods__["subClassType"] = _safplusCApi.ClAmsNodeConfigT_subClassType_get
    if _newclass:subClassType = _swig_property(_safplusCApi.ClAmsNodeConfigT_subClassType_get, _safplusCApi.ClAmsNodeConfigT_subClassType_set)
    __swig_setmethods__["isSwappable"] = _safplusCApi.ClAmsNodeConfigT_isSwappable_set
    __swig_getmethods__["isSwappable"] = _safplusCApi.ClAmsNodeConfigT_isSwappable_get
    if _newclass:isSwappable = _swig_property(_safplusCApi.ClAmsNodeConfigT_isSwappable_get, _safplusCApi.ClAmsNodeConfigT_isSwappable_set)
    __swig_setmethods__["isRestartable"] = _safplusCApi.ClAmsNodeConfigT_isRestartable_set
    __swig_getmethods__["isRestartable"] = _safplusCApi.ClAmsNodeConfigT_isRestartable_get
    if _newclass:isRestartable = _swig_property(_safplusCApi.ClAmsNodeConfigT_isRestartable_get, _safplusCApi.ClAmsNodeConfigT_isRestartable_set)
    __swig_setmethods__["autoRepair"] = _safplusCApi.ClAmsNodeConfigT_autoRepair_set
    __swig_getmethods__["autoRepair"] = _safplusCApi.ClAmsNodeConfigT_autoRepair_get
    if _newclass:autoRepair = _swig_property(_safplusCApi.ClAmsNodeConfigT_autoRepair_get, _safplusCApi.ClAmsNodeConfigT_autoRepair_set)
    __swig_setmethods__["isASPAware"] = _safplusCApi.ClAmsNodeConfigT_isASPAware_set
    __swig_getmethods__["isASPAware"] = _safplusCApi.ClAmsNodeConfigT_isASPAware_get
    if _newclass:isASPAware = _swig_property(_safplusCApi.ClAmsNodeConfigT_isASPAware_get, _safplusCApi.ClAmsNodeConfigT_isASPAware_set)
    __swig_setmethods__["suFailoverDuration"] = _safplusCApi.ClAmsNodeConfigT_suFailoverDuration_set
    __swig_getmethods__["suFailoverDuration"] = _safplusCApi.ClAmsNodeConfigT_suFailoverDuration_get
    if _newclass:suFailoverDuration = _swig_property(_safplusCApi.ClAmsNodeConfigT_suFailoverDuration_get, _safplusCApi.ClAmsNodeConfigT_suFailoverDuration_set)
    __swig_setmethods__["suFailoverCountMax"] = _safplusCApi.ClAmsNodeConfigT_suFailoverCountMax_set
    __swig_getmethods__["suFailoverCountMax"] = _safplusCApi.ClAmsNodeConfigT_suFailoverCountMax_get
    if _newclass:suFailoverCountMax = _swig_property(_safplusCApi.ClAmsNodeConfigT_suFailoverCountMax_get, _safplusCApi.ClAmsNodeConfigT_suFailoverCountMax_set)
    __swig_setmethods__["nodeDependentsList"] = _safplusCApi.ClAmsNodeConfigT_nodeDependentsList_set
    __swig_getmethods__["nodeDependentsList"] = _safplusCApi.ClAmsNodeConfigT_nodeDependentsList_get
    if _newclass:nodeDependentsList = _swig_property(_safplusCApi.ClAmsNodeConfigT_nodeDependentsList_get, _safplusCApi.ClAmsNodeConfigT_nodeDependentsList_set)
    __swig_setmethods__["nodeDependenciesList"] = _safplusCApi.ClAmsNodeConfigT_nodeDependenciesList_set
    __swig_getmethods__["nodeDependenciesList"] = _safplusCApi.ClAmsNodeConfigT_nodeDependenciesList_get
    if _newclass:nodeDependenciesList = _swig_property(_safplusCApi.ClAmsNodeConfigT_nodeDependenciesList_get, _safplusCApi.ClAmsNodeConfigT_nodeDependenciesList_set)
    __swig_setmethods__["suList"] = _safplusCApi.ClAmsNodeConfigT_suList_set
    __swig_getmethods__["suList"] = _safplusCApi.ClAmsNodeConfigT_suList_get
    if _newclass:suList = _swig_property(_safplusCApi.ClAmsNodeConfigT_suList_get, _safplusCApi.ClAmsNodeConfigT_suList_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsNodeConfigT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsNodeConfigT
    __del__ = lambda self : None;
ClAmsNodeConfigT_swigregister = _safplusCApi.ClAmsNodeConfigT_swigregister
ClAmsNodeConfigT_swigregister(ClAmsNodeConfigT)

class ClAmsNodeStatusT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsNodeStatusT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsNodeStatusT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsNodeStatusT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsNodeStatusT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsNodeStatusT_entity_get, _safplusCApi.ClAmsNodeStatusT_entity_set)
    __swig_setmethods__["presenceState"] = _safplusCApi.ClAmsNodeStatusT_presenceState_set
    __swig_getmethods__["presenceState"] = _safplusCApi.ClAmsNodeStatusT_presenceState_get
    if _newclass:presenceState = _swig_property(_safplusCApi.ClAmsNodeStatusT_presenceState_get, _safplusCApi.ClAmsNodeStatusT_presenceState_set)
    __swig_setmethods__["operState"] = _safplusCApi.ClAmsNodeStatusT_operState_set
    __swig_getmethods__["operState"] = _safplusCApi.ClAmsNodeStatusT_operState_get
    if _newclass:operState = _swig_property(_safplusCApi.ClAmsNodeStatusT_operState_get, _safplusCApi.ClAmsNodeStatusT_operState_set)
    __swig_setmethods__["isClusterMember"] = _safplusCApi.ClAmsNodeStatusT_isClusterMember_set
    __swig_getmethods__["isClusterMember"] = _safplusCApi.ClAmsNodeStatusT_isClusterMember_get
    if _newclass:isClusterMember = _swig_property(_safplusCApi.ClAmsNodeStatusT_isClusterMember_get, _safplusCApi.ClAmsNodeStatusT_isClusterMember_set)
    __swig_setmethods__["wasMemberBefore"] = _safplusCApi.ClAmsNodeStatusT_wasMemberBefore_set
    __swig_getmethods__["wasMemberBefore"] = _safplusCApi.ClAmsNodeStatusT_wasMemberBefore_get
    if _newclass:wasMemberBefore = _swig_property(_safplusCApi.ClAmsNodeStatusT_wasMemberBefore_get, _safplusCApi.ClAmsNodeStatusT_wasMemberBefore_set)
    __swig_setmethods__["recovery"] = _safplusCApi.ClAmsNodeStatusT_recovery_set
    __swig_getmethods__["recovery"] = _safplusCApi.ClAmsNodeStatusT_recovery_get
    if _newclass:recovery = _swig_property(_safplusCApi.ClAmsNodeStatusT_recovery_get, _safplusCApi.ClAmsNodeStatusT_recovery_set)
    __swig_setmethods__["alarmHandle"] = _safplusCApi.ClAmsNodeStatusT_alarmHandle_set
    __swig_getmethods__["alarmHandle"] = _safplusCApi.ClAmsNodeStatusT_alarmHandle_get
    if _newclass:alarmHandle = _swig_property(_safplusCApi.ClAmsNodeStatusT_alarmHandle_get, _safplusCApi.ClAmsNodeStatusT_alarmHandle_set)
    __swig_setmethods__["suFailoverCount"] = _safplusCApi.ClAmsNodeStatusT_suFailoverCount_set
    __swig_getmethods__["suFailoverCount"] = _safplusCApi.ClAmsNodeStatusT_suFailoverCount_get
    if _newclass:suFailoverCount = _swig_property(_safplusCApi.ClAmsNodeStatusT_suFailoverCount_get, _safplusCApi.ClAmsNodeStatusT_suFailoverCount_set)
    __swig_setmethods__["suFailoverTimer"] = _safplusCApi.ClAmsNodeStatusT_suFailoverTimer_set
    __swig_getmethods__["suFailoverTimer"] = _safplusCApi.ClAmsNodeStatusT_suFailoverTimer_get
    if _newclass:suFailoverTimer = _swig_property(_safplusCApi.ClAmsNodeStatusT_suFailoverTimer_get, _safplusCApi.ClAmsNodeStatusT_suFailoverTimer_set)
    __swig_setmethods__["numInstantiatedSUs"] = _safplusCApi.ClAmsNodeStatusT_numInstantiatedSUs_set
    __swig_getmethods__["numInstantiatedSUs"] = _safplusCApi.ClAmsNodeStatusT_numInstantiatedSUs_get
    if _newclass:numInstantiatedSUs = _swig_property(_safplusCApi.ClAmsNodeStatusT_numInstantiatedSUs_get, _safplusCApi.ClAmsNodeStatusT_numInstantiatedSUs_set)
    __swig_setmethods__["numAssignedSUs"] = _safplusCApi.ClAmsNodeStatusT_numAssignedSUs_set
    __swig_getmethods__["numAssignedSUs"] = _safplusCApi.ClAmsNodeStatusT_numAssignedSUs_get
    if _newclass:numAssignedSUs = _swig_property(_safplusCApi.ClAmsNodeStatusT_numAssignedSUs_get, _safplusCApi.ClAmsNodeStatusT_numAssignedSUs_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsNodeStatusT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsNodeStatusT
    __del__ = lambda self : None;
ClAmsNodeStatusT_swigregister = _safplusCApi.ClAmsNodeStatusT_swigregister
ClAmsNodeStatusT_swigregister(ClAmsNodeStatusT)

class ClAmsNodeMethodsT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsNodeMethodsT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsNodeMethodsT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsNodeMethodsT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsNodeMethodsT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsNodeMethodsT_entity_get, _safplusCApi.ClAmsNodeMethodsT_entity_set)
    __swig_setmethods__["suFailoverTimeout"] = _safplusCApi.ClAmsNodeMethodsT_suFailoverTimeout_set
    __swig_getmethods__["suFailoverTimeout"] = _safplusCApi.ClAmsNodeMethodsT_suFailoverTimeout_get
    if _newclass:suFailoverTimeout = _swig_property(_safplusCApi.ClAmsNodeMethodsT_suFailoverTimeout_get, _safplusCApi.ClAmsNodeMethodsT_suFailoverTimeout_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsNodeMethodsT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsNodeMethodsT
    __del__ = lambda self : None;
ClAmsNodeMethodsT_swigregister = _safplusCApi.ClAmsNodeMethodsT_swigregister
ClAmsNodeMethodsT_swigregister(ClAmsNodeMethodsT)

class ClAmsNodeT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsNodeT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsNodeT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["config"] = _safplusCApi.ClAmsNodeT_config_set
    __swig_getmethods__["config"] = _safplusCApi.ClAmsNodeT_config_get
    if _newclass:config = _swig_property(_safplusCApi.ClAmsNodeT_config_get, _safplusCApi.ClAmsNodeT_config_set)
    __swig_setmethods__["status"] = _safplusCApi.ClAmsNodeT_status_set
    __swig_getmethods__["status"] = _safplusCApi.ClAmsNodeT_status_get
    if _newclass:status = _swig_property(_safplusCApi.ClAmsNodeT_status_get, _safplusCApi.ClAmsNodeT_status_set)
    __swig_setmethods__["methods"] = _safplusCApi.ClAmsNodeT_methods_set
    __swig_getmethods__["methods"] = _safplusCApi.ClAmsNodeT_methods_get
    if _newclass:methods = _swig_property(_safplusCApi.ClAmsNodeT_methods_get, _safplusCApi.ClAmsNodeT_methods_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsNodeT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsNodeT
    __del__ = lambda self : None;
ClAmsNodeT_swigregister = _safplusCApi.ClAmsNodeT_swigregister
ClAmsNodeT_swigregister(ClAmsNodeT)

class ClAmsAppConfigT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsAppConfigT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsAppConfigT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsAppConfigT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsAppConfigT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsAppConfigT_entity_get, _safplusCApi.ClAmsAppConfigT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsAppConfigT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsAppConfigT
    __del__ = lambda self : None;
ClAmsAppConfigT_swigregister = _safplusCApi.ClAmsAppConfigT_swigregister
ClAmsAppConfigT_swigregister(ClAmsAppConfigT)

class ClAmsAppStatusT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsAppStatusT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsAppStatusT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsAppStatusT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsAppStatusT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsAppStatusT_entity_get, _safplusCApi.ClAmsAppStatusT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsAppStatusT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsAppStatusT
    __del__ = lambda self : None;
ClAmsAppStatusT_swigregister = _safplusCApi.ClAmsAppStatusT_swigregister
ClAmsAppStatusT_swigregister(ClAmsAppStatusT)

class ClAmsAppMethodsT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsAppMethodsT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsAppMethodsT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsAppMethodsT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsAppMethodsT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsAppMethodsT_entity_get, _safplusCApi.ClAmsAppMethodsT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsAppMethodsT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsAppMethodsT
    __del__ = lambda self : None;
ClAmsAppMethodsT_swigregister = _safplusCApi.ClAmsAppMethodsT_swigregister
ClAmsAppMethodsT_swigregister(ClAmsAppMethodsT)

class ClAmsAppT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsAppT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsAppT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["config"] = _safplusCApi.ClAmsAppT_config_set
    __swig_getmethods__["config"] = _safplusCApi.ClAmsAppT_config_get
    if _newclass:config = _swig_property(_safplusCApi.ClAmsAppT_config_get, _safplusCApi.ClAmsAppT_config_set)
    __swig_setmethods__["status"] = _safplusCApi.ClAmsAppT_status_set
    __swig_getmethods__["status"] = _safplusCApi.ClAmsAppT_status_get
    if _newclass:status = _swig_property(_safplusCApi.ClAmsAppT_status_get, _safplusCApi.ClAmsAppT_status_set)
    __swig_setmethods__["methods"] = _safplusCApi.ClAmsAppT_methods_set
    __swig_getmethods__["methods"] = _safplusCApi.ClAmsAppT_methods_get
    if _newclass:methods = _swig_property(_safplusCApi.ClAmsAppT_methods_get, _safplusCApi.ClAmsAppT_methods_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsAppT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsAppT
    __del__ = lambda self : None;
ClAmsAppT_swigregister = _safplusCApi.ClAmsAppT_swigregister
ClAmsAppT_swigregister(ClAmsAppT)

class ClAmsSGConfigT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSGConfigT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSGConfigT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsSGConfigT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsSGConfigT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsSGConfigT_entity_get, _safplusCApi.ClAmsSGConfigT_entity_set)
    __swig_setmethods__["adminState"] = _safplusCApi.ClAmsSGConfigT_adminState_set
    __swig_getmethods__["adminState"] = _safplusCApi.ClAmsSGConfigT_adminState_get
    if _newclass:adminState = _swig_property(_safplusCApi.ClAmsSGConfigT_adminState_get, _safplusCApi.ClAmsSGConfigT_adminState_set)
    __swig_setmethods__["redundancyModel"] = _safplusCApi.ClAmsSGConfigT_redundancyModel_set
    __swig_getmethods__["redundancyModel"] = _safplusCApi.ClAmsSGConfigT_redundancyModel_get
    if _newclass:redundancyModel = _swig_property(_safplusCApi.ClAmsSGConfigT_redundancyModel_get, _safplusCApi.ClAmsSGConfigT_redundancyModel_set)
    __swig_setmethods__["loadingStrategy"] = _safplusCApi.ClAmsSGConfigT_loadingStrategy_set
    __swig_getmethods__["loadingStrategy"] = _safplusCApi.ClAmsSGConfigT_loadingStrategy_get
    if _newclass:loadingStrategy = _swig_property(_safplusCApi.ClAmsSGConfigT_loadingStrategy_get, _safplusCApi.ClAmsSGConfigT_loadingStrategy_set)
    __swig_setmethods__["failbackOption"] = _safplusCApi.ClAmsSGConfigT_failbackOption_set
    __swig_getmethods__["failbackOption"] = _safplusCApi.ClAmsSGConfigT_failbackOption_get
    if _newclass:failbackOption = _swig_property(_safplusCApi.ClAmsSGConfigT_failbackOption_get, _safplusCApi.ClAmsSGConfigT_failbackOption_set)
    __swig_setmethods__["autoRepair"] = _safplusCApi.ClAmsSGConfigT_autoRepair_set
    __swig_getmethods__["autoRepair"] = _safplusCApi.ClAmsSGConfigT_autoRepair_get
    if _newclass:autoRepair = _swig_property(_safplusCApi.ClAmsSGConfigT_autoRepair_get, _safplusCApi.ClAmsSGConfigT_autoRepair_set)
    __swig_setmethods__["instantiateDuration"] = _safplusCApi.ClAmsSGConfigT_instantiateDuration_set
    __swig_getmethods__["instantiateDuration"] = _safplusCApi.ClAmsSGConfigT_instantiateDuration_get
    if _newclass:instantiateDuration = _swig_property(_safplusCApi.ClAmsSGConfigT_instantiateDuration_get, _safplusCApi.ClAmsSGConfigT_instantiateDuration_set)
    __swig_setmethods__["numPrefActiveSUs"] = _safplusCApi.ClAmsSGConfigT_numPrefActiveSUs_set
    __swig_getmethods__["numPrefActiveSUs"] = _safplusCApi.ClAmsSGConfigT_numPrefActiveSUs_get
    if _newclass:numPrefActiveSUs = _swig_property(_safplusCApi.ClAmsSGConfigT_numPrefActiveSUs_get, _safplusCApi.ClAmsSGConfigT_numPrefActiveSUs_set)
    __swig_setmethods__["numPrefStandbySUs"] = _safplusCApi.ClAmsSGConfigT_numPrefStandbySUs_set
    __swig_getmethods__["numPrefStandbySUs"] = _safplusCApi.ClAmsSGConfigT_numPrefStandbySUs_get
    if _newclass:numPrefStandbySUs = _swig_property(_safplusCApi.ClAmsSGConfigT_numPrefStandbySUs_get, _safplusCApi.ClAmsSGConfigT_numPrefStandbySUs_set)
    __swig_setmethods__["numPrefInserviceSUs"] = _safplusCApi.ClAmsSGConfigT_numPrefInserviceSUs_set
    __swig_getmethods__["numPrefInserviceSUs"] = _safplusCApi.ClAmsSGConfigT_numPrefInserviceSUs_get
    if _newclass:numPrefInserviceSUs = _swig_property(_safplusCApi.ClAmsSGConfigT_numPrefInserviceSUs_get, _safplusCApi.ClAmsSGConfigT_numPrefInserviceSUs_set)
    __swig_setmethods__["numPrefAssignedSUs"] = _safplusCApi.ClAmsSGConfigT_numPrefAssignedSUs_set
    __swig_getmethods__["numPrefAssignedSUs"] = _safplusCApi.ClAmsSGConfigT_numPrefAssignedSUs_get
    if _newclass:numPrefAssignedSUs = _swig_property(_safplusCApi.ClAmsSGConfigT_numPrefAssignedSUs_get, _safplusCApi.ClAmsSGConfigT_numPrefAssignedSUs_set)
    __swig_setmethods__["numPrefActiveSUsPerSI"] = _safplusCApi.ClAmsSGConfigT_numPrefActiveSUsPerSI_set
    __swig_getmethods__["numPrefActiveSUsPerSI"] = _safplusCApi.ClAmsSGConfigT_numPrefActiveSUsPerSI_get
    if _newclass:numPrefActiveSUsPerSI = _swig_property(_safplusCApi.ClAmsSGConfigT_numPrefActiveSUsPerSI_get, _safplusCApi.ClAmsSGConfigT_numPrefActiveSUsPerSI_set)
    __swig_setmethods__["maxActiveSIsPerSU"] = _safplusCApi.ClAmsSGConfigT_maxActiveSIsPerSU_set
    __swig_getmethods__["maxActiveSIsPerSU"] = _safplusCApi.ClAmsSGConfigT_maxActiveSIsPerSU_get
    if _newclass:maxActiveSIsPerSU = _swig_property(_safplusCApi.ClAmsSGConfigT_maxActiveSIsPerSU_get, _safplusCApi.ClAmsSGConfigT_maxActiveSIsPerSU_set)
    __swig_setmethods__["maxStandbySIsPerSU"] = _safplusCApi.ClAmsSGConfigT_maxStandbySIsPerSU_set
    __swig_getmethods__["maxStandbySIsPerSU"] = _safplusCApi.ClAmsSGConfigT_maxStandbySIsPerSU_get
    if _newclass:maxStandbySIsPerSU = _swig_property(_safplusCApi.ClAmsSGConfigT_maxStandbySIsPerSU_get, _safplusCApi.ClAmsSGConfigT_maxStandbySIsPerSU_set)
    __swig_setmethods__["compRestartDuration"] = _safplusCApi.ClAmsSGConfigT_compRestartDuration_set
    __swig_getmethods__["compRestartDuration"] = _safplusCApi.ClAmsSGConfigT_compRestartDuration_get
    if _newclass:compRestartDuration = _swig_property(_safplusCApi.ClAmsSGConfigT_compRestartDuration_get, _safplusCApi.ClAmsSGConfigT_compRestartDuration_set)
    __swig_setmethods__["compRestartCountMax"] = _safplusCApi.ClAmsSGConfigT_compRestartCountMax_set
    __swig_getmethods__["compRestartCountMax"] = _safplusCApi.ClAmsSGConfigT_compRestartCountMax_get
    if _newclass:compRestartCountMax = _swig_property(_safplusCApi.ClAmsSGConfigT_compRestartCountMax_get, _safplusCApi.ClAmsSGConfigT_compRestartCountMax_set)
    __swig_setmethods__["suRestartDuration"] = _safplusCApi.ClAmsSGConfigT_suRestartDuration_set
    __swig_getmethods__["suRestartDuration"] = _safplusCApi.ClAmsSGConfigT_suRestartDuration_get
    if _newclass:suRestartDuration = _swig_property(_safplusCApi.ClAmsSGConfigT_suRestartDuration_get, _safplusCApi.ClAmsSGConfigT_suRestartDuration_set)
    __swig_setmethods__["suRestartCountMax"] = _safplusCApi.ClAmsSGConfigT_suRestartCountMax_set
    __swig_getmethods__["suRestartCountMax"] = _safplusCApi.ClAmsSGConfigT_suRestartCountMax_get
    if _newclass:suRestartCountMax = _swig_property(_safplusCApi.ClAmsSGConfigT_suRestartCountMax_get, _safplusCApi.ClAmsSGConfigT_suRestartCountMax_set)
    __swig_setmethods__["isCollocationAllowed"] = _safplusCApi.ClAmsSGConfigT_isCollocationAllowed_set
    __swig_getmethods__["isCollocationAllowed"] = _safplusCApi.ClAmsSGConfigT_isCollocationAllowed_get
    if _newclass:isCollocationAllowed = _swig_property(_safplusCApi.ClAmsSGConfigT_isCollocationAllowed_get, _safplusCApi.ClAmsSGConfigT_isCollocationAllowed_set)
    __swig_setmethods__["alpha"] = _safplusCApi.ClAmsSGConfigT_alpha_set
    __swig_getmethods__["alpha"] = _safplusCApi.ClAmsSGConfigT_alpha_get
    if _newclass:alpha = _swig_property(_safplusCApi.ClAmsSGConfigT_alpha_get, _safplusCApi.ClAmsSGConfigT_alpha_set)
    __swig_setmethods__["autoAdjust"] = _safplusCApi.ClAmsSGConfigT_autoAdjust_set
    __swig_getmethods__["autoAdjust"] = _safplusCApi.ClAmsSGConfigT_autoAdjust_get
    if _newclass:autoAdjust = _swig_property(_safplusCApi.ClAmsSGConfigT_autoAdjust_get, _safplusCApi.ClAmsSGConfigT_autoAdjust_set)
    __swig_setmethods__["autoAdjustProbation"] = _safplusCApi.ClAmsSGConfigT_autoAdjustProbation_set
    __swig_getmethods__["autoAdjustProbation"] = _safplusCApi.ClAmsSGConfigT_autoAdjustProbation_get
    if _newclass:autoAdjustProbation = _swig_property(_safplusCApi.ClAmsSGConfigT_autoAdjustProbation_get, _safplusCApi.ClAmsSGConfigT_autoAdjustProbation_set)
    __swig_setmethods__["reductionProcedure"] = _safplusCApi.ClAmsSGConfigT_reductionProcedure_set
    __swig_getmethods__["reductionProcedure"] = _safplusCApi.ClAmsSGConfigT_reductionProcedure_get
    if _newclass:reductionProcedure = _swig_property(_safplusCApi.ClAmsSGConfigT_reductionProcedure_get, _safplusCApi.ClAmsSGConfigT_reductionProcedure_set)
    __swig_setmethods__["parentApp"] = _safplusCApi.ClAmsSGConfigT_parentApp_set
    __swig_getmethods__["parentApp"] = _safplusCApi.ClAmsSGConfigT_parentApp_get
    if _newclass:parentApp = _swig_property(_safplusCApi.ClAmsSGConfigT_parentApp_get, _safplusCApi.ClAmsSGConfigT_parentApp_set)
    __swig_setmethods__["maxFailovers"] = _safplusCApi.ClAmsSGConfigT_maxFailovers_set
    __swig_getmethods__["maxFailovers"] = _safplusCApi.ClAmsSGConfigT_maxFailovers_get
    if _newclass:maxFailovers = _swig_property(_safplusCApi.ClAmsSGConfigT_maxFailovers_get, _safplusCApi.ClAmsSGConfigT_maxFailovers_set)
    __swig_setmethods__["failoverDuration"] = _safplusCApi.ClAmsSGConfigT_failoverDuration_set
    __swig_getmethods__["failoverDuration"] = _safplusCApi.ClAmsSGConfigT_failoverDuration_get
    if _newclass:failoverDuration = _swig_property(_safplusCApi.ClAmsSGConfigT_failoverDuration_get, _safplusCApi.ClAmsSGConfigT_failoverDuration_set)
    __swig_setmethods__["beta"] = _safplusCApi.ClAmsSGConfigT_beta_set
    __swig_getmethods__["beta"] = _safplusCApi.ClAmsSGConfigT_beta_get
    if _newclass:beta = _swig_property(_safplusCApi.ClAmsSGConfigT_beta_get, _safplusCApi.ClAmsSGConfigT_beta_set)
    __swig_setmethods__["suList"] = _safplusCApi.ClAmsSGConfigT_suList_set
    __swig_getmethods__["suList"] = _safplusCApi.ClAmsSGConfigT_suList_get
    if _newclass:suList = _swig_property(_safplusCApi.ClAmsSGConfigT_suList_get, _safplusCApi.ClAmsSGConfigT_suList_set)
    __swig_setmethods__["siList"] = _safplusCApi.ClAmsSGConfigT_siList_set
    __swig_getmethods__["siList"] = _safplusCApi.ClAmsSGConfigT_siList_get
    if _newclass:siList = _swig_property(_safplusCApi.ClAmsSGConfigT_siList_get, _safplusCApi.ClAmsSGConfigT_siList_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSGConfigT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSGConfigT
    __del__ = lambda self : None;
ClAmsSGConfigT_swigregister = _safplusCApi.ClAmsSGConfigT_swigregister
ClAmsSGConfigT_swigregister(ClAmsSGConfigT)

class ClAmsSGFailoverHistoryKeyT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSGFailoverHistoryKeyT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSGFailoverHistoryKeyT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsSGFailoverHistoryKeyT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsSGFailoverHistoryKeyT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsSGFailoverHistoryKeyT_entity_get, _safplusCApi.ClAmsSGFailoverHistoryKeyT_entity_set)
    __swig_setmethods__["index"] = _safplusCApi.ClAmsSGFailoverHistoryKeyT_index_set
    __swig_getmethods__["index"] = _safplusCApi.ClAmsSGFailoverHistoryKeyT_index_get
    if _newclass:index = _swig_property(_safplusCApi.ClAmsSGFailoverHistoryKeyT_index_get, _safplusCApi.ClAmsSGFailoverHistoryKeyT_index_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSGFailoverHistoryKeyT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSGFailoverHistoryKeyT
    __del__ = lambda self : None;
ClAmsSGFailoverHistoryKeyT_swigregister = _safplusCApi.ClAmsSGFailoverHistoryKeyT_swigregister
ClAmsSGFailoverHistoryKeyT_swigregister(ClAmsSGFailoverHistoryKeyT)

class ClAmsSGFailoverHistoryT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSGFailoverHistoryT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSGFailoverHistoryT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["list"] = _safplusCApi.ClAmsSGFailoverHistoryT_list_set
    __swig_getmethods__["list"] = _safplusCApi.ClAmsSGFailoverHistoryT_list_get
    if _newclass:list = _swig_property(_safplusCApi.ClAmsSGFailoverHistoryT_list_get, _safplusCApi.ClAmsSGFailoverHistoryT_list_set)
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsSGFailoverHistoryT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsSGFailoverHistoryT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsSGFailoverHistoryT_entity_get, _safplusCApi.ClAmsSGFailoverHistoryT_entity_set)
    __swig_setmethods__["index"] = _safplusCApi.ClAmsSGFailoverHistoryT_index_set
    __swig_getmethods__["index"] = _safplusCApi.ClAmsSGFailoverHistoryT_index_get
    if _newclass:index = _swig_property(_safplusCApi.ClAmsSGFailoverHistoryT_index_get, _safplusCApi.ClAmsSGFailoverHistoryT_index_set)
    __swig_setmethods__["timer"] = _safplusCApi.ClAmsSGFailoverHistoryT_timer_set
    __swig_getmethods__["timer"] = _safplusCApi.ClAmsSGFailoverHistoryT_timer_get
    if _newclass:timer = _swig_property(_safplusCApi.ClAmsSGFailoverHistoryT_timer_get, _safplusCApi.ClAmsSGFailoverHistoryT_timer_set)
    __swig_setmethods__["numFailovers"] = _safplusCApi.ClAmsSGFailoverHistoryT_numFailovers_set
    __swig_getmethods__["numFailovers"] = _safplusCApi.ClAmsSGFailoverHistoryT_numFailovers_get
    if _newclass:numFailovers = _swig_property(_safplusCApi.ClAmsSGFailoverHistoryT_numFailovers_get, _safplusCApi.ClAmsSGFailoverHistoryT_numFailovers_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSGFailoverHistoryT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSGFailoverHistoryT
    __del__ = lambda self : None;
ClAmsSGFailoverHistoryT_swigregister = _safplusCApi.ClAmsSGFailoverHistoryT_swigregister
ClAmsSGFailoverHistoryT_swigregister(ClAmsSGFailoverHistoryT)

class ClAmsSGStatusT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSGStatusT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSGStatusT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsSGStatusT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsSGStatusT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsSGStatusT_entity_get, _safplusCApi.ClAmsSGStatusT_entity_set)
    __swig_setmethods__["isStarted"] = _safplusCApi.ClAmsSGStatusT_isStarted_set
    __swig_getmethods__["isStarted"] = _safplusCApi.ClAmsSGStatusT_isStarted_get
    if _newclass:isStarted = _swig_property(_safplusCApi.ClAmsSGStatusT_isStarted_get, _safplusCApi.ClAmsSGStatusT_isStarted_set)
    __swig_setmethods__["instantiateTimer"] = _safplusCApi.ClAmsSGStatusT_instantiateTimer_set
    __swig_getmethods__["instantiateTimer"] = _safplusCApi.ClAmsSGStatusT_instantiateTimer_get
    if _newclass:instantiateTimer = _swig_property(_safplusCApi.ClAmsSGStatusT_instantiateTimer_get, _safplusCApi.ClAmsSGStatusT_instantiateTimer_set)
    __swig_setmethods__["adjustTimer"] = _safplusCApi.ClAmsSGStatusT_adjustTimer_set
    __swig_getmethods__["adjustTimer"] = _safplusCApi.ClAmsSGStatusT_adjustTimer_get
    if _newclass:adjustTimer = _swig_property(_safplusCApi.ClAmsSGStatusT_adjustTimer_get, _safplusCApi.ClAmsSGStatusT_adjustTimer_set)
    __swig_setmethods__["adjustProbationTimer"] = _safplusCApi.ClAmsSGStatusT_adjustProbationTimer_set
    __swig_getmethods__["adjustProbationTimer"] = _safplusCApi.ClAmsSGStatusT_adjustProbationTimer_get
    if _newclass:adjustProbationTimer = _swig_property(_safplusCApi.ClAmsSGStatusT_adjustProbationTimer_get, _safplusCApi.ClAmsSGStatusT_adjustProbationTimer_set)
    __swig_setmethods__["assignmentTimer"] = _safplusCApi.ClAmsSGStatusT_assignmentTimer_set
    __swig_getmethods__["assignmentTimer"] = _safplusCApi.ClAmsSGStatusT_assignmentTimer_get
    if _newclass:assignmentTimer = _swig_property(_safplusCApi.ClAmsSGStatusT_assignmentTimer_get, _safplusCApi.ClAmsSGStatusT_assignmentTimer_set)
    __swig_setmethods__["instantiableSUList"] = _safplusCApi.ClAmsSGStatusT_instantiableSUList_set
    __swig_getmethods__["instantiableSUList"] = _safplusCApi.ClAmsSGStatusT_instantiableSUList_get
    if _newclass:instantiableSUList = _swig_property(_safplusCApi.ClAmsSGStatusT_instantiableSUList_get, _safplusCApi.ClAmsSGStatusT_instantiableSUList_set)
    __swig_setmethods__["instantiatedSUList"] = _safplusCApi.ClAmsSGStatusT_instantiatedSUList_set
    __swig_getmethods__["instantiatedSUList"] = _safplusCApi.ClAmsSGStatusT_instantiatedSUList_get
    if _newclass:instantiatedSUList = _swig_property(_safplusCApi.ClAmsSGStatusT_instantiatedSUList_get, _safplusCApi.ClAmsSGStatusT_instantiatedSUList_set)
    __swig_setmethods__["inserviceSpareSUList"] = _safplusCApi.ClAmsSGStatusT_inserviceSpareSUList_set
    __swig_getmethods__["inserviceSpareSUList"] = _safplusCApi.ClAmsSGStatusT_inserviceSpareSUList_get
    if _newclass:inserviceSpareSUList = _swig_property(_safplusCApi.ClAmsSGStatusT_inserviceSpareSUList_get, _safplusCApi.ClAmsSGStatusT_inserviceSpareSUList_set)
    __swig_setmethods__["assignedSUList"] = _safplusCApi.ClAmsSGStatusT_assignedSUList_set
    __swig_getmethods__["assignedSUList"] = _safplusCApi.ClAmsSGStatusT_assignedSUList_get
    if _newclass:assignedSUList = _swig_property(_safplusCApi.ClAmsSGStatusT_assignedSUList_get, _safplusCApi.ClAmsSGStatusT_assignedSUList_set)
    __swig_setmethods__["faultySUList"] = _safplusCApi.ClAmsSGStatusT_faultySUList_set
    __swig_getmethods__["faultySUList"] = _safplusCApi.ClAmsSGStatusT_faultySUList_get
    if _newclass:faultySUList = _swig_property(_safplusCApi.ClAmsSGStatusT_faultySUList_get, _safplusCApi.ClAmsSGStatusT_faultySUList_set)
    __swig_setmethods__["numCurrActiveSUs"] = _safplusCApi.ClAmsSGStatusT_numCurrActiveSUs_set
    __swig_getmethods__["numCurrActiveSUs"] = _safplusCApi.ClAmsSGStatusT_numCurrActiveSUs_get
    if _newclass:numCurrActiveSUs = _swig_property(_safplusCApi.ClAmsSGStatusT_numCurrActiveSUs_get, _safplusCApi.ClAmsSGStatusT_numCurrActiveSUs_set)
    __swig_setmethods__["numCurrStandbySUs"] = _safplusCApi.ClAmsSGStatusT_numCurrStandbySUs_set
    __swig_getmethods__["numCurrStandbySUs"] = _safplusCApi.ClAmsSGStatusT_numCurrStandbySUs_get
    if _newclass:numCurrStandbySUs = _swig_property(_safplusCApi.ClAmsSGStatusT_numCurrStandbySUs_get, _safplusCApi.ClAmsSGStatusT_numCurrStandbySUs_set)
    __swig_setmethods__["failoverHistoryIndex"] = _safplusCApi.ClAmsSGStatusT_failoverHistoryIndex_set
    __swig_getmethods__["failoverHistoryIndex"] = _safplusCApi.ClAmsSGStatusT_failoverHistoryIndex_get
    if _newclass:failoverHistoryIndex = _swig_property(_safplusCApi.ClAmsSGStatusT_failoverHistoryIndex_get, _safplusCApi.ClAmsSGStatusT_failoverHistoryIndex_set)
    __swig_setmethods__["failoverHistoryCount"] = _safplusCApi.ClAmsSGStatusT_failoverHistoryCount_set
    __swig_getmethods__["failoverHistoryCount"] = _safplusCApi.ClAmsSGStatusT_failoverHistoryCount_get
    if _newclass:failoverHistoryCount = _swig_property(_safplusCApi.ClAmsSGStatusT_failoverHistoryCount_get, _safplusCApi.ClAmsSGStatusT_failoverHistoryCount_set)
    __swig_setmethods__["failoverHistory"] = _safplusCApi.ClAmsSGStatusT_failoverHistory_set
    __swig_getmethods__["failoverHistory"] = _safplusCApi.ClAmsSGStatusT_failoverHistory_get
    if _newclass:failoverHistory = _swig_property(_safplusCApi.ClAmsSGStatusT_failoverHistory_get, _safplusCApi.ClAmsSGStatusT_failoverHistory_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSGStatusT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSGStatusT
    __del__ = lambda self : None;
ClAmsSGStatusT_swigregister = _safplusCApi.ClAmsSGStatusT_swigregister
ClAmsSGStatusT_swigregister(ClAmsSGStatusT)

class ClAmsSGMethodsT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSGMethodsT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSGMethodsT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsSGMethodsT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsSGMethodsT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsSGMethodsT_entity_get, _safplusCApi.ClAmsSGMethodsT_entity_set)
    __swig_setmethods__["instantiateTimeout"] = _safplusCApi.ClAmsSGMethodsT_instantiateTimeout_set
    __swig_getmethods__["instantiateTimeout"] = _safplusCApi.ClAmsSGMethodsT_instantiateTimeout_get
    if _newclass:instantiateTimeout = _swig_property(_safplusCApi.ClAmsSGMethodsT_instantiateTimeout_get, _safplusCApi.ClAmsSGMethodsT_instantiateTimeout_set)
    __swig_setmethods__["adjustTimeout"] = _safplusCApi.ClAmsSGMethodsT_adjustTimeout_set
    __swig_getmethods__["adjustTimeout"] = _safplusCApi.ClAmsSGMethodsT_adjustTimeout_get
    if _newclass:adjustTimeout = _swig_property(_safplusCApi.ClAmsSGMethodsT_adjustTimeout_get, _safplusCApi.ClAmsSGMethodsT_adjustTimeout_set)
    __swig_setmethods__["adjustProbationTimeout"] = _safplusCApi.ClAmsSGMethodsT_adjustProbationTimeout_set
    __swig_getmethods__["adjustProbationTimeout"] = _safplusCApi.ClAmsSGMethodsT_adjustProbationTimeout_get
    if _newclass:adjustProbationTimeout = _swig_property(_safplusCApi.ClAmsSGMethodsT_adjustProbationTimeout_get, _safplusCApi.ClAmsSGMethodsT_adjustProbationTimeout_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSGMethodsT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSGMethodsT
    __del__ = lambda self : None;
ClAmsSGMethodsT_swigregister = _safplusCApi.ClAmsSGMethodsT_swigregister
ClAmsSGMethodsT_swigregister(ClAmsSGMethodsT)

class ClAmsSGT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSGT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSGT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["config"] = _safplusCApi.ClAmsSGT_config_set
    __swig_getmethods__["config"] = _safplusCApi.ClAmsSGT_config_get
    if _newclass:config = _swig_property(_safplusCApi.ClAmsSGT_config_get, _safplusCApi.ClAmsSGT_config_set)
    __swig_setmethods__["status"] = _safplusCApi.ClAmsSGT_status_set
    __swig_getmethods__["status"] = _safplusCApi.ClAmsSGT_status_get
    if _newclass:status = _swig_property(_safplusCApi.ClAmsSGT_status_get, _safplusCApi.ClAmsSGT_status_set)
    __swig_setmethods__["methods"] = _safplusCApi.ClAmsSGT_methods_set
    __swig_getmethods__["methods"] = _safplusCApi.ClAmsSGT_methods_get
    if _newclass:methods = _swig_property(_safplusCApi.ClAmsSGT_methods_get, _safplusCApi.ClAmsSGT_methods_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSGT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSGT
    __del__ = lambda self : None;
ClAmsSGT_swigregister = _safplusCApi.ClAmsSGT_swigregister
ClAmsSGT_swigregister(ClAmsSGT)

class ClAmsSUSIRefT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSUSIRefT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSUSIRefT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsSUSIRefT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsSUSIRefT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsSUSIRefT_entityRef_get, _safplusCApi.ClAmsSUSIRefT_entityRef_set)
    __swig_setmethods__["haState"] = _safplusCApi.ClAmsSUSIRefT_haState_set
    __swig_getmethods__["haState"] = _safplusCApi.ClAmsSUSIRefT_haState_get
    if _newclass:haState = _swig_property(_safplusCApi.ClAmsSUSIRefT_haState_get, _safplusCApi.ClAmsSUSIRefT_haState_set)
    __swig_setmethods__["numActiveCSIs"] = _safplusCApi.ClAmsSUSIRefT_numActiveCSIs_set
    __swig_getmethods__["numActiveCSIs"] = _safplusCApi.ClAmsSUSIRefT_numActiveCSIs_get
    if _newclass:numActiveCSIs = _swig_property(_safplusCApi.ClAmsSUSIRefT_numActiveCSIs_get, _safplusCApi.ClAmsSUSIRefT_numActiveCSIs_set)
    __swig_setmethods__["numStandbyCSIs"] = _safplusCApi.ClAmsSUSIRefT_numStandbyCSIs_set
    __swig_getmethods__["numStandbyCSIs"] = _safplusCApi.ClAmsSUSIRefT_numStandbyCSIs_get
    if _newclass:numStandbyCSIs = _swig_property(_safplusCApi.ClAmsSUSIRefT_numStandbyCSIs_get, _safplusCApi.ClAmsSUSIRefT_numStandbyCSIs_set)
    __swig_setmethods__["numQuiescedCSIs"] = _safplusCApi.ClAmsSUSIRefT_numQuiescedCSIs_set
    __swig_getmethods__["numQuiescedCSIs"] = _safplusCApi.ClAmsSUSIRefT_numQuiescedCSIs_get
    if _newclass:numQuiescedCSIs = _swig_property(_safplusCApi.ClAmsSUSIRefT_numQuiescedCSIs_get, _safplusCApi.ClAmsSUSIRefT_numQuiescedCSIs_set)
    __swig_setmethods__["numQuiescingCSIs"] = _safplusCApi.ClAmsSUSIRefT_numQuiescingCSIs_set
    __swig_getmethods__["numQuiescingCSIs"] = _safplusCApi.ClAmsSUSIRefT_numQuiescingCSIs_get
    if _newclass:numQuiescingCSIs = _swig_property(_safplusCApi.ClAmsSUSIRefT_numQuiescingCSIs_get, _safplusCApi.ClAmsSUSIRefT_numQuiescingCSIs_set)
    __swig_setmethods__["rank"] = _safplusCApi.ClAmsSUSIRefT_rank_set
    __swig_getmethods__["rank"] = _safplusCApi.ClAmsSUSIRefT_rank_get
    if _newclass:rank = _swig_property(_safplusCApi.ClAmsSUSIRefT_rank_get, _safplusCApi.ClAmsSUSIRefT_rank_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSUSIRefT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSUSIRefT
    __del__ = lambda self : None;
ClAmsSUSIRefT_swigregister = _safplusCApi.ClAmsSUSIRefT_swigregister
ClAmsSUSIRefT_swigregister(ClAmsSUSIRefT)

class ClAmsSUSIExtendedRefT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSUSIExtendedRefT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSUSIExtendedRefT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsSUSIExtendedRefT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsSUSIExtendedRefT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsSUSIExtendedRefT_entityRef_get, _safplusCApi.ClAmsSUSIExtendedRefT_entityRef_set)
    __swig_setmethods__["haState"] = _safplusCApi.ClAmsSUSIExtendedRefT_haState_set
    __swig_getmethods__["haState"] = _safplusCApi.ClAmsSUSIExtendedRefT_haState_get
    if _newclass:haState = _swig_property(_safplusCApi.ClAmsSUSIExtendedRefT_haState_get, _safplusCApi.ClAmsSUSIExtendedRefT_haState_set)
    __swig_setmethods__["numActiveCSIs"] = _safplusCApi.ClAmsSUSIExtendedRefT_numActiveCSIs_set
    __swig_getmethods__["numActiveCSIs"] = _safplusCApi.ClAmsSUSIExtendedRefT_numActiveCSIs_get
    if _newclass:numActiveCSIs = _swig_property(_safplusCApi.ClAmsSUSIExtendedRefT_numActiveCSIs_get, _safplusCApi.ClAmsSUSIExtendedRefT_numActiveCSIs_set)
    __swig_setmethods__["numStandbyCSIs"] = _safplusCApi.ClAmsSUSIExtendedRefT_numStandbyCSIs_set
    __swig_getmethods__["numStandbyCSIs"] = _safplusCApi.ClAmsSUSIExtendedRefT_numStandbyCSIs_get
    if _newclass:numStandbyCSIs = _swig_property(_safplusCApi.ClAmsSUSIExtendedRefT_numStandbyCSIs_get, _safplusCApi.ClAmsSUSIExtendedRefT_numStandbyCSIs_set)
    __swig_setmethods__["numQuiescedCSIs"] = _safplusCApi.ClAmsSUSIExtendedRefT_numQuiescedCSIs_set
    __swig_getmethods__["numQuiescedCSIs"] = _safplusCApi.ClAmsSUSIExtendedRefT_numQuiescedCSIs_get
    if _newclass:numQuiescedCSIs = _swig_property(_safplusCApi.ClAmsSUSIExtendedRefT_numQuiescedCSIs_get, _safplusCApi.ClAmsSUSIExtendedRefT_numQuiescedCSIs_set)
    __swig_setmethods__["numQuiescingCSIs"] = _safplusCApi.ClAmsSUSIExtendedRefT_numQuiescingCSIs_set
    __swig_getmethods__["numQuiescingCSIs"] = _safplusCApi.ClAmsSUSIExtendedRefT_numQuiescingCSIs_get
    if _newclass:numQuiescingCSIs = _swig_property(_safplusCApi.ClAmsSUSIExtendedRefT_numQuiescingCSIs_get, _safplusCApi.ClAmsSUSIExtendedRefT_numQuiescingCSIs_set)
    __swig_setmethods__["numCSIs"] = _safplusCApi.ClAmsSUSIExtendedRefT_numCSIs_set
    __swig_getmethods__["numCSIs"] = _safplusCApi.ClAmsSUSIExtendedRefT_numCSIs_get
    if _newclass:numCSIs = _swig_property(_safplusCApi.ClAmsSUSIExtendedRefT_numCSIs_get, _safplusCApi.ClAmsSUSIExtendedRefT_numCSIs_set)
    __swig_setmethods__["rank"] = _safplusCApi.ClAmsSUSIExtendedRefT_rank_set
    __swig_getmethods__["rank"] = _safplusCApi.ClAmsSUSIExtendedRefT_rank_get
    if _newclass:rank = _swig_property(_safplusCApi.ClAmsSUSIExtendedRefT_rank_get, _safplusCApi.ClAmsSUSIExtendedRefT_rank_set)
    __swig_setmethods__["pendingInvocations"] = _safplusCApi.ClAmsSUSIExtendedRefT_pendingInvocations_set
    __swig_getmethods__["pendingInvocations"] = _safplusCApi.ClAmsSUSIExtendedRefT_pendingInvocations_get
    if _newclass:pendingInvocations = _swig_property(_safplusCApi.ClAmsSUSIExtendedRefT_pendingInvocations_get, _safplusCApi.ClAmsSUSIExtendedRefT_pendingInvocations_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSUSIExtendedRefT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSUSIExtendedRefT
    __del__ = lambda self : None;
ClAmsSUSIExtendedRefT_swigregister = _safplusCApi.ClAmsSUSIExtendedRefT_swigregister
ClAmsSUSIExtendedRefT_swigregister(ClAmsSUSIExtendedRefT)

class ClAmsSUConfigT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSUConfigT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSUConfigT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsSUConfigT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsSUConfigT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsSUConfigT_entity_get, _safplusCApi.ClAmsSUConfigT_entity_set)
    __swig_setmethods__["adminState"] = _safplusCApi.ClAmsSUConfigT_adminState_set
    __swig_getmethods__["adminState"] = _safplusCApi.ClAmsSUConfigT_adminState_get
    if _newclass:adminState = _swig_property(_safplusCApi.ClAmsSUConfigT_adminState_get, _safplusCApi.ClAmsSUConfigT_adminState_set)
    __swig_setmethods__["rank"] = _safplusCApi.ClAmsSUConfigT_rank_set
    __swig_getmethods__["rank"] = _safplusCApi.ClAmsSUConfigT_rank_get
    if _newclass:rank = _swig_property(_safplusCApi.ClAmsSUConfigT_rank_get, _safplusCApi.ClAmsSUConfigT_rank_set)
    __swig_setmethods__["numComponents"] = _safplusCApi.ClAmsSUConfigT_numComponents_set
    __swig_getmethods__["numComponents"] = _safplusCApi.ClAmsSUConfigT_numComponents_get
    if _newclass:numComponents = _swig_property(_safplusCApi.ClAmsSUConfigT_numComponents_get, _safplusCApi.ClAmsSUConfigT_numComponents_set)
    __swig_setmethods__["isPreinstantiable"] = _safplusCApi.ClAmsSUConfigT_isPreinstantiable_set
    __swig_getmethods__["isPreinstantiable"] = _safplusCApi.ClAmsSUConfigT_isPreinstantiable_get
    if _newclass:isPreinstantiable = _swig_property(_safplusCApi.ClAmsSUConfigT_isPreinstantiable_get, _safplusCApi.ClAmsSUConfigT_isPreinstantiable_set)
    __swig_setmethods__["isRestartable"] = _safplusCApi.ClAmsSUConfigT_isRestartable_set
    __swig_getmethods__["isRestartable"] = _safplusCApi.ClAmsSUConfigT_isRestartable_get
    if _newclass:isRestartable = _swig_property(_safplusCApi.ClAmsSUConfigT_isRestartable_get, _safplusCApi.ClAmsSUConfigT_isRestartable_set)
    __swig_setmethods__["isContainerSU"] = _safplusCApi.ClAmsSUConfigT_isContainerSU_set
    __swig_getmethods__["isContainerSU"] = _safplusCApi.ClAmsSUConfigT_isContainerSU_get
    if _newclass:isContainerSU = _swig_property(_safplusCApi.ClAmsSUConfigT_isContainerSU_get, _safplusCApi.ClAmsSUConfigT_isContainerSU_set)
    __swig_setmethods__["compList"] = _safplusCApi.ClAmsSUConfigT_compList_set
    __swig_getmethods__["compList"] = _safplusCApi.ClAmsSUConfigT_compList_get
    if _newclass:compList = _swig_property(_safplusCApi.ClAmsSUConfigT_compList_get, _safplusCApi.ClAmsSUConfigT_compList_set)
    __swig_setmethods__["parentSG"] = _safplusCApi.ClAmsSUConfigT_parentSG_set
    __swig_getmethods__["parentSG"] = _safplusCApi.ClAmsSUConfigT_parentSG_get
    if _newclass:parentSG = _swig_property(_safplusCApi.ClAmsSUConfigT_parentSG_get, _safplusCApi.ClAmsSUConfigT_parentSG_set)
    __swig_setmethods__["parentNode"] = _safplusCApi.ClAmsSUConfigT_parentNode_set
    __swig_getmethods__["parentNode"] = _safplusCApi.ClAmsSUConfigT_parentNode_get
    if _newclass:parentNode = _swig_property(_safplusCApi.ClAmsSUConfigT_parentNode_get, _safplusCApi.ClAmsSUConfigT_parentNode_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSUConfigT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSUConfigT
    __del__ = lambda self : None;
ClAmsSUConfigT_swigregister = _safplusCApi.ClAmsSUConfigT_swigregister
ClAmsSUConfigT_swigregister(ClAmsSUConfigT)

class ClAmsSUStatusT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSUStatusT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSUStatusT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsSUStatusT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsSUStatusT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsSUStatusT_entity_get, _safplusCApi.ClAmsSUStatusT_entity_set)
    __swig_setmethods__["presenceState"] = _safplusCApi.ClAmsSUStatusT_presenceState_set
    __swig_getmethods__["presenceState"] = _safplusCApi.ClAmsSUStatusT_presenceState_get
    if _newclass:presenceState = _swig_property(_safplusCApi.ClAmsSUStatusT_presenceState_get, _safplusCApi.ClAmsSUStatusT_presenceState_set)
    __swig_setmethods__["operState"] = _safplusCApi.ClAmsSUStatusT_operState_set
    __swig_getmethods__["operState"] = _safplusCApi.ClAmsSUStatusT_operState_get
    if _newclass:operState = _swig_property(_safplusCApi.ClAmsSUStatusT_operState_get, _safplusCApi.ClAmsSUStatusT_operState_set)
    __swig_setmethods__["readinessState"] = _safplusCApi.ClAmsSUStatusT_readinessState_set
    __swig_getmethods__["readinessState"] = _safplusCApi.ClAmsSUStatusT_readinessState_get
    if _newclass:readinessState = _swig_property(_safplusCApi.ClAmsSUStatusT_readinessState_get, _safplusCApi.ClAmsSUStatusT_readinessState_set)
    __swig_setmethods__["recovery"] = _safplusCApi.ClAmsSUStatusT_recovery_set
    __swig_getmethods__["recovery"] = _safplusCApi.ClAmsSUStatusT_recovery_get
    if _newclass:recovery = _swig_property(_safplusCApi.ClAmsSUStatusT_recovery_get, _safplusCApi.ClAmsSUStatusT_recovery_set)
    __swig_setmethods__["numActiveSIs"] = _safplusCApi.ClAmsSUStatusT_numActiveSIs_set
    __swig_getmethods__["numActiveSIs"] = _safplusCApi.ClAmsSUStatusT_numActiveSIs_get
    if _newclass:numActiveSIs = _swig_property(_safplusCApi.ClAmsSUStatusT_numActiveSIs_get, _safplusCApi.ClAmsSUStatusT_numActiveSIs_set)
    __swig_setmethods__["numStandbySIs"] = _safplusCApi.ClAmsSUStatusT_numStandbySIs_set
    __swig_getmethods__["numStandbySIs"] = _safplusCApi.ClAmsSUStatusT_numStandbySIs_get
    if _newclass:numStandbySIs = _swig_property(_safplusCApi.ClAmsSUStatusT_numStandbySIs_get, _safplusCApi.ClAmsSUStatusT_numStandbySIs_set)
    __swig_setmethods__["numQuiescedSIs"] = _safplusCApi.ClAmsSUStatusT_numQuiescedSIs_set
    __swig_getmethods__["numQuiescedSIs"] = _safplusCApi.ClAmsSUStatusT_numQuiescedSIs_get
    if _newclass:numQuiescedSIs = _swig_property(_safplusCApi.ClAmsSUStatusT_numQuiescedSIs_get, _safplusCApi.ClAmsSUStatusT_numQuiescedSIs_set)
    __swig_setmethods__["compRestartCount"] = _safplusCApi.ClAmsSUStatusT_compRestartCount_set
    __swig_getmethods__["compRestartCount"] = _safplusCApi.ClAmsSUStatusT_compRestartCount_get
    if _newclass:compRestartCount = _swig_property(_safplusCApi.ClAmsSUStatusT_compRestartCount_get, _safplusCApi.ClAmsSUStatusT_compRestartCount_set)
    __swig_setmethods__["compRestartTimer"] = _safplusCApi.ClAmsSUStatusT_compRestartTimer_set
    __swig_getmethods__["compRestartTimer"] = _safplusCApi.ClAmsSUStatusT_compRestartTimer_get
    if _newclass:compRestartTimer = _swig_property(_safplusCApi.ClAmsSUStatusT_compRestartTimer_get, _safplusCApi.ClAmsSUStatusT_compRestartTimer_set)
    __swig_setmethods__["suRestartCount"] = _safplusCApi.ClAmsSUStatusT_suRestartCount_set
    __swig_getmethods__["suRestartCount"] = _safplusCApi.ClAmsSUStatusT_suRestartCount_get
    if _newclass:suRestartCount = _swig_property(_safplusCApi.ClAmsSUStatusT_suRestartCount_get, _safplusCApi.ClAmsSUStatusT_suRestartCount_set)
    __swig_setmethods__["suRestartTimer"] = _safplusCApi.ClAmsSUStatusT_suRestartTimer_set
    __swig_getmethods__["suRestartTimer"] = _safplusCApi.ClAmsSUStatusT_suRestartTimer_get
    if _newclass:suRestartTimer = _swig_property(_safplusCApi.ClAmsSUStatusT_suRestartTimer_get, _safplusCApi.ClAmsSUStatusT_suRestartTimer_set)
    __swig_setmethods__["suProbationTimer"] = _safplusCApi.ClAmsSUStatusT_suProbationTimer_set
    __swig_getmethods__["suProbationTimer"] = _safplusCApi.ClAmsSUStatusT_suProbationTimer_get
    if _newclass:suProbationTimer = _swig_property(_safplusCApi.ClAmsSUStatusT_suProbationTimer_get, _safplusCApi.ClAmsSUStatusT_suProbationTimer_set)
    __swig_setmethods__["suAssignmentTimer"] = _safplusCApi.ClAmsSUStatusT_suAssignmentTimer_set
    __swig_getmethods__["suAssignmentTimer"] = _safplusCApi.ClAmsSUStatusT_suAssignmentTimer_get
    if _newclass:suAssignmentTimer = _swig_property(_safplusCApi.ClAmsSUStatusT_suAssignmentTimer_get, _safplusCApi.ClAmsSUStatusT_suAssignmentTimer_set)
    __swig_setmethods__["numInstantiatedComp"] = _safplusCApi.ClAmsSUStatusT_numInstantiatedComp_set
    __swig_getmethods__["numInstantiatedComp"] = _safplusCApi.ClAmsSUStatusT_numInstantiatedComp_get
    if _newclass:numInstantiatedComp = _swig_property(_safplusCApi.ClAmsSUStatusT_numInstantiatedComp_get, _safplusCApi.ClAmsSUStatusT_numInstantiatedComp_set)
    __swig_setmethods__["numPIComp"] = _safplusCApi.ClAmsSUStatusT_numPIComp_set
    __swig_getmethods__["numPIComp"] = _safplusCApi.ClAmsSUStatusT_numPIComp_get
    if _newclass:numPIComp = _swig_property(_safplusCApi.ClAmsSUStatusT_numPIComp_get, _safplusCApi.ClAmsSUStatusT_numPIComp_set)
    __swig_setmethods__["instantiateLevel"] = _safplusCApi.ClAmsSUStatusT_instantiateLevel_set
    __swig_getmethods__["instantiateLevel"] = _safplusCApi.ClAmsSUStatusT_instantiateLevel_get
    if _newclass:instantiateLevel = _swig_property(_safplusCApi.ClAmsSUStatusT_instantiateLevel_get, _safplusCApi.ClAmsSUStatusT_instantiateLevel_set)
    __swig_setmethods__["numWaitAdjustments"] = _safplusCApi.ClAmsSUStatusT_numWaitAdjustments_set
    __swig_getmethods__["numWaitAdjustments"] = _safplusCApi.ClAmsSUStatusT_numWaitAdjustments_get
    if _newclass:numWaitAdjustments = _swig_property(_safplusCApi.ClAmsSUStatusT_numWaitAdjustments_get, _safplusCApi.ClAmsSUStatusT_numWaitAdjustments_set)
    __swig_setmethods__["numDelayAssignments"] = _safplusCApi.ClAmsSUStatusT_numDelayAssignments_set
    __swig_getmethods__["numDelayAssignments"] = _safplusCApi.ClAmsSUStatusT_numDelayAssignments_get
    if _newclass:numDelayAssignments = _swig_property(_safplusCApi.ClAmsSUStatusT_numDelayAssignments_get, _safplusCApi.ClAmsSUStatusT_numDelayAssignments_set)
    __swig_setmethods__["siList"] = _safplusCApi.ClAmsSUStatusT_siList_set
    __swig_getmethods__["siList"] = _safplusCApi.ClAmsSUStatusT_siList_get
    if _newclass:siList = _swig_property(_safplusCApi.ClAmsSUStatusT_siList_get, _safplusCApi.ClAmsSUStatusT_siList_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSUStatusT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSUStatusT
    __del__ = lambda self : None;
ClAmsSUStatusT_swigregister = _safplusCApi.ClAmsSUStatusT_swigregister
ClAmsSUStatusT_swigregister(ClAmsSUStatusT)

class ClAmsSUMethodsT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSUMethodsT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSUMethodsT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsSUMethodsT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsSUMethodsT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsSUMethodsT_entity_get, _safplusCApi.ClAmsSUMethodsT_entity_set)
    __swig_setmethods__["suRestartTimeout"] = _safplusCApi.ClAmsSUMethodsT_suRestartTimeout_set
    __swig_getmethods__["suRestartTimeout"] = _safplusCApi.ClAmsSUMethodsT_suRestartTimeout_get
    if _newclass:suRestartTimeout = _swig_property(_safplusCApi.ClAmsSUMethodsT_suRestartTimeout_get, _safplusCApi.ClAmsSUMethodsT_suRestartTimeout_set)
    __swig_setmethods__["compRestartTimeout"] = _safplusCApi.ClAmsSUMethodsT_compRestartTimeout_set
    __swig_getmethods__["compRestartTimeout"] = _safplusCApi.ClAmsSUMethodsT_compRestartTimeout_get
    if _newclass:compRestartTimeout = _swig_property(_safplusCApi.ClAmsSUMethodsT_compRestartTimeout_get, _safplusCApi.ClAmsSUMethodsT_compRestartTimeout_set)
    __swig_setmethods__["suProbationTimeout"] = _safplusCApi.ClAmsSUMethodsT_suProbationTimeout_set
    __swig_getmethods__["suProbationTimeout"] = _safplusCApi.ClAmsSUMethodsT_suProbationTimeout_get
    if _newclass:suProbationTimeout = _swig_property(_safplusCApi.ClAmsSUMethodsT_suProbationTimeout_get, _safplusCApi.ClAmsSUMethodsT_suProbationTimeout_set)
    __swig_setmethods__["suAssignmentTimeout"] = _safplusCApi.ClAmsSUMethodsT_suAssignmentTimeout_set
    __swig_getmethods__["suAssignmentTimeout"] = _safplusCApi.ClAmsSUMethodsT_suAssignmentTimeout_get
    if _newclass:suAssignmentTimeout = _swig_property(_safplusCApi.ClAmsSUMethodsT_suAssignmentTimeout_get, _safplusCApi.ClAmsSUMethodsT_suAssignmentTimeout_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSUMethodsT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSUMethodsT
    __del__ = lambda self : None;
ClAmsSUMethodsT_swigregister = _safplusCApi.ClAmsSUMethodsT_swigregister
ClAmsSUMethodsT_swigregister(ClAmsSUMethodsT)

class ClAmsSUT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSUT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSUT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["config"] = _safplusCApi.ClAmsSUT_config_set
    __swig_getmethods__["config"] = _safplusCApi.ClAmsSUT_config_get
    if _newclass:config = _swig_property(_safplusCApi.ClAmsSUT_config_get, _safplusCApi.ClAmsSUT_config_set)
    __swig_setmethods__["status"] = _safplusCApi.ClAmsSUT_status_set
    __swig_getmethods__["status"] = _safplusCApi.ClAmsSUT_status_get
    if _newclass:status = _swig_property(_safplusCApi.ClAmsSUT_status_get, _safplusCApi.ClAmsSUT_status_set)
    __swig_setmethods__["methods"] = _safplusCApi.ClAmsSUT_methods_set
    __swig_getmethods__["methods"] = _safplusCApi.ClAmsSUT_methods_get
    if _newclass:methods = _swig_property(_safplusCApi.ClAmsSUT_methods_get, _safplusCApi.ClAmsSUT_methods_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSUT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSUT
    __del__ = lambda self : None;
ClAmsSUT_swigregister = _safplusCApi.ClAmsSUT_swigregister
ClAmsSUT_swigregister(ClAmsSUT)

class ClAmsSISURefT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSISURefT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSISURefT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsSISURefT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsSISURefT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsSISURefT_entityRef_get, _safplusCApi.ClAmsSISURefT_entityRef_set)
    __swig_setmethods__["rank"] = _safplusCApi.ClAmsSISURefT_rank_set
    __swig_getmethods__["rank"] = _safplusCApi.ClAmsSISURefT_rank_get
    if _newclass:rank = _swig_property(_safplusCApi.ClAmsSISURefT_rank_get, _safplusCApi.ClAmsSISURefT_rank_set)
    __swig_setmethods__["haState"] = _safplusCApi.ClAmsSISURefT_haState_set
    __swig_getmethods__["haState"] = _safplusCApi.ClAmsSISURefT_haState_get
    if _newclass:haState = _swig_property(_safplusCApi.ClAmsSISURefT_haState_get, _safplusCApi.ClAmsSISURefT_haState_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSISURefT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSISURefT
    __del__ = lambda self : None;
ClAmsSISURefT_swigregister = _safplusCApi.ClAmsSISURefT_swigregister
ClAmsSISURefT_swigregister(ClAmsSISURefT)

class ClAmsSISUExtendedRefT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSISUExtendedRefT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSISUExtendedRefT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsSISUExtendedRefT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsSISUExtendedRefT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsSISUExtendedRefT_entityRef_get, _safplusCApi.ClAmsSISUExtendedRefT_entityRef_set)
    __swig_setmethods__["rank"] = _safplusCApi.ClAmsSISUExtendedRefT_rank_set
    __swig_getmethods__["rank"] = _safplusCApi.ClAmsSISUExtendedRefT_rank_get
    if _newclass:rank = _swig_property(_safplusCApi.ClAmsSISUExtendedRefT_rank_get, _safplusCApi.ClAmsSISUExtendedRefT_rank_set)
    __swig_setmethods__["haState"] = _safplusCApi.ClAmsSISUExtendedRefT_haState_set
    __swig_getmethods__["haState"] = _safplusCApi.ClAmsSISUExtendedRefT_haState_get
    if _newclass:haState = _swig_property(_safplusCApi.ClAmsSISUExtendedRefT_haState_get, _safplusCApi.ClAmsSISUExtendedRefT_haState_set)
    __swig_setmethods__["pendingInvocations"] = _safplusCApi.ClAmsSISUExtendedRefT_pendingInvocations_set
    __swig_getmethods__["pendingInvocations"] = _safplusCApi.ClAmsSISUExtendedRefT_pendingInvocations_get
    if _newclass:pendingInvocations = _swig_property(_safplusCApi.ClAmsSISUExtendedRefT_pendingInvocations_get, _safplusCApi.ClAmsSISUExtendedRefT_pendingInvocations_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSISUExtendedRefT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSISUExtendedRefT
    __del__ = lambda self : None;
ClAmsSISUExtendedRefT_swigregister = _safplusCApi.ClAmsSISUExtendedRefT_swigregister
ClAmsSISUExtendedRefT_swigregister(ClAmsSISUExtendedRefT)

class ClAmsSIConfigT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSIConfigT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSIConfigT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsSIConfigT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsSIConfigT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsSIConfigT_entity_get, _safplusCApi.ClAmsSIConfigT_entity_set)
    __swig_setmethods__["adminState"] = _safplusCApi.ClAmsSIConfigT_adminState_set
    __swig_getmethods__["adminState"] = _safplusCApi.ClAmsSIConfigT_adminState_get
    if _newclass:adminState = _swig_property(_safplusCApi.ClAmsSIConfigT_adminState_get, _safplusCApi.ClAmsSIConfigT_adminState_set)
    __swig_setmethods__["rank"] = _safplusCApi.ClAmsSIConfigT_rank_set
    __swig_getmethods__["rank"] = _safplusCApi.ClAmsSIConfigT_rank_get
    if _newclass:rank = _swig_property(_safplusCApi.ClAmsSIConfigT_rank_get, _safplusCApi.ClAmsSIConfigT_rank_set)
    __swig_setmethods__["numCSIs"] = _safplusCApi.ClAmsSIConfigT_numCSIs_set
    __swig_getmethods__["numCSIs"] = _safplusCApi.ClAmsSIConfigT_numCSIs_get
    if _newclass:numCSIs = _swig_property(_safplusCApi.ClAmsSIConfigT_numCSIs_get, _safplusCApi.ClAmsSIConfigT_numCSIs_set)
    __swig_setmethods__["numStandbyAssignments"] = _safplusCApi.ClAmsSIConfigT_numStandbyAssignments_set
    __swig_getmethods__["numStandbyAssignments"] = _safplusCApi.ClAmsSIConfigT_numStandbyAssignments_get
    if _newclass:numStandbyAssignments = _swig_property(_safplusCApi.ClAmsSIConfigT_numStandbyAssignments_get, _safplusCApi.ClAmsSIConfigT_numStandbyAssignments_set)
    __swig_setmethods__["standbyAssignmentOrder"] = _safplusCApi.ClAmsSIConfigT_standbyAssignmentOrder_set
    __swig_getmethods__["standbyAssignmentOrder"] = _safplusCApi.ClAmsSIConfigT_standbyAssignmentOrder_get
    if _newclass:standbyAssignmentOrder = _swig_property(_safplusCApi.ClAmsSIConfigT_standbyAssignmentOrder_get, _safplusCApi.ClAmsSIConfigT_standbyAssignmentOrder_set)
    __swig_setmethods__["parentSG"] = _safplusCApi.ClAmsSIConfigT_parentSG_set
    __swig_getmethods__["parentSG"] = _safplusCApi.ClAmsSIConfigT_parentSG_get
    if _newclass:parentSG = _swig_property(_safplusCApi.ClAmsSIConfigT_parentSG_get, _safplusCApi.ClAmsSIConfigT_parentSG_set)
    __swig_setmethods__["suList"] = _safplusCApi.ClAmsSIConfigT_suList_set
    __swig_getmethods__["suList"] = _safplusCApi.ClAmsSIConfigT_suList_get
    if _newclass:suList = _swig_property(_safplusCApi.ClAmsSIConfigT_suList_get, _safplusCApi.ClAmsSIConfigT_suList_set)
    __swig_setmethods__["siDependentsList"] = _safplusCApi.ClAmsSIConfigT_siDependentsList_set
    __swig_getmethods__["siDependentsList"] = _safplusCApi.ClAmsSIConfigT_siDependentsList_get
    if _newclass:siDependentsList = _swig_property(_safplusCApi.ClAmsSIConfigT_siDependentsList_get, _safplusCApi.ClAmsSIConfigT_siDependentsList_set)
    __swig_setmethods__["siDependenciesList"] = _safplusCApi.ClAmsSIConfigT_siDependenciesList_set
    __swig_getmethods__["siDependenciesList"] = _safplusCApi.ClAmsSIConfigT_siDependenciesList_get
    if _newclass:siDependenciesList = _swig_property(_safplusCApi.ClAmsSIConfigT_siDependenciesList_get, _safplusCApi.ClAmsSIConfigT_siDependenciesList_set)
    __swig_setmethods__["csiList"] = _safplusCApi.ClAmsSIConfigT_csiList_set
    __swig_getmethods__["csiList"] = _safplusCApi.ClAmsSIConfigT_csiList_get
    if _newclass:csiList = _swig_property(_safplusCApi.ClAmsSIConfigT_csiList_get, _safplusCApi.ClAmsSIConfigT_csiList_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSIConfigT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSIConfigT
    __del__ = lambda self : None;
ClAmsSIConfigT_swigregister = _safplusCApi.ClAmsSIConfigT_swigregister
ClAmsSIConfigT_swigregister(ClAmsSIConfigT)

class ClAmsSIStatusT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSIStatusT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSIStatusT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsSIStatusT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsSIStatusT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsSIStatusT_entity_get, _safplusCApi.ClAmsSIStatusT_entity_set)
    __swig_setmethods__["operState"] = _safplusCApi.ClAmsSIStatusT_operState_set
    __swig_getmethods__["operState"] = _safplusCApi.ClAmsSIStatusT_operState_get
    if _newclass:operState = _swig_property(_safplusCApi.ClAmsSIStatusT_operState_get, _safplusCApi.ClAmsSIStatusT_operState_set)
    __swig_setmethods__["numActiveAssignments"] = _safplusCApi.ClAmsSIStatusT_numActiveAssignments_set
    __swig_getmethods__["numActiveAssignments"] = _safplusCApi.ClAmsSIStatusT_numActiveAssignments_get
    if _newclass:numActiveAssignments = _swig_property(_safplusCApi.ClAmsSIStatusT_numActiveAssignments_get, _safplusCApi.ClAmsSIStatusT_numActiveAssignments_set)
    __swig_setmethods__["numStandbyAssignments"] = _safplusCApi.ClAmsSIStatusT_numStandbyAssignments_set
    __swig_getmethods__["numStandbyAssignments"] = _safplusCApi.ClAmsSIStatusT_numStandbyAssignments_get
    if _newclass:numStandbyAssignments = _swig_property(_safplusCApi.ClAmsSIStatusT_numStandbyAssignments_get, _safplusCApi.ClAmsSIStatusT_numStandbyAssignments_set)
    __swig_setmethods__["suList"] = _safplusCApi.ClAmsSIStatusT_suList_set
    __swig_getmethods__["suList"] = _safplusCApi.ClAmsSIStatusT_suList_get
    if _newclass:suList = _swig_property(_safplusCApi.ClAmsSIStatusT_suList_get, _safplusCApi.ClAmsSIStatusT_suList_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSIStatusT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSIStatusT
    __del__ = lambda self : None;
ClAmsSIStatusT_swigregister = _safplusCApi.ClAmsSIStatusT_swigregister
ClAmsSIStatusT_swigregister(ClAmsSIStatusT)

class ClAmsSIMethodsT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSIMethodsT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSIMethodsT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsSIMethodsT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsSIMethodsT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsSIMethodsT_entity_get, _safplusCApi.ClAmsSIMethodsT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSIMethodsT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSIMethodsT
    __del__ = lambda self : None;
ClAmsSIMethodsT_swigregister = _safplusCApi.ClAmsSIMethodsT_swigregister
ClAmsSIMethodsT_swigregister(ClAmsSIMethodsT)

class ClAmsSIT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSIT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSIT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["config"] = _safplusCApi.ClAmsSIT_config_set
    __swig_getmethods__["config"] = _safplusCApi.ClAmsSIT_config_get
    if _newclass:config = _swig_property(_safplusCApi.ClAmsSIT_config_get, _safplusCApi.ClAmsSIT_config_set)
    __swig_setmethods__["status"] = _safplusCApi.ClAmsSIT_status_set
    __swig_getmethods__["status"] = _safplusCApi.ClAmsSIT_status_get
    if _newclass:status = _swig_property(_safplusCApi.ClAmsSIT_status_get, _safplusCApi.ClAmsSIT_status_set)
    __swig_setmethods__["methods"] = _safplusCApi.ClAmsSIT_methods_set
    __swig_getmethods__["methods"] = _safplusCApi.ClAmsSIT_methods_get
    if _newclass:methods = _swig_property(_safplusCApi.ClAmsSIT_methods_get, _safplusCApi.ClAmsSIT_methods_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSIT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSIT
    __del__ = lambda self : None;
ClAmsSIT_swigregister = _safplusCApi.ClAmsSIT_swigregister
ClAmsSIT_swigregister(ClAmsSIT)

class ClAmsCompCSIRefT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCompCSIRefT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCompCSIRefT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsCompCSIRefT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsCompCSIRefT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsCompCSIRefT_entityRef_get, _safplusCApi.ClAmsCompCSIRefT_entityRef_set)
    __swig_setmethods__["haState"] = _safplusCApi.ClAmsCompCSIRefT_haState_set
    __swig_getmethods__["haState"] = _safplusCApi.ClAmsCompCSIRefT_haState_get
    if _newclass:haState = _swig_property(_safplusCApi.ClAmsCompCSIRefT_haState_get, _safplusCApi.ClAmsCompCSIRefT_haState_set)
    __swig_setmethods__["tdescriptor"] = _safplusCApi.ClAmsCompCSIRefT_tdescriptor_set
    __swig_getmethods__["tdescriptor"] = _safplusCApi.ClAmsCompCSIRefT_tdescriptor_get
    if _newclass:tdescriptor = _swig_property(_safplusCApi.ClAmsCompCSIRefT_tdescriptor_get, _safplusCApi.ClAmsCompCSIRefT_tdescriptor_set)
    __swig_setmethods__["rank"] = _safplusCApi.ClAmsCompCSIRefT_rank_set
    __swig_getmethods__["rank"] = _safplusCApi.ClAmsCompCSIRefT_rank_get
    if _newclass:rank = _swig_property(_safplusCApi.ClAmsCompCSIRefT_rank_get, _safplusCApi.ClAmsCompCSIRefT_rank_set)
    __swig_setmethods__["activeComp"] = _safplusCApi.ClAmsCompCSIRefT_activeComp_set
    __swig_getmethods__["activeComp"] = _safplusCApi.ClAmsCompCSIRefT_activeComp_get
    if _newclass:activeComp = _swig_property(_safplusCApi.ClAmsCompCSIRefT_activeComp_get, _safplusCApi.ClAmsCompCSIRefT_activeComp_set)
    __swig_setmethods__["pendingOp"] = _safplusCApi.ClAmsCompCSIRefT_pendingOp_set
    __swig_getmethods__["pendingOp"] = _safplusCApi.ClAmsCompCSIRefT_pendingOp_get
    if _newclass:pendingOp = _swig_property(_safplusCApi.ClAmsCompCSIRefT_pendingOp_get, _safplusCApi.ClAmsCompCSIRefT_pendingOp_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCompCSIRefT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCompCSIRefT
    __del__ = lambda self : None;
ClAmsCompCSIRefT_swigregister = _safplusCApi.ClAmsCompCSIRefT_swigregister
ClAmsCompCSIRefT_swigregister(ClAmsCompCSIRefT)

class ClAmsCompTimerDurationsT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCompTimerDurationsT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCompTimerDurationsT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["instantiate"] = _safplusCApi.ClAmsCompTimerDurationsT_instantiate_set
    __swig_getmethods__["instantiate"] = _safplusCApi.ClAmsCompTimerDurationsT_instantiate_get
    if _newclass:instantiate = _swig_property(_safplusCApi.ClAmsCompTimerDurationsT_instantiate_get, _safplusCApi.ClAmsCompTimerDurationsT_instantiate_set)
    __swig_setmethods__["terminate"] = _safplusCApi.ClAmsCompTimerDurationsT_terminate_set
    __swig_getmethods__["terminate"] = _safplusCApi.ClAmsCompTimerDurationsT_terminate_get
    if _newclass:terminate = _swig_property(_safplusCApi.ClAmsCompTimerDurationsT_terminate_get, _safplusCApi.ClAmsCompTimerDurationsT_terminate_set)
    __swig_setmethods__["cleanup"] = _safplusCApi.ClAmsCompTimerDurationsT_cleanup_set
    __swig_getmethods__["cleanup"] = _safplusCApi.ClAmsCompTimerDurationsT_cleanup_get
    if _newclass:cleanup = _swig_property(_safplusCApi.ClAmsCompTimerDurationsT_cleanup_get, _safplusCApi.ClAmsCompTimerDurationsT_cleanup_set)
    __swig_setmethods__["amStart"] = _safplusCApi.ClAmsCompTimerDurationsT_amStart_set
    __swig_getmethods__["amStart"] = _safplusCApi.ClAmsCompTimerDurationsT_amStart_get
    if _newclass:amStart = _swig_property(_safplusCApi.ClAmsCompTimerDurationsT_amStart_get, _safplusCApi.ClAmsCompTimerDurationsT_amStart_set)
    __swig_setmethods__["amStop"] = _safplusCApi.ClAmsCompTimerDurationsT_amStop_set
    __swig_getmethods__["amStop"] = _safplusCApi.ClAmsCompTimerDurationsT_amStop_get
    if _newclass:amStop = _swig_property(_safplusCApi.ClAmsCompTimerDurationsT_amStop_get, _safplusCApi.ClAmsCompTimerDurationsT_amStop_set)
    __swig_setmethods__["quiescingComplete"] = _safplusCApi.ClAmsCompTimerDurationsT_quiescingComplete_set
    __swig_getmethods__["quiescingComplete"] = _safplusCApi.ClAmsCompTimerDurationsT_quiescingComplete_get
    if _newclass:quiescingComplete = _swig_property(_safplusCApi.ClAmsCompTimerDurationsT_quiescingComplete_get, _safplusCApi.ClAmsCompTimerDurationsT_quiescingComplete_set)
    __swig_setmethods__["csiSet"] = _safplusCApi.ClAmsCompTimerDurationsT_csiSet_set
    __swig_getmethods__["csiSet"] = _safplusCApi.ClAmsCompTimerDurationsT_csiSet_get
    if _newclass:csiSet = _swig_property(_safplusCApi.ClAmsCompTimerDurationsT_csiSet_get, _safplusCApi.ClAmsCompTimerDurationsT_csiSet_set)
    __swig_setmethods__["csiRemove"] = _safplusCApi.ClAmsCompTimerDurationsT_csiRemove_set
    __swig_getmethods__["csiRemove"] = _safplusCApi.ClAmsCompTimerDurationsT_csiRemove_get
    if _newclass:csiRemove = _swig_property(_safplusCApi.ClAmsCompTimerDurationsT_csiRemove_get, _safplusCApi.ClAmsCompTimerDurationsT_csiRemove_set)
    __swig_setmethods__["proxiedCompInstantiate"] = _safplusCApi.ClAmsCompTimerDurationsT_proxiedCompInstantiate_set
    __swig_getmethods__["proxiedCompInstantiate"] = _safplusCApi.ClAmsCompTimerDurationsT_proxiedCompInstantiate_get
    if _newclass:proxiedCompInstantiate = _swig_property(_safplusCApi.ClAmsCompTimerDurationsT_proxiedCompInstantiate_get, _safplusCApi.ClAmsCompTimerDurationsT_proxiedCompInstantiate_set)
    __swig_setmethods__["proxiedCompCleanup"] = _safplusCApi.ClAmsCompTimerDurationsT_proxiedCompCleanup_set
    __swig_getmethods__["proxiedCompCleanup"] = _safplusCApi.ClAmsCompTimerDurationsT_proxiedCompCleanup_get
    if _newclass:proxiedCompCleanup = _swig_property(_safplusCApi.ClAmsCompTimerDurationsT_proxiedCompCleanup_get, _safplusCApi.ClAmsCompTimerDurationsT_proxiedCompCleanup_set)
    __swig_setmethods__["instantiateDelay"] = _safplusCApi.ClAmsCompTimerDurationsT_instantiateDelay_set
    __swig_getmethods__["instantiateDelay"] = _safplusCApi.ClAmsCompTimerDurationsT_instantiateDelay_get
    if _newclass:instantiateDelay = _swig_property(_safplusCApi.ClAmsCompTimerDurationsT_instantiateDelay_get, _safplusCApi.ClAmsCompTimerDurationsT_instantiateDelay_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCompTimerDurationsT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCompTimerDurationsT
    __del__ = lambda self : None;
ClAmsCompTimerDurationsT_swigregister = _safplusCApi.ClAmsCompTimerDurationsT_swigregister
ClAmsCompTimerDurationsT_swigregister(ClAmsCompTimerDurationsT)

class ClAmsCompTimersT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCompTimersT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCompTimersT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["instantiate"] = _safplusCApi.ClAmsCompTimersT_instantiate_set
    __swig_getmethods__["instantiate"] = _safplusCApi.ClAmsCompTimersT_instantiate_get
    if _newclass:instantiate = _swig_property(_safplusCApi.ClAmsCompTimersT_instantiate_get, _safplusCApi.ClAmsCompTimersT_instantiate_set)
    __swig_setmethods__["terminate"] = _safplusCApi.ClAmsCompTimersT_terminate_set
    __swig_getmethods__["terminate"] = _safplusCApi.ClAmsCompTimersT_terminate_get
    if _newclass:terminate = _swig_property(_safplusCApi.ClAmsCompTimersT_terminate_get, _safplusCApi.ClAmsCompTimersT_terminate_set)
    __swig_setmethods__["cleanup"] = _safplusCApi.ClAmsCompTimersT_cleanup_set
    __swig_getmethods__["cleanup"] = _safplusCApi.ClAmsCompTimersT_cleanup_get
    if _newclass:cleanup = _swig_property(_safplusCApi.ClAmsCompTimersT_cleanup_get, _safplusCApi.ClAmsCompTimersT_cleanup_set)
    __swig_setmethods__["amStart"] = _safplusCApi.ClAmsCompTimersT_amStart_set
    __swig_getmethods__["amStart"] = _safplusCApi.ClAmsCompTimersT_amStart_get
    if _newclass:amStart = _swig_property(_safplusCApi.ClAmsCompTimersT_amStart_get, _safplusCApi.ClAmsCompTimersT_amStart_set)
    __swig_setmethods__["amStop"] = _safplusCApi.ClAmsCompTimersT_amStop_set
    __swig_getmethods__["amStop"] = _safplusCApi.ClAmsCompTimersT_amStop_get
    if _newclass:amStop = _swig_property(_safplusCApi.ClAmsCompTimersT_amStop_get, _safplusCApi.ClAmsCompTimersT_amStop_set)
    __swig_setmethods__["quiescingComplete"] = _safplusCApi.ClAmsCompTimersT_quiescingComplete_set
    __swig_getmethods__["quiescingComplete"] = _safplusCApi.ClAmsCompTimersT_quiescingComplete_get
    if _newclass:quiescingComplete = _swig_property(_safplusCApi.ClAmsCompTimersT_quiescingComplete_get, _safplusCApi.ClAmsCompTimersT_quiescingComplete_set)
    __swig_setmethods__["csiSet"] = _safplusCApi.ClAmsCompTimersT_csiSet_set
    __swig_getmethods__["csiSet"] = _safplusCApi.ClAmsCompTimersT_csiSet_get
    if _newclass:csiSet = _swig_property(_safplusCApi.ClAmsCompTimersT_csiSet_get, _safplusCApi.ClAmsCompTimersT_csiSet_set)
    __swig_setmethods__["csiRemove"] = _safplusCApi.ClAmsCompTimersT_csiRemove_set
    __swig_getmethods__["csiRemove"] = _safplusCApi.ClAmsCompTimersT_csiRemove_get
    if _newclass:csiRemove = _swig_property(_safplusCApi.ClAmsCompTimersT_csiRemove_get, _safplusCApi.ClAmsCompTimersT_csiRemove_set)
    __swig_setmethods__["proxiedCompInstantiate"] = _safplusCApi.ClAmsCompTimersT_proxiedCompInstantiate_set
    __swig_getmethods__["proxiedCompInstantiate"] = _safplusCApi.ClAmsCompTimersT_proxiedCompInstantiate_get
    if _newclass:proxiedCompInstantiate = _swig_property(_safplusCApi.ClAmsCompTimersT_proxiedCompInstantiate_get, _safplusCApi.ClAmsCompTimersT_proxiedCompInstantiate_set)
    __swig_setmethods__["proxiedCompCleanup"] = _safplusCApi.ClAmsCompTimersT_proxiedCompCleanup_set
    __swig_getmethods__["proxiedCompCleanup"] = _safplusCApi.ClAmsCompTimersT_proxiedCompCleanup_get
    if _newclass:proxiedCompCleanup = _swig_property(_safplusCApi.ClAmsCompTimersT_proxiedCompCleanup_get, _safplusCApi.ClAmsCompTimersT_proxiedCompCleanup_set)
    __swig_setmethods__["instantiateDelay"] = _safplusCApi.ClAmsCompTimersT_instantiateDelay_set
    __swig_getmethods__["instantiateDelay"] = _safplusCApi.ClAmsCompTimersT_instantiateDelay_get
    if _newclass:instantiateDelay = _swig_property(_safplusCApi.ClAmsCompTimersT_instantiateDelay_get, _safplusCApi.ClAmsCompTimersT_instantiateDelay_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCompTimersT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCompTimersT
    __del__ = lambda self : None;
ClAmsCompTimersT_swigregister = _safplusCApi.ClAmsCompTimersT_swigregister
ClAmsCompTimersT_swigregister(ClAmsCompTimersT)

class ClAmsCompConfigT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCompConfigT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCompConfigT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsCompConfigT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsCompConfigT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsCompConfigT_entity_get, _safplusCApi.ClAmsCompConfigT_entity_set)
    __swig_setmethods__["numSupportedCSITypes"] = _safplusCApi.ClAmsCompConfigT_numSupportedCSITypes_set
    __swig_getmethods__["numSupportedCSITypes"] = _safplusCApi.ClAmsCompConfigT_numSupportedCSITypes_get
    if _newclass:numSupportedCSITypes = _swig_property(_safplusCApi.ClAmsCompConfigT_numSupportedCSITypes_get, _safplusCApi.ClAmsCompConfigT_numSupportedCSITypes_set)
    __swig_setmethods__["pSupportedCSITypes"] = _safplusCApi.ClAmsCompConfigT_pSupportedCSITypes_set
    __swig_getmethods__["pSupportedCSITypes"] = _safplusCApi.ClAmsCompConfigT_pSupportedCSITypes_get
    if _newclass:pSupportedCSITypes = _swig_property(_safplusCApi.ClAmsCompConfigT_pSupportedCSITypes_get, _safplusCApi.ClAmsCompConfigT_pSupportedCSITypes_set)
    __swig_setmethods__["proxyCSIType"] = _safplusCApi.ClAmsCompConfigT_proxyCSIType_set
    __swig_getmethods__["proxyCSIType"] = _safplusCApi.ClAmsCompConfigT_proxyCSIType_get
    if _newclass:proxyCSIType = _swig_property(_safplusCApi.ClAmsCompConfigT_proxyCSIType_get, _safplusCApi.ClAmsCompConfigT_proxyCSIType_set)
    __swig_setmethods__["capabilityModel"] = _safplusCApi.ClAmsCompConfigT_capabilityModel_set
    __swig_getmethods__["capabilityModel"] = _safplusCApi.ClAmsCompConfigT_capabilityModel_get
    if _newclass:capabilityModel = _swig_property(_safplusCApi.ClAmsCompConfigT_capabilityModel_get, _safplusCApi.ClAmsCompConfigT_capabilityModel_set)
    __swig_setmethods__["property"] = _safplusCApi.ClAmsCompConfigT_property_set
    __swig_getmethods__["property"] = _safplusCApi.ClAmsCompConfigT_property_get
    if _newclass:property = _swig_property(_safplusCApi.ClAmsCompConfigT_property_get, _safplusCApi.ClAmsCompConfigT_property_set)
    __swig_setmethods__["isRestartable"] = _safplusCApi.ClAmsCompConfigT_isRestartable_set
    __swig_getmethods__["isRestartable"] = _safplusCApi.ClAmsCompConfigT_isRestartable_get
    if _newclass:isRestartable = _swig_property(_safplusCApi.ClAmsCompConfigT_isRestartable_get, _safplusCApi.ClAmsCompConfigT_isRestartable_set)
    __swig_setmethods__["nodeRebootCleanupFail"] = _safplusCApi.ClAmsCompConfigT_nodeRebootCleanupFail_set
    __swig_getmethods__["nodeRebootCleanupFail"] = _safplusCApi.ClAmsCompConfigT_nodeRebootCleanupFail_get
    if _newclass:nodeRebootCleanupFail = _swig_property(_safplusCApi.ClAmsCompConfigT_nodeRebootCleanupFail_get, _safplusCApi.ClAmsCompConfigT_nodeRebootCleanupFail_set)
    __swig_setmethods__["instantiateLevel"] = _safplusCApi.ClAmsCompConfigT_instantiateLevel_set
    __swig_getmethods__["instantiateLevel"] = _safplusCApi.ClAmsCompConfigT_instantiateLevel_get
    if _newclass:instantiateLevel = _swig_property(_safplusCApi.ClAmsCompConfigT_instantiateLevel_get, _safplusCApi.ClAmsCompConfigT_instantiateLevel_set)
    __swig_setmethods__["numMaxInstantiate"] = _safplusCApi.ClAmsCompConfigT_numMaxInstantiate_set
    __swig_getmethods__["numMaxInstantiate"] = _safplusCApi.ClAmsCompConfigT_numMaxInstantiate_get
    if _newclass:numMaxInstantiate = _swig_property(_safplusCApi.ClAmsCompConfigT_numMaxInstantiate_get, _safplusCApi.ClAmsCompConfigT_numMaxInstantiate_set)
    __swig_setmethods__["numMaxInstantiateWithDelay"] = _safplusCApi.ClAmsCompConfigT_numMaxInstantiateWithDelay_set
    __swig_getmethods__["numMaxInstantiateWithDelay"] = _safplusCApi.ClAmsCompConfigT_numMaxInstantiateWithDelay_get
    if _newclass:numMaxInstantiateWithDelay = _swig_property(_safplusCApi.ClAmsCompConfigT_numMaxInstantiateWithDelay_get, _safplusCApi.ClAmsCompConfigT_numMaxInstantiateWithDelay_set)
    __swig_setmethods__["numMaxTerminate"] = _safplusCApi.ClAmsCompConfigT_numMaxTerminate_set
    __swig_getmethods__["numMaxTerminate"] = _safplusCApi.ClAmsCompConfigT_numMaxTerminate_get
    if _newclass:numMaxTerminate = _swig_property(_safplusCApi.ClAmsCompConfigT_numMaxTerminate_get, _safplusCApi.ClAmsCompConfigT_numMaxTerminate_set)
    __swig_setmethods__["numMaxAmStart"] = _safplusCApi.ClAmsCompConfigT_numMaxAmStart_set
    __swig_getmethods__["numMaxAmStart"] = _safplusCApi.ClAmsCompConfigT_numMaxAmStart_get
    if _newclass:numMaxAmStart = _swig_property(_safplusCApi.ClAmsCompConfigT_numMaxAmStart_get, _safplusCApi.ClAmsCompConfigT_numMaxAmStart_set)
    __swig_setmethods__["numMaxAmStop"] = _safplusCApi.ClAmsCompConfigT_numMaxAmStop_set
    __swig_getmethods__["numMaxAmStop"] = _safplusCApi.ClAmsCompConfigT_numMaxAmStop_get
    if _newclass:numMaxAmStop = _swig_property(_safplusCApi.ClAmsCompConfigT_numMaxAmStop_get, _safplusCApi.ClAmsCompConfigT_numMaxAmStop_set)
    __swig_setmethods__["numMaxActiveCSIs"] = _safplusCApi.ClAmsCompConfigT_numMaxActiveCSIs_set
    __swig_getmethods__["numMaxActiveCSIs"] = _safplusCApi.ClAmsCompConfigT_numMaxActiveCSIs_get
    if _newclass:numMaxActiveCSIs = _swig_property(_safplusCApi.ClAmsCompConfigT_numMaxActiveCSIs_get, _safplusCApi.ClAmsCompConfigT_numMaxActiveCSIs_set)
    __swig_setmethods__["numMaxStandbyCSIs"] = _safplusCApi.ClAmsCompConfigT_numMaxStandbyCSIs_set
    __swig_getmethods__["numMaxStandbyCSIs"] = _safplusCApi.ClAmsCompConfigT_numMaxStandbyCSIs_get
    if _newclass:numMaxStandbyCSIs = _swig_property(_safplusCApi.ClAmsCompConfigT_numMaxStandbyCSIs_get, _safplusCApi.ClAmsCompConfigT_numMaxStandbyCSIs_set)
    __swig_setmethods__["timeouts"] = _safplusCApi.ClAmsCompConfigT_timeouts_set
    __swig_getmethods__["timeouts"] = _safplusCApi.ClAmsCompConfigT_timeouts_get
    if _newclass:timeouts = _swig_property(_safplusCApi.ClAmsCompConfigT_timeouts_get, _safplusCApi.ClAmsCompConfigT_timeouts_set)
    __swig_setmethods__["recoveryOnTimeout"] = _safplusCApi.ClAmsCompConfigT_recoveryOnTimeout_set
    __swig_getmethods__["recoveryOnTimeout"] = _safplusCApi.ClAmsCompConfigT_recoveryOnTimeout_get
    if _newclass:recoveryOnTimeout = _swig_property(_safplusCApi.ClAmsCompConfigT_recoveryOnTimeout_get, _safplusCApi.ClAmsCompConfigT_recoveryOnTimeout_set)
    __swig_setmethods__["parentSU"] = _safplusCApi.ClAmsCompConfigT_parentSU_set
    __swig_getmethods__["parentSU"] = _safplusCApi.ClAmsCompConfigT_parentSU_get
    if _newclass:parentSU = _swig_property(_safplusCApi.ClAmsCompConfigT_parentSU_get, _safplusCApi.ClAmsCompConfigT_parentSU_set)
    __swig_setmethods__["instantiateCommand"] = _safplusCApi.ClAmsCompConfigT_instantiateCommand_set
    __swig_getmethods__["instantiateCommand"] = _safplusCApi.ClAmsCompConfigT_instantiateCommand_get
    if _newclass:instantiateCommand = _swig_property(_safplusCApi.ClAmsCompConfigT_instantiateCommand_get, _safplusCApi.ClAmsCompConfigT_instantiateCommand_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCompConfigT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCompConfigT
    __del__ = lambda self : None;
ClAmsCompConfigT_swigregister = _safplusCApi.ClAmsCompConfigT_swigregister
ClAmsCompConfigT_swigregister(ClAmsCompConfigT)

class ClAmsCompStatusT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCompStatusT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCompStatusT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsCompStatusT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsCompStatusT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsCompStatusT_entity_get, _safplusCApi.ClAmsCompStatusT_entity_set)
    __swig_setmethods__["presenceState"] = _safplusCApi.ClAmsCompStatusT_presenceState_set
    __swig_getmethods__["presenceState"] = _safplusCApi.ClAmsCompStatusT_presenceState_get
    if _newclass:presenceState = _swig_property(_safplusCApi.ClAmsCompStatusT_presenceState_get, _safplusCApi.ClAmsCompStatusT_presenceState_set)
    __swig_setmethods__["operState"] = _safplusCApi.ClAmsCompStatusT_operState_set
    __swig_getmethods__["operState"] = _safplusCApi.ClAmsCompStatusT_operState_get
    if _newclass:operState = _swig_property(_safplusCApi.ClAmsCompStatusT_operState_get, _safplusCApi.ClAmsCompStatusT_operState_set)
    __swig_setmethods__["readinessState"] = _safplusCApi.ClAmsCompStatusT_readinessState_set
    __swig_getmethods__["readinessState"] = _safplusCApi.ClAmsCompStatusT_readinessState_get
    if _newclass:readinessState = _swig_property(_safplusCApi.ClAmsCompStatusT_readinessState_get, _safplusCApi.ClAmsCompStatusT_readinessState_set)
    __swig_setmethods__["recovery"] = _safplusCApi.ClAmsCompStatusT_recovery_set
    __swig_getmethods__["recovery"] = _safplusCApi.ClAmsCompStatusT_recovery_get
    if _newclass:recovery = _swig_property(_safplusCApi.ClAmsCompStatusT_recovery_get, _safplusCApi.ClAmsCompStatusT_recovery_set)
    __swig_setmethods__["alarmHandle"] = _safplusCApi.ClAmsCompStatusT_alarmHandle_set
    __swig_getmethods__["alarmHandle"] = _safplusCApi.ClAmsCompStatusT_alarmHandle_get
    if _newclass:alarmHandle = _swig_property(_safplusCApi.ClAmsCompStatusT_alarmHandle_get, _safplusCApi.ClAmsCompStatusT_alarmHandle_set)
    __swig_setmethods__["numActiveCSIs"] = _safplusCApi.ClAmsCompStatusT_numActiveCSIs_set
    __swig_getmethods__["numActiveCSIs"] = _safplusCApi.ClAmsCompStatusT_numActiveCSIs_get
    if _newclass:numActiveCSIs = _swig_property(_safplusCApi.ClAmsCompStatusT_numActiveCSIs_get, _safplusCApi.ClAmsCompStatusT_numActiveCSIs_set)
    __swig_setmethods__["numStandbyCSIs"] = _safplusCApi.ClAmsCompStatusT_numStandbyCSIs_set
    __swig_getmethods__["numStandbyCSIs"] = _safplusCApi.ClAmsCompStatusT_numStandbyCSIs_get
    if _newclass:numStandbyCSIs = _swig_property(_safplusCApi.ClAmsCompStatusT_numStandbyCSIs_get, _safplusCApi.ClAmsCompStatusT_numStandbyCSIs_set)
    __swig_setmethods__["numQuiescingCSIs"] = _safplusCApi.ClAmsCompStatusT_numQuiescingCSIs_set
    __swig_getmethods__["numQuiescingCSIs"] = _safplusCApi.ClAmsCompStatusT_numQuiescingCSIs_get
    if _newclass:numQuiescingCSIs = _swig_property(_safplusCApi.ClAmsCompStatusT_numQuiescingCSIs_get, _safplusCApi.ClAmsCompStatusT_numQuiescingCSIs_set)
    __swig_setmethods__["numQuiescedCSIs"] = _safplusCApi.ClAmsCompStatusT_numQuiescedCSIs_set
    __swig_getmethods__["numQuiescedCSIs"] = _safplusCApi.ClAmsCompStatusT_numQuiescedCSIs_get
    if _newclass:numQuiescedCSIs = _swig_property(_safplusCApi.ClAmsCompStatusT_numQuiescedCSIs_get, _safplusCApi.ClAmsCompStatusT_numQuiescedCSIs_set)
    __swig_setmethods__["restartCount"] = _safplusCApi.ClAmsCompStatusT_restartCount_set
    __swig_getmethods__["restartCount"] = _safplusCApi.ClAmsCompStatusT_restartCount_get
    if _newclass:restartCount = _swig_property(_safplusCApi.ClAmsCompStatusT_restartCount_get, _safplusCApi.ClAmsCompStatusT_restartCount_set)
    __swig_setmethods__["failoverCount"] = _safplusCApi.ClAmsCompStatusT_failoverCount_set
    __swig_getmethods__["failoverCount"] = _safplusCApi.ClAmsCompStatusT_failoverCount_get
    if _newclass:failoverCount = _swig_property(_safplusCApi.ClAmsCompStatusT_failoverCount_get, _safplusCApi.ClAmsCompStatusT_failoverCount_set)
    __swig_setmethods__["instantiateCount"] = _safplusCApi.ClAmsCompStatusT_instantiateCount_set
    __swig_getmethods__["instantiateCount"] = _safplusCApi.ClAmsCompStatusT_instantiateCount_get
    if _newclass:instantiateCount = _swig_property(_safplusCApi.ClAmsCompStatusT_instantiateCount_get, _safplusCApi.ClAmsCompStatusT_instantiateCount_set)
    __swig_setmethods__["instantiateDelayCount"] = _safplusCApi.ClAmsCompStatusT_instantiateDelayCount_set
    __swig_getmethods__["instantiateDelayCount"] = _safplusCApi.ClAmsCompStatusT_instantiateDelayCount_get
    if _newclass:instantiateDelayCount = _swig_property(_safplusCApi.ClAmsCompStatusT_instantiateDelayCount_get, _safplusCApi.ClAmsCompStatusT_instantiateDelayCount_set)
    __swig_setmethods__["amStartCount"] = _safplusCApi.ClAmsCompStatusT_amStartCount_set
    __swig_getmethods__["amStartCount"] = _safplusCApi.ClAmsCompStatusT_amStartCount_get
    if _newclass:amStartCount = _swig_property(_safplusCApi.ClAmsCompStatusT_amStartCount_get, _safplusCApi.ClAmsCompStatusT_amStartCount_set)
    __swig_setmethods__["amStopCount"] = _safplusCApi.ClAmsCompStatusT_amStopCount_set
    __swig_getmethods__["amStopCount"] = _safplusCApi.ClAmsCompStatusT_amStopCount_get
    if _newclass:amStopCount = _swig_property(_safplusCApi.ClAmsCompStatusT_amStopCount_get, _safplusCApi.ClAmsCompStatusT_amStopCount_set)
    __swig_setmethods__["instantiateCookie"] = _safplusCApi.ClAmsCompStatusT_instantiateCookie_set
    __swig_getmethods__["instantiateCookie"] = _safplusCApi.ClAmsCompStatusT_instantiateCookie_get
    if _newclass:instantiateCookie = _swig_property(_safplusCApi.ClAmsCompStatusT_instantiateCookie_get, _safplusCApi.ClAmsCompStatusT_instantiateCookie_set)
    __swig_setmethods__["timers"] = _safplusCApi.ClAmsCompStatusT_timers_set
    __swig_getmethods__["timers"] = _safplusCApi.ClAmsCompStatusT_timers_get
    if _newclass:timers = _swig_property(_safplusCApi.ClAmsCompStatusT_timers_get, _safplusCApi.ClAmsCompStatusT_timers_set)
    __swig_setmethods__["proxyComp"] = _safplusCApi.ClAmsCompStatusT_proxyComp_set
    __swig_getmethods__["proxyComp"] = _safplusCApi.ClAmsCompStatusT_proxyComp_get
    if _newclass:proxyComp = _swig_property(_safplusCApi.ClAmsCompStatusT_proxyComp_get, _safplusCApi.ClAmsCompStatusT_proxyComp_set)
    __swig_setmethods__["csiList"] = _safplusCApi.ClAmsCompStatusT_csiList_set
    __swig_getmethods__["csiList"] = _safplusCApi.ClAmsCompStatusT_csiList_get
    if _newclass:csiList = _swig_property(_safplusCApi.ClAmsCompStatusT_csiList_get, _safplusCApi.ClAmsCompStatusT_csiList_set)
    __swig_setmethods__["clientCallbacks"] = _safplusCApi.ClAmsCompStatusT_clientCallbacks_set
    __swig_getmethods__["clientCallbacks"] = _safplusCApi.ClAmsCompStatusT_clientCallbacks_get
    if _newclass:clientCallbacks = _swig_property(_safplusCApi.ClAmsCompStatusT_clientCallbacks_get, _safplusCApi.ClAmsCompStatusT_clientCallbacks_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCompStatusT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCompStatusT
    __del__ = lambda self : None;
ClAmsCompStatusT_swigregister = _safplusCApi.ClAmsCompStatusT_swigregister
ClAmsCompStatusT_swigregister(ClAmsCompStatusT)

class ClAmsCompMethodsT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCompMethodsT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCompMethodsT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsCompMethodsT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsCompMethodsT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsCompMethodsT_entity_get, _safplusCApi.ClAmsCompMethodsT_entity_set)
    __swig_setmethods__["instantiateTimeout"] = _safplusCApi.ClAmsCompMethodsT_instantiateTimeout_set
    __swig_getmethods__["instantiateTimeout"] = _safplusCApi.ClAmsCompMethodsT_instantiateTimeout_get
    if _newclass:instantiateTimeout = _swig_property(_safplusCApi.ClAmsCompMethodsT_instantiateTimeout_get, _safplusCApi.ClAmsCompMethodsT_instantiateTimeout_set)
    __swig_setmethods__["terminateTimeout"] = _safplusCApi.ClAmsCompMethodsT_terminateTimeout_set
    __swig_getmethods__["terminateTimeout"] = _safplusCApi.ClAmsCompMethodsT_terminateTimeout_get
    if _newclass:terminateTimeout = _swig_property(_safplusCApi.ClAmsCompMethodsT_terminateTimeout_get, _safplusCApi.ClAmsCompMethodsT_terminateTimeout_set)
    __swig_setmethods__["cleanupTimeout"] = _safplusCApi.ClAmsCompMethodsT_cleanupTimeout_set
    __swig_getmethods__["cleanupTimeout"] = _safplusCApi.ClAmsCompMethodsT_cleanupTimeout_get
    if _newclass:cleanupTimeout = _swig_property(_safplusCApi.ClAmsCompMethodsT_cleanupTimeout_get, _safplusCApi.ClAmsCompMethodsT_cleanupTimeout_set)
    __swig_setmethods__["amStartTimeout"] = _safplusCApi.ClAmsCompMethodsT_amStartTimeout_set
    __swig_getmethods__["amStartTimeout"] = _safplusCApi.ClAmsCompMethodsT_amStartTimeout_get
    if _newclass:amStartTimeout = _swig_property(_safplusCApi.ClAmsCompMethodsT_amStartTimeout_get, _safplusCApi.ClAmsCompMethodsT_amStartTimeout_set)
    __swig_setmethods__["amStopTimeout"] = _safplusCApi.ClAmsCompMethodsT_amStopTimeout_set
    __swig_getmethods__["amStopTimeout"] = _safplusCApi.ClAmsCompMethodsT_amStopTimeout_get
    if _newclass:amStopTimeout = _swig_property(_safplusCApi.ClAmsCompMethodsT_amStopTimeout_get, _safplusCApi.ClAmsCompMethodsT_amStopTimeout_set)
    __swig_setmethods__["quiescingCompleteTimeout"] = _safplusCApi.ClAmsCompMethodsT_quiescingCompleteTimeout_set
    __swig_getmethods__["quiescingCompleteTimeout"] = _safplusCApi.ClAmsCompMethodsT_quiescingCompleteTimeout_get
    if _newclass:quiescingCompleteTimeout = _swig_property(_safplusCApi.ClAmsCompMethodsT_quiescingCompleteTimeout_get, _safplusCApi.ClAmsCompMethodsT_quiescingCompleteTimeout_set)
    __swig_setmethods__["csiSetTimeout"] = _safplusCApi.ClAmsCompMethodsT_csiSetTimeout_set
    __swig_getmethods__["csiSetTimeout"] = _safplusCApi.ClAmsCompMethodsT_csiSetTimeout_get
    if _newclass:csiSetTimeout = _swig_property(_safplusCApi.ClAmsCompMethodsT_csiSetTimeout_get, _safplusCApi.ClAmsCompMethodsT_csiSetTimeout_set)
    __swig_setmethods__["csiRemoveTimeout"] = _safplusCApi.ClAmsCompMethodsT_csiRemoveTimeout_set
    __swig_getmethods__["csiRemoveTimeout"] = _safplusCApi.ClAmsCompMethodsT_csiRemoveTimeout_get
    if _newclass:csiRemoveTimeout = _swig_property(_safplusCApi.ClAmsCompMethodsT_csiRemoveTimeout_get, _safplusCApi.ClAmsCompMethodsT_csiRemoveTimeout_set)
    __swig_setmethods__["proxiedCompInstantiateTimeout"] = _safplusCApi.ClAmsCompMethodsT_proxiedCompInstantiateTimeout_set
    __swig_getmethods__["proxiedCompInstantiateTimeout"] = _safplusCApi.ClAmsCompMethodsT_proxiedCompInstantiateTimeout_get
    if _newclass:proxiedCompInstantiateTimeout = _swig_property(_safplusCApi.ClAmsCompMethodsT_proxiedCompInstantiateTimeout_get, _safplusCApi.ClAmsCompMethodsT_proxiedCompInstantiateTimeout_set)
    __swig_setmethods__["proxiedCompCleanupTimeout"] = _safplusCApi.ClAmsCompMethodsT_proxiedCompCleanupTimeout_set
    __swig_getmethods__["proxiedCompCleanupTimeout"] = _safplusCApi.ClAmsCompMethodsT_proxiedCompCleanupTimeout_get
    if _newclass:proxiedCompCleanupTimeout = _swig_property(_safplusCApi.ClAmsCompMethodsT_proxiedCompCleanupTimeout_get, _safplusCApi.ClAmsCompMethodsT_proxiedCompCleanupTimeout_set)
    __swig_setmethods__["instantiateDelayTimeout"] = _safplusCApi.ClAmsCompMethodsT_instantiateDelayTimeout_set
    __swig_getmethods__["instantiateDelayTimeout"] = _safplusCApi.ClAmsCompMethodsT_instantiateDelayTimeout_get
    if _newclass:instantiateDelayTimeout = _swig_property(_safplusCApi.ClAmsCompMethodsT_instantiateDelayTimeout_get, _safplusCApi.ClAmsCompMethodsT_instantiateDelayTimeout_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCompMethodsT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCompMethodsT
    __del__ = lambda self : None;
ClAmsCompMethodsT_swigregister = _safplusCApi.ClAmsCompMethodsT_swigregister
ClAmsCompMethodsT_swigregister(ClAmsCompMethodsT)

class ClAmsCompT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCompT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCompT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["config"] = _safplusCApi.ClAmsCompT_config_set
    __swig_getmethods__["config"] = _safplusCApi.ClAmsCompT_config_get
    if _newclass:config = _swig_property(_safplusCApi.ClAmsCompT_config_get, _safplusCApi.ClAmsCompT_config_set)
    __swig_setmethods__["status"] = _safplusCApi.ClAmsCompT_status_set
    __swig_getmethods__["status"] = _safplusCApi.ClAmsCompT_status_get
    if _newclass:status = _swig_property(_safplusCApi.ClAmsCompT_status_get, _safplusCApi.ClAmsCompT_status_set)
    __swig_setmethods__["methods"] = _safplusCApi.ClAmsCompT_methods_set
    __swig_getmethods__["methods"] = _safplusCApi.ClAmsCompT_methods_get
    if _newclass:methods = _swig_property(_safplusCApi.ClAmsCompT_methods_get, _safplusCApi.ClAmsCompT_methods_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCompT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCompT
    __del__ = lambda self : None;
ClAmsCompT_swigregister = _safplusCApi.ClAmsCompT_swigregister
ClAmsCompT_swigregister(ClAmsCompT)

class ClAmsCSICompRefT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSICompRefT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSICompRefT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsCSICompRefT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsCSICompRefT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsCSICompRefT_entityRef_get, _safplusCApi.ClAmsCSICompRefT_entityRef_set)
    __swig_setmethods__["haState"] = _safplusCApi.ClAmsCSICompRefT_haState_set
    __swig_getmethods__["haState"] = _safplusCApi.ClAmsCSICompRefT_haState_get
    if _newclass:haState = _swig_property(_safplusCApi.ClAmsCSICompRefT_haState_get, _safplusCApi.ClAmsCSICompRefT_haState_set)
    __swig_setmethods__["rank"] = _safplusCApi.ClAmsCSICompRefT_rank_set
    __swig_getmethods__["rank"] = _safplusCApi.ClAmsCSICompRefT_rank_get
    if _newclass:rank = _swig_property(_safplusCApi.ClAmsCSICompRefT_rank_get, _safplusCApi.ClAmsCSICompRefT_rank_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSICompRefT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSICompRefT
    __del__ = lambda self : None;
ClAmsCSICompRefT_swigregister = _safplusCApi.ClAmsCSICompRefT_swigregister
ClAmsCSICompRefT_swigregister(ClAmsCSICompRefT)

class ClAmsCSIPGTrackClientT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSIPGTrackClientT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSIPGTrackClientT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["address"] = _safplusCApi.ClAmsCSIPGTrackClientT_address_set
    __swig_getmethods__["address"] = _safplusCApi.ClAmsCSIPGTrackClientT_address_get
    if _newclass:address = _swig_property(_safplusCApi.ClAmsCSIPGTrackClientT_address_get, _safplusCApi.ClAmsCSIPGTrackClientT_address_set)
    __swig_setmethods__["trackFlags"] = _safplusCApi.ClAmsCSIPGTrackClientT_trackFlags_set
    __swig_getmethods__["trackFlags"] = _safplusCApi.ClAmsCSIPGTrackClientT_trackFlags_get
    if _newclass:trackFlags = _swig_property(_safplusCApi.ClAmsCSIPGTrackClientT_trackFlags_get, _safplusCApi.ClAmsCSIPGTrackClientT_trackFlags_set)
    __swig_setmethods__["cpmHandle"] = _safplusCApi.ClAmsCSIPGTrackClientT_cpmHandle_set
    __swig_getmethods__["cpmHandle"] = _safplusCApi.ClAmsCSIPGTrackClientT_cpmHandle_get
    if _newclass:cpmHandle = _swig_property(_safplusCApi.ClAmsCSIPGTrackClientT_cpmHandle_get, _safplusCApi.ClAmsCSIPGTrackClientT_cpmHandle_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSIPGTrackClientT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSIPGTrackClientT
    __del__ = lambda self : None;
ClAmsCSIPGTrackClientT_swigregister = _safplusCApi.ClAmsCSIPGTrackClientT_swigregister
ClAmsCSIPGTrackClientT_swigregister(ClAmsCSIPGTrackClientT)

class ClAmsCSINameValuePairT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSINameValuePairT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSINameValuePairT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["csiName"] = _safplusCApi.ClAmsCSINameValuePairT_csiName_set
    __swig_getmethods__["csiName"] = _safplusCApi.ClAmsCSINameValuePairT_csiName_get
    if _newclass:csiName = _swig_property(_safplusCApi.ClAmsCSINameValuePairT_csiName_get, _safplusCApi.ClAmsCSINameValuePairT_csiName_set)
    __swig_setmethods__["paramName"] = _safplusCApi.ClAmsCSINameValuePairT_paramName_set
    __swig_getmethods__["paramName"] = _safplusCApi.ClAmsCSINameValuePairT_paramName_get
    if _newclass:paramName = _swig_property(_safplusCApi.ClAmsCSINameValuePairT_paramName_get, _safplusCApi.ClAmsCSINameValuePairT_paramName_set)
    __swig_setmethods__["paramValue"] = _safplusCApi.ClAmsCSINameValuePairT_paramValue_set
    __swig_getmethods__["paramValue"] = _safplusCApi.ClAmsCSINameValuePairT_paramValue_get
    if _newclass:paramValue = _swig_property(_safplusCApi.ClAmsCSINameValuePairT_paramValue_get, _safplusCApi.ClAmsCSINameValuePairT_paramValue_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSINameValuePairT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSINameValuePairT
    __del__ = lambda self : None;
ClAmsCSINameValuePairT_swigregister = _safplusCApi.ClAmsCSINameValuePairT_swigregister
ClAmsCSINameValuePairT_swigregister(ClAmsCSINameValuePairT)

class ClAmsCSIConfigT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSIConfigT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSIConfigT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsCSIConfigT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsCSIConfigT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsCSIConfigT_entity_get, _safplusCApi.ClAmsCSIConfigT_entity_set)
    __swig_setmethods__["type"] = _safplusCApi.ClAmsCSIConfigT_type_set
    __swig_getmethods__["type"] = _safplusCApi.ClAmsCSIConfigT_type_get
    if _newclass:type = _swig_property(_safplusCApi.ClAmsCSIConfigT_type_get, _safplusCApi.ClAmsCSIConfigT_type_set)
    __swig_setmethods__["isProxyCSI"] = _safplusCApi.ClAmsCSIConfigT_isProxyCSI_set
    __swig_getmethods__["isProxyCSI"] = _safplusCApi.ClAmsCSIConfigT_isProxyCSI_get
    if _newclass:isProxyCSI = _swig_property(_safplusCApi.ClAmsCSIConfigT_isProxyCSI_get, _safplusCApi.ClAmsCSIConfigT_isProxyCSI_set)
    __swig_setmethods__["rank"] = _safplusCApi.ClAmsCSIConfigT_rank_set
    __swig_getmethods__["rank"] = _safplusCApi.ClAmsCSIConfigT_rank_get
    if _newclass:rank = _swig_property(_safplusCApi.ClAmsCSIConfigT_rank_get, _safplusCApi.ClAmsCSIConfigT_rank_set)
    __swig_setmethods__["nameValuePairList"] = _safplusCApi.ClAmsCSIConfigT_nameValuePairList_set
    __swig_getmethods__["nameValuePairList"] = _safplusCApi.ClAmsCSIConfigT_nameValuePairList_get
    if _newclass:nameValuePairList = _swig_property(_safplusCApi.ClAmsCSIConfigT_nameValuePairList_get, _safplusCApi.ClAmsCSIConfigT_nameValuePairList_set)
    __swig_setmethods__["parentSI"] = _safplusCApi.ClAmsCSIConfigT_parentSI_set
    __swig_getmethods__["parentSI"] = _safplusCApi.ClAmsCSIConfigT_parentSI_get
    if _newclass:parentSI = _swig_property(_safplusCApi.ClAmsCSIConfigT_parentSI_get, _safplusCApi.ClAmsCSIConfigT_parentSI_set)
    __swig_setmethods__["csiDependentsList"] = _safplusCApi.ClAmsCSIConfigT_csiDependentsList_set
    __swig_getmethods__["csiDependentsList"] = _safplusCApi.ClAmsCSIConfigT_csiDependentsList_get
    if _newclass:csiDependentsList = _swig_property(_safplusCApi.ClAmsCSIConfigT_csiDependentsList_get, _safplusCApi.ClAmsCSIConfigT_csiDependentsList_set)
    __swig_setmethods__["csiDependenciesList"] = _safplusCApi.ClAmsCSIConfigT_csiDependenciesList_set
    __swig_getmethods__["csiDependenciesList"] = _safplusCApi.ClAmsCSIConfigT_csiDependenciesList_get
    if _newclass:csiDependenciesList = _swig_property(_safplusCApi.ClAmsCSIConfigT_csiDependenciesList_get, _safplusCApi.ClAmsCSIConfigT_csiDependenciesList_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSIConfigT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSIConfigT
    __del__ = lambda self : None;
ClAmsCSIConfigT_swigregister = _safplusCApi.ClAmsCSIConfigT_swigregister
ClAmsCSIConfigT_swigregister(ClAmsCSIConfigT)

class ClAmsCSIStatusT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSIStatusT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSIStatusT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsCSIStatusT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsCSIStatusT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsCSIStatusT_entity_get, _safplusCApi.ClAmsCSIStatusT_entity_set)
    __swig_setmethods__["pgList"] = _safplusCApi.ClAmsCSIStatusT_pgList_set
    __swig_getmethods__["pgList"] = _safplusCApi.ClAmsCSIStatusT_pgList_get
    if _newclass:pgList = _swig_property(_safplusCApi.ClAmsCSIStatusT_pgList_get, _safplusCApi.ClAmsCSIStatusT_pgList_set)
    __swig_setmethods__["pgTrackList"] = _safplusCApi.ClAmsCSIStatusT_pgTrackList_set
    __swig_getmethods__["pgTrackList"] = _safplusCApi.ClAmsCSIStatusT_pgTrackList_get
    if _newclass:pgTrackList = _swig_property(_safplusCApi.ClAmsCSIStatusT_pgTrackList_get, _safplusCApi.ClAmsCSIStatusT_pgTrackList_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSIStatusT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSIStatusT
    __del__ = lambda self : None;
ClAmsCSIStatusT_swigregister = _safplusCApi.ClAmsCSIStatusT_swigregister
ClAmsCSIStatusT_swigregister(ClAmsCSIStatusT)

class ClAmsCSIMethodsT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSIMethodsT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSIMethodsT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsCSIMethodsT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsCSIMethodsT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsCSIMethodsT_entity_get, _safplusCApi.ClAmsCSIMethodsT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSIMethodsT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSIMethodsT
    __del__ = lambda self : None;
ClAmsCSIMethodsT_swigregister = _safplusCApi.ClAmsCSIMethodsT_swigregister
ClAmsCSIMethodsT_swigregister(ClAmsCSIMethodsT)

class ClAmsCSIT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSIT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSIT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["config"] = _safplusCApi.ClAmsCSIT_config_set
    __swig_getmethods__["config"] = _safplusCApi.ClAmsCSIT_config_get
    if _newclass:config = _swig_property(_safplusCApi.ClAmsCSIT_config_get, _safplusCApi.ClAmsCSIT_config_set)
    __swig_setmethods__["status"] = _safplusCApi.ClAmsCSIT_status_set
    __swig_getmethods__["status"] = _safplusCApi.ClAmsCSIT_status_get
    if _newclass:status = _swig_property(_safplusCApi.ClAmsCSIT_status_get, _safplusCApi.ClAmsCSIT_status_set)
    __swig_setmethods__["methods"] = _safplusCApi.ClAmsCSIT_methods_set
    __swig_getmethods__["methods"] = _safplusCApi.ClAmsCSIT_methods_get
    if _newclass:methods = _swig_property(_safplusCApi.ClAmsCSIT_methods_get, _safplusCApi.ClAmsCSIT_methods_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSIT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSIT
    __del__ = lambda self : None;
ClAmsCSIT_swigregister = _safplusCApi.ClAmsCSIT_swigregister
ClAmsCSIT_swigregister(ClAmsCSIT)

class ClAmsSUReassignOpT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSUReassignOpT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSUReassignOpT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["numSIs"] = _safplusCApi.ClAmsSUReassignOpT_numSIs_set
    __swig_getmethods__["numSIs"] = _safplusCApi.ClAmsSUReassignOpT_numSIs_get
    if _newclass:numSIs = _swig_property(_safplusCApi.ClAmsSUReassignOpT_numSIs_get, _safplusCApi.ClAmsSUReassignOpT_numSIs_set)
    __swig_setmethods__["sis"] = _safplusCApi.ClAmsSUReassignOpT_sis_set
    __swig_getmethods__["sis"] = _safplusCApi.ClAmsSUReassignOpT_sis_get
    if _newclass:sis = _swig_property(_safplusCApi.ClAmsSUReassignOpT_sis_get, _safplusCApi.ClAmsSUReassignOpT_sis_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSUReassignOpT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSUReassignOpT
    __del__ = lambda self : None;
ClAmsSUReassignOpT_swigregister = _safplusCApi.ClAmsSUReassignOpT_swigregister
ClAmsSUReassignOpT_swigregister(ClAmsSUReassignOpT)

class ClAmsSIReassignEntryT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSIReassignEntryT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSIReassignEntryT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["si"] = _safplusCApi.ClAmsSIReassignEntryT_si_set
    __swig_getmethods__["si"] = _safplusCApi.ClAmsSIReassignEntryT_si_get
    if _newclass:si = _swig_property(_safplusCApi.ClAmsSIReassignEntryT_si_get, _safplusCApi.ClAmsSIReassignEntryT_si_set)
    __swig_setmethods__["list"] = _safplusCApi.ClAmsSIReassignEntryT_list_set
    __swig_getmethods__["list"] = _safplusCApi.ClAmsSIReassignEntryT_list_get
    if _newclass:list = _swig_property(_safplusCApi.ClAmsSIReassignEntryT_list_get, _safplusCApi.ClAmsSIReassignEntryT_list_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSIReassignEntryT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSIReassignEntryT
    __del__ = lambda self : None;
ClAmsSIReassignEntryT_swigregister = _safplusCApi.ClAmsSIReassignEntryT_swigregister
ClAmsSIReassignEntryT_swigregister(ClAmsSIReassignEntryT)


def clAmsMgmtNodeGetConfig(*args):
  return _safplusCApi.clAmsMgmtNodeGetConfig(*args)
clAmsMgmtNodeGetConfig = _safplusCApi.clAmsMgmtNodeGetConfig

def clAmsMgmtServiceGroupGetConfig(*args):
  return _safplusCApi.clAmsMgmtServiceGroupGetConfig(*args)
clAmsMgmtServiceGroupGetConfig = _safplusCApi.clAmsMgmtServiceGroupGetConfig

def clAmsMgmtServiceUnitGetConfig(*args):
  return _safplusCApi.clAmsMgmtServiceUnitGetConfig(*args)
clAmsMgmtServiceUnitGetConfig = _safplusCApi.clAmsMgmtServiceUnitGetConfig

def clAmsMgmtServiceInstanceGetConfig(*args):
  return _safplusCApi.clAmsMgmtServiceInstanceGetConfig(*args)
clAmsMgmtServiceInstanceGetConfig = _safplusCApi.clAmsMgmtServiceInstanceGetConfig

def clAmsMgmtCompServiceInstanceGetConfig(*args):
  return _safplusCApi.clAmsMgmtCompServiceInstanceGetConfig(*args)
clAmsMgmtCompServiceInstanceGetConfig = _safplusCApi.clAmsMgmtCompServiceInstanceGetConfig

def clAmsMgmtCompServiceInstanceGetStatus(*args):
  return _safplusCApi.clAmsMgmtCompServiceInstanceGetStatus(*args)
clAmsMgmtCompServiceInstanceGetStatus = _safplusCApi.clAmsMgmtCompServiceInstanceGetStatus

def clAmsMgmtCompGetConfig(*args):
  return _safplusCApi.clAmsMgmtCompGetConfig(*args)
clAmsMgmtCompGetConfig = _safplusCApi.clAmsMgmtCompGetConfig

def clAmsMgmtInitialize(*args):
  return _safplusCApi.clAmsMgmtInitialize(*args)
clAmsMgmtInitialize = _safplusCApi.clAmsMgmtInitialize

def clAmsMgmtCCBInitialize(*args):
  return _safplusCApi.clAmsMgmtCCBInitialize(*args)
clAmsMgmtCCBInitialize = _safplusCApi.clAmsMgmtCCBInitialize

def clAmsMgmtEntityGet(*args):
  return _safplusCApi.clAmsMgmtEntityGet(*args)
clAmsMgmtEntityGet = _safplusCApi.clAmsMgmtEntityGet

def clAmsMgmtEntityGetConfig(*args):
  return _safplusCApi.clAmsMgmtEntityGetConfig(*args)
clAmsMgmtEntityGetConfig = _safplusCApi.clAmsMgmtEntityGetConfig

def clAmsMgmtEntityGetStatus(*args):
  return _safplusCApi.clAmsMgmtEntityGetStatus(*args)
clAmsMgmtEntityGetStatus = _safplusCApi.clAmsMgmtEntityGetStatus

def clAmsMgmtGetCSINVPList(*args):
  return _safplusCApi.clAmsMgmtGetCSINVPList(*args)
clAmsMgmtGetCSINVPList = _safplusCApi.clAmsMgmtGetCSINVPList

def clAmsMgmtGetNodeDependenciesList(*args):
  return _safplusCApi.clAmsMgmtGetNodeDependenciesList(*args)
clAmsMgmtGetNodeDependenciesList = _safplusCApi.clAmsMgmtGetNodeDependenciesList

def clAmsMgmtGetNodeSUList(*args):
  return _safplusCApi.clAmsMgmtGetNodeSUList(*args)
clAmsMgmtGetNodeSUList = _safplusCApi.clAmsMgmtGetNodeSUList

def clAmsMgmtGetSGSUList(*args):
  return _safplusCApi.clAmsMgmtGetSGSUList(*args)
clAmsMgmtGetSGSUList = _safplusCApi.clAmsMgmtGetSGSUList

def clAmsMgmtGetSGSIList(*args):
  return _safplusCApi.clAmsMgmtGetSGSIList(*args)
clAmsMgmtGetSGSIList = _safplusCApi.clAmsMgmtGetSGSIList

def clAmsMgmtGetSUCompList(*args):
  return _safplusCApi.clAmsMgmtGetSUCompList(*args)
clAmsMgmtGetSUCompList = _safplusCApi.clAmsMgmtGetSUCompList

def clAmsMgmtGetSISURankList(*args):
  return _safplusCApi.clAmsMgmtGetSISURankList(*args)
clAmsMgmtGetSISURankList = _safplusCApi.clAmsMgmtGetSISURankList

def clAmsMgmtGetSIDependenciesList(*args):
  return _safplusCApi.clAmsMgmtGetSIDependenciesList(*args)
clAmsMgmtGetSIDependenciesList = _safplusCApi.clAmsMgmtGetSIDependenciesList

def clAmsMgmtGetSICSIList(*args):
  return _safplusCApi.clAmsMgmtGetSICSIList(*args)
clAmsMgmtGetSICSIList = _safplusCApi.clAmsMgmtGetSICSIList

def clAmsMgmtGetSGInstantiableSUList(*args):
  return _safplusCApi.clAmsMgmtGetSGInstantiableSUList(*args)
clAmsMgmtGetSGInstantiableSUList = _safplusCApi.clAmsMgmtGetSGInstantiableSUList

def clAmsMgmtEntityUserDataSetKey(*args):
  return _safplusCApi.clAmsMgmtEntityUserDataSetKey(*args)
clAmsMgmtEntityUserDataSetKey = _safplusCApi.clAmsMgmtEntityUserDataSetKey

def clAmsMgmtEntityUserDataSet(*args):
  return _safplusCApi.clAmsMgmtEntityUserDataSet(*args)
clAmsMgmtEntityUserDataSet = _safplusCApi.clAmsMgmtEntityUserDataSet

def clAmsMgmtEntityUserDataGetKey(*args):
  return _safplusCApi.clAmsMgmtEntityUserDataGetKey(*args)
clAmsMgmtEntityUserDataGetKey = _safplusCApi.clAmsMgmtEntityUserDataGetKey

def clAmsMgmtEntityUserDataGet(*args):
  return _safplusCApi.clAmsMgmtEntityUserDataGet(*args)
clAmsMgmtEntityUserDataGet = _safplusCApi.clAmsMgmtEntityUserDataGet

def clAmsMgmtGetAspInstallInfo(*args):
  return _safplusCApi.clAmsMgmtGetAspInstallInfo(*args)
clAmsMgmtGetAspInstallInfo = _safplusCApi.clAmsMgmtGetAspInstallInfo
CL_AMS_MGMT_INITIALIZE = _safplusCApi.CL_AMS_MGMT_INITIALIZE
CL_AMS_MGMT_FINALIZE = _safplusCApi.CL_AMS_MGMT_FINALIZE
CL_AMS_MGMT_ENTITY_CREATE = _safplusCApi.CL_AMS_MGMT_ENTITY_CREATE
CL_AMS_MGMT_ENTITY_DELETE = _safplusCApi.CL_AMS_MGMT_ENTITY_DELETE
CL_AMS_MGMT_ENTITY_SET_CONFIG = _safplusCApi.CL_AMS_MGMT_ENTITY_SET_CONFIG
CL_AMS_MGMT_ENTITY_LOCK_ASSIGNMENT = _safplusCApi.CL_AMS_MGMT_ENTITY_LOCK_ASSIGNMENT
CL_AMS_MGMT_ENTITY_LOCK_INSTANTIATION = _safplusCApi.CL_AMS_MGMT_ENTITY_LOCK_INSTANTIATION
CL_AMS_MGMT_ENTITY_UNLOCK = _safplusCApi.CL_AMS_MGMT_ENTITY_UNLOCK
CL_AMS_MGMT_ENTITY_SHUTDOWN = _safplusCApi.CL_AMS_MGMT_ENTITY_SHUTDOWN
CL_AMS_MGMT_ENTITY_RESTART = _safplusCApi.CL_AMS_MGMT_ENTITY_RESTART
CL_AMS_MGMT_ENTITY_REPAIRED = _safplusCApi.CL_AMS_MGMT_ENTITY_REPAIRED
CL_AMS_MGMT_SG_ADJUST_PREFERENCE = _safplusCApi.CL_AMS_MGMT_SG_ADJUST_PREFERENCE
CL_AMS_MGMT_SI_SWAP = _safplusCApi.CL_AMS_MGMT_SI_SWAP
CL_AMS_MGMT_ENTITY_LIST_ENTITY_REF_ADD = _safplusCApi.CL_AMS_MGMT_ENTITY_LIST_ENTITY_REF_ADD
CL_AMS_MGMT_ENTITY_SET_REF = _safplusCApi.CL_AMS_MGMT_ENTITY_SET_REF
CL_AMS_MGMT_CSI_SET_NVP = _safplusCApi.CL_AMS_MGMT_CSI_SET_NVP
CL_AMS_MGMT_DEBUG_ENABLE = _safplusCApi.CL_AMS_MGMT_DEBUG_ENABLE
CL_AMS_MGMT_DEBUG_DISABLE = _safplusCApi.CL_AMS_MGMT_DEBUG_DISABLE
CL_AMS_MGMT_DEBUG_GET = _safplusCApi.CL_AMS_MGMT_DEBUG_GET
CL_AMS_MGMT_DEBUG_ENABLE_LOG_TO_CONSOLE = _safplusCApi.CL_AMS_MGMT_DEBUG_ENABLE_LOG_TO_CONSOLE
CL_AMS_MGMT_DEBUG_DISABLE_LOG_TO_CONSOLE = _safplusCApi.CL_AMS_MGMT_DEBUG_DISABLE_LOG_TO_CONSOLE
CL_AMS_MGMT_CCB_INITIALIZE = _safplusCApi.CL_AMS_MGMT_CCB_INITIALIZE
CL_AMS_MGMT_CCB_FINALIZE = _safplusCApi.CL_AMS_MGMT_CCB_FINALIZE
CL_AMS_MGMT_CCB_ENTITY_SET_CONFIG = _safplusCApi.CL_AMS_MGMT_CCB_ENTITY_SET_CONFIG
CL_AMS_MGMT_CCB_CSI_SET_NVP = _safplusCApi.CL_AMS_MGMT_CCB_CSI_SET_NVP
CL_AMS_MGMT_CCB_SET_NODE_DEPENDENCY = _safplusCApi.CL_AMS_MGMT_CCB_SET_NODE_DEPENDENCY
CL_AMS_MGMT_CCB_SET_NODE_SU_LIST = _safplusCApi.CL_AMS_MGMT_CCB_SET_NODE_SU_LIST
CL_AMS_MGMT_CCB_SET_SG_SU_LIST = _safplusCApi.CL_AMS_MGMT_CCB_SET_SG_SU_LIST
CL_AMS_MGMT_CCB_SET_SG_SI_LIST = _safplusCApi.CL_AMS_MGMT_CCB_SET_SG_SI_LIST
CL_AMS_MGMT_CCB_SET_SU_COMP_LIST = _safplusCApi.CL_AMS_MGMT_CCB_SET_SU_COMP_LIST
CL_AMS_MGMT_CCB_SET_SI_SU_RANK_LIST = _safplusCApi.CL_AMS_MGMT_CCB_SET_SI_SU_RANK_LIST
CL_AMS_MGMT_CCB_SET_SI_SI_DEPENDENCY = _safplusCApi.CL_AMS_MGMT_CCB_SET_SI_SI_DEPENDENCY
CL_AMS_MGMT_CCB_SET_SI_CSI_LIST = _safplusCApi.CL_AMS_MGMT_CCB_SET_SI_CSI_LIST
CL_AMS_MGMT_CCB_ENABLE_ENTITY = _safplusCApi.CL_AMS_MGMT_CCB_ENABLE_ENTITY
CL_AMS_MGMT_CCB_DISABLE_ENTITY = _safplusCApi.CL_AMS_MGMT_CCB_DISABLE_ENTITY
CL_AMS_MGMT_CCB_ENTITY_CREATE = _safplusCApi.CL_AMS_MGMT_CCB_ENTITY_CREATE
CL_AMS_MGMT_CCB_ENTITY_DELETE = _safplusCApi.CL_AMS_MGMT_CCB_ENTITY_DELETE
CL_AMS_MGMT_CCB_COMMIT = _safplusCApi.CL_AMS_MGMT_CCB_COMMIT
CL_AMS_MGMT_ENTITY_GET = _safplusCApi.CL_AMS_MGMT_ENTITY_GET
CL_AMS_MGMT_ENTITY_GET_CONFIG = _safplusCApi.CL_AMS_MGMT_ENTITY_GET_CONFIG
CL_AMS_MGMT_ENTITY_GET_STATUS = _safplusCApi.CL_AMS_MGMT_ENTITY_GET_STATUS
CL_AMS_MGMT_GET_CSI_NVP_LIST = _safplusCApi.CL_AMS_MGMT_GET_CSI_NVP_LIST
CL_AMS_MGMT_GET_ENTITY_LIST = _safplusCApi.CL_AMS_MGMT_GET_ENTITY_LIST
CL_AMS_MGMT_GET_OL_ENTITY_LIST = _safplusCApi.CL_AMS_MGMT_GET_OL_ENTITY_LIST
CL_AMS_MGMT_CCB_CSI_DELETE_NVP = _safplusCApi.CL_AMS_MGMT_CCB_CSI_DELETE_NVP
CL_AMS_MGMT_CCB_DELETE_NODE_DEPENDENCY = _safplusCApi.CL_AMS_MGMT_CCB_DELETE_NODE_DEPENDENCY
CL_AMS_MGMT_CCB_DELETE_NODE_SU_LIST = _safplusCApi.CL_AMS_MGMT_CCB_DELETE_NODE_SU_LIST
CL_AMS_MGMT_CCB_DELETE_SG_SU_LIST = _safplusCApi.CL_AMS_MGMT_CCB_DELETE_SG_SU_LIST
CL_AMS_MGMT_CCB_DELETE_SG_SI_LIST = _safplusCApi.CL_AMS_MGMT_CCB_DELETE_SG_SI_LIST
CL_AMS_MGMT_CCB_DELETE_SU_COMP_LIST = _safplusCApi.CL_AMS_MGMT_CCB_DELETE_SU_COMP_LIST
CL_AMS_MGMT_CCB_DELETE_SI_SU_RANK_LIST = _safplusCApi.CL_AMS_MGMT_CCB_DELETE_SI_SU_RANK_LIST
CL_AMS_MGMT_CCB_DELETE_SI_SI_DEPENDENCY = _safplusCApi.CL_AMS_MGMT_CCB_DELETE_SI_SI_DEPENDENCY
CL_AMS_MGMT_CCB_DELETE_SI_CSI_LIST = _safplusCApi.CL_AMS_MGMT_CCB_DELETE_SI_CSI_LIST
CL_AMS_MGMT_ENTITY_SET_ALPHA_FACTOR = _safplusCApi.CL_AMS_MGMT_ENTITY_SET_ALPHA_FACTOR
CL_AMS_MGMT_MIGRATE_SG = _safplusCApi.CL_AMS_MGMT_MIGRATE_SG
CL_AMS_MGMT_ENTITY_USER_DATA_SET = _safplusCApi.CL_AMS_MGMT_ENTITY_USER_DATA_SET
CL_AMS_MGMT_ENTITY_USER_DATA_SETKEY = _safplusCApi.CL_AMS_MGMT_ENTITY_USER_DATA_SETKEY
CL_AMS_MGMT_ENTITY_USER_DATA_GET = _safplusCApi.CL_AMS_MGMT_ENTITY_USER_DATA_GET
CL_AMS_MGMT_ENTITY_USER_DATA_GETKEY = _safplusCApi.CL_AMS_MGMT_ENTITY_USER_DATA_GETKEY
CL_AMS_MGMT_ENTITY_USER_DATA_DELETE = _safplusCApi.CL_AMS_MGMT_ENTITY_USER_DATA_DELETE
CL_AMS_MGMT_ENTITY_USER_DATA_DELETEKEY = _safplusCApi.CL_AMS_MGMT_ENTITY_USER_DATA_DELETEKEY
CL_AMS_MGMT_CCB_SET_CSI_CSI_DEPENDENCY = _safplusCApi.CL_AMS_MGMT_CCB_SET_CSI_CSI_DEPENDENCY
CL_AMS_MGMT_CCB_DELETE_CSI_CSI_DEPENDENCY = _safplusCApi.CL_AMS_MGMT_CCB_DELETE_CSI_CSI_DEPENDENCY
CL_AMS_MGMT_SI_ASSIGN_SU_CUSTOM = _safplusCApi.CL_AMS_MGMT_SI_ASSIGN_SU_CUSTOM
CL_AMS_MGMT_ENTITY_SET_BETA_FACTOR = _safplusCApi.CL_AMS_MGMT_ENTITY_SET_BETA_FACTOR
CL_AMS_MGMT_ENTITY_FORCE_LOCK = _safplusCApi.CL_AMS_MGMT_ENTITY_FORCE_LOCK
CL_AMS_MGMT_DB_GET = _safplusCApi.CL_AMS_MGMT_DB_GET
CL_AMS_MGMT_COMPUTED_ADMIN_STATE_GET = _safplusCApi.CL_AMS_MGMT_COMPUTED_ADMIN_STATE_GET
CL_AMS_MGMT_ENTITY_FORCE_LOCK_INSTANTIATION = _safplusCApi.CL_AMS_MGMT_ENTITY_FORCE_LOCK_INSTANTIATION
CL_AMS_MGMT_CCB_BATCH_COMMIT = _safplusCApi.CL_AMS_MGMT_CCB_BATCH_COMMIT
CL_AMS_MGMT_ENTITY_SHUTDOWN_WITH_RESTART = _safplusCApi.CL_AMS_MGMT_ENTITY_SHUTDOWN_WITH_RESTART
CL_AMS_TLV_TYPE_ENTITY = _safplusCApi.CL_AMS_TLV_TYPE_ENTITY
CL_AMS_TLV_TYPE_NODE = _safplusCApi.CL_AMS_TLV_TYPE_NODE
CL_AMS_TLV_TYPE_APP = _safplusCApi.CL_AMS_TLV_TYPE_APP
CL_AMS_TLV_TYPE_SG = _safplusCApi.CL_AMS_TLV_TYPE_SG
CL_AMS_TLV_TYPE_SU = _safplusCApi.CL_AMS_TLV_TYPE_SU
CL_AMS_TLV_TYPE_SI = _safplusCApi.CL_AMS_TLV_TYPE_SI
CL_AMS_TLV_TYPE_COMP = _safplusCApi.CL_AMS_TLV_TYPE_COMP
CL_AMS_TLV_TYPE_CSI = _safplusCApi.CL_AMS_TLV_TYPE_CSI
CL_AMS_TLV_TYPE_CLUSTER = _safplusCApi.CL_AMS_TLV_TYPE_CLUSTER
CL_AMS_TLV_TYPE_START_LIST = _safplusCApi.CL_AMS_TLV_TYPE_START_LIST
CL_AMS_TLV_TYPE_END_LIST = _safplusCApi.CL_AMS_TLV_TYPE_END_LIST
CL_AMS_MGMT_CCB_OPERATION_CREATE = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_CREATE
CL_AMS_MGMT_CCB_OPERATION_DELETE = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_DELETE
CL_AMS_MGMT_CCB_OPERATION_SET_CONFIG = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_SET_CONFIG
CL_AMS_MGMT_CCB_OPERATION_CSI_SET_NVP = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_CSI_SET_NVP
CL_AMS_MGMT_CCB_OPERATION_SET_NODE_DEPENDENCY = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_SET_NODE_DEPENDENCY
CL_AMS_MGMT_CCB_OPERATION_SET_NODE_SU_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_SET_NODE_SU_LIST
CL_AMS_MGMT_CCB_OPERATION_SET_SG_SU_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_SET_SG_SU_LIST
CL_AMS_MGMT_CCB_OPERATION_SET_SG_SI_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_SET_SG_SI_LIST
CL_AMS_MGMT_CCB_OPERATION_SET_SU_COMP_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_SET_SU_COMP_LIST
CL_AMS_MGMT_CCB_OPERATION_SET_SI_SU_RANK_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_SET_SI_SU_RANK_LIST
CL_AMS_MGMT_CCB_OPERATION_SET_SI_SI_DEPENDENCY_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_SET_SI_SI_DEPENDENCY_LIST
CL_AMS_MGMT_CCB_OPERATION_SET_SI_CSI_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_SET_SI_CSI_LIST
CL_AMS_MGMT_CCB_OPERATION_SET_CSI_CSI_DEPENDENCY_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_SET_CSI_CSI_DEPENDENCY_LIST
CL_AMS_MGMT_CCB_OPERATION_CSI_DELETE_NVP = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_CSI_DELETE_NVP
CL_AMS_MGMT_CCB_OPERATION_DELETE_NODE_DEPENDENCY = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_DELETE_NODE_DEPENDENCY
CL_AMS_MGMT_CCB_OPERATION_DELETE_NODE_SU_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_DELETE_NODE_SU_LIST
CL_AMS_MGMT_CCB_OPERATION_DELETE_SG_SU_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_DELETE_SG_SU_LIST
CL_AMS_MGMT_CCB_OPERATION_DELETE_SG_SI_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_DELETE_SG_SI_LIST
CL_AMS_MGMT_CCB_OPERATION_DELETE_SU_COMP_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_DELETE_SU_COMP_LIST
CL_AMS_MGMT_CCB_OPERATION_DELETE_SI_SU_RANK_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_DELETE_SI_SU_RANK_LIST
CL_AMS_MGMT_CCB_OPERATION_DELETE_SI_SI_DEPENDENCY_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_DELETE_SI_SI_DEPENDENCY_LIST
CL_AMS_MGMT_CCB_OPERATION_DELETE_CSI_CSI_DEPENDENCY_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_DELETE_CSI_CSI_DEPENDENCY_LIST
CL_AMS_MGMT_CCB_OPERATION_DELETE_SI_CSI_LIST = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_DELETE_SI_CSI_LIST
CL_AMS_MGMT_CCB_OPERATION_MAX = _safplusCApi.CL_AMS_MGMT_CCB_OPERATION_MAX
CL_AMS_RMD_DEFAULT_TIMEOUT = _safplusCApi.CL_AMS_RMD_DEFAULT_TIMEOUT
CL_AMS_RMD_DEFAULT_RETRIES = _safplusCApi.CL_AMS_RMD_DEFAULT_RETRIES
class ClAmsTLVT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsTLVT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsTLVT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _safplusCApi.ClAmsTLVT_type_set
    __swig_getmethods__["type"] = _safplusCApi.ClAmsTLVT_type_get
    if _newclass:type = _swig_property(_safplusCApi.ClAmsTLVT_type_get, _safplusCApi.ClAmsTLVT_type_set)
    __swig_setmethods__["length"] = _safplusCApi.ClAmsTLVT_length_set
    __swig_getmethods__["length"] = _safplusCApi.ClAmsTLVT_length_get
    if _newclass:length = _swig_property(_safplusCApi.ClAmsTLVT_length_get, _safplusCApi.ClAmsTLVT_length_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsTLVT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsTLVT
    __del__ = lambda self : None;
ClAmsTLVT_swigregister = _safplusCApi.ClAmsTLVT_swigregister
ClAmsTLVT_swigregister(ClAmsTLVT)

class clAmsMgmtDummyResponseT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtDummyResponseT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtDummyResponseT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtDummyResponseT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtDummyResponseT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtDummyResponseT_handle_get, _safplusCApi.clAmsMgmtDummyResponseT_handle_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtDummyResponseT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtDummyResponseT
    __del__ = lambda self : None;
clAmsMgmtDummyResponseT_swigregister = _safplusCApi.clAmsMgmtDummyResponseT_swigregister
clAmsMgmtDummyResponseT_swigregister(clAmsMgmtDummyResponseT)

class clAmsMgmtFinalizeRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtFinalizeRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtFinalizeRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtFinalizeRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtFinalizeRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtFinalizeRequestT_handle_get, _safplusCApi.clAmsMgmtFinalizeRequestT_handle_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtFinalizeRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtFinalizeRequestT
    __del__ = lambda self : None;
clAmsMgmtFinalizeRequestT_swigregister = _safplusCApi.clAmsMgmtFinalizeRequestT_swigregister
clAmsMgmtFinalizeRequestT_swigregister(clAmsMgmtFinalizeRequestT)

class clAmsMgmtEntityInstantiateRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityInstantiateRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityInstantiateRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityInstantiateRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityInstantiateRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityInstantiateRequestT_handle_get, _safplusCApi.clAmsMgmtEntityInstantiateRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityInstantiateRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityInstantiateRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityInstantiateRequestT_entity_get, _safplusCApi.clAmsMgmtEntityInstantiateRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityInstantiateRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityInstantiateRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityInstantiateRequestT_swigregister = _safplusCApi.clAmsMgmtEntityInstantiateRequestT_swigregister
clAmsMgmtEntityInstantiateRequestT_swigregister(clAmsMgmtEntityInstantiateRequestT)

class clAmsMgmtEntityTerminateRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityTerminateRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityTerminateRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityTerminateRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityTerminateRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityTerminateRequestT_handle_get, _safplusCApi.clAmsMgmtEntityTerminateRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityTerminateRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityTerminateRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityTerminateRequestT_entity_get, _safplusCApi.clAmsMgmtEntityTerminateRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityTerminateRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityTerminateRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityTerminateRequestT_swigregister = _safplusCApi.clAmsMgmtEntityTerminateRequestT_swigregister
clAmsMgmtEntityTerminateRequestT_swigregister(clAmsMgmtEntityTerminateRequestT)

class clAmsMgmtEntityFindByNameRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityFindByNameRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityFindByNameRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityFindByNameRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityFindByNameRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityFindByNameRequestT_handle_get, _safplusCApi.clAmsMgmtEntityFindByNameRequestT_handle_set)
    __swig_setmethods__["entityRef"] = _safplusCApi.clAmsMgmtEntityFindByNameRequestT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.clAmsMgmtEntityFindByNameRequestT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.clAmsMgmtEntityFindByNameRequestT_entityRef_get, _safplusCApi.clAmsMgmtEntityFindByNameRequestT_entityRef_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityFindByNameRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityFindByNameRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityFindByNameRequestT_swigregister = _safplusCApi.clAmsMgmtEntityFindByNameRequestT_swigregister
clAmsMgmtEntityFindByNameRequestT_swigregister(clAmsMgmtEntityFindByNameRequestT)

class clAmsMgmtEntityFindByNameResponseT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityFindByNameResponseT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityFindByNameResponseT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entityRef"] = _safplusCApi.clAmsMgmtEntityFindByNameResponseT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.clAmsMgmtEntityFindByNameResponseT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.clAmsMgmtEntityFindByNameResponseT_entityRef_get, _safplusCApi.clAmsMgmtEntityFindByNameResponseT_entityRef_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityFindByNameResponseT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityFindByNameResponseT
    __del__ = lambda self : None;
clAmsMgmtEntityFindByNameResponseT_swigregister = _safplusCApi.clAmsMgmtEntityFindByNameResponseT_swigregister
clAmsMgmtEntityFindByNameResponseT_swigregister(clAmsMgmtEntityFindByNameResponseT)

class clAmsMgmtEntitySetConfigRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntitySetConfigRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntitySetConfigRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntitySetConfigRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntitySetConfigRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntitySetConfigRequestT_handle_get, _safplusCApi.clAmsMgmtEntitySetConfigRequestT_handle_set)
    __swig_setmethods__["peInstantiateFlag"] = _safplusCApi.clAmsMgmtEntitySetConfigRequestT_peInstantiateFlag_set
    __swig_getmethods__["peInstantiateFlag"] = _safplusCApi.clAmsMgmtEntitySetConfigRequestT_peInstantiateFlag_get
    if _newclass:peInstantiateFlag = _swig_property(_safplusCApi.clAmsMgmtEntitySetConfigRequestT_peInstantiateFlag_get, _safplusCApi.clAmsMgmtEntitySetConfigRequestT_peInstantiateFlag_set)
    __swig_setmethods__["entityConfig"] = _safplusCApi.clAmsMgmtEntitySetConfigRequestT_entityConfig_set
    __swig_getmethods__["entityConfig"] = _safplusCApi.clAmsMgmtEntitySetConfigRequestT_entityConfig_get
    if _newclass:entityConfig = _swig_property(_safplusCApi.clAmsMgmtEntitySetConfigRequestT_entityConfig_get, _safplusCApi.clAmsMgmtEntitySetConfigRequestT_entityConfig_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntitySetConfigRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntitySetConfigRequestT
    __del__ = lambda self : None;
clAmsMgmtEntitySetConfigRequestT_swigregister = _safplusCApi.clAmsMgmtEntitySetConfigRequestT_swigregister
clAmsMgmtEntitySetConfigRequestT_swigregister(clAmsMgmtEntitySetConfigRequestT)

class clAmsMgmtEntitySetAlphaFactorRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntitySetAlphaFactorRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntitySetAlphaFactorRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_handle_get, _safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_entity_get, _safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_entity_set)
    __swig_setmethods__["alphaFactor"] = _safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_alphaFactor_set
    __swig_getmethods__["alphaFactor"] = _safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_alphaFactor_get
    if _newclass:alphaFactor = _swig_property(_safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_alphaFactor_get, _safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_alphaFactor_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntitySetAlphaFactorRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntitySetAlphaFactorRequestT
    __del__ = lambda self : None;
clAmsMgmtEntitySetAlphaFactorRequestT_swigregister = _safplusCApi.clAmsMgmtEntitySetAlphaFactorRequestT_swigregister
clAmsMgmtEntitySetAlphaFactorRequestT_swigregister(clAmsMgmtEntitySetAlphaFactorRequestT)

class clAmsMgmtEntitySetBetaFactorRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntitySetBetaFactorRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntitySetBetaFactorRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_handle_get, _safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_entity_get, _safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_entity_set)
    __swig_setmethods__["betaFactor"] = _safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_betaFactor_set
    __swig_getmethods__["betaFactor"] = _safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_betaFactor_get
    if _newclass:betaFactor = _swig_property(_safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_betaFactor_get, _safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_betaFactor_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntitySetBetaFactorRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntitySetBetaFactorRequestT
    __del__ = lambda self : None;
clAmsMgmtEntitySetBetaFactorRequestT_swigregister = _safplusCApi.clAmsMgmtEntitySetBetaFactorRequestT_swigregister
clAmsMgmtEntitySetBetaFactorRequestT_swigregister(clAmsMgmtEntitySetBetaFactorRequestT)

class clAmsMgmtEntitySetRefRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntitySetRefRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntitySetRefRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntitySetRefRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntitySetRefRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntitySetRefRequestT_handle_get, _safplusCApi.clAmsMgmtEntitySetRefRequestT_handle_set)
    __swig_setmethods__["sourceEntity"] = _safplusCApi.clAmsMgmtEntitySetRefRequestT_sourceEntity_set
    __swig_getmethods__["sourceEntity"] = _safplusCApi.clAmsMgmtEntitySetRefRequestT_sourceEntity_get
    if _newclass:sourceEntity = _swig_property(_safplusCApi.clAmsMgmtEntitySetRefRequestT_sourceEntity_get, _safplusCApi.clAmsMgmtEntitySetRefRequestT_sourceEntity_set)
    __swig_setmethods__["targetEntity"] = _safplusCApi.clAmsMgmtEntitySetRefRequestT_targetEntity_set
    __swig_getmethods__["targetEntity"] = _safplusCApi.clAmsMgmtEntitySetRefRequestT_targetEntity_get
    if _newclass:targetEntity = _swig_property(_safplusCApi.clAmsMgmtEntitySetRefRequestT_targetEntity_get, _safplusCApi.clAmsMgmtEntitySetRefRequestT_targetEntity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntitySetRefRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntitySetRefRequestT
    __del__ = lambda self : None;
clAmsMgmtEntitySetRefRequestT_swigregister = _safplusCApi.clAmsMgmtEntitySetRefRequestT_swigregister
clAmsMgmtEntitySetRefRequestT_swigregister(clAmsMgmtEntitySetRefRequestT)

class clAmsMgmtCSISetNVPRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCSISetNVPRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCSISetNVPRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCSISetNVPRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCSISetNVPRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCSISetNVPRequestT_handle_get, _safplusCApi.clAmsMgmtCSISetNVPRequestT_handle_set)
    __swig_setmethods__["sourceEntity"] = _safplusCApi.clAmsMgmtCSISetNVPRequestT_sourceEntity_set
    __swig_getmethods__["sourceEntity"] = _safplusCApi.clAmsMgmtCSISetNVPRequestT_sourceEntity_get
    if _newclass:sourceEntity = _swig_property(_safplusCApi.clAmsMgmtCSISetNVPRequestT_sourceEntity_get, _safplusCApi.clAmsMgmtCSISetNVPRequestT_sourceEntity_set)
    __swig_setmethods__["nvp"] = _safplusCApi.clAmsMgmtCSISetNVPRequestT_nvp_set
    __swig_getmethods__["nvp"] = _safplusCApi.clAmsMgmtCSISetNVPRequestT_nvp_get
    if _newclass:nvp = _swig_property(_safplusCApi.clAmsMgmtCSISetNVPRequestT_nvp_get, _safplusCApi.clAmsMgmtCSISetNVPRequestT_nvp_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCSISetNVPRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCSISetNVPRequestT
    __del__ = lambda self : None;
clAmsMgmtCSISetNVPRequestT_swigregister = _safplusCApi.clAmsMgmtCSISetNVPRequestT_swigregister
clAmsMgmtCSISetNVPRequestT_swigregister(clAmsMgmtCSISetNVPRequestT)

class clAmsMgmtEntityLockAssignmentRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityLockAssignmentRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityLockAssignmentRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityLockAssignmentRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityLockAssignmentRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityLockAssignmentRequestT_handle_get, _safplusCApi.clAmsMgmtEntityLockAssignmentRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityLockAssignmentRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityLockAssignmentRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityLockAssignmentRequestT_entity_get, _safplusCApi.clAmsMgmtEntityLockAssignmentRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityLockAssignmentRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityLockAssignmentRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityLockAssignmentRequestT_swigregister = _safplusCApi.clAmsMgmtEntityLockAssignmentRequestT_swigregister
clAmsMgmtEntityLockAssignmentRequestT_swigregister(clAmsMgmtEntityLockAssignmentRequestT)

class clAmsMgmtEntityForceLockRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityForceLockRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityForceLockRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityForceLockRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityForceLockRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityForceLockRequestT_handle_get, _safplusCApi.clAmsMgmtEntityForceLockRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityForceLockRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityForceLockRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityForceLockRequestT_entity_get, _safplusCApi.clAmsMgmtEntityForceLockRequestT_entity_set)
    __swig_setmethods__["lock"] = _safplusCApi.clAmsMgmtEntityForceLockRequestT_lock_set
    __swig_getmethods__["lock"] = _safplusCApi.clAmsMgmtEntityForceLockRequestT_lock_get
    if _newclass:lock = _swig_property(_safplusCApi.clAmsMgmtEntityForceLockRequestT_lock_get, _safplusCApi.clAmsMgmtEntityForceLockRequestT_lock_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityForceLockRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityForceLockRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityForceLockRequestT_swigregister = _safplusCApi.clAmsMgmtEntityForceLockRequestT_swigregister
clAmsMgmtEntityForceLockRequestT_swigregister(clAmsMgmtEntityForceLockRequestT)

class clAmsMgmtEntityLockInstantiationRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityLockInstantiationRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityLockInstantiationRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityLockInstantiationRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityLockInstantiationRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityLockInstantiationRequestT_handle_get, _safplusCApi.clAmsMgmtEntityLockInstantiationRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityLockInstantiationRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityLockInstantiationRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityLockInstantiationRequestT_entity_get, _safplusCApi.clAmsMgmtEntityLockInstantiationRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityLockInstantiationRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityLockInstantiationRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityLockInstantiationRequestT_swigregister = _safplusCApi.clAmsMgmtEntityLockInstantiationRequestT_swigregister
clAmsMgmtEntityLockInstantiationRequestT_swigregister(clAmsMgmtEntityLockInstantiationRequestT)

class clAmsMgmtEntityUnlockRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityUnlockRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityUnlockRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityUnlockRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityUnlockRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityUnlockRequestT_handle_get, _safplusCApi.clAmsMgmtEntityUnlockRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityUnlockRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityUnlockRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityUnlockRequestT_entity_get, _safplusCApi.clAmsMgmtEntityUnlockRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityUnlockRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityUnlockRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityUnlockRequestT_swigregister = _safplusCApi.clAmsMgmtEntityUnlockRequestT_swigregister
clAmsMgmtEntityUnlockRequestT_swigregister(clAmsMgmtEntityUnlockRequestT)

class clAmsMgmtEntityShutdownRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityShutdownRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityShutdownRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityShutdownRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityShutdownRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityShutdownRequestT_handle_get, _safplusCApi.clAmsMgmtEntityShutdownRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityShutdownRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityShutdownRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityShutdownRequestT_entity_get, _safplusCApi.clAmsMgmtEntityShutdownRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityShutdownRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityShutdownRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityShutdownRequestT_swigregister = _safplusCApi.clAmsMgmtEntityShutdownRequestT_swigregister
clAmsMgmtEntityShutdownRequestT_swigregister(clAmsMgmtEntityShutdownRequestT)

class clAmsMgmtEntityRestartRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityRestartRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityRestartRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityRestartRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityRestartRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityRestartRequestT_handle_get, _safplusCApi.clAmsMgmtEntityRestartRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityRestartRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityRestartRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityRestartRequestT_entity_get, _safplusCApi.clAmsMgmtEntityRestartRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityRestartRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityRestartRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityRestartRequestT_swigregister = _safplusCApi.clAmsMgmtEntityRestartRequestT_swigregister
clAmsMgmtEntityRestartRequestT_swigregister(clAmsMgmtEntityRestartRequestT)

class clAmsMgmtEntityRepairedRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityRepairedRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityRepairedRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityRepairedRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityRepairedRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityRepairedRequestT_handle_get, _safplusCApi.clAmsMgmtEntityRepairedRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityRepairedRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityRepairedRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityRepairedRequestT_entity_get, _safplusCApi.clAmsMgmtEntityRepairedRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityRepairedRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityRepairedRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityRepairedRequestT_swigregister = _safplusCApi.clAmsMgmtEntityRepairedRequestT_swigregister
clAmsMgmtEntityRepairedRequestT_swigregister(clAmsMgmtEntityRepairedRequestT)

class clAmsMgmtEntityStartMonitoringEntityRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityStartMonitoringEntityRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityStartMonitoringEntityRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityStartMonitoringEntityRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityStartMonitoringEntityRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityStartMonitoringEntityRequestT_handle_get, _safplusCApi.clAmsMgmtEntityStartMonitoringEntityRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityStartMonitoringEntityRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityStartMonitoringEntityRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityStartMonitoringEntityRequestT_entity_get, _safplusCApi.clAmsMgmtEntityStartMonitoringEntityRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityStartMonitoringEntityRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityStartMonitoringEntityRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityStartMonitoringEntityRequestT_swigregister = _safplusCApi.clAmsMgmtEntityStartMonitoringEntityRequestT_swigregister
clAmsMgmtEntityStartMonitoringEntityRequestT_swigregister(clAmsMgmtEntityStartMonitoringEntityRequestT)

class clAmsMgmtEntityStopMonitoringEntityRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityStopMonitoringEntityRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityStopMonitoringEntityRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityStopMonitoringEntityRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityStopMonitoringEntityRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityStopMonitoringEntityRequestT_handle_get, _safplusCApi.clAmsMgmtEntityStopMonitoringEntityRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityStopMonitoringEntityRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityStopMonitoringEntityRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityStopMonitoringEntityRequestT_entity_get, _safplusCApi.clAmsMgmtEntityStopMonitoringEntityRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityStopMonitoringEntityRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityStopMonitoringEntityRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityStopMonitoringEntityRequestT_swigregister = _safplusCApi.clAmsMgmtEntityStopMonitoringEntityRequestT_swigregister
clAmsMgmtEntityStopMonitoringEntityRequestT_swigregister(clAmsMgmtEntityStopMonitoringEntityRequestT)

class clAmsMgmtSGAdjustPreferenceRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtSGAdjustPreferenceRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtSGAdjustPreferenceRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_handle_get, _safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_entity_get, _safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_entity_set)
    __swig_setmethods__["enable"] = _safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_enable_set
    __swig_getmethods__["enable"] = _safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_enable_get
    if _newclass:enable = _swig_property(_safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_enable_get, _safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_enable_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtSGAdjustPreferenceRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtSGAdjustPreferenceRequestT
    __del__ = lambda self : None;
clAmsMgmtSGAdjustPreferenceRequestT_swigregister = _safplusCApi.clAmsMgmtSGAdjustPreferenceRequestT_swigregister
clAmsMgmtSGAdjustPreferenceRequestT_swigregister(clAmsMgmtSGAdjustPreferenceRequestT)

class clAmsMgmtSISwapRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtSISwapRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtSISwapRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtSISwapRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtSISwapRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtSISwapRequestT_handle_get, _safplusCApi.clAmsMgmtSISwapRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtSISwapRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtSISwapRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtSISwapRequestT_entity_get, _safplusCApi.clAmsMgmtSISwapRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtSISwapRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtSISwapRequestT
    __del__ = lambda self : None;
clAmsMgmtSISwapRequestT_swigregister = _safplusCApi.clAmsMgmtSISwapRequestT_swigregister
clAmsMgmtSISwapRequestT_swigregister(clAmsMgmtSISwapRequestT)

class clAmsMgmtEntityListEntityRefAddRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityListEntityRefAddRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityListEntityRefAddRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_handle_get, _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_handle_set)
    __swig_setmethods__["sourceEntity"] = _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_sourceEntity_set
    __swig_getmethods__["sourceEntity"] = _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_sourceEntity_get
    if _newclass:sourceEntity = _swig_property(_safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_sourceEntity_get, _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_sourceEntity_set)
    __swig_setmethods__["targetEntity"] = _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_targetEntity_set
    __swig_getmethods__["targetEntity"] = _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_targetEntity_get
    if _newclass:targetEntity = _swig_property(_safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_targetEntity_get, _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_targetEntity_set)
    __swig_setmethods__["entityListName"] = _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_entityListName_set
    __swig_getmethods__["entityListName"] = _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_entityListName_get
    if _newclass:entityListName = _swig_property(_safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_entityListName_get, _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_entityListName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityListEntityRefAddRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityListEntityRefAddRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityListEntityRefAddRequestT_swigregister = _safplusCApi.clAmsMgmtEntityListEntityRefAddRequestT_swigregister
clAmsMgmtEntityListEntityRefAddRequestT_swigregister(clAmsMgmtEntityListEntityRefAddRequestT)

class clAmsMgmtEntityGetEntityListRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityGetEntityListRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityGetEntityListRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityGetEntityListRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityGetEntityListRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityGetEntityListRequestT_handle_get, _safplusCApi.clAmsMgmtEntityGetEntityListRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetEntityListRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetEntityListRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityGetEntityListRequestT_entity_get, _safplusCApi.clAmsMgmtEntityGetEntityListRequestT_entity_set)
    __swig_setmethods__["entityListName"] = _safplusCApi.clAmsMgmtEntityGetEntityListRequestT_entityListName_set
    __swig_getmethods__["entityListName"] = _safplusCApi.clAmsMgmtEntityGetEntityListRequestT_entityListName_get
    if _newclass:entityListName = _swig_property(_safplusCApi.clAmsMgmtEntityGetEntityListRequestT_entityListName_get, _safplusCApi.clAmsMgmtEntityGetEntityListRequestT_entityListName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityGetEntityListRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityGetEntityListRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityGetEntityListRequestT_swigregister = _safplusCApi.clAmsMgmtEntityGetEntityListRequestT_swigregister
clAmsMgmtEntityGetEntityListRequestT_swigregister(clAmsMgmtEntityGetEntityListRequestT)

class clAmsMgmtEntityGetEntityListResponseT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityGetEntityListResponseT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityGetEntityListResponseT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["numNodes"] = _safplusCApi.clAmsMgmtEntityGetEntityListResponseT_numNodes_set
    __swig_getmethods__["numNodes"] = _safplusCApi.clAmsMgmtEntityGetEntityListResponseT_numNodes_get
    if _newclass:numNodes = _swig_property(_safplusCApi.clAmsMgmtEntityGetEntityListResponseT_numNodes_get, _safplusCApi.clAmsMgmtEntityGetEntityListResponseT_numNodes_set)
    __swig_setmethods__["nodeList"] = _safplusCApi.clAmsMgmtEntityGetEntityListResponseT_nodeList_set
    __swig_getmethods__["nodeList"] = _safplusCApi.clAmsMgmtEntityGetEntityListResponseT_nodeList_get
    if _newclass:nodeList = _swig_property(_safplusCApi.clAmsMgmtEntityGetEntityListResponseT_nodeList_get, _safplusCApi.clAmsMgmtEntityGetEntityListResponseT_nodeList_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityGetEntityListResponseT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityGetEntityListResponseT
    __del__ = lambda self : None;
clAmsMgmtEntityGetEntityListResponseT_swigregister = _safplusCApi.clAmsMgmtEntityGetEntityListResponseT_swigregister
clAmsMgmtEntityGetEntityListResponseT_swigregister(clAmsMgmtEntityGetEntityListResponseT)

CL_AMS_MGMT_SUB_AREA_MSG = _safplusCApi.CL_AMS_MGMT_SUB_AREA_MSG
CL_AMS_MGMT_SUB_AREA_STATE_CHANGE = _safplusCApi.CL_AMS_MGMT_SUB_AREA_STATE_CHANGE
CL_AMS_MGMT_SUB_AREA_FN_CALL = _safplusCApi.CL_AMS_MGMT_SUB_AREA_FN_CALL
CL_AMS_MGMT_SUB_AREA_TIMER = _safplusCApi.CL_AMS_MGMT_SUB_AREA_TIMER
CL_AMS_MGMT_SUB_AREA_UNDEFINED = _safplusCApi.CL_AMS_MGMT_SUB_AREA_UNDEFINED
class clAmsMgmtDebugEnableRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtDebugEnableRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtDebugEnableRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtDebugEnableRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtDebugEnableRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtDebugEnableRequestT_handle_get, _safplusCApi.clAmsMgmtDebugEnableRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtDebugEnableRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtDebugEnableRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtDebugEnableRequestT_entity_get, _safplusCApi.clAmsMgmtDebugEnableRequestT_entity_set)
    __swig_setmethods__["debugFlags"] = _safplusCApi.clAmsMgmtDebugEnableRequestT_debugFlags_set
    __swig_getmethods__["debugFlags"] = _safplusCApi.clAmsMgmtDebugEnableRequestT_debugFlags_get
    if _newclass:debugFlags = _swig_property(_safplusCApi.clAmsMgmtDebugEnableRequestT_debugFlags_get, _safplusCApi.clAmsMgmtDebugEnableRequestT_debugFlags_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtDebugEnableRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtDebugEnableRequestT
    __del__ = lambda self : None;
clAmsMgmtDebugEnableRequestT_swigregister = _safplusCApi.clAmsMgmtDebugEnableRequestT_swigregister
clAmsMgmtDebugEnableRequestT_swigregister(clAmsMgmtDebugEnableRequestT)

class clAmsMgmtDebugDisableRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtDebugDisableRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtDebugDisableRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtDebugDisableRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtDebugDisableRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtDebugDisableRequestT_handle_get, _safplusCApi.clAmsMgmtDebugDisableRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtDebugDisableRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtDebugDisableRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtDebugDisableRequestT_entity_get, _safplusCApi.clAmsMgmtDebugDisableRequestT_entity_set)
    __swig_setmethods__["debugFlags"] = _safplusCApi.clAmsMgmtDebugDisableRequestT_debugFlags_set
    __swig_getmethods__["debugFlags"] = _safplusCApi.clAmsMgmtDebugDisableRequestT_debugFlags_get
    if _newclass:debugFlags = _swig_property(_safplusCApi.clAmsMgmtDebugDisableRequestT_debugFlags_get, _safplusCApi.clAmsMgmtDebugDisableRequestT_debugFlags_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtDebugDisableRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtDebugDisableRequestT
    __del__ = lambda self : None;
clAmsMgmtDebugDisableRequestT_swigregister = _safplusCApi.clAmsMgmtDebugDisableRequestT_swigregister
clAmsMgmtDebugDisableRequestT_swigregister(clAmsMgmtDebugDisableRequestT)

class clAmsMgmtDebugGetRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtDebugGetRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtDebugGetRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtDebugGetRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtDebugGetRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtDebugGetRequestT_handle_get, _safplusCApi.clAmsMgmtDebugGetRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtDebugGetRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtDebugGetRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtDebugGetRequestT_entity_get, _safplusCApi.clAmsMgmtDebugGetRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtDebugGetRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtDebugGetRequestT
    __del__ = lambda self : None;
clAmsMgmtDebugGetRequestT_swigregister = _safplusCApi.clAmsMgmtDebugGetRequestT_swigregister
clAmsMgmtDebugGetRequestT_swigregister(clAmsMgmtDebugGetRequestT)

class clAmsMgmtDebugGetResponseT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtDebugGetResponseT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtDebugGetResponseT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["debugFlags"] = _safplusCApi.clAmsMgmtDebugGetResponseT_debugFlags_set
    __swig_getmethods__["debugFlags"] = _safplusCApi.clAmsMgmtDebugGetResponseT_debugFlags_get
    if _newclass:debugFlags = _swig_property(_safplusCApi.clAmsMgmtDebugGetResponseT_debugFlags_get, _safplusCApi.clAmsMgmtDebugGetResponseT_debugFlags_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtDebugGetResponseT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtDebugGetResponseT
    __del__ = lambda self : None;
clAmsMgmtDebugGetResponseT_swigregister = _safplusCApi.clAmsMgmtDebugGetResponseT_swigregister
clAmsMgmtDebugGetResponseT_swigregister(clAmsMgmtDebugGetResponseT)

class clAmsMgmtDebugEnableLogToConsoleRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtDebugEnableLogToConsoleRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtDebugEnableLogToConsoleRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtDebugEnableLogToConsoleRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtDebugEnableLogToConsoleRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtDebugEnableLogToConsoleRequestT_handle_get, _safplusCApi.clAmsMgmtDebugEnableLogToConsoleRequestT_handle_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtDebugEnableLogToConsoleRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtDebugEnableLogToConsoleRequestT
    __del__ = lambda self : None;
clAmsMgmtDebugEnableLogToConsoleRequestT_swigregister = _safplusCApi.clAmsMgmtDebugEnableLogToConsoleRequestT_swigregister
clAmsMgmtDebugEnableLogToConsoleRequestT_swigregister(clAmsMgmtDebugEnableLogToConsoleRequestT)

class clAmsMgmtDebugDisableLogToConsoleRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtDebugDisableLogToConsoleRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtDebugDisableLogToConsoleRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtDebugDisableLogToConsoleRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtDebugDisableLogToConsoleRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtDebugDisableLogToConsoleRequestT_handle_get, _safplusCApi.clAmsMgmtDebugDisableLogToConsoleRequestT_handle_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtDebugDisableLogToConsoleRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtDebugDisableLogToConsoleRequestT
    __del__ = lambda self : None;
clAmsMgmtDebugDisableLogToConsoleRequestT_swigregister = _safplusCApi.clAmsMgmtDebugDisableLogToConsoleRequestT_swigregister
clAmsMgmtDebugDisableLogToConsoleRequestT_swigregister(clAmsMgmtDebugDisableLogToConsoleRequestT)

class clAmsMgmtCCBT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ccbOpListHandle"] = _safplusCApi.clAmsMgmtCCBT_ccbOpListHandle_set
    __swig_getmethods__["ccbOpListHandle"] = _safplusCApi.clAmsMgmtCCBT_ccbOpListHandle_get
    if _newclass:ccbOpListHandle = _swig_property(_safplusCApi.clAmsMgmtCCBT_ccbOpListHandle_get, _safplusCApi.clAmsMgmtCCBT_ccbOpListHandle_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBT
    __del__ = lambda self : None;
clAmsMgmtCCBT_swigregister = _safplusCApi.clAmsMgmtCCBT_swigregister
clAmsMgmtCCBT_swigregister(clAmsMgmtCCBT)

class clAmsMgmtCCBInitializeRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBInitializeRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBInitializeRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBInitializeRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBInitializeRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBInitializeRequestT_handle_get, _safplusCApi.clAmsMgmtCCBInitializeRequestT_handle_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBInitializeRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBInitializeRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBInitializeRequestT_swigregister = _safplusCApi.clAmsMgmtCCBInitializeRequestT_swigregister
clAmsMgmtCCBInitializeRequestT_swigregister(clAmsMgmtCCBInitializeRequestT)

class clAmsMgmtCCBInitializeResponseT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBInitializeResponseT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBInitializeResponseT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBInitializeResponseT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBInitializeResponseT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBInitializeResponseT_handle_get, _safplusCApi.clAmsMgmtCCBInitializeResponseT_handle_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBInitializeResponseT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBInitializeResponseT
    __del__ = lambda self : None;
clAmsMgmtCCBInitializeResponseT_swigregister = _safplusCApi.clAmsMgmtCCBInitializeResponseT_swigregister
clAmsMgmtCCBInitializeResponseT_swigregister(clAmsMgmtCCBInitializeResponseT)

class clAmsMgmtCCBFinalizeRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBFinalizeRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBFinalizeRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBFinalizeRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBFinalizeRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBFinalizeRequestT_handle_get, _safplusCApi.clAmsMgmtCCBFinalizeRequestT_handle_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBFinalizeRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBFinalizeRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBFinalizeRequestT_swigregister = _safplusCApi.clAmsMgmtCCBFinalizeRequestT_swigregister
clAmsMgmtCCBFinalizeRequestT_swigregister(clAmsMgmtCCBFinalizeRequestT)

class clAmsMgmtCCBCommitRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBCommitRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBCommitRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBCommitRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBCommitRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBCommitRequestT_handle_get, _safplusCApi.clAmsMgmtCCBCommitRequestT_handle_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBCommitRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBCommitRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBCommitRequestT_swigregister = _safplusCApi.clAmsMgmtCCBCommitRequestT_swigregister
clAmsMgmtCCBCommitRequestT_swigregister(clAmsMgmtCCBCommitRequestT)

class clAmsMgmtCCBEntityCreateRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBEntityCreateRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBEntityCreateRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBEntityCreateRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBEntityCreateRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBEntityCreateRequestT_handle_get, _safplusCApi.clAmsMgmtCCBEntityCreateRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtCCBEntityCreateRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtCCBEntityCreateRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtCCBEntityCreateRequestT_entity_get, _safplusCApi.clAmsMgmtCCBEntityCreateRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBEntityCreateRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBEntityCreateRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBEntityCreateRequestT_swigregister = _safplusCApi.clAmsMgmtCCBEntityCreateRequestT_swigregister
clAmsMgmtCCBEntityCreateRequestT_swigregister(clAmsMgmtCCBEntityCreateRequestT)

class clAmsMgmtCCBEntityDeleteRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBEntityDeleteRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBEntityDeleteRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBEntityDeleteRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBEntityDeleteRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBEntityDeleteRequestT_handle_get, _safplusCApi.clAmsMgmtCCBEntityDeleteRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtCCBEntityDeleteRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtCCBEntityDeleteRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtCCBEntityDeleteRequestT_entity_get, _safplusCApi.clAmsMgmtCCBEntityDeleteRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBEntityDeleteRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBEntityDeleteRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBEntityDeleteRequestT_swigregister = _safplusCApi.clAmsMgmtCCBEntityDeleteRequestT_swigregister
clAmsMgmtCCBEntityDeleteRequestT_swigregister(clAmsMgmtCCBEntityDeleteRequestT)

class clAmsMgmtCCBEntitySetConfigRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBEntitySetConfigRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBEntitySetConfigRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_handle_get, _safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_handle_set)
    __swig_setmethods__["bitmask"] = _safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_bitmask_set
    __swig_getmethods__["bitmask"] = _safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_bitmask_get
    if _newclass:bitmask = _swig_property(_safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_bitmask_get, _safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_bitmask_set)
    __swig_setmethods__["entityConfig"] = _safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_entityConfig_set
    __swig_getmethods__["entityConfig"] = _safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_entityConfig_get
    if _newclass:entityConfig = _swig_property(_safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_entityConfig_get, _safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_entityConfig_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBEntitySetConfigRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBEntitySetConfigRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBEntitySetConfigRequestT_swigregister = _safplusCApi.clAmsMgmtCCBEntitySetConfigRequestT_swigregister
clAmsMgmtCCBEntitySetConfigRequestT_swigregister(clAmsMgmtCCBEntitySetConfigRequestT)

class clAmsMgmtCCBCSISetNVPRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBCSISetNVPRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBCSISetNVPRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_handle_get, _safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_handle_set)
    __swig_setmethods__["csiName"] = _safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_csiName_set
    __swig_getmethods__["csiName"] = _safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_csiName_get
    if _newclass:csiName = _swig_property(_safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_csiName_get, _safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_csiName_set)
    __swig_setmethods__["nvp"] = _safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_nvp_set
    __swig_getmethods__["nvp"] = _safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_nvp_get
    if _newclass:nvp = _swig_property(_safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_nvp_get, _safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_nvp_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBCSISetNVPRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBCSISetNVPRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBCSISetNVPRequestT_swigregister = _safplusCApi.clAmsMgmtCCBCSISetNVPRequestT_swigregister
clAmsMgmtCCBCSISetNVPRequestT_swigregister(clAmsMgmtCCBCSISetNVPRequestT)

class clAmsMgmtCCBSetNodeDependencyRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBSetNodeDependencyRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBSetNodeDependencyRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_handle_get, _safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_handle_set)
    __swig_setmethods__["nodeName"] = _safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_nodeName_set
    __swig_getmethods__["nodeName"] = _safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_nodeName_get
    if _newclass:nodeName = _swig_property(_safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_nodeName_get, _safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_nodeName_set)
    __swig_setmethods__["dependencyNodeName"] = _safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_dependencyNodeName_set
    __swig_getmethods__["dependencyNodeName"] = _safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_dependencyNodeName_get
    if _newclass:dependencyNodeName = _swig_property(_safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_dependencyNodeName_get, _safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_dependencyNodeName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBSetNodeDependencyRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBSetNodeDependencyRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBSetNodeDependencyRequestT_swigregister = _safplusCApi.clAmsMgmtCCBSetNodeDependencyRequestT_swigregister
clAmsMgmtCCBSetNodeDependencyRequestT_swigregister(clAmsMgmtCCBSetNodeDependencyRequestT)

class clAmsMgmtCCBSetNodeSUListRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBSetNodeSUListRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBSetNodeSUListRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_handle_get, _safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_handle_set)
    __swig_setmethods__["nodeName"] = _safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_nodeName_set
    __swig_getmethods__["nodeName"] = _safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_nodeName_get
    if _newclass:nodeName = _swig_property(_safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_nodeName_get, _safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_nodeName_set)
    __swig_setmethods__["suName"] = _safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_suName_set
    __swig_getmethods__["suName"] = _safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_suName_get
    if _newclass:suName = _swig_property(_safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_suName_get, _safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_suName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBSetNodeSUListRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBSetNodeSUListRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBSetNodeSUListRequestT_swigregister = _safplusCApi.clAmsMgmtCCBSetNodeSUListRequestT_swigregister
clAmsMgmtCCBSetNodeSUListRequestT_swigregister(clAmsMgmtCCBSetNodeSUListRequestT)

class clAmsMgmtCCBSetSGSUListRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBSetSGSUListRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBSetSGSUListRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_handle_get, _safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_handle_set)
    __swig_setmethods__["sgName"] = _safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_sgName_set
    __swig_getmethods__["sgName"] = _safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_sgName_get
    if _newclass:sgName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_sgName_get, _safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_sgName_set)
    __swig_setmethods__["suName"] = _safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_suName_set
    __swig_getmethods__["suName"] = _safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_suName_get
    if _newclass:suName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_suName_get, _safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_suName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBSetSGSUListRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBSetSGSUListRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBSetSGSUListRequestT_swigregister = _safplusCApi.clAmsMgmtCCBSetSGSUListRequestT_swigregister
clAmsMgmtCCBSetSGSUListRequestT_swigregister(clAmsMgmtCCBSetSGSUListRequestT)

class clAmsMgmtCCBSetSGSIListRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBSetSGSIListRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBSetSGSIListRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_handle_get, _safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_handle_set)
    __swig_setmethods__["sgName"] = _safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_sgName_set
    __swig_getmethods__["sgName"] = _safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_sgName_get
    if _newclass:sgName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_sgName_get, _safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_sgName_set)
    __swig_setmethods__["siName"] = _safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_siName_set
    __swig_getmethods__["siName"] = _safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_siName_get
    if _newclass:siName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_siName_get, _safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_siName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBSetSGSIListRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBSetSGSIListRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBSetSGSIListRequestT_swigregister = _safplusCApi.clAmsMgmtCCBSetSGSIListRequestT_swigregister
clAmsMgmtCCBSetSGSIListRequestT_swigregister(clAmsMgmtCCBSetSGSIListRequestT)

class clAmsMgmtCCBSetSUCompListRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBSetSUCompListRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBSetSUCompListRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_handle_get, _safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_handle_set)
    __swig_setmethods__["suName"] = _safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_suName_set
    __swig_getmethods__["suName"] = _safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_suName_get
    if _newclass:suName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_suName_get, _safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_suName_set)
    __swig_setmethods__["compName"] = _safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_compName_set
    __swig_getmethods__["compName"] = _safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_compName_get
    if _newclass:compName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_compName_get, _safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_compName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBSetSUCompListRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBSetSUCompListRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBSetSUCompListRequestT_swigregister = _safplusCApi.clAmsMgmtCCBSetSUCompListRequestT_swigregister
clAmsMgmtCCBSetSUCompListRequestT_swigregister(clAmsMgmtCCBSetSUCompListRequestT)

class clAmsMgmtCCBSetSISURankListRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBSetSISURankListRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBSetSISURankListRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_handle_get, _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_handle_set)
    __swig_setmethods__["siName"] = _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_siName_set
    __swig_getmethods__["siName"] = _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_siName_get
    if _newclass:siName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_siName_get, _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_siName_set)
    __swig_setmethods__["suName"] = _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_suName_set
    __swig_getmethods__["suName"] = _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_suName_get
    if _newclass:suName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_suName_get, _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_suName_set)
    __swig_setmethods__["suRank"] = _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_suRank_set
    __swig_getmethods__["suRank"] = _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_suRank_get
    if _newclass:suRank = _swig_property(_safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_suRank_get, _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_suRank_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBSetSISURankListRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBSetSISURankListRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBSetSISURankListRequestT_swigregister = _safplusCApi.clAmsMgmtCCBSetSISURankListRequestT_swigregister
clAmsMgmtCCBSetSISURankListRequestT_swigregister(clAmsMgmtCCBSetSISURankListRequestT)

class clAmsMgmtCCBSetSISIDependencyRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBSetSISIDependencyRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBSetSISIDependencyRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_handle_get, _safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_handle_set)
    __swig_setmethods__["siName"] = _safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_siName_set
    __swig_getmethods__["siName"] = _safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_siName_get
    if _newclass:siName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_siName_get, _safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_siName_set)
    __swig_setmethods__["dependencySIName"] = _safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_dependencySIName_set
    __swig_getmethods__["dependencySIName"] = _safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_dependencySIName_get
    if _newclass:dependencySIName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_dependencySIName_get, _safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_dependencySIName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBSetSISIDependencyRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBSetSISIDependencyRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBSetSISIDependencyRequestT_swigregister = _safplusCApi.clAmsMgmtCCBSetSISIDependencyRequestT_swigregister
clAmsMgmtCCBSetSISIDependencyRequestT_swigregister(clAmsMgmtCCBSetSISIDependencyRequestT)

class clAmsMgmtCCBSetCSICSIDependencyRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBSetCSICSIDependencyRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBSetCSICSIDependencyRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_handle_get, _safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_handle_set)
    __swig_setmethods__["csiName"] = _safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_csiName_set
    __swig_getmethods__["csiName"] = _safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_csiName_get
    if _newclass:csiName = _swig_property(_safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_csiName_get, _safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_csiName_set)
    __swig_setmethods__["dependencyCSIName"] = _safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_dependencyCSIName_set
    __swig_getmethods__["dependencyCSIName"] = _safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_dependencyCSIName_get
    if _newclass:dependencyCSIName = _swig_property(_safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_dependencyCSIName_get, _safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_dependencyCSIName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBSetCSICSIDependencyRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBSetCSICSIDependencyRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBSetCSICSIDependencyRequestT_swigregister = _safplusCApi.clAmsMgmtCCBSetCSICSIDependencyRequestT_swigregister
clAmsMgmtCCBSetCSICSIDependencyRequestT_swigregister(clAmsMgmtCCBSetCSICSIDependencyRequestT)

class clAmsMgmtCCBSetSICSIListRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBSetSICSIListRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBSetSICSIListRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_handle_get, _safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_handle_set)
    __swig_setmethods__["siName"] = _safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_siName_set
    __swig_getmethods__["siName"] = _safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_siName_get
    if _newclass:siName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_siName_get, _safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_siName_set)
    __swig_setmethods__["csiName"] = _safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_csiName_set
    __swig_getmethods__["csiName"] = _safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_csiName_get
    if _newclass:csiName = _swig_property(_safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_csiName_get, _safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_csiName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBSetSICSIListRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBSetSICSIListRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBSetSICSIListRequestT_swigregister = _safplusCApi.clAmsMgmtCCBSetSICSIListRequestT_swigregister
clAmsMgmtCCBSetSICSIListRequestT_swigregister(clAmsMgmtCCBSetSICSIListRequestT)

class clAmsMgmtCCBEnableEntityRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBEnableEntityRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBEnableEntityRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBEnableEntityRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBEnableEntityRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBEnableEntityRequestT_handle_get, _safplusCApi.clAmsMgmtCCBEnableEntityRequestT_handle_set)
    __swig_setmethods__["entityName"] = _safplusCApi.clAmsMgmtCCBEnableEntityRequestT_entityName_set
    __swig_getmethods__["entityName"] = _safplusCApi.clAmsMgmtCCBEnableEntityRequestT_entityName_get
    if _newclass:entityName = _swig_property(_safplusCApi.clAmsMgmtCCBEnableEntityRequestT_entityName_get, _safplusCApi.clAmsMgmtCCBEnableEntityRequestT_entityName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBEnableEntityRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBEnableEntityRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBEnableEntityRequestT_swigregister = _safplusCApi.clAmsMgmtCCBEnableEntityRequestT_swigregister
clAmsMgmtCCBEnableEntityRequestT_swigregister(clAmsMgmtCCBEnableEntityRequestT)

class clAmsMgmtCCBDisableEntityRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtCCBDisableEntityRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtCCBDisableEntityRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtCCBDisableEntityRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtCCBDisableEntityRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtCCBDisableEntityRequestT_handle_get, _safplusCApi.clAmsMgmtCCBDisableEntityRequestT_handle_set)
    __swig_setmethods__["entityName"] = _safplusCApi.clAmsMgmtCCBDisableEntityRequestT_entityName_set
    __swig_getmethods__["entityName"] = _safplusCApi.clAmsMgmtCCBDisableEntityRequestT_entityName_get
    if _newclass:entityName = _swig_property(_safplusCApi.clAmsMgmtCCBDisableEntityRequestT_entityName_get, _safplusCApi.clAmsMgmtCCBDisableEntityRequestT_entityName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtCCBDisableEntityRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtCCBDisableEntityRequestT
    __del__ = lambda self : None;
clAmsMgmtCCBDisableEntityRequestT_swigregister = _safplusCApi.clAmsMgmtCCBDisableEntityRequestT_swigregister
clAmsMgmtCCBDisableEntityRequestT_swigregister(clAmsMgmtCCBDisableEntityRequestT)

class clAmsMgmtEntityGetRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityGetRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityGetRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityGetRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityGetRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityGetRequestT_handle_get, _safplusCApi.clAmsMgmtEntityGetRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityGetRequestT_entity_get, _safplusCApi.clAmsMgmtEntityGetRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityGetRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityGetRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityGetRequestT_swigregister = _safplusCApi.clAmsMgmtEntityGetRequestT_swigregister
clAmsMgmtEntityGetRequestT_swigregister(clAmsMgmtEntityGetRequestT)

class clAmsMgmtEntityGetResponseT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityGetResponseT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityGetResponseT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetResponseT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetResponseT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityGetResponseT_entity_get, _safplusCApi.clAmsMgmtEntityGetResponseT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityGetResponseT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityGetResponseT
    __del__ = lambda self : None;
clAmsMgmtEntityGetResponseT_swigregister = _safplusCApi.clAmsMgmtEntityGetResponseT_swigregister
clAmsMgmtEntityGetResponseT_swigregister(clAmsMgmtEntityGetResponseT)

class clAmsMgmtEntityGetConfigRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityGetConfigRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityGetConfigRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityGetConfigRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityGetConfigRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityGetConfigRequestT_handle_get, _safplusCApi.clAmsMgmtEntityGetConfigRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetConfigRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetConfigRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityGetConfigRequestT_entity_get, _safplusCApi.clAmsMgmtEntityGetConfigRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityGetConfigRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityGetConfigRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityGetConfigRequestT_swigregister = _safplusCApi.clAmsMgmtEntityGetConfigRequestT_swigregister
clAmsMgmtEntityGetConfigRequestT_swigregister(clAmsMgmtEntityGetConfigRequestT)

class clAmsMgmtEntityGetConfigResponseT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityGetConfigResponseT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityGetConfigResponseT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entityConfig"] = _safplusCApi.clAmsMgmtEntityGetConfigResponseT_entityConfig_set
    __swig_getmethods__["entityConfig"] = _safplusCApi.clAmsMgmtEntityGetConfigResponseT_entityConfig_get
    if _newclass:entityConfig = _swig_property(_safplusCApi.clAmsMgmtEntityGetConfigResponseT_entityConfig_get, _safplusCApi.clAmsMgmtEntityGetConfigResponseT_entityConfig_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityGetConfigResponseT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityGetConfigResponseT
    __del__ = lambda self : None;
clAmsMgmtEntityGetConfigResponseT_swigregister = _safplusCApi.clAmsMgmtEntityGetConfigResponseT_swigregister
clAmsMgmtEntityGetConfigResponseT_swigregister(clAmsMgmtEntityGetConfigResponseT)

class clAmsMgmtEntityGetStatusRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityGetStatusRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityGetStatusRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtEntityGetStatusRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtEntityGetStatusRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtEntityGetStatusRequestT_handle_get, _safplusCApi.clAmsMgmtEntityGetStatusRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetStatusRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetStatusRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityGetStatusRequestT_entity_get, _safplusCApi.clAmsMgmtEntityGetStatusRequestT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityGetStatusRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityGetStatusRequestT
    __del__ = lambda self : None;
clAmsMgmtEntityGetStatusRequestT_swigregister = _safplusCApi.clAmsMgmtEntityGetStatusRequestT_swigregister
clAmsMgmtEntityGetStatusRequestT_swigregister(clAmsMgmtEntityGetStatusRequestT)

class clAmsMgmtEntityGetStatusResponseT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtEntityGetStatusResponseT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtEntityGetStatusResponseT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetStatusResponseT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtEntityGetStatusResponseT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtEntityGetStatusResponseT_entity_get, _safplusCApi.clAmsMgmtEntityGetStatusResponseT_entity_set)
    __swig_setmethods__["entityStatus"] = _safplusCApi.clAmsMgmtEntityGetStatusResponseT_entityStatus_set
    __swig_getmethods__["entityStatus"] = _safplusCApi.clAmsMgmtEntityGetStatusResponseT_entityStatus_get
    if _newclass:entityStatus = _swig_property(_safplusCApi.clAmsMgmtEntityGetStatusResponseT_entityStatus_get, _safplusCApi.clAmsMgmtEntityGetStatusResponseT_entityStatus_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtEntityGetStatusResponseT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtEntityGetStatusResponseT
    __del__ = lambda self : None;
clAmsMgmtEntityGetStatusResponseT_swigregister = _safplusCApi.clAmsMgmtEntityGetStatusResponseT_swigregister
clAmsMgmtEntityGetStatusResponseT_swigregister(clAmsMgmtEntityGetStatusResponseT)

class ClAmsCSINVPBufferT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSINVPBufferT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSINVPBufferT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _safplusCApi.ClAmsCSINVPBufferT_count_set
    __swig_getmethods__["count"] = _safplusCApi.ClAmsCSINVPBufferT_count_get
    if _newclass:count = _swig_property(_safplusCApi.ClAmsCSINVPBufferT_count_get, _safplusCApi.ClAmsCSINVPBufferT_count_set)
    __swig_setmethods__["nvp"] = _safplusCApi.ClAmsCSINVPBufferT_nvp_set
    __swig_getmethods__["nvp"] = _safplusCApi.ClAmsCSINVPBufferT_nvp_get
    if _newclass:nvp = _swig_property(_safplusCApi.ClAmsCSINVPBufferT_nvp_get, _safplusCApi.ClAmsCSINVPBufferT_nvp_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSINVPBufferT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSINVPBufferT
    __del__ = lambda self : None;
ClAmsCSINVPBufferT_swigregister = _safplusCApi.ClAmsCSINVPBufferT_swigregister
ClAmsCSINVPBufferT_swigregister(ClAmsCSINVPBufferT)

class clAmsMgmtGetCSINVPListRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtGetCSINVPListRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtGetCSINVPListRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtGetCSINVPListRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtGetCSINVPListRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtGetCSINVPListRequestT_handle_get, _safplusCApi.clAmsMgmtGetCSINVPListRequestT_handle_set)
    __swig_setmethods__["csi"] = _safplusCApi.clAmsMgmtGetCSINVPListRequestT_csi_set
    __swig_getmethods__["csi"] = _safplusCApi.clAmsMgmtGetCSINVPListRequestT_csi_get
    if _newclass:csi = _swig_property(_safplusCApi.clAmsMgmtGetCSINVPListRequestT_csi_get, _safplusCApi.clAmsMgmtGetCSINVPListRequestT_csi_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtGetCSINVPListRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtGetCSINVPListRequestT
    __del__ = lambda self : None;
clAmsMgmtGetCSINVPListRequestT_swigregister = _safplusCApi.clAmsMgmtGetCSINVPListRequestT_swigregister
clAmsMgmtGetCSINVPListRequestT_swigregister(clAmsMgmtGetCSINVPListRequestT)

class ClAmsEntityBufferT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityBufferT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityBufferT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _safplusCApi.ClAmsEntityBufferT_count_set
    __swig_getmethods__["count"] = _safplusCApi.ClAmsEntityBufferT_count_get
    if _newclass:count = _swig_property(_safplusCApi.ClAmsEntityBufferT_count_get, _safplusCApi.ClAmsEntityBufferT_count_set)
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsEntityBufferT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsEntityBufferT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsEntityBufferT_entity_get, _safplusCApi.ClAmsEntityBufferT_entity_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityBufferT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityBufferT
    __del__ = lambda self : None;
ClAmsEntityBufferT_swigregister = _safplusCApi.ClAmsEntityBufferT_swigregister
ClAmsEntityBufferT_swigregister(ClAmsEntityBufferT)

class ClAmsEntityRefBufferT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsEntityRefBufferT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsEntityRefBufferT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _safplusCApi.ClAmsEntityRefBufferT_count_set
    __swig_getmethods__["count"] = _safplusCApi.ClAmsEntityRefBufferT_count_get
    if _newclass:count = _swig_property(_safplusCApi.ClAmsEntityRefBufferT_count_get, _safplusCApi.ClAmsEntityRefBufferT_count_set)
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsEntityRefBufferT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsEntityRefBufferT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsEntityRefBufferT_entityRef_get, _safplusCApi.ClAmsEntityRefBufferT_entityRef_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsEntityRefBufferT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsEntityRefBufferT
    __del__ = lambda self : None;
ClAmsEntityRefBufferT_swigregister = _safplusCApi.ClAmsEntityRefBufferT_swigregister
ClAmsEntityRefBufferT_swigregister(ClAmsEntityRefBufferT)

class ClAmsSUSIRefBufferT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSUSIRefBufferT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSUSIRefBufferT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _safplusCApi.ClAmsSUSIRefBufferT_count_set
    __swig_getmethods__["count"] = _safplusCApi.ClAmsSUSIRefBufferT_count_get
    if _newclass:count = _swig_property(_safplusCApi.ClAmsSUSIRefBufferT_count_get, _safplusCApi.ClAmsSUSIRefBufferT_count_set)
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsSUSIRefBufferT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsSUSIRefBufferT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsSUSIRefBufferT_entityRef_get, _safplusCApi.ClAmsSUSIRefBufferT_entityRef_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSUSIRefBufferT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSUSIRefBufferT
    __del__ = lambda self : None;
ClAmsSUSIRefBufferT_swigregister = _safplusCApi.ClAmsSUSIRefBufferT_swigregister
ClAmsSUSIRefBufferT_swigregister(ClAmsSUSIRefBufferT)

class ClAmsSUSIExtendedRefBufferT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSUSIExtendedRefBufferT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSUSIExtendedRefBufferT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _safplusCApi.ClAmsSUSIExtendedRefBufferT_count_set
    __swig_getmethods__["count"] = _safplusCApi.ClAmsSUSIExtendedRefBufferT_count_get
    if _newclass:count = _swig_property(_safplusCApi.ClAmsSUSIExtendedRefBufferT_count_get, _safplusCApi.ClAmsSUSIExtendedRefBufferT_count_set)
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsSUSIExtendedRefBufferT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsSUSIExtendedRefBufferT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsSUSIExtendedRefBufferT_entityRef_get, _safplusCApi.ClAmsSUSIExtendedRefBufferT_entityRef_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSUSIExtendedRefBufferT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSUSIExtendedRefBufferT
    __del__ = lambda self : None;
ClAmsSUSIExtendedRefBufferT_swigregister = _safplusCApi.ClAmsSUSIExtendedRefBufferT_swigregister
ClAmsSUSIExtendedRefBufferT_swigregister(ClAmsSUSIExtendedRefBufferT)

class ClAmsSISURefBufferT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSISURefBufferT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSISURefBufferT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _safplusCApi.ClAmsSISURefBufferT_count_set
    __swig_getmethods__["count"] = _safplusCApi.ClAmsSISURefBufferT_count_get
    if _newclass:count = _swig_property(_safplusCApi.ClAmsSISURefBufferT_count_get, _safplusCApi.ClAmsSISURefBufferT_count_set)
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsSISURefBufferT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsSISURefBufferT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsSISURefBufferT_entityRef_get, _safplusCApi.ClAmsSISURefBufferT_entityRef_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSISURefBufferT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSISURefBufferT
    __del__ = lambda self : None;
ClAmsSISURefBufferT_swigregister = _safplusCApi.ClAmsSISURefBufferT_swigregister
ClAmsSISURefBufferT_swigregister(ClAmsSISURefBufferT)

class ClAmsSISUExtendedRefBufferT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSISUExtendedRefBufferT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSISUExtendedRefBufferT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _safplusCApi.ClAmsSISUExtendedRefBufferT_count_set
    __swig_getmethods__["count"] = _safplusCApi.ClAmsSISUExtendedRefBufferT_count_get
    if _newclass:count = _swig_property(_safplusCApi.ClAmsSISUExtendedRefBufferT_count_get, _safplusCApi.ClAmsSISUExtendedRefBufferT_count_set)
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsSISUExtendedRefBufferT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsSISUExtendedRefBufferT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsSISUExtendedRefBufferT_entityRef_get, _safplusCApi.ClAmsSISUExtendedRefBufferT_entityRef_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSISUExtendedRefBufferT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSISUExtendedRefBufferT
    __del__ = lambda self : None;
ClAmsSISUExtendedRefBufferT_swigregister = _safplusCApi.ClAmsSISUExtendedRefBufferT_swigregister
ClAmsSISUExtendedRefBufferT_swigregister(ClAmsSISUExtendedRefBufferT)

class ClAmsCompCSIRefBufferT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCompCSIRefBufferT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCompCSIRefBufferT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _safplusCApi.ClAmsCompCSIRefBufferT_count_set
    __swig_getmethods__["count"] = _safplusCApi.ClAmsCompCSIRefBufferT_count_get
    if _newclass:count = _swig_property(_safplusCApi.ClAmsCompCSIRefBufferT_count_get, _safplusCApi.ClAmsCompCSIRefBufferT_count_set)
    __swig_setmethods__["entityRef"] = _safplusCApi.ClAmsCompCSIRefBufferT_entityRef_set
    __swig_getmethods__["entityRef"] = _safplusCApi.ClAmsCompCSIRefBufferT_entityRef_get
    if _newclass:entityRef = _swig_property(_safplusCApi.ClAmsCompCSIRefBufferT_entityRef_get, _safplusCApi.ClAmsCompCSIRefBufferT_entityRef_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCompCSIRefBufferT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCompCSIRefBufferT
    __del__ = lambda self : None;
ClAmsCompCSIRefBufferT_swigregister = _safplusCApi.ClAmsCompCSIRefBufferT_swigregister
ClAmsCompCSIRefBufferT_swigregister(ClAmsCompCSIRefBufferT)

class clAmsMgmtGetEntityListRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, clAmsMgmtGetEntityListRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, clAmsMgmtGetEntityListRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _safplusCApi.clAmsMgmtGetEntityListRequestT_handle_set
    __swig_getmethods__["handle"] = _safplusCApi.clAmsMgmtGetEntityListRequestT_handle_get
    if _newclass:handle = _swig_property(_safplusCApi.clAmsMgmtGetEntityListRequestT_handle_get, _safplusCApi.clAmsMgmtGetEntityListRequestT_handle_set)
    __swig_setmethods__["entity"] = _safplusCApi.clAmsMgmtGetEntityListRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.clAmsMgmtGetEntityListRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.clAmsMgmtGetEntityListRequestT_entity_get, _safplusCApi.clAmsMgmtGetEntityListRequestT_entity_set)
    __swig_setmethods__["entityListName"] = _safplusCApi.clAmsMgmtGetEntityListRequestT_entityListName_set
    __swig_getmethods__["entityListName"] = _safplusCApi.clAmsMgmtGetEntityListRequestT_entityListName_get
    if _newclass:entityListName = _swig_property(_safplusCApi.clAmsMgmtGetEntityListRequestT_entityListName_get, _safplusCApi.clAmsMgmtGetEntityListRequestT_entityListName_set)
    def __init__(self): 
        this = _safplusCApi.new_clAmsMgmtGetEntityListRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_clAmsMgmtGetEntityListRequestT
    __del__ = lambda self : None;
clAmsMgmtGetEntityListRequestT_swigregister = _safplusCApi.clAmsMgmtGetEntityListRequestT_swigregister
clAmsMgmtGetEntityListRequestT_swigregister(clAmsMgmtGetEntityListRequestT)

class ClAmsMgmtMigrateListT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsMgmtMigrateListT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsMgmtMigrateListT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["si"] = _safplusCApi.ClAmsMgmtMigrateListT_si_set
    __swig_getmethods__["si"] = _safplusCApi.ClAmsMgmtMigrateListT_si_get
    if _newclass:si = _swig_property(_safplusCApi.ClAmsMgmtMigrateListT_si_get, _safplusCApi.ClAmsMgmtMigrateListT_si_set)
    __swig_setmethods__["csi"] = _safplusCApi.ClAmsMgmtMigrateListT_csi_set
    __swig_getmethods__["csi"] = _safplusCApi.ClAmsMgmtMigrateListT_csi_get
    if _newclass:csi = _swig_property(_safplusCApi.ClAmsMgmtMigrateListT_csi_get, _safplusCApi.ClAmsMgmtMigrateListT_csi_set)
    __swig_setmethods__["node"] = _safplusCApi.ClAmsMgmtMigrateListT_node_set
    __swig_getmethods__["node"] = _safplusCApi.ClAmsMgmtMigrateListT_node_get
    if _newclass:node = _swig_property(_safplusCApi.ClAmsMgmtMigrateListT_node_get, _safplusCApi.ClAmsMgmtMigrateListT_node_set)
    __swig_setmethods__["su"] = _safplusCApi.ClAmsMgmtMigrateListT_su_set
    __swig_getmethods__["su"] = _safplusCApi.ClAmsMgmtMigrateListT_su_get
    if _newclass:su = _swig_property(_safplusCApi.ClAmsMgmtMigrateListT_su_get, _safplusCApi.ClAmsMgmtMigrateListT_su_set)
    __swig_setmethods__["comp"] = _safplusCApi.ClAmsMgmtMigrateListT_comp_set
    __swig_getmethods__["comp"] = _safplusCApi.ClAmsMgmtMigrateListT_comp_get
    if _newclass:comp = _swig_property(_safplusCApi.ClAmsMgmtMigrateListT_comp_get, _safplusCApi.ClAmsMgmtMigrateListT_comp_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsMgmtMigrateListT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsMgmtMigrateListT
    __del__ = lambda self : None;
ClAmsMgmtMigrateListT_swigregister = _safplusCApi.ClAmsMgmtMigrateListT_swigregister
ClAmsMgmtMigrateListT_swigregister(ClAmsMgmtMigrateListT)

class ClAmsMgmtMigrateRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsMgmtMigrateRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsMgmtMigrateRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sg"] = _safplusCApi.ClAmsMgmtMigrateRequestT_sg_set
    __swig_getmethods__["sg"] = _safplusCApi.ClAmsMgmtMigrateRequestT_sg_get
    if _newclass:sg = _swig_property(_safplusCApi.ClAmsMgmtMigrateRequestT_sg_get, _safplusCApi.ClAmsMgmtMigrateRequestT_sg_set)
    __swig_setmethods__["prefix"] = _safplusCApi.ClAmsMgmtMigrateRequestT_prefix_set
    __swig_getmethods__["prefix"] = _safplusCApi.ClAmsMgmtMigrateRequestT_prefix_get
    if _newclass:prefix = _swig_property(_safplusCApi.ClAmsMgmtMigrateRequestT_prefix_get, _safplusCApi.ClAmsMgmtMigrateRequestT_prefix_set)
    __swig_setmethods__["activeSUs"] = _safplusCApi.ClAmsMgmtMigrateRequestT_activeSUs_set
    __swig_getmethods__["activeSUs"] = _safplusCApi.ClAmsMgmtMigrateRequestT_activeSUs_get
    if _newclass:activeSUs = _swig_property(_safplusCApi.ClAmsMgmtMigrateRequestT_activeSUs_get, _safplusCApi.ClAmsMgmtMigrateRequestT_activeSUs_set)
    __swig_setmethods__["standbySUs"] = _safplusCApi.ClAmsMgmtMigrateRequestT_standbySUs_set
    __swig_getmethods__["standbySUs"] = _safplusCApi.ClAmsMgmtMigrateRequestT_standbySUs_get
    if _newclass:standbySUs = _swig_property(_safplusCApi.ClAmsMgmtMigrateRequestT_standbySUs_get, _safplusCApi.ClAmsMgmtMigrateRequestT_standbySUs_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsMgmtMigrateRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsMgmtMigrateRequestT
    __del__ = lambda self : None;
ClAmsMgmtMigrateRequestT_swigregister = _safplusCApi.ClAmsMgmtMigrateRequestT_swigregister
ClAmsMgmtMigrateRequestT_swigregister(ClAmsMgmtMigrateRequestT)

class ClAmsMgmtMigrateResponseT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsMgmtMigrateResponseT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsMgmtMigrateResponseT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["migrateList"] = _safplusCApi.ClAmsMgmtMigrateResponseT_migrateList_set
    __swig_getmethods__["migrateList"] = _safplusCApi.ClAmsMgmtMigrateResponseT_migrateList_get
    if _newclass:migrateList = _swig_property(_safplusCApi.ClAmsMgmtMigrateResponseT_migrateList_get, _safplusCApi.ClAmsMgmtMigrateResponseT_migrateList_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsMgmtMigrateResponseT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsMgmtMigrateResponseT
    __del__ = lambda self : None;
ClAmsMgmtMigrateResponseT_swigregister = _safplusCApi.ClAmsMgmtMigrateResponseT_swigregister
ClAmsMgmtMigrateResponseT_swigregister(ClAmsMgmtMigrateResponseT)

class ClAmsMgmtUserDataSetRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsMgmtUserDataSetRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsMgmtUserDataSetRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsMgmtUserDataSetRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsMgmtUserDataSetRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsMgmtUserDataSetRequestT_entity_get, _safplusCApi.ClAmsMgmtUserDataSetRequestT_entity_set)
    __swig_setmethods__["key"] = _safplusCApi.ClAmsMgmtUserDataSetRequestT_key_set
    __swig_getmethods__["key"] = _safplusCApi.ClAmsMgmtUserDataSetRequestT_key_get
    if _newclass:key = _swig_property(_safplusCApi.ClAmsMgmtUserDataSetRequestT_key_get, _safplusCApi.ClAmsMgmtUserDataSetRequestT_key_set)
    __swig_setmethods__["data"] = _safplusCApi.ClAmsMgmtUserDataSetRequestT_data_set
    __swig_getmethods__["data"] = _safplusCApi.ClAmsMgmtUserDataSetRequestT_data_get
    if _newclass:data = _swig_property(_safplusCApi.ClAmsMgmtUserDataSetRequestT_data_get, _safplusCApi.ClAmsMgmtUserDataSetRequestT_data_set)
    __swig_setmethods__["len"] = _safplusCApi.ClAmsMgmtUserDataSetRequestT_len_set
    __swig_getmethods__["len"] = _safplusCApi.ClAmsMgmtUserDataSetRequestT_len_get
    if _newclass:len = _swig_property(_safplusCApi.ClAmsMgmtUserDataSetRequestT_len_get, _safplusCApi.ClAmsMgmtUserDataSetRequestT_len_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsMgmtUserDataSetRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsMgmtUserDataSetRequestT
    __del__ = lambda self : None;
ClAmsMgmtUserDataSetRequestT_swigregister = _safplusCApi.ClAmsMgmtUserDataSetRequestT_swigregister
ClAmsMgmtUserDataSetRequestT_swigregister(ClAmsMgmtUserDataSetRequestT)

class ClAmsMgmtUserDataGetRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsMgmtUserDataGetRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsMgmtUserDataGetRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsMgmtUserDataGetRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsMgmtUserDataGetRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsMgmtUserDataGetRequestT_entity_get, _safplusCApi.ClAmsMgmtUserDataGetRequestT_entity_set)
    __swig_setmethods__["key"] = _safplusCApi.ClAmsMgmtUserDataGetRequestT_key_set
    __swig_getmethods__["key"] = _safplusCApi.ClAmsMgmtUserDataGetRequestT_key_get
    if _newclass:key = _swig_property(_safplusCApi.ClAmsMgmtUserDataGetRequestT_key_get, _safplusCApi.ClAmsMgmtUserDataGetRequestT_key_set)
    __swig_setmethods__["data"] = _safplusCApi.ClAmsMgmtUserDataGetRequestT_data_set
    __swig_getmethods__["data"] = _safplusCApi.ClAmsMgmtUserDataGetRequestT_data_get
    if _newclass:data = _swig_property(_safplusCApi.ClAmsMgmtUserDataGetRequestT_data_get, _safplusCApi.ClAmsMgmtUserDataGetRequestT_data_set)
    __swig_setmethods__["len"] = _safplusCApi.ClAmsMgmtUserDataGetRequestT_len_set
    __swig_getmethods__["len"] = _safplusCApi.ClAmsMgmtUserDataGetRequestT_len_get
    if _newclass:len = _swig_property(_safplusCApi.ClAmsMgmtUserDataGetRequestT_len_get, _safplusCApi.ClAmsMgmtUserDataGetRequestT_len_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsMgmtUserDataGetRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsMgmtUserDataGetRequestT
    __del__ = lambda self : None;
ClAmsMgmtUserDataGetRequestT_swigregister = _safplusCApi.ClAmsMgmtUserDataGetRequestT_swigregister
ClAmsMgmtUserDataGetRequestT_swigregister(ClAmsMgmtUserDataGetRequestT)

class ClAmsMgmtUserDataDeleteRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsMgmtUserDataDeleteRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsMgmtUserDataDeleteRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsMgmtUserDataDeleteRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsMgmtUserDataDeleteRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsMgmtUserDataDeleteRequestT_entity_get, _safplusCApi.ClAmsMgmtUserDataDeleteRequestT_entity_set)
    __swig_setmethods__["key"] = _safplusCApi.ClAmsMgmtUserDataDeleteRequestT_key_set
    __swig_getmethods__["key"] = _safplusCApi.ClAmsMgmtUserDataDeleteRequestT_key_get
    if _newclass:key = _swig_property(_safplusCApi.ClAmsMgmtUserDataDeleteRequestT_key_get, _safplusCApi.ClAmsMgmtUserDataDeleteRequestT_key_set)
    __swig_setmethods__["clear"] = _safplusCApi.ClAmsMgmtUserDataDeleteRequestT_clear_set
    __swig_getmethods__["clear"] = _safplusCApi.ClAmsMgmtUserDataDeleteRequestT_clear_get
    if _newclass:clear = _swig_property(_safplusCApi.ClAmsMgmtUserDataDeleteRequestT_clear_get, _safplusCApi.ClAmsMgmtUserDataDeleteRequestT_clear_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsMgmtUserDataDeleteRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsMgmtUserDataDeleteRequestT
    __del__ = lambda self : None;
ClAmsMgmtUserDataDeleteRequestT_swigregister = _safplusCApi.ClAmsMgmtUserDataDeleteRequestT_swigregister
ClAmsMgmtUserDataDeleteRequestT_swigregister(ClAmsMgmtUserDataDeleteRequestT)

class ClAmsMgmtSIAssignSUCustomRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsMgmtSIAssignSUCustomRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsMgmtSIAssignSUCustomRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["si"] = _safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_si_set
    __swig_getmethods__["si"] = _safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_si_get
    if _newclass:si = _swig_property(_safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_si_get, _safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_si_set)
    __swig_setmethods__["activeSU"] = _safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_activeSU_set
    __swig_getmethods__["activeSU"] = _safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_activeSU_get
    if _newclass:activeSU = _swig_property(_safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_activeSU_get, _safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_activeSU_set)
    __swig_setmethods__["standbySU"] = _safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_standbySU_set
    __swig_getmethods__["standbySU"] = _safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_standbySU_get
    if _newclass:standbySU = _swig_property(_safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_standbySU_get, _safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_standbySU_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsMgmtSIAssignSUCustomRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsMgmtSIAssignSUCustomRequestT
    __del__ = lambda self : None;
ClAmsMgmtSIAssignSUCustomRequestT_swigregister = _safplusCApi.ClAmsMgmtSIAssignSUCustomRequestT_swigregister
ClAmsMgmtSIAssignSUCustomRequestT_swigregister(ClAmsMgmtSIAssignSUCustomRequestT)

class ClAmsMgmtDBGetResponseT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsMgmtDBGetResponseT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsMgmtDBGetResponseT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["len"] = _safplusCApi.ClAmsMgmtDBGetResponseT_len_set
    __swig_getmethods__["len"] = _safplusCApi.ClAmsMgmtDBGetResponseT_len_get
    if _newclass:len = _swig_property(_safplusCApi.ClAmsMgmtDBGetResponseT_len_get, _safplusCApi.ClAmsMgmtDBGetResponseT_len_set)
    __swig_setmethods__["buffer"] = _safplusCApi.ClAmsMgmtDBGetResponseT_buffer_set
    __swig_getmethods__["buffer"] = _safplusCApi.ClAmsMgmtDBGetResponseT_buffer_get
    if _newclass:buffer = _swig_property(_safplusCApi.ClAmsMgmtDBGetResponseT_buffer_get, _safplusCApi.ClAmsMgmtDBGetResponseT_buffer_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsMgmtDBGetResponseT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsMgmtDBGetResponseT
    __del__ = lambda self : None;
ClAmsMgmtDBGetResponseT_swigregister = _safplusCApi.ClAmsMgmtDBGetResponseT_swigregister
ClAmsMgmtDBGetResponseT_swigregister(ClAmsMgmtDBGetResponseT)

class ClAmsMgmtCASGetRequestT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsMgmtCASGetRequestT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsMgmtCASGetRequestT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["entity"] = _safplusCApi.ClAmsMgmtCASGetRequestT_entity_set
    __swig_getmethods__["entity"] = _safplusCApi.ClAmsMgmtCASGetRequestT_entity_get
    if _newclass:entity = _swig_property(_safplusCApi.ClAmsMgmtCASGetRequestT_entity_get, _safplusCApi.ClAmsMgmtCASGetRequestT_entity_set)
    __swig_setmethods__["computedAdminState"] = _safplusCApi.ClAmsMgmtCASGetRequestT_computedAdminState_set
    __swig_getmethods__["computedAdminState"] = _safplusCApi.ClAmsMgmtCASGetRequestT_computedAdminState_get
    if _newclass:computedAdminState = _swig_property(_safplusCApi.ClAmsMgmtCASGetRequestT_computedAdminState_get, _safplusCApi.ClAmsMgmtCASGetRequestT_computedAdminState_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsMgmtCASGetRequestT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsMgmtCASGetRequestT
    __del__ = lambda self : None;
ClAmsMgmtCASGetRequestT_swigregister = _safplusCApi.ClAmsMgmtCASGetRequestT_swigregister
ClAmsMgmtCASGetRequestT_swigregister(ClAmsMgmtCASGetRequestT)

CL_AMS_CONFIG_ATTR_ALL = _safplusCApi.CL_AMS_CONFIG_ATTR_ALL
NODE_CONFIG_ADMIN_STATE = _safplusCApi.NODE_CONFIG_ADMIN_STATE
NODE_CONFIG_ID = _safplusCApi.NODE_CONFIG_ID
NODE_CONFIG_CLASS_TYPE = _safplusCApi.NODE_CONFIG_CLASS_TYPE
NODE_CONFIG_SUB_CLASS_TYPE = _safplusCApi.NODE_CONFIG_SUB_CLASS_TYPE
NODE_CONFIG_IS_SWAPPABLE = _safplusCApi.NODE_CONFIG_IS_SWAPPABLE
NODE_CONFIG_IS_RESTARTABLE = _safplusCApi.NODE_CONFIG_IS_RESTARTABLE
NODE_CONFIG_AUTO_REPAIR = _safplusCApi.NODE_CONFIG_AUTO_REPAIR
NODE_CONFIG_IS_ASP_AWARE = _safplusCApi.NODE_CONFIG_IS_ASP_AWARE
NODE_CONFIG_SU_FAILOVER_DURATION = _safplusCApi.NODE_CONFIG_SU_FAILOVER_DURATION
NODE_CONFIG_SU_FAILOVER_COUNT_MAX = _safplusCApi.NODE_CONFIG_SU_FAILOVER_COUNT_MAX
SG_CONFIG_ADMIN_STATE = _safplusCApi.SG_CONFIG_ADMIN_STATE
SG_CONFIG_REDUNDANCY_MODEL = _safplusCApi.SG_CONFIG_REDUNDANCY_MODEL
SG_CONFIG_LOADING_STRATEGY = _safplusCApi.SG_CONFIG_LOADING_STRATEGY
SG_CONFIG_FAILBACK_OPTION = _safplusCApi.SG_CONFIG_FAILBACK_OPTION
SG_CONFIG_AUTO_REPAIR = _safplusCApi.SG_CONFIG_AUTO_REPAIR
SG_CONFIG_INSTANTIATE_DURATION = _safplusCApi.SG_CONFIG_INSTANTIATE_DURATION
SG_CONFIG_NUM_PREF_ACTIVE_SUS = _safplusCApi.SG_CONFIG_NUM_PREF_ACTIVE_SUS
SG_CONFIG_NUM_PREF_STANDBY_SUS = _safplusCApi.SG_CONFIG_NUM_PREF_STANDBY_SUS
SG_CONFIG_NUM_PREF_INSERVICE_SUS = _safplusCApi.SG_CONFIG_NUM_PREF_INSERVICE_SUS
SG_CONFIG_NUM_PREF_ASSIGNED_SUS = _safplusCApi.SG_CONFIG_NUM_PREF_ASSIGNED_SUS
SG_CONFIG_NUM_PREF_ACTIVE_SUS_PER_SI = _safplusCApi.SG_CONFIG_NUM_PREF_ACTIVE_SUS_PER_SI
SG_CONFIG_MAX_ACTIVE_SIS_PER_SU = _safplusCApi.SG_CONFIG_MAX_ACTIVE_SIS_PER_SU
SG_CONFIG_MAX_STANDBY_SIS_PER_SU = _safplusCApi.SG_CONFIG_MAX_STANDBY_SIS_PER_SU
SG_CONFIG_COMP_RESTART_DURATION = _safplusCApi.SG_CONFIG_COMP_RESTART_DURATION
SG_CONFIG_COMP_RESTART_COUNT_MAX = _safplusCApi.SG_CONFIG_COMP_RESTART_COUNT_MAX
SG_CONFIG_SU_RESTART_DURATION = _safplusCApi.SG_CONFIG_SU_RESTART_DURATION
SG_CONFIG_SU_RESTART_COUNT_MAX = _safplusCApi.SG_CONFIG_SU_RESTART_COUNT_MAX
SG_CONFIG_REDUCTION_PROCEDURE = _safplusCApi.SG_CONFIG_REDUCTION_PROCEDURE
SG_CONFIG_COLOCATION_ALLOWED = _safplusCApi.SG_CONFIG_COLOCATION_ALLOWED
SG_CONFIG_AUTO_ADJUST = _safplusCApi.SG_CONFIG_AUTO_ADJUST
SG_CONFIG_AUTO_ADJUST_PROBATION = _safplusCApi.SG_CONFIG_AUTO_ADJUST_PROBATION
SG_CONFIG_ALPHA_FACTOR = _safplusCApi.SG_CONFIG_ALPHA_FACTOR
SG_CONFIG_MAX_FAILOVERS = _safplusCApi.SG_CONFIG_MAX_FAILOVERS
SG_CONFIG_FAILOVER_DURATION = _safplusCApi.SG_CONFIG_FAILOVER_DURATION
SG_CONFIG_BETA_FACTOR = _safplusCApi.SG_CONFIG_BETA_FACTOR
SU_CONFIG_ADMIN_STATE = _safplusCApi.SU_CONFIG_ADMIN_STATE
SU_CONFIG_RANK = _safplusCApi.SU_CONFIG_RANK
SU_CONFIG_NUM_COMPONENTS = _safplusCApi.SU_CONFIG_NUM_COMPONENTS
SU_CONFIG_IS_PREINSTANTIABLE = _safplusCApi.SU_CONFIG_IS_PREINSTANTIABLE
SU_CONFIG_IS_RESTARTABLE = _safplusCApi.SU_CONFIG_IS_RESTARTABLE
SU_CONFIG_IS_CONTAINER_SU = _safplusCApi.SU_CONFIG_IS_CONTAINER_SU
SI_CONFIG_ADMIN_STATE = _safplusCApi.SI_CONFIG_ADMIN_STATE
SI_CONFIG_RANK = _safplusCApi.SI_CONFIG_RANK
SI_CONFIG_NUM_CSIS = _safplusCApi.SI_CONFIG_NUM_CSIS
SI_CONFIG_NUM_STANDBY_ASSIGNMENTS = _safplusCApi.SI_CONFIG_NUM_STANDBY_ASSIGNMENTS
SI_CONFIG_STANDBY_ASSIGNMENT_ORDER = _safplusCApi.SI_CONFIG_STANDBY_ASSIGNMENT_ORDER
COMP_CONFIG_SUPPORTED_CSI_TYPE = _safplusCApi.COMP_CONFIG_SUPPORTED_CSI_TYPE
COMP_CONFIG_PROXY_CSI_TYPE = _safplusCApi.COMP_CONFIG_PROXY_CSI_TYPE
COMP_CONFIG_CAPABILITY_MODEL = _safplusCApi.COMP_CONFIG_CAPABILITY_MODEL
COMP_CONFIG_PROPERTY = _safplusCApi.COMP_CONFIG_PROPERTY
COMP_CONFIG_IS_RESTARTABLE = _safplusCApi.COMP_CONFIG_IS_RESTARTABLE
COMP_CONFIG_NODE_REBOOT_CLEANUP_FAIL = _safplusCApi.COMP_CONFIG_NODE_REBOOT_CLEANUP_FAIL
COMP_CONFIG_INSTANTIATE_LEVEL = _safplusCApi.COMP_CONFIG_INSTANTIATE_LEVEL
COMP_CONFIG_NUM_MAX_INSTANTIATE = _safplusCApi.COMP_CONFIG_NUM_MAX_INSTANTIATE
COMP_CONFIG_NUM_MAX_INSTANTIATE_WITH_DELAY = _safplusCApi.COMP_CONFIG_NUM_MAX_INSTANTIATE_WITH_DELAY
COMP_CONFIG_NUM_MAX_TERMINATE = _safplusCApi.COMP_CONFIG_NUM_MAX_TERMINATE
COMP_CONFIG_NUM_MAX_AM_START = _safplusCApi.COMP_CONFIG_NUM_MAX_AM_START
COMP_CONFIG_NUM_MAX_AM_STOP = _safplusCApi.COMP_CONFIG_NUM_MAX_AM_STOP
COMP_CONFIG_NUM_MAX_ACTIVE_CSIS = _safplusCApi.COMP_CONFIG_NUM_MAX_ACTIVE_CSIS
COMP_CONFIG_NUM_MAX_STANDBY_CSIS = _safplusCApi.COMP_CONFIG_NUM_MAX_STANDBY_CSIS
COMP_CONFIG_TIMEOUTS = _safplusCApi.COMP_CONFIG_TIMEOUTS
COMP_CONFIG_RECOVERY_ON_TIMEOUT = _safplusCApi.COMP_CONFIG_RECOVERY_ON_TIMEOUT
COMP_CONFIG_PARENT_SU = _safplusCApi.COMP_CONFIG_PARENT_SU
COMP_CONFIG_INSTANTIATE_COMMAND = _safplusCApi.COMP_CONFIG_INSTANTIATE_COMMAND
CSI_CONFIG_TYPE = _safplusCApi.CSI_CONFIG_TYPE
CSI_CONFIG_IS_PROXY_CSI = _safplusCApi.CSI_CONFIG_IS_PROXY_CSI
CSI_CONFIG_RANK = _safplusCApi.CSI_CONFIG_RANK
ASP_INSTALL_KEY = _safplusCApi.ASP_INSTALL_KEY
class ClAmsMgmtCallbacksT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsMgmtCallbacksT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsMgmtCallbacksT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nothingForNow"] = _safplusCApi.ClAmsMgmtCallbacksT_nothingForNow_set
    __swig_getmethods__["nothingForNow"] = _safplusCApi.ClAmsMgmtCallbacksT_nothingForNow_get
    if _newclass:nothingForNow = _swig_property(_safplusCApi.ClAmsMgmtCallbacksT_nothingForNow_get, _safplusCApi.ClAmsMgmtCallbacksT_nothingForNow_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsMgmtCallbacksT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsMgmtCallbacksT
    __del__ = lambda self : None;
ClAmsMgmtCallbacksT_swigregister = _safplusCApi.ClAmsMgmtCallbacksT_swigregister
ClAmsMgmtCallbacksT_swigregister(ClAmsMgmtCallbacksT)


def clAmsMgmtFinalize(*args):
  return _safplusCApi.clAmsMgmtFinalize(*args)
clAmsMgmtFinalize = _safplusCApi.clAmsMgmtFinalize

def clAmsMgmtEntityLockAssignment(*args):
  return _safplusCApi.clAmsMgmtEntityLockAssignment(*args)
clAmsMgmtEntityLockAssignment = _safplusCApi.clAmsMgmtEntityLockAssignment

def clAmsMgmtEntityLockAssignmentExtended(*args):
  return _safplusCApi.clAmsMgmtEntityLockAssignmentExtended(*args)
clAmsMgmtEntityLockAssignmentExtended = _safplusCApi.clAmsMgmtEntityLockAssignmentExtended

def clAmsMgmtEntityLockInstantiation(*args):
  return _safplusCApi.clAmsMgmtEntityLockInstantiation(*args)
clAmsMgmtEntityLockInstantiation = _safplusCApi.clAmsMgmtEntityLockInstantiation

def clAmsMgmtEntityLockInstantiationExtended(*args):
  return _safplusCApi.clAmsMgmtEntityLockInstantiationExtended(*args)
clAmsMgmtEntityLockInstantiationExtended = _safplusCApi.clAmsMgmtEntityLockInstantiationExtended

def clAmsMgmtEntityForceLockInstantiation(*args):
  return _safplusCApi.clAmsMgmtEntityForceLockInstantiation(*args)
clAmsMgmtEntityForceLockInstantiation = _safplusCApi.clAmsMgmtEntityForceLockInstantiation

def clAmsMgmtEntityForceLockInstantiationExtended(*args):
  return _safplusCApi.clAmsMgmtEntityForceLockInstantiationExtended(*args)
clAmsMgmtEntityForceLockInstantiationExtended = _safplusCApi.clAmsMgmtEntityForceLockInstantiationExtended

def clAmsMgmtEntityUnlock(*args):
  return _safplusCApi.clAmsMgmtEntityUnlock(*args)
clAmsMgmtEntityUnlock = _safplusCApi.clAmsMgmtEntityUnlock

def clAmsMgmtEntityUnlockExtended(*args):
  return _safplusCApi.clAmsMgmtEntityUnlockExtended(*args)
clAmsMgmtEntityUnlockExtended = _safplusCApi.clAmsMgmtEntityUnlockExtended

def clAmsMgmtEntityShutdown(*args):
  return _safplusCApi.clAmsMgmtEntityShutdown(*args)
clAmsMgmtEntityShutdown = _safplusCApi.clAmsMgmtEntityShutdown

def clAmsMgmtEntityShutdownExtended(*args):
  return _safplusCApi.clAmsMgmtEntityShutdownExtended(*args)
clAmsMgmtEntityShutdownExtended = _safplusCApi.clAmsMgmtEntityShutdownExtended

def clAmsMgmtEntityShutdownWithRestart(*args):
  return _safplusCApi.clAmsMgmtEntityShutdownWithRestart(*args)
clAmsMgmtEntityShutdownWithRestart = _safplusCApi.clAmsMgmtEntityShutdownWithRestart

def clAmsMgmtEntityShutdownWithRestartExtended(*args):
  return _safplusCApi.clAmsMgmtEntityShutdownWithRestartExtended(*args)
clAmsMgmtEntityShutdownWithRestartExtended = _safplusCApi.clAmsMgmtEntityShutdownWithRestartExtended

def clAmsMgmtEntityRestart(*args):
  return _safplusCApi.clAmsMgmtEntityRestart(*args)
clAmsMgmtEntityRestart = _safplusCApi.clAmsMgmtEntityRestart

def clAmsMgmtEntityRestartExtended(*args):
  return _safplusCApi.clAmsMgmtEntityRestartExtended(*args)
clAmsMgmtEntityRestartExtended = _safplusCApi.clAmsMgmtEntityRestartExtended

def clAmsMgmtEntityRepaired(*args):
  return _safplusCApi.clAmsMgmtEntityRepaired(*args)
clAmsMgmtEntityRepaired = _safplusCApi.clAmsMgmtEntityRepaired

def clAmsMgmtEntityRepairedExtended(*args):
  return _safplusCApi.clAmsMgmtEntityRepairedExtended(*args)
clAmsMgmtEntityRepairedExtended = _safplusCApi.clAmsMgmtEntityRepairedExtended

def clAmsMgmtSISwap(*args):
  return _safplusCApi.clAmsMgmtSISwap(*args)
clAmsMgmtSISwap = _safplusCApi.clAmsMgmtSISwap

def clAmsMgmtSISwapExtended(*args):
  return _safplusCApi.clAmsMgmtSISwapExtended(*args)
clAmsMgmtSISwapExtended = _safplusCApi.clAmsMgmtSISwapExtended

def clAmsMgmtSGAdjust(*args):
  return _safplusCApi.clAmsMgmtSGAdjust(*args)
clAmsMgmtSGAdjust = _safplusCApi.clAmsMgmtSGAdjust

def clAmsMgmtSGAdjustExtended(*args):
  return _safplusCApi.clAmsMgmtSGAdjustExtended(*args)
clAmsMgmtSGAdjustExtended = _safplusCApi.clAmsMgmtSGAdjustExtended

def clAmsMgmtDebugEnable(*args):
  return _safplusCApi.clAmsMgmtDebugEnable(*args)
clAmsMgmtDebugEnable = _safplusCApi.clAmsMgmtDebugEnable

def clAmsMgmtDebugDisable(*args):
  return _safplusCApi.clAmsMgmtDebugDisable(*args)
clAmsMgmtDebugDisable = _safplusCApi.clAmsMgmtDebugDisable

def clAmsMgmtDebugGet(*args):
  return _safplusCApi.clAmsMgmtDebugGet(*args)
clAmsMgmtDebugGet = _safplusCApi.clAmsMgmtDebugGet

def clAmsMgmtDebugEnableLogToConsole(*args):
  return _safplusCApi.clAmsMgmtDebugEnableLogToConsole(*args)
clAmsMgmtDebugEnableLogToConsole = _safplusCApi.clAmsMgmtDebugEnableLogToConsole

def clAmsMgmtDebugDisableLogToConsole(*args):
  return _safplusCApi.clAmsMgmtDebugDisableLogToConsole(*args)
clAmsMgmtDebugDisableLogToConsole = _safplusCApi.clAmsMgmtDebugDisableLogToConsole

def clAmsMgmtEntitySetAlphaFactor(*args):
  return _safplusCApi.clAmsMgmtEntitySetAlphaFactor(*args)
clAmsMgmtEntitySetAlphaFactor = _safplusCApi.clAmsMgmtEntitySetAlphaFactor

def clAmsMgmtEntitySetBetaFactor(*args):
  return _safplusCApi.clAmsMgmtEntitySetBetaFactor(*args)
clAmsMgmtEntitySetBetaFactor = _safplusCApi.clAmsMgmtEntitySetBetaFactor

def clAmsMgmtCCBFinalize(*args):
  return _safplusCApi.clAmsMgmtCCBFinalize(*args)
clAmsMgmtCCBFinalize = _safplusCApi.clAmsMgmtCCBFinalize

def clAmsMgmtCCBCommit(*args):
  return _safplusCApi.clAmsMgmtCCBCommit(*args)
clAmsMgmtCCBCommit = _safplusCApi.clAmsMgmtCCBCommit

def clAmsMgmtCCBEntityCreate(*args):
  return _safplusCApi.clAmsMgmtCCBEntityCreate(*args)
clAmsMgmtCCBEntityCreate = _safplusCApi.clAmsMgmtCCBEntityCreate

def clAmsMgmtCCBEntityDelete(*args):
  return _safplusCApi.clAmsMgmtCCBEntityDelete(*args)
clAmsMgmtCCBEntityDelete = _safplusCApi.clAmsMgmtCCBEntityDelete

def clAmsMgmtCCBEntitySetConfig(*args):
  return _safplusCApi.clAmsMgmtCCBEntitySetConfig(*args)
clAmsMgmtCCBEntitySetConfig = _safplusCApi.clAmsMgmtCCBEntitySetConfig

def clAmsMgmtCCBCSISetNVP(*args):
  return _safplusCApi.clAmsMgmtCCBCSISetNVP(*args)
clAmsMgmtCCBCSISetNVP = _safplusCApi.clAmsMgmtCCBCSISetNVP

def clAmsMgmtCCBCSIDeleteNVP(*args):
  return _safplusCApi.clAmsMgmtCCBCSIDeleteNVP(*args)
clAmsMgmtCCBCSIDeleteNVP = _safplusCApi.clAmsMgmtCCBCSIDeleteNVP

def clAmsMgmtCCBSetNodeDependency(*args):
  return _safplusCApi.clAmsMgmtCCBSetNodeDependency(*args)
clAmsMgmtCCBSetNodeDependency = _safplusCApi.clAmsMgmtCCBSetNodeDependency

def clAmsMgmtCCBDeleteNodeDependency(*args):
  return _safplusCApi.clAmsMgmtCCBDeleteNodeDependency(*args)
clAmsMgmtCCBDeleteNodeDependency = _safplusCApi.clAmsMgmtCCBDeleteNodeDependency

def clAmsMgmtCCBSetNodeSUList(*args):
  return _safplusCApi.clAmsMgmtCCBSetNodeSUList(*args)
clAmsMgmtCCBSetNodeSUList = _safplusCApi.clAmsMgmtCCBSetNodeSUList

def clAmsMgmtCCBDeleteNodeSUList(*args):
  return _safplusCApi.clAmsMgmtCCBDeleteNodeSUList(*args)
clAmsMgmtCCBDeleteNodeSUList = _safplusCApi.clAmsMgmtCCBDeleteNodeSUList

def clAmsMgmtCCBSetSGSUList(*args):
  return _safplusCApi.clAmsMgmtCCBSetSGSUList(*args)
clAmsMgmtCCBSetSGSUList = _safplusCApi.clAmsMgmtCCBSetSGSUList

def clAmsMgmtCCBDeleteSGSUList(*args):
  return _safplusCApi.clAmsMgmtCCBDeleteSGSUList(*args)
clAmsMgmtCCBDeleteSGSUList = _safplusCApi.clAmsMgmtCCBDeleteSGSUList

def clAmsMgmtCCBSetSGSIList(*args):
  return _safplusCApi.clAmsMgmtCCBSetSGSIList(*args)
clAmsMgmtCCBSetSGSIList = _safplusCApi.clAmsMgmtCCBSetSGSIList

def clAmsMgmtCCBDeleteSGSIList(*args):
  return _safplusCApi.clAmsMgmtCCBDeleteSGSIList(*args)
clAmsMgmtCCBDeleteSGSIList = _safplusCApi.clAmsMgmtCCBDeleteSGSIList

def clAmsMgmtCCBSetSUCompList(*args):
  return _safplusCApi.clAmsMgmtCCBSetSUCompList(*args)
clAmsMgmtCCBSetSUCompList = _safplusCApi.clAmsMgmtCCBSetSUCompList

def clAmsMgmtCCBDeleteSUCompList(*args):
  return _safplusCApi.clAmsMgmtCCBDeleteSUCompList(*args)
clAmsMgmtCCBDeleteSUCompList = _safplusCApi.clAmsMgmtCCBDeleteSUCompList

def clAmsMgmtCCBSetSISURankList(*args):
  return _safplusCApi.clAmsMgmtCCBSetSISURankList(*args)
clAmsMgmtCCBSetSISURankList = _safplusCApi.clAmsMgmtCCBSetSISURankList

def clAmsMgmtCCBDeleteSISURankList(*args):
  return _safplusCApi.clAmsMgmtCCBDeleteSISURankList(*args)
clAmsMgmtCCBDeleteSISURankList = _safplusCApi.clAmsMgmtCCBDeleteSISURankList

def clAmsMgmtCCBSetSIDependency(*args):
  return _safplusCApi.clAmsMgmtCCBSetSIDependency(*args)
clAmsMgmtCCBSetSIDependency = _safplusCApi.clAmsMgmtCCBSetSIDependency

def clAmsMgmtCCBDeleteSIDependency(*args):
  return _safplusCApi.clAmsMgmtCCBDeleteSIDependency(*args)
clAmsMgmtCCBDeleteSIDependency = _safplusCApi.clAmsMgmtCCBDeleteSIDependency

def clAmsMgmtCCBSetCSIDependency(*args):
  return _safplusCApi.clAmsMgmtCCBSetCSIDependency(*args)
clAmsMgmtCCBSetCSIDependency = _safplusCApi.clAmsMgmtCCBSetCSIDependency

def clAmsMgmtCCBDeleteCSIDependency(*args):
  return _safplusCApi.clAmsMgmtCCBDeleteCSIDependency(*args)
clAmsMgmtCCBDeleteCSIDependency = _safplusCApi.clAmsMgmtCCBDeleteCSIDependency

def clAmsMgmtCCBSetSICSIList(*args):
  return _safplusCApi.clAmsMgmtCCBSetSICSIList(*args)
clAmsMgmtCCBSetSICSIList = _safplusCApi.clAmsMgmtCCBSetSICSIList

def clAmsMgmtCCBDeleteSICSIList(*args):
  return _safplusCApi.clAmsMgmtCCBDeleteSICSIList(*args)
clAmsMgmtCCBDeleteSICSIList = _safplusCApi.clAmsMgmtCCBDeleteSICSIList

def clAmsMgmtNodeGetStatus(*args):
  return _safplusCApi.clAmsMgmtNodeGetStatus(*args)
clAmsMgmtNodeGetStatus = _safplusCApi.clAmsMgmtNodeGetStatus

def clAmsMgmtServiceGroupGetStatus(*args):
  return _safplusCApi.clAmsMgmtServiceGroupGetStatus(*args)
clAmsMgmtServiceGroupGetStatus = _safplusCApi.clAmsMgmtServiceGroupGetStatus

def clAmsMgmtServiceUnitGetStatus(*args):
  return _safplusCApi.clAmsMgmtServiceUnitGetStatus(*args)
clAmsMgmtServiceUnitGetStatus = _safplusCApi.clAmsMgmtServiceUnitGetStatus

def clAmsMgmtServiceInstanceGetStatus(*args):
  return _safplusCApi.clAmsMgmtServiceInstanceGetStatus(*args)
clAmsMgmtServiceInstanceGetStatus = _safplusCApi.clAmsMgmtServiceInstanceGetStatus

def clAmsMgmtCompGetStatus(*args):
  return _safplusCApi.clAmsMgmtCompGetStatus(*args)
clAmsMgmtCompGetStatus = _safplusCApi.clAmsMgmtCompGetStatus

def clAmsMgmtGetList(*args):
  return _safplusCApi.clAmsMgmtGetList(*args)
clAmsMgmtGetList = _safplusCApi.clAmsMgmtGetList

def clAmsMgmtGetCSIDependenciesList(*args):
  return _safplusCApi.clAmsMgmtGetCSIDependenciesList(*args)
clAmsMgmtGetCSIDependenciesList = _safplusCApi.clAmsMgmtGetCSIDependenciesList

def clAmsMgmtGetSGList(*args):
  return _safplusCApi.clAmsMgmtGetSGList(*args)
clAmsMgmtGetSGList = _safplusCApi.clAmsMgmtGetSGList

def clAmsMgmtGetSIList(*args):
  return _safplusCApi.clAmsMgmtGetSIList(*args)
clAmsMgmtGetSIList = _safplusCApi.clAmsMgmtGetSIList

def clAmsMgmtGetCSIList(*args):
  return _safplusCApi.clAmsMgmtGetCSIList(*args)
clAmsMgmtGetCSIList = _safplusCApi.clAmsMgmtGetCSIList

def clAmsMgmtGetNodeList(*args):
  return _safplusCApi.clAmsMgmtGetNodeList(*args)
clAmsMgmtGetNodeList = _safplusCApi.clAmsMgmtGetNodeList

def clAmsMgmtGetSUList(*args):
  return _safplusCApi.clAmsMgmtGetSUList(*args)
clAmsMgmtGetSUList = _safplusCApi.clAmsMgmtGetSUList

def clAmsMgmtGetCompList(*args):
  return _safplusCApi.clAmsMgmtGetCompList(*args)
clAmsMgmtGetCompList = _safplusCApi.clAmsMgmtGetCompList

def clAmsMgmtGetSGInstantiatedSUList(*args):
  return _safplusCApi.clAmsMgmtGetSGInstantiatedSUList(*args)
clAmsMgmtGetSGInstantiatedSUList = _safplusCApi.clAmsMgmtGetSGInstantiatedSUList

def clAmsMgmtGetSGInServiceSpareSUList(*args):
  return _safplusCApi.clAmsMgmtGetSGInServiceSpareSUList(*args)
clAmsMgmtGetSGInServiceSpareSUList = _safplusCApi.clAmsMgmtGetSGInServiceSpareSUList

def clAmsMgmtGetSGAssignedSUList(*args):
  return _safplusCApi.clAmsMgmtGetSGAssignedSUList(*args)
clAmsMgmtGetSGAssignedSUList = _safplusCApi.clAmsMgmtGetSGAssignedSUList

def clAmsMgmtGetSGFaultySUList(*args):
  return _safplusCApi.clAmsMgmtGetSGFaultySUList(*args)
clAmsMgmtGetSGFaultySUList = _safplusCApi.clAmsMgmtGetSGFaultySUList

def clAmsMgmtGetSUAssignedSIsList(*args):
  return _safplusCApi.clAmsMgmtGetSUAssignedSIsList(*args)
clAmsMgmtGetSUAssignedSIsList = _safplusCApi.clAmsMgmtGetSUAssignedSIsList

def clAmsMgmtGetSUAssignedSIsExtendedList(*args):
  return _safplusCApi.clAmsMgmtGetSUAssignedSIsExtendedList(*args)
clAmsMgmtGetSUAssignedSIsExtendedList = _safplusCApi.clAmsMgmtGetSUAssignedSIsExtendedList

def clAmsMgmtGetSISUList(*args):
  return _safplusCApi.clAmsMgmtGetSISUList(*args)
clAmsMgmtGetSISUList = _safplusCApi.clAmsMgmtGetSISUList

def clAmsMgmtGetSISUExtendedList(*args):
  return _safplusCApi.clAmsMgmtGetSISUExtendedList(*args)
clAmsMgmtGetSISUExtendedList = _safplusCApi.clAmsMgmtGetSISUExtendedList

def clAmsMgmtGetCompCSIList(*args):
  return _safplusCApi.clAmsMgmtGetCompCSIList(*args)
clAmsMgmtGetCompCSIList = _safplusCApi.clAmsMgmtGetCompCSIList

def clAmsMgmtGetSIHAState(*args):
  return _safplusCApi.clAmsMgmtGetSIHAState(*args)
clAmsMgmtGetSIHAState = _safplusCApi.clAmsMgmtGetSIHAState

def clAmsMgmtGetSUHAState(*args):
  return _safplusCApi.clAmsMgmtGetSUHAState(*args)
clAmsMgmtGetSUHAState = _safplusCApi.clAmsMgmtGetSUHAState

def clAmsMgmtMigrateSG(*args):
  return _safplusCApi.clAmsMgmtMigrateSG(*args)
clAmsMgmtMigrateSG = _safplusCApi.clAmsMgmtMigrateSG

def clAmsMgmtEntityUserDataDelete(*args):
  return _safplusCApi.clAmsMgmtEntityUserDataDelete(*args)
clAmsMgmtEntityUserDataDelete = _safplusCApi.clAmsMgmtEntityUserDataDelete

def clAmsMgmtEntityUserDataDeleteKey(*args):
  return _safplusCApi.clAmsMgmtEntityUserDataDeleteKey(*args)
clAmsMgmtEntityUserDataDeleteKey = _safplusCApi.clAmsMgmtEntityUserDataDeleteKey

def clAmsMgmtEntityUserDataDeleteAll(*args):
  return _safplusCApi.clAmsMgmtEntityUserDataDeleteAll(*args)
clAmsMgmtEntityUserDataDeleteAll = _safplusCApi.clAmsMgmtEntityUserDataDeleteAll

def clAmsMgmtSetActive(*args):
  return _safplusCApi.clAmsMgmtSetActive(*args)
clAmsMgmtSetActive = _safplusCApi.clAmsMgmtSetActive

def clAmsMgmtSIAssignSU(*args):
  return _safplusCApi.clAmsMgmtSIAssignSU(*args)
clAmsMgmtSIAssignSU = _safplusCApi.clAmsMgmtSIAssignSU

def clAmsMgmtFreeCompCSIRefBuffer(*args):
  return _safplusCApi.clAmsMgmtFreeCompCSIRefBuffer(*args)
clAmsMgmtFreeCompCSIRefBuffer = _safplusCApi.clAmsMgmtFreeCompCSIRefBuffer

def clAmsMgmtDBGet(*args):
  return _safplusCApi.clAmsMgmtDBGet(*args)
clAmsMgmtDBGet = _safplusCApi.clAmsMgmtDBGet

def clAmsMgmtDBGetNodeList(*args):
  return _safplusCApi.clAmsMgmtDBGetNodeList(*args)
clAmsMgmtDBGetNodeList = _safplusCApi.clAmsMgmtDBGetNodeList

def clAmsMgmtDBGetSUList(*args):
  return _safplusCApi.clAmsMgmtDBGetSUList(*args)
clAmsMgmtDBGetSUList = _safplusCApi.clAmsMgmtDBGetSUList

def clAmsMgmtDBGetSGList(*args):
  return _safplusCApi.clAmsMgmtDBGetSGList(*args)
clAmsMgmtDBGetSGList = _safplusCApi.clAmsMgmtDBGetSGList

def clAmsMgmtDBGetSIList(*args):
  return _safplusCApi.clAmsMgmtDBGetSIList(*args)
clAmsMgmtDBGetSIList = _safplusCApi.clAmsMgmtDBGetSIList

def clAmsMgmtDBGetCSIList(*args):
  return _safplusCApi.clAmsMgmtDBGetCSIList(*args)
clAmsMgmtDBGetCSIList = _safplusCApi.clAmsMgmtDBGetCSIList

def clAmsMgmtDBGetCompList(*args):
  return _safplusCApi.clAmsMgmtDBGetCompList(*args)
clAmsMgmtDBGetCompList = _safplusCApi.clAmsMgmtDBGetCompList

def clAmsMgmtDBGetEntityConfig(*args):
  return _safplusCApi.clAmsMgmtDBGetEntityConfig(*args)
clAmsMgmtDBGetEntityConfig = _safplusCApi.clAmsMgmtDBGetEntityConfig

def clAmsMgmtDBGetEntityStatus(*args):
  return _safplusCApi.clAmsMgmtDBGetEntityStatus(*args)
clAmsMgmtDBGetEntityStatus = _safplusCApi.clAmsMgmtDBGetEntityStatus

def clAmsMgmtDBGetNodeSUList(*args):
  return _safplusCApi.clAmsMgmtDBGetNodeSUList(*args)
clAmsMgmtDBGetNodeSUList = _safplusCApi.clAmsMgmtDBGetNodeSUList

def clAmsMgmtDBGetSGSUList(*args):
  return _safplusCApi.clAmsMgmtDBGetSGSUList(*args)
clAmsMgmtDBGetSGSUList = _safplusCApi.clAmsMgmtDBGetSGSUList

def clAmsMgmtDBGetSGSIList(*args):
  return _safplusCApi.clAmsMgmtDBGetSGSIList(*args)
clAmsMgmtDBGetSGSIList = _safplusCApi.clAmsMgmtDBGetSGSIList

def clAmsMgmtDBGetSICSIList(*args):
  return _safplusCApi.clAmsMgmtDBGetSICSIList(*args)
clAmsMgmtDBGetSICSIList = _safplusCApi.clAmsMgmtDBGetSICSIList

def clAmsMgmtDBGetSUCompList(*args):
  return _safplusCApi.clAmsMgmtDBGetSUCompList(*args)
clAmsMgmtDBGetSUCompList = _safplusCApi.clAmsMgmtDBGetSUCompList

def clAmsMgmtDBGetSUAssignedSIsList(*args):
  return _safplusCApi.clAmsMgmtDBGetSUAssignedSIsList(*args)
clAmsMgmtDBGetSUAssignedSIsList = _safplusCApi.clAmsMgmtDBGetSUAssignedSIsList

def clAmsMgmtDBGetSISUList(*args):
  return _safplusCApi.clAmsMgmtDBGetSISUList(*args)
clAmsMgmtDBGetSISUList = _safplusCApi.clAmsMgmtDBGetSISUList

def clAmsMgmtDBGetCompCSIList(*args):
  return _safplusCApi.clAmsMgmtDBGetCompCSIList(*args)
clAmsMgmtDBGetCompCSIList = _safplusCApi.clAmsMgmtDBGetCompCSIList

def clAmsMgmtDBGetNodeCompList(*args):
  return _safplusCApi.clAmsMgmtDBGetNodeCompList(*args)
clAmsMgmtDBGetNodeCompList = _safplusCApi.clAmsMgmtDBGetNodeCompList

def clAmsMgmtDBCacheDump(*args):
  return _safplusCApi.clAmsMgmtDBCacheDump(*args)
clAmsMgmtDBCacheDump = _safplusCApi.clAmsMgmtDBCacheDump

def clAmsMgmtDBFinalize(*args):
  return _safplusCApi.clAmsMgmtDBFinalize(*args)
clAmsMgmtDBFinalize = _safplusCApi.clAmsMgmtDBFinalize

def clAmsMgmtComputedAdminStateGet(*args):
  return _safplusCApi.clAmsMgmtComputedAdminStateGet(*args)
clAmsMgmtComputedAdminStateGet = _safplusCApi.clAmsMgmtComputedAdminStateGet

def clAmsMgmtCCBBatchInitialize(*args):
  return _safplusCApi.clAmsMgmtCCBBatchInitialize(*args)
clAmsMgmtCCBBatchInitialize = _safplusCApi.clAmsMgmtCCBBatchInitialize

def clAmsMgmtCCBBatchFinalize(*args):
  return _safplusCApi.clAmsMgmtCCBBatchFinalize(*args)
clAmsMgmtCCBBatchFinalize = _safplusCApi.clAmsMgmtCCBBatchFinalize

def clAmsMgmtCCBBatchEntityCreate(*args):
  return _safplusCApi.clAmsMgmtCCBBatchEntityCreate(*args)
clAmsMgmtCCBBatchEntityCreate = _safplusCApi.clAmsMgmtCCBBatchEntityCreate

def clAmsMgmtCCBBatchEntityDelete(*args):
  return _safplusCApi.clAmsMgmtCCBBatchEntityDelete(*args)
clAmsMgmtCCBBatchEntityDelete = _safplusCApi.clAmsMgmtCCBBatchEntityDelete

def clAmsMgmtCCBBatchEntitySetConfig(*args):
  return _safplusCApi.clAmsMgmtCCBBatchEntitySetConfig(*args)
clAmsMgmtCCBBatchEntitySetConfig = _safplusCApi.clAmsMgmtCCBBatchEntitySetConfig

def clAmsMgmtCCBBatchCSISetNVP(*args):
  return _safplusCApi.clAmsMgmtCCBBatchCSISetNVP(*args)
clAmsMgmtCCBBatchCSISetNVP = _safplusCApi.clAmsMgmtCCBBatchCSISetNVP

def clAmsMgmtCCBBatchCSIDeleteNVP(*args):
  return _safplusCApi.clAmsMgmtCCBBatchCSIDeleteNVP(*args)
clAmsMgmtCCBBatchCSIDeleteNVP = _safplusCApi.clAmsMgmtCCBBatchCSIDeleteNVP

def clAmsMgmtCCBBatchSetNodeDependency(*args):
  return _safplusCApi.clAmsMgmtCCBBatchSetNodeDependency(*args)
clAmsMgmtCCBBatchSetNodeDependency = _safplusCApi.clAmsMgmtCCBBatchSetNodeDependency

def clAmsMgmtCCBBatchDeleteNodeDependency(*args):
  return _safplusCApi.clAmsMgmtCCBBatchDeleteNodeDependency(*args)
clAmsMgmtCCBBatchDeleteNodeDependency = _safplusCApi.clAmsMgmtCCBBatchDeleteNodeDependency

def clAmsMgmtCCBBatchSetNodeSUList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchSetNodeSUList(*args)
clAmsMgmtCCBBatchSetNodeSUList = _safplusCApi.clAmsMgmtCCBBatchSetNodeSUList

def clAmsMgmtCCBBatchDeleteNodeSUList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchDeleteNodeSUList(*args)
clAmsMgmtCCBBatchDeleteNodeSUList = _safplusCApi.clAmsMgmtCCBBatchDeleteNodeSUList

def clAmsMgmtCCBBatchSetSGSUList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchSetSGSUList(*args)
clAmsMgmtCCBBatchSetSGSUList = _safplusCApi.clAmsMgmtCCBBatchSetSGSUList

def clAmsMgmtCCBBatchDeleteSGSUList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchDeleteSGSUList(*args)
clAmsMgmtCCBBatchDeleteSGSUList = _safplusCApi.clAmsMgmtCCBBatchDeleteSGSUList

def clAmsMgmtCCBBatchSetSGSIList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchSetSGSIList(*args)
clAmsMgmtCCBBatchSetSGSIList = _safplusCApi.clAmsMgmtCCBBatchSetSGSIList

def clAmsMgmtCCBBatchDeleteSGSIList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchDeleteSGSIList(*args)
clAmsMgmtCCBBatchDeleteSGSIList = _safplusCApi.clAmsMgmtCCBBatchDeleteSGSIList

def clAmsMgmtCCBBatchSetSUCompList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchSetSUCompList(*args)
clAmsMgmtCCBBatchSetSUCompList = _safplusCApi.clAmsMgmtCCBBatchSetSUCompList

def clAmsMgmtCCBBatchDeleteSUCompList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchDeleteSUCompList(*args)
clAmsMgmtCCBBatchDeleteSUCompList = _safplusCApi.clAmsMgmtCCBBatchDeleteSUCompList

def clAmsMgmtCCBBatchSetSISURankList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchSetSISURankList(*args)
clAmsMgmtCCBBatchSetSISURankList = _safplusCApi.clAmsMgmtCCBBatchSetSISURankList

def clAmsMgmtCCBBatchDeleteSISURankList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchDeleteSISURankList(*args)
clAmsMgmtCCBBatchDeleteSISURankList = _safplusCApi.clAmsMgmtCCBBatchDeleteSISURankList

def clAmsMgmtCCBBatchSetSIDependency(*args):
  return _safplusCApi.clAmsMgmtCCBBatchSetSIDependency(*args)
clAmsMgmtCCBBatchSetSIDependency = _safplusCApi.clAmsMgmtCCBBatchSetSIDependency

def clAmsMgmtCCBBatchDeleteSIDependency(*args):
  return _safplusCApi.clAmsMgmtCCBBatchDeleteSIDependency(*args)
clAmsMgmtCCBBatchDeleteSIDependency = _safplusCApi.clAmsMgmtCCBBatchDeleteSIDependency

def clAmsMgmtCCBBatchSetCSIDependency(*args):
  return _safplusCApi.clAmsMgmtCCBBatchSetCSIDependency(*args)
clAmsMgmtCCBBatchSetCSIDependency = _safplusCApi.clAmsMgmtCCBBatchSetCSIDependency

def clAmsMgmtCCBBatchDeleteCSIDependency(*args):
  return _safplusCApi.clAmsMgmtCCBBatchDeleteCSIDependency(*args)
clAmsMgmtCCBBatchDeleteCSIDependency = _safplusCApi.clAmsMgmtCCBBatchDeleteCSIDependency

def clAmsMgmtCCBBatchSetSICSIList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchSetSICSIList(*args)
clAmsMgmtCCBBatchSetSICSIList = _safplusCApi.clAmsMgmtCCBBatchSetSICSIList

def clAmsMgmtCCBBatchDeleteSICSIList(*args):
  return _safplusCApi.clAmsMgmtCCBBatchDeleteSICSIList(*args)
clAmsMgmtCCBBatchDeleteSICSIList = _safplusCApi.clAmsMgmtCCBBatchDeleteSICSIList

def clAmsMgmtCCBBatchCommit(*args):
  return _safplusCApi.clAmsMgmtCCBBatchCommit(*args)
clAmsMgmtCCBBatchCommit = _safplusCApi.clAmsMgmtCCBBatchCommit

def clAmsMgmtRmdOptionsSet(*args):
  return _safplusCApi.clAmsMgmtRmdOptionsSet(*args)
clAmsMgmtRmdOptionsSet = _safplusCApi.clAmsMgmtRmdOptionsSet

def clAmsMgmtRmdOptionsGet(*args):
  return _safplusCApi.clAmsMgmtRmdOptionsGet(*args)
clAmsMgmtRmdOptionsGet = _safplusCApi.clAmsMgmtRmdOptionsGet

def clAmsTriggerLoad(*args):
  return _safplusCApi.clAmsTriggerLoad(*args)
clAmsTriggerLoad = _safplusCApi.clAmsTriggerLoad

def clAmsTriggerLoadAll(*args):
  return _safplusCApi.clAmsTriggerLoadAll(*args)
clAmsTriggerLoadAll = _safplusCApi.clAmsTriggerLoadAll

def clAmsTrigger(*args):
  return _safplusCApi.clAmsTrigger(*args)
clAmsTrigger = _safplusCApi.clAmsTrigger

def clAmsTriggerAll(*args):
  return _safplusCApi.clAmsTriggerAll(*args)
clAmsTriggerAll = _safplusCApi.clAmsTriggerAll

def clAmsTriggerRecoveryReset(*args):
  return _safplusCApi.clAmsTriggerRecoveryReset(*args)
clAmsTriggerRecoveryReset = _safplusCApi.clAmsTriggerRecoveryReset

def clAmsTriggerRecoveryResetAll(*args):
  return _safplusCApi.clAmsTriggerRecoveryResetAll(*args)
clAmsTriggerRecoveryResetAll = _safplusCApi.clAmsTriggerRecoveryResetAll

def clAmsTriggerReset(*args):
  return _safplusCApi.clAmsTriggerReset(*args)
clAmsTriggerReset = _safplusCApi.clAmsTriggerReset

def clAmsTriggerResetAll(*args):
  return _safplusCApi.clAmsTriggerResetAll(*args)
clAmsTriggerResetAll = _safplusCApi.clAmsTriggerResetAll

def clAmsTriggerGetMetric(*args):
  return _safplusCApi.clAmsTriggerGetMetric(*args)
clAmsTriggerGetMetric = _safplusCApi.clAmsTriggerGetMetric

def clAmsTriggerGetMetricDefault(*args):
  return _safplusCApi.clAmsTriggerGetMetricDefault(*args)
clAmsTriggerGetMetricDefault = _safplusCApi.clAmsTriggerGetMetricDefault
CL_IOC_HEADER_VERSION = _safplusCApi.CL_IOC_HEADER_VERSION
CL_IOC_NOTIFICATION_VERSION = _safplusCApi.CL_IOC_NOTIFICATION_VERSION
CL_IOC_TIMEOUT_FOREVER = _safplusCApi.CL_IOC_TIMEOUT_FOREVER
CL_IOC_UNRELIABLE_MESSAGING = _safplusCApi.CL_IOC_UNRELIABLE_MESSAGING
CL_IOC_RELIABLE_MESSAGING = _safplusCApi.CL_IOC_RELIABLE_MESSAGING
CL_IOC_NODE_UP = _safplusCApi.CL_IOC_NODE_UP
CL_IOC_NODE_DOWN = _safplusCApi.CL_IOC_NODE_DOWN
CL_IOC_LINK_UP = _safplusCApi.CL_IOC_LINK_UP
CL_IOC_LINK_DOWN = _safplusCApi.CL_IOC_LINK_DOWN
CL_IOC_BROADCAST_ADDRESS = _safplusCApi.CL_IOC_BROADCAST_ADDRESS
CL_IOC_RESERVED_ADDRESS = _safplusCApi.CL_IOC_RESERVED_ADDRESS
CL_IOC_GEO_ADDR_MAX_LENGTH = _safplusCApi.CL_IOC_GEO_ADDR_MAX_LENGTH
CL_IOC_PHYSICAL_ADDRESS_TYPE = _safplusCApi.CL_IOC_PHYSICAL_ADDRESS_TYPE
CL_IOC_LOGICAL_ADDRESS_TYPE = _safplusCApi.CL_IOC_LOGICAL_ADDRESS_TYPE
CL_IOC_MULTICAST_ADDRESS_TYPE = _safplusCApi.CL_IOC_MULTICAST_ADDRESS_TYPE
CL_IOC_MASTER_ADDRESS_TYPE = _safplusCApi.CL_IOC_MASTER_ADDRESS_TYPE
CL_IOC_INTRANODE_ADDRESS_TYPE = _safplusCApi.CL_IOC_INTRANODE_ADDRESS_TYPE
CL_IOC_USER_ADDRESS_TYPE = _safplusCApi.CL_IOC_USER_ADDRESS_TYPE
CL_IOC_BROADCAST_ADDRESS_TYPE = _safplusCApi.CL_IOC_BROADCAST_ADDRESS_TYPE
CL_IOC_DEFAULT_PRIORITY = _safplusCApi.CL_IOC_DEFAULT_PRIORITY
CL_IOC_HIGH_PRIORITY = _safplusCApi.CL_IOC_HIGH_PRIORITY
CL_IOC_LOW_PRIORITY = _safplusCApi.CL_IOC_LOW_PRIORITY
CL_IOC_ORDERED_PRIORITY = _safplusCApi.CL_IOC_ORDERED_PRIORITY
CL_IOC_NOTIFICATION_PRIORITY = _safplusCApi.CL_IOC_NOTIFICATION_PRIORITY
CL_IOC_RESERVED_PRIORITY = _safplusCApi.CL_IOC_RESERVED_PRIORITY
CL_IOC_RESERVED_PRIORITY_USER = _safplusCApi.CL_IOC_RESERVED_PRIORITY_USER
CL_IOC_RESERVED_PRIORITY_USER_END = _safplusCApi.CL_IOC_RESERVED_PRIORITY_USER_END
CL_IOC_MAX_PRIORITIES = _safplusCApi.CL_IOC_MAX_PRIORITIES
CL_IOC_NOTIFICATION_DISABLE = _safplusCApi.CL_IOC_NOTIFICATION_DISABLE
CL_IOC_NOTIFICATION_ENABLE = _safplusCApi.CL_IOC_NOTIFICATION_ENABLE
CL_IOC_ADDRESS_TYPE_BITS = _safplusCApi.CL_IOC_ADDRESS_TYPE_BITS
CL_IOC_ADDRESS_TYPE_MASK = _safplusCApi.CL_IOC_ADDRESS_TYPE_MASK
CL_IOC_NODE_MASK = _safplusCApi.CL_IOC_NODE_MASK
CL_IOC_ADDRESS_TYPE_SHIFT_WORD = _safplusCApi.CL_IOC_ADDRESS_TYPE_SHIFT_WORD
CL_IOC_ADDRESS_TYPE_SHIFT_DWORD = _safplusCApi.CL_IOC_ADDRESS_TYPE_SHIFT_DWORD
CL_IOC_TL_ACTIVE = _safplusCApi.CL_IOC_TL_ACTIVE
CL_IOC_TL_STDBY = _safplusCApi.CL_IOC_TL_STDBY
class ClIocPhysicalAddressT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClIocPhysicalAddressT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClIocPhysicalAddressT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nodeAddress"] = _safplusCApi.ClIocPhysicalAddressT_nodeAddress_set
    __swig_getmethods__["nodeAddress"] = _safplusCApi.ClIocPhysicalAddressT_nodeAddress_get
    if _newclass:nodeAddress = _swig_property(_safplusCApi.ClIocPhysicalAddressT_nodeAddress_get, _safplusCApi.ClIocPhysicalAddressT_nodeAddress_set)
    __swig_setmethods__["portId"] = _safplusCApi.ClIocPhysicalAddressT_portId_set
    __swig_getmethods__["portId"] = _safplusCApi.ClIocPhysicalAddressT_portId_get
    if _newclass:portId = _swig_property(_safplusCApi.ClIocPhysicalAddressT_portId_get, _safplusCApi.ClIocPhysicalAddressT_portId_set)
    def __init__(self): 
        this = _safplusCApi.new_ClIocPhysicalAddressT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClIocPhysicalAddressT
    __del__ = lambda self : None;
ClIocPhysicalAddressT_swigregister = _safplusCApi.ClIocPhysicalAddressT_swigregister
ClIocPhysicalAddressT_swigregister(ClIocPhysicalAddressT)

class ClIocAddressT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClIocAddressT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClIocAddressT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iocPhyAddress"] = _safplusCApi.ClIocAddressT_iocPhyAddress_set
    __swig_getmethods__["iocPhyAddress"] = _safplusCApi.ClIocAddressT_iocPhyAddress_get
    if _newclass:iocPhyAddress = _swig_property(_safplusCApi.ClIocAddressT_iocPhyAddress_get, _safplusCApi.ClIocAddressT_iocPhyAddress_set)
    __swig_setmethods__["iocLogicalAddress"] = _safplusCApi.ClIocAddressT_iocLogicalAddress_set
    __swig_getmethods__["iocLogicalAddress"] = _safplusCApi.ClIocAddressT_iocLogicalAddress_get
    if _newclass:iocLogicalAddress = _swig_property(_safplusCApi.ClIocAddressT_iocLogicalAddress_get, _safplusCApi.ClIocAddressT_iocLogicalAddress_set)
    __swig_setmethods__["iocMulticastAddress"] = _safplusCApi.ClIocAddressT_iocMulticastAddress_set
    __swig_getmethods__["iocMulticastAddress"] = _safplusCApi.ClIocAddressT_iocMulticastAddress_get
    if _newclass:iocMulticastAddress = _swig_property(_safplusCApi.ClIocAddressT_iocMulticastAddress_get, _safplusCApi.ClIocAddressT_iocMulticastAddress_set)
    def __init__(self): 
        this = _safplusCApi.new_ClIocAddressT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClIocAddressT
    __del__ = lambda self : None;
ClIocAddressT_swigregister = _safplusCApi.ClIocAddressT_swigregister
ClIocAddressT_swigregister(ClIocAddressT)

CL_IOC_PERSISTENT_MSG = _safplusCApi.CL_IOC_PERSISTENT_MSG
CL_IOC_NON_PERSISTENT_MSG = _safplusCApi.CL_IOC_NON_PERSISTENT_MSG
class ClIocSendOptionT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClIocSendOptionT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClIocSendOptionT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["priority"] = _safplusCApi.ClIocSendOptionT_priority_set
    __swig_getmethods__["priority"] = _safplusCApi.ClIocSendOptionT_priority_get
    if _newclass:priority = _swig_property(_safplusCApi.ClIocSendOptionT_priority_get, _safplusCApi.ClIocSendOptionT_priority_set)
    __swig_setmethods__["sendType"] = _safplusCApi.ClIocSendOptionT_sendType_set
    __swig_getmethods__["sendType"] = _safplusCApi.ClIocSendOptionT_sendType_get
    if _newclass:sendType = _swig_property(_safplusCApi.ClIocSendOptionT_sendType_get, _safplusCApi.ClIocSendOptionT_sendType_set)
    __swig_setmethods__["linkHandle"] = _safplusCApi.ClIocSendOptionT_linkHandle_set
    __swig_getmethods__["linkHandle"] = _safplusCApi.ClIocSendOptionT_linkHandle_get
    if _newclass:linkHandle = _swig_property(_safplusCApi.ClIocSendOptionT_linkHandle_get, _safplusCApi.ClIocSendOptionT_linkHandle_set)
    __swig_setmethods__["msgOption"] = _safplusCApi.ClIocSendOptionT_msgOption_set
    __swig_getmethods__["msgOption"] = _safplusCApi.ClIocSendOptionT_msgOption_get
    if _newclass:msgOption = _swig_property(_safplusCApi.ClIocSendOptionT_msgOption_get, _safplusCApi.ClIocSendOptionT_msgOption_set)
    __swig_setmethods__["timeout"] = _safplusCApi.ClIocSendOptionT_timeout_set
    __swig_getmethods__["timeout"] = _safplusCApi.ClIocSendOptionT_timeout_get
    if _newclass:timeout = _swig_property(_safplusCApi.ClIocSendOptionT_timeout_get, _safplusCApi.ClIocSendOptionT_timeout_set)
    def __init__(self): 
        this = _safplusCApi.new_ClIocSendOptionT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClIocSendOptionT
    __del__ = lambda self : None;
ClIocSendOptionT_swigregister = _safplusCApi.ClIocSendOptionT_swigregister
ClIocSendOptionT_swigregister(ClIocSendOptionT)

class ClIocRecvParamT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClIocRecvParamT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClIocRecvParamT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["priority"] = _safplusCApi.ClIocRecvParamT_priority_set
    __swig_getmethods__["priority"] = _safplusCApi.ClIocRecvParamT_priority_get
    if _newclass:priority = _swig_property(_safplusCApi.ClIocRecvParamT_priority_get, _safplusCApi.ClIocRecvParamT_priority_set)
    __swig_setmethods__["protoType"] = _safplusCApi.ClIocRecvParamT_protoType_set
    __swig_getmethods__["protoType"] = _safplusCApi.ClIocRecvParamT_protoType_get
    if _newclass:protoType = _swig_property(_safplusCApi.ClIocRecvParamT_protoType_get, _safplusCApi.ClIocRecvParamT_protoType_set)
    __swig_setmethods__["length"] = _safplusCApi.ClIocRecvParamT_length_set
    __swig_getmethods__["length"] = _safplusCApi.ClIocRecvParamT_length_get
    if _newclass:length = _swig_property(_safplusCApi.ClIocRecvParamT_length_get, _safplusCApi.ClIocRecvParamT_length_set)
    __swig_setmethods__["srcAddr"] = _safplusCApi.ClIocRecvParamT_srcAddr_set
    __swig_getmethods__["srcAddr"] = _safplusCApi.ClIocRecvParamT_srcAddr_get
    if _newclass:srcAddr = _swig_property(_safplusCApi.ClIocRecvParamT_srcAddr_get, _safplusCApi.ClIocRecvParamT_srcAddr_set)
    def __init__(self): 
        this = _safplusCApi.new_ClIocRecvParamT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClIocRecvParamT
    __del__ = lambda self : None;
ClIocRecvParamT_swigregister = _safplusCApi.ClIocRecvParamT_swigregister
ClIocRecvParamT_swigregister(ClIocRecvParamT)

class ClIocRecvOptionT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClIocRecvOptionT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClIocRecvOptionT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["recvTimeout"] = _safplusCApi.ClIocRecvOptionT_recvTimeout_set
    __swig_getmethods__["recvTimeout"] = _safplusCApi.ClIocRecvOptionT_recvTimeout_get
    if _newclass:recvTimeout = _swig_property(_safplusCApi.ClIocRecvOptionT_recvTimeout_get, _safplusCApi.ClIocRecvOptionT_recvTimeout_set)
    def __init__(self): 
        this = _safplusCApi.new_ClIocRecvOptionT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClIocRecvOptionT
    __del__ = lambda self : None;
ClIocRecvOptionT_swigregister = _safplusCApi.ClIocRecvOptionT_swigregister
ClIocRecvOptionT_swigregister(ClIocRecvOptionT)

CL_IOC_SENDQ = _safplusCApi.CL_IOC_SENDQ
CL_IOC_RECVQ = _safplusCApi.CL_IOC_RECVQ
CL_IOC_QUEUE_MAX = _safplusCApi.CL_IOC_QUEUE_MAX
class ClIocQueueInfoT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClIocQueueInfoT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClIocQueueInfoT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["queueSize"] = _safplusCApi.ClIocQueueInfoT_queueSize_set
    __swig_getmethods__["queueSize"] = _safplusCApi.ClIocQueueInfoT_queueSize_get
    if _newclass:queueSize = _swig_property(_safplusCApi.ClIocQueueInfoT_queueSize_get, _safplusCApi.ClIocQueueInfoT_queueSize_set)
    __swig_setmethods__["queueWM"] = _safplusCApi.ClIocQueueInfoT_queueWM_set
    __swig_getmethods__["queueWM"] = _safplusCApi.ClIocQueueInfoT_queueWM_get
    if _newclass:queueWM = _swig_property(_safplusCApi.ClIocQueueInfoT_queueWM_get, _safplusCApi.ClIocQueueInfoT_queueWM_set)
    def __init__(self): 
        this = _safplusCApi.new_ClIocQueueInfoT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClIocQueueInfoT
    __del__ = lambda self : None;
ClIocQueueInfoT_swigregister = _safplusCApi.ClIocQueueInfoT_swigregister
ClIocQueueInfoT_swigregister(ClIocQueueInfoT)

class ClIocQueueStatsT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClIocQueueStatsT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClIocQueueStatsT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["queueInfo"] = _safplusCApi.ClIocQueueStatsT_queueInfo_set
    __swig_getmethods__["queueInfo"] = _safplusCApi.ClIocQueueStatsT_queueInfo_get
    if _newclass:queueInfo = _swig_property(_safplusCApi.ClIocQueueStatsT_queueInfo_get, _safplusCApi.ClIocQueueStatsT_queueInfo_set)
    __swig_setmethods__["queueUtilisation"] = _safplusCApi.ClIocQueueStatsT_queueUtilisation_set
    __swig_getmethods__["queueUtilisation"] = _safplusCApi.ClIocQueueStatsT_queueUtilisation_get
    if _newclass:queueUtilisation = _swig_property(_safplusCApi.ClIocQueueStatsT_queueUtilisation_get, _safplusCApi.ClIocQueueStatsT_queueUtilisation_set)
    def __init__(self): 
        this = _safplusCApi.new_ClIocQueueStatsT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClIocQueueStatsT
    __del__ = lambda self : None;
ClIocQueueStatsT_swigregister = _safplusCApi.ClIocQueueStatsT_swigregister
ClIocQueueStatsT_swigregister(ClIocQueueStatsT)

class ClIocLibConfigT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClIocLibConfigT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClIocLibConfigT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["version"] = _safplusCApi.ClIocLibConfigT_version_set
    __swig_getmethods__["version"] = _safplusCApi.ClIocLibConfigT_version_get
    if _newclass:version = _swig_property(_safplusCApi.ClIocLibConfigT_version_get, _safplusCApi.ClIocLibConfigT_version_set)
    __swig_setmethods__["nodeAddress"] = _safplusCApi.ClIocLibConfigT_nodeAddress_set
    __swig_getmethods__["nodeAddress"] = _safplusCApi.ClIocLibConfigT_nodeAddress_get
    if _newclass:nodeAddress = _swig_property(_safplusCApi.ClIocLibConfigT_nodeAddress_get, _safplusCApi.ClIocLibConfigT_nodeAddress_set)
    __swig_setmethods__["iocGeoGraphicalAddress"] = _safplusCApi.ClIocLibConfigT_iocGeoGraphicalAddress_set
    __swig_getmethods__["iocGeoGraphicalAddress"] = _safplusCApi.ClIocLibConfigT_iocGeoGraphicalAddress_get
    if _newclass:iocGeoGraphicalAddress = _swig_property(_safplusCApi.ClIocLibConfigT_iocGeoGraphicalAddress_get, _safplusCApi.ClIocLibConfigT_iocGeoGraphicalAddress_set)
    __swig_setmethods__["iocMaxNumOfPriorities"] = _safplusCApi.ClIocLibConfigT_iocMaxNumOfPriorities_set
    __swig_getmethods__["iocMaxNumOfPriorities"] = _safplusCApi.ClIocLibConfigT_iocMaxNumOfPriorities_get
    if _newclass:iocMaxNumOfPriorities = _swig_property(_safplusCApi.ClIocLibConfigT_iocMaxNumOfPriorities_get, _safplusCApi.ClIocLibConfigT_iocMaxNumOfPriorities_set)
    __swig_setmethods__["iocReassemblyTimeOut"] = _safplusCApi.ClIocLibConfigT_iocReassemblyTimeOut_set
    __swig_getmethods__["iocReassemblyTimeOut"] = _safplusCApi.ClIocLibConfigT_iocReassemblyTimeOut_get
    if _newclass:iocReassemblyTimeOut = _swig_property(_safplusCApi.ClIocLibConfigT_iocReassemblyTimeOut_get, _safplusCApi.ClIocLibConfigT_iocReassemblyTimeOut_set)
    __swig_setmethods__["iocMaxNumOfXports"] = _safplusCApi.ClIocLibConfigT_iocMaxNumOfXports_set
    __swig_getmethods__["iocMaxNumOfXports"] = _safplusCApi.ClIocLibConfigT_iocMaxNumOfXports_get
    if _newclass:iocMaxNumOfXports = _swig_property(_safplusCApi.ClIocLibConfigT_iocMaxNumOfXports_get, _safplusCApi.ClIocLibConfigT_iocMaxNumOfXports_set)
    __swig_setmethods__["iocHeartbeatTimeInterval"] = _safplusCApi.ClIocLibConfigT_iocHeartbeatTimeInterval_set
    __swig_getmethods__["iocHeartbeatTimeInterval"] = _safplusCApi.ClIocLibConfigT_iocHeartbeatTimeInterval_get
    if _newclass:iocHeartbeatTimeInterval = _swig_property(_safplusCApi.ClIocLibConfigT_iocHeartbeatTimeInterval_get, _safplusCApi.ClIocLibConfigT_iocHeartbeatTimeInterval_set)
    __swig_setmethods__["iocTLMaxEntries"] = _safplusCApi.ClIocLibConfigT_iocTLMaxEntries_set
    __swig_getmethods__["iocTLMaxEntries"] = _safplusCApi.ClIocLibConfigT_iocTLMaxEntries_get
    if _newclass:iocTLMaxEntries = _swig_property(_safplusCApi.ClIocLibConfigT_iocTLMaxEntries_get, _safplusCApi.ClIocLibConfigT_iocTLMaxEntries_set)
    __swig_setmethods__["iocSendQInfo"] = _safplusCApi.ClIocLibConfigT_iocSendQInfo_set
    __swig_getmethods__["iocSendQInfo"] = _safplusCApi.ClIocLibConfigT_iocSendQInfo_get
    if _newclass:iocSendQInfo = _swig_property(_safplusCApi.ClIocLibConfigT_iocSendQInfo_get, _safplusCApi.ClIocLibConfigT_iocSendQInfo_set)
    __swig_setmethods__["iocRecvQInfo"] = _safplusCApi.ClIocLibConfigT_iocRecvQInfo_set
    __swig_getmethods__["iocRecvQInfo"] = _safplusCApi.ClIocLibConfigT_iocRecvQInfo_get
    if _newclass:iocRecvQInfo = _swig_property(_safplusCApi.ClIocLibConfigT_iocRecvQInfo_get, _safplusCApi.ClIocLibConfigT_iocRecvQInfo_set)
    __swig_setmethods__["iocNodeRepresentative"] = _safplusCApi.ClIocLibConfigT_iocNodeRepresentative_set
    __swig_getmethods__["iocNodeRepresentative"] = _safplusCApi.ClIocLibConfigT_iocNodeRepresentative_get
    if _newclass:iocNodeRepresentative = _swig_property(_safplusCApi.ClIocLibConfigT_iocNodeRepresentative_get, _safplusCApi.ClIocLibConfigT_iocNodeRepresentative_set)
    __swig_setmethods__["isNodeRepresentative"] = _safplusCApi.ClIocLibConfigT_isNodeRepresentative_set
    __swig_getmethods__["isNodeRepresentative"] = _safplusCApi.ClIocLibConfigT_isNodeRepresentative_get
    if _newclass:isNodeRepresentative = _swig_property(_safplusCApi.ClIocLibConfigT_isNodeRepresentative_get, _safplusCApi.ClIocLibConfigT_isNodeRepresentative_set)
    def __init__(self): 
        this = _safplusCApi.new_ClIocLibConfigT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClIocLibConfigT
    __del__ = lambda self : None;
ClIocLibConfigT_swigregister = _safplusCApi.ClIocLibConfigT_swigregister
ClIocLibConfigT_swigregister(ClIocLibConfigT)

CL_IOC_TL_GLOBAL_SCOPE = _safplusCApi.CL_IOC_TL_GLOBAL_SCOPE
CL_IOC_TL_LOCAL_SCOPE = _safplusCApi.CL_IOC_TL_LOCAL_SCOPE
class ClIocTLMappingT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClIocTLMappingT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClIocTLMappingT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["haState"] = _safplusCApi.ClIocTLMappingT_haState_set
    __swig_getmethods__["haState"] = _safplusCApi.ClIocTLMappingT_haState_get
    if _newclass:haState = _swig_property(_safplusCApi.ClIocTLMappingT_haState_get, _safplusCApi.ClIocTLMappingT_haState_set)
    __swig_setmethods__["physicalAddr"] = _safplusCApi.ClIocTLMappingT_physicalAddr_set
    __swig_getmethods__["physicalAddr"] = _safplusCApi.ClIocTLMappingT_physicalAddr_get
    if _newclass:physicalAddr = _swig_property(_safplusCApi.ClIocTLMappingT_physicalAddr_get, _safplusCApi.ClIocTLMappingT_physicalAddr_set)
    def __init__(self): 
        this = _safplusCApi.new_ClIocTLMappingT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClIocTLMappingT
    __del__ = lambda self : None;
ClIocTLMappingT_swigregister = _safplusCApi.ClIocTLMappingT_swigregister
ClIocTLMappingT_swigregister(ClIocTLMappingT)

CL_IOC_TL_NO_REPLICATION = _safplusCApi.CL_IOC_TL_NO_REPLICATION
class ClIocTLInfoT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClIocTLInfoT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClIocTLInfoT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["logicalAddr"] = _safplusCApi.ClIocTLInfoT_logicalAddr_set
    __swig_getmethods__["logicalAddr"] = _safplusCApi.ClIocTLInfoT_logicalAddr_get
    if _newclass:logicalAddr = _swig_property(_safplusCApi.ClIocTLInfoT_logicalAddr_get, _safplusCApi.ClIocTLInfoT_logicalAddr_set)
    __swig_setmethods__["compId"] = _safplusCApi.ClIocTLInfoT_compId_set
    __swig_getmethods__["compId"] = _safplusCApi.ClIocTLInfoT_compId_get
    if _newclass:compId = _swig_property(_safplusCApi.ClIocTLInfoT_compId_get, _safplusCApi.ClIocTLInfoT_compId_set)
    __swig_setmethods__["contextType"] = _safplusCApi.ClIocTLInfoT_contextType_set
    __swig_getmethods__["contextType"] = _safplusCApi.ClIocTLInfoT_contextType_get
    if _newclass:contextType = _swig_property(_safplusCApi.ClIocTLInfoT_contextType_get, _safplusCApi.ClIocTLInfoT_contextType_set)
    __swig_setmethods__["unused"] = _safplusCApi.ClIocTLInfoT_unused_set
    __swig_getmethods__["unused"] = _safplusCApi.ClIocTLInfoT_unused_get
    if _newclass:unused = _swig_property(_safplusCApi.ClIocTLInfoT_unused_get, _safplusCApi.ClIocTLInfoT_unused_set)
    __swig_setmethods__["haState"] = _safplusCApi.ClIocTLInfoT_haState_set
    __swig_getmethods__["haState"] = _safplusCApi.ClIocTLInfoT_haState_get
    if _newclass:haState = _swig_property(_safplusCApi.ClIocTLInfoT_haState_get, _safplusCApi.ClIocTLInfoT_haState_set)
    __swig_setmethods__["physicalAddr"] = _safplusCApi.ClIocTLInfoT_physicalAddr_set
    __swig_getmethods__["physicalAddr"] = _safplusCApi.ClIocTLInfoT_physicalAddr_get
    if _newclass:physicalAddr = _swig_property(_safplusCApi.ClIocTLInfoT_physicalAddr_get, _safplusCApi.ClIocTLInfoT_physicalAddr_set)
    def __init__(self): 
        this = _safplusCApi.new_ClIocTLInfoT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClIocTLInfoT
    __del__ = lambda self : None;
ClIocTLInfoT_swigregister = _safplusCApi.ClIocTLInfoT_swigregister
ClIocTLInfoT_swigregister(ClIocTLInfoT)

class ClIocMcastUserInfoT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClIocMcastUserInfoT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClIocMcastUserInfoT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mcastAddr"] = _safplusCApi.ClIocMcastUserInfoT_mcastAddr_set
    __swig_getmethods__["mcastAddr"] = _safplusCApi.ClIocMcastUserInfoT_mcastAddr_get
    if _newclass:mcastAddr = _swig_property(_safplusCApi.ClIocMcastUserInfoT_mcastAddr_get, _safplusCApi.ClIocMcastUserInfoT_mcastAddr_set)
    __swig_setmethods__["physicalAddr"] = _safplusCApi.ClIocMcastUserInfoT_physicalAddr_set
    __swig_getmethods__["physicalAddr"] = _safplusCApi.ClIocMcastUserInfoT_physicalAddr_get
    if _newclass:physicalAddr = _swig_property(_safplusCApi.ClIocMcastUserInfoT_physicalAddr_get, _safplusCApi.ClIocMcastUserInfoT_physicalAddr_set)
    def __init__(self): 
        this = _safplusCApi.new_ClIocMcastUserInfoT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClIocMcastUserInfoT
    __del__ = lambda self : None;
ClIocMcastUserInfoT_swigregister = _safplusCApi.ClIocMcastUserInfoT_swigregister
ClIocMcastUserInfoT_swigregister(ClIocMcastUserInfoT)


def clIocCommPortCreate(*args):
  return _safplusCApi.clIocCommPortCreate(*args)
clIocCommPortCreate = _safplusCApi.clIocCommPortCreate

def clIocCommPortDelete(*args):
  return _safplusCApi.clIocCommPortDelete(*args)
clIocCommPortDelete = _safplusCApi.clIocCommPortDelete

def clIocCommPortFdGet(*args):
  return _safplusCApi.clIocCommPortFdGet(*args)
clIocCommPortFdGet = _safplusCApi.clIocCommPortFdGet

def clIocCommPortGet(*args):
  return _safplusCApi.clIocCommPortGet(*args)
clIocCommPortGet = _safplusCApi.clIocCommPortGet

def clIocPortNotification(*args):
  return _safplusCApi.clIocPortNotification(*args)
clIocPortNotification = _safplusCApi.clIocPortNotification

def clIocSend(*args):
  return _safplusCApi.clIocSend(*args)
clIocSend = _safplusCApi.clIocSend

def clIocReceive(*args):
  return _safplusCApi.clIocReceive(*args)
clIocReceive = _safplusCApi.clIocReceive

def clIocReceiveAsync(*args):
  return _safplusCApi.clIocReceiveAsync(*args)
clIocReceiveAsync = _safplusCApi.clIocReceiveAsync

def clIocReceiveWithBuffer(*args):
  return _safplusCApi.clIocReceiveWithBuffer(*args)
clIocReceiveWithBuffer = _safplusCApi.clIocReceiveWithBuffer

def clIocReceiveWithBufferAsync(*args):
  return _safplusCApi.clIocReceiveWithBufferAsync(*args)
clIocReceiveWithBufferAsync = _safplusCApi.clIocReceiveWithBufferAsync

def clIocCommPortReceiverUnblock(*args):
  return _safplusCApi.clIocCommPortReceiverUnblock(*args)
clIocCommPortReceiverUnblock = _safplusCApi.clIocCommPortReceiverUnblock

def clIocTransparencyRegister(*args):
  return _safplusCApi.clIocTransparencyRegister(*args)
clIocTransparencyRegister = _safplusCApi.clIocTransparencyRegister

def clIocTransparencyDeregister(*args):
  return _safplusCApi.clIocTransparencyDeregister(*args)
clIocTransparencyDeregister = _safplusCApi.clIocTransparencyDeregister

def clIocMulticastRegister(*args):
  return _safplusCApi.clIocMulticastRegister(*args)
clIocMulticastRegister = _safplusCApi.clIocMulticastRegister

def clIocMulticastDeregister(*args):
  return _safplusCApi.clIocMulticastDeregister(*args)
clIocMulticastDeregister = _safplusCApi.clIocMulticastDeregister

def clIocMulticastDeregisterAll(*args):
  return _safplusCApi.clIocMulticastDeregisterAll(*args)
clIocMulticastDeregisterAll = _safplusCApi.clIocMulticastDeregisterAll

def clIocLocalAddressGet():
  return _safplusCApi.clIocLocalAddressGet()
clIocLocalAddressGet = _safplusCApi.clIocLocalAddressGet

def clIocVersionCheck(*args):
  return _safplusCApi.clIocVersionCheck(*args)
clIocVersionCheck = _safplusCApi.clIocVersionCheck

def clIocTransparencyLogicalToPhysicalAddrGet(*args):
  return _safplusCApi.clIocTransparencyLogicalToPhysicalAddrGet(*args)
clIocTransparencyLogicalToPhysicalAddrGet = _safplusCApi.clIocTransparencyLogicalToPhysicalAddrGet
CL_AMS_MGMT_STATE_NONE = _safplusCApi.CL_AMS_MGMT_STATE_NONE
CL_AMS_MGMT_STATE_DISABLED = _safplusCApi.CL_AMS_MGMT_STATE_DISABLED
CL_AMS_MGMT_STATE_ENABLED = _safplusCApi.CL_AMS_MGMT_STATE_ENABLED
CL_AMS_ADMIN_STATE_NONE = _safplusCApi.CL_AMS_ADMIN_STATE_NONE
CL_AMS_ADMIN_STATE_UNLOCKED = _safplusCApi.CL_AMS_ADMIN_STATE_UNLOCKED
CL_AMS_ADMIN_STATE_LOCKED_A = _safplusCApi.CL_AMS_ADMIN_STATE_LOCKED_A
CL_AMS_ADMIN_STATE_LOCKED_I = _safplusCApi.CL_AMS_ADMIN_STATE_LOCKED_I
CL_AMS_ADMIN_STATE_SHUTTINGDOWN = _safplusCApi.CL_AMS_ADMIN_STATE_SHUTTINGDOWN
CL_AMS_ADMIN_STATE_SHUTTINGDOWN_RESTART = _safplusCApi.CL_AMS_ADMIN_STATE_SHUTTINGDOWN_RESTART
CL_AMS_ADMIN_STATE_MAX = _safplusCApi.CL_AMS_ADMIN_STATE_MAX
CL_AMS_PRESENCE_STATE_NONE = _safplusCApi.CL_AMS_PRESENCE_STATE_NONE
CL_AMS_PRESENCE_STATE_UNINSTANTIATED = _safplusCApi.CL_AMS_PRESENCE_STATE_UNINSTANTIATED
CL_AMS_PRESENCE_STATE_INSTANTIATING = _safplusCApi.CL_AMS_PRESENCE_STATE_INSTANTIATING
CL_AMS_PRESENCE_STATE_INSTANTIATED = _safplusCApi.CL_AMS_PRESENCE_STATE_INSTANTIATED
CL_AMS_PRESENCE_STATE_TERMINATING = _safplusCApi.CL_AMS_PRESENCE_STATE_TERMINATING
CL_AMS_PRESENCE_STATE_RESTARTING = _safplusCApi.CL_AMS_PRESENCE_STATE_RESTARTING
CL_AMS_PRESENCE_STATE_INSTANTIATION_FAILED = _safplusCApi.CL_AMS_PRESENCE_STATE_INSTANTIATION_FAILED
CL_AMS_PRESENCE_STATE_TERMINATION_FAILED = _safplusCApi.CL_AMS_PRESENCE_STATE_TERMINATION_FAILED
CL_AMS_PRESENCE_STATE_ABSENT = _safplusCApi.CL_AMS_PRESENCE_STATE_ABSENT
CL_AMS_PRESENCE_STATE_FAULT = _safplusCApi.CL_AMS_PRESENCE_STATE_FAULT
CL_AMS_PRESENCE_STATE_FAULT_WTC = _safplusCApi.CL_AMS_PRESENCE_STATE_FAULT_WTC
CL_AMS_PRESENCE_STATE_FAULT_WTR = _safplusCApi.CL_AMS_PRESENCE_STATE_FAULT_WTR
CL_AMS_OPER_STATE_NONE = _safplusCApi.CL_AMS_OPER_STATE_NONE
CL_AMS_OPER_STATE_ENABLED = _safplusCApi.CL_AMS_OPER_STATE_ENABLED
CL_AMS_OPER_STATE_DISABLED = _safplusCApi.CL_AMS_OPER_STATE_DISABLED
CL_AMS_HA_STATE_NONE = _safplusCApi.CL_AMS_HA_STATE_NONE
CL_AMS_HA_STATE_ACTIVE = _safplusCApi.CL_AMS_HA_STATE_ACTIVE
CL_AMS_HA_STATE_STANDBY = _safplusCApi.CL_AMS_HA_STATE_STANDBY
CL_AMS_HA_STATE_QUIESCED = _safplusCApi.CL_AMS_HA_STATE_QUIESCED
CL_AMS_HA_STATE_QUIESCING = _safplusCApi.CL_AMS_HA_STATE_QUIESCING
CL_AMS_READINESS_STATE_NONE = _safplusCApi.CL_AMS_READINESS_STATE_NONE
CL_AMS_READINESS_STATE_OUTOFSERVICE = _safplusCApi.CL_AMS_READINESS_STATE_OUTOFSERVICE
CL_AMS_READINESS_STATE_INSERVICE = _safplusCApi.CL_AMS_READINESS_STATE_INSERVICE
CL_AMS_READINESS_STATE_STOPPING = _safplusCApi.CL_AMS_READINESS_STATE_STOPPING
CL_AMS_SERVICE_STATE_NONE = _safplusCApi.CL_AMS_SERVICE_STATE_NONE
CL_AMS_SERVICE_STATE_RUNNING = _safplusCApi.CL_AMS_SERVICE_STATE_RUNNING
CL_AMS_SERVICE_STATE_STOPPED = _safplusCApi.CL_AMS_SERVICE_STATE_STOPPED
CL_AMS_SERVICE_STATE_STARTINGUP = _safplusCApi.CL_AMS_SERVICE_STATE_STARTINGUP
CL_AMS_SERVICE_STATE_SHUTTINGDOWN = _safplusCApi.CL_AMS_SERVICE_STATE_SHUTTINGDOWN
CL_AMS_SERVICE_STATE_UNAVAILABLE = _safplusCApi.CL_AMS_SERVICE_STATE_UNAVAILABLE
CL_AMS_SERVICE_STATE_HOT_STANDBY = _safplusCApi.CL_AMS_SERVICE_STATE_HOT_STANDBY
CL_AMS_NODE_CLASS_NONE = _safplusCApi.CL_AMS_NODE_CLASS_NONE
CL_AMS_NODE_CLASS_A = _safplusCApi.CL_AMS_NODE_CLASS_A
CL_AMS_NODE_CLASS_B = _safplusCApi.CL_AMS_NODE_CLASS_B
CL_AMS_NODE_CLASS_C = _safplusCApi.CL_AMS_NODE_CLASS_C
CL_AMS_NODE_CLASS_D = _safplusCApi.CL_AMS_NODE_CLASS_D
CL_AMS_NODE_CLASS_MAX = _safplusCApi.CL_AMS_NODE_CLASS_MAX
CL_AMS_NODE_IS_NOT_CLUSTER_MEMBER = _safplusCApi.CL_AMS_NODE_IS_NOT_CLUSTER_MEMBER
CL_AMS_NODE_IS_CLUSTER_MEMBER = _safplusCApi.CL_AMS_NODE_IS_CLUSTER_MEMBER
CL_AMS_NODE_IS_LEAVING_CLUSTER = _safplusCApi.CL_AMS_NODE_IS_LEAVING_CLUSTER
CL_AMS_SG_REDUNDANCY_MODEL_NONE = _safplusCApi.CL_AMS_SG_REDUNDANCY_MODEL_NONE
CL_AMS_SG_REDUNDANCY_MODEL_NO_REDUNDANCY = _safplusCApi.CL_AMS_SG_REDUNDANCY_MODEL_NO_REDUNDANCY
CL_AMS_SG_REDUNDANCY_MODEL_TWO_N = _safplusCApi.CL_AMS_SG_REDUNDANCY_MODEL_TWO_N
CL_AMS_SG_REDUNDANCY_MODEL_M_PLUS_N = _safplusCApi.CL_AMS_SG_REDUNDANCY_MODEL_M_PLUS_N
CL_AMS_SG_REDUNDANCY_MODEL_N_WAY = _safplusCApi.CL_AMS_SG_REDUNDANCY_MODEL_N_WAY
CL_AMS_SG_REDUNDANCY_MODEL_N_WAY_ACTIVE = _safplusCApi.CL_AMS_SG_REDUNDANCY_MODEL_N_WAY_ACTIVE
CL_AMS_SG_REDUNDANCY_MODEL_CUSTOM = _safplusCApi.CL_AMS_SG_REDUNDANCY_MODEL_CUSTOM
CL_AMS_SG_REDUNDANCY_MODEL_MAX = _safplusCApi.CL_AMS_SG_REDUNDANCY_MODEL_MAX
CL_AMS_SG_LOADING_STRATEGY_NONE = _safplusCApi.CL_AMS_SG_LOADING_STRATEGY_NONE
CL_AMS_SG_LOADING_STRATEGY_LEAST_SI_PER_SU = _safplusCApi.CL_AMS_SG_LOADING_STRATEGY_LEAST_SI_PER_SU
CL_AMS_SG_LOADING_STRATEGY_LEAST_SU_ASSIGNED = _safplusCApi.CL_AMS_SG_LOADING_STRATEGY_LEAST_SU_ASSIGNED
CL_AMS_SG_LOADING_STRATEGY_LEAST_LOAD_PER_SU = _safplusCApi.CL_AMS_SG_LOADING_STRATEGY_LEAST_LOAD_PER_SU
CL_AMS_SG_LOADING_STRATEGY_BY_SI_PREFERENCE = _safplusCApi.CL_AMS_SG_LOADING_STRATEGY_BY_SI_PREFERENCE
CL_AMS_SG_LOADING_STRATEGY_USER_DEFINED = _safplusCApi.CL_AMS_SG_LOADING_STRATEGY_USER_DEFINED
CL_AMS_SG_LOADING_STRATEGY_MAX = _safplusCApi.CL_AMS_SG_LOADING_STRATEGY_MAX
CL_AMS_COMP_CAP_X_ACTIVE_AND_Y_STANDBY = _safplusCApi.CL_AMS_COMP_CAP_X_ACTIVE_AND_Y_STANDBY
CL_AMS_COMP_CAP_X_ACTIVE_OR_Y_STANDBY = _safplusCApi.CL_AMS_COMP_CAP_X_ACTIVE_OR_Y_STANDBY
CL_AMS_COMP_CAP_ONE_ACTIVE_OR_X_STANDBY = _safplusCApi.CL_AMS_COMP_CAP_ONE_ACTIVE_OR_X_STANDBY
CL_AMS_COMP_CAP_ONE_ACTIVE_OR_ONE_STANDBY = _safplusCApi.CL_AMS_COMP_CAP_ONE_ACTIVE_OR_ONE_STANDBY
CL_AMS_COMP_CAP_X_ACTIVE = _safplusCApi.CL_AMS_COMP_CAP_X_ACTIVE
CL_AMS_COMP_CAP_ONE_ACTIVE = _safplusCApi.CL_AMS_COMP_CAP_ONE_ACTIVE
CL_AMS_COMP_CAP_NON_PREINSTANTIABLE = _safplusCApi.CL_AMS_COMP_CAP_NON_PREINSTANTIABLE
CL_AMS_COMP_CAP_MAX = _safplusCApi.CL_AMS_COMP_CAP_MAX
CL_AMS_COMP_PROPERTY_SA_AWARE = _safplusCApi.CL_AMS_COMP_PROPERTY_SA_AWARE
CL_AMS_COMP_PROPERTY_PROXIED_PREINSTANTIABLE = _safplusCApi.CL_AMS_COMP_PROPERTY_PROXIED_PREINSTANTIABLE
CL_AMS_COMP_PROPERTY_PROXIED_NON_PREINSTANTIABLE = _safplusCApi.CL_AMS_COMP_PROPERTY_PROXIED_NON_PREINSTANTIABLE
CL_AMS_COMP_PROPERTY_NON_PROXIED_NON_PREINSTANTIABLE = _safplusCApi.CL_AMS_COMP_PROPERTY_NON_PROXIED_NON_PREINSTANTIABLE
CL_AMS_COMP_PROPERTY_MAX = _safplusCApi.CL_AMS_COMP_PROPERTY_MAX
CL_AMS_COMP_HEALTHCHECK_AMF_INVOKED = _safplusCApi.CL_AMS_COMP_HEALTHCHECK_AMF_INVOKED
CL_AMS_COMP_HEALTHCHECK_CLIENT_INVOKED = _safplusCApi.CL_AMS_COMP_HEALTHCHECK_CLIENT_INVOKED
CL_AMS_HEALTHCHECK_KEY_MAX = _safplusCApi.CL_AMS_HEALTHCHECK_KEY_MAX
class ClAmsCompHealthcheckKeyT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCompHealthcheckKeyT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCompHealthcheckKeyT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["key"] = _safplusCApi.ClAmsCompHealthcheckKeyT_key_set
    __swig_getmethods__["key"] = _safplusCApi.ClAmsCompHealthcheckKeyT_key_get
    if _newclass:key = _swig_property(_safplusCApi.ClAmsCompHealthcheckKeyT_key_get, _safplusCApi.ClAmsCompHealthcheckKeyT_key_set)
    __swig_setmethods__["keyLen"] = _safplusCApi.ClAmsCompHealthcheckKeyT_keyLen_set
    __swig_getmethods__["keyLen"] = _safplusCApi.ClAmsCompHealthcheckKeyT_keyLen_get
    if _newclass:keyLen = _swig_property(_safplusCApi.ClAmsCompHealthcheckKeyT_keyLen_get, _safplusCApi.ClAmsCompHealthcheckKeyT_keyLen_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCompHealthcheckKeyT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCompHealthcheckKeyT
    __del__ = lambda self : None;
ClAmsCompHealthcheckKeyT_swigregister = _safplusCApi.ClAmsCompHealthcheckKeyT_swigregister
ClAmsCompHealthcheckKeyT_swigregister(ClAmsCompHealthcheckKeyT)

CL_AMS_RECOVERY_NONE = _safplusCApi.CL_AMS_RECOVERY_NONE
CL_AMS_RECOVERY_NO_RECOMMENDATION = _safplusCApi.CL_AMS_RECOVERY_NO_RECOMMENDATION
CL_AMS_RECOVERY_COMP_RESTART = _safplusCApi.CL_AMS_RECOVERY_COMP_RESTART
CL_AMS_RECOVERY_COMP_FAILOVER = _safplusCApi.CL_AMS_RECOVERY_COMP_FAILOVER
CL_AMS_RECOVERY_NODE_SWITCHOVER = _safplusCApi.CL_AMS_RECOVERY_NODE_SWITCHOVER
CL_AMS_RECOVERY_NODE_FAILOVER = _safplusCApi.CL_AMS_RECOVERY_NODE_FAILOVER
CL_AMS_RECOVERY_NODE_FAILFAST = _safplusCApi.CL_AMS_RECOVERY_NODE_FAILFAST
CL_AMS_RECOVERY_CLUSTER_RESET = _safplusCApi.CL_AMS_RECOVERY_CLUSTER_RESET
CL_AMS_RECOVERY_APP_RESTART = _safplusCApi.CL_AMS_RECOVERY_APP_RESTART
CL_AMS_RECOVERY_INTERNALLY_RECOVERED = _safplusCApi.CL_AMS_RECOVERY_INTERNALLY_RECOVERED
CL_AMS_RECOVERY_SU_RESTART = _safplusCApi.CL_AMS_RECOVERY_SU_RESTART
CL_AMS_RECOVERY_NODE_HALT = _safplusCApi.CL_AMS_RECOVERY_NODE_HALT
CL_AMS_EXTERNAL_RECOVERY_RESET = _safplusCApi.CL_AMS_EXTERNAL_RECOVERY_RESET
CL_AMS_EXTERNAL_RECOVERY_REBOOT = _safplusCApi.CL_AMS_EXTERNAL_RECOVERY_REBOOT
CL_AMS_EXTERNAL_RECOVERY_POWER_ON = _safplusCApi.CL_AMS_EXTERNAL_RECOVERY_POWER_ON
CL_AMS_EXTERNAL_RECOVERY_POWER_OFF = _safplusCApi.CL_AMS_EXTERNAL_RECOVERY_POWER_OFF
CL_AMS_CSI_FLAG_ADD_ONE = _safplusCApi.CL_AMS_CSI_FLAG_ADD_ONE
CL_AMS_CSI_FLAG_TARGET_ONE = _safplusCApi.CL_AMS_CSI_FLAG_TARGET_ONE
CL_AMS_CSI_FLAG_TARGET_ALL = _safplusCApi.CL_AMS_CSI_FLAG_TARGET_ALL
CL_AMS_CSI_NEW_ASSIGN = _safplusCApi.CL_AMS_CSI_NEW_ASSIGN
CL_AMS_CSI_QUIESCED = _safplusCApi.CL_AMS_CSI_QUIESCED
CL_AMS_CSI_NOT_QUIESCED = _safplusCApi.CL_AMS_CSI_NOT_QUIESCED
CL_AMS_CSI_STILL_ACTIVE = _safplusCApi.CL_AMS_CSI_STILL_ACTIVE
class ClAmsCSIActiveDescriptorT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSIActiveDescriptorT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSIActiveDescriptorT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["transitionDescriptor"] = _safplusCApi.ClAmsCSIActiveDescriptorT_transitionDescriptor_set
    __swig_getmethods__["transitionDescriptor"] = _safplusCApi.ClAmsCSIActiveDescriptorT_transitionDescriptor_get
    if _newclass:transitionDescriptor = _swig_property(_safplusCApi.ClAmsCSIActiveDescriptorT_transitionDescriptor_get, _safplusCApi.ClAmsCSIActiveDescriptorT_transitionDescriptor_set)
    __swig_setmethods__["activeCompName"] = _safplusCApi.ClAmsCSIActiveDescriptorT_activeCompName_set
    __swig_getmethods__["activeCompName"] = _safplusCApi.ClAmsCSIActiveDescriptorT_activeCompName_get
    if _newclass:activeCompName = _swig_property(_safplusCApi.ClAmsCSIActiveDescriptorT_activeCompName_get, _safplusCApi.ClAmsCSIActiveDescriptorT_activeCompName_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSIActiveDescriptorT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSIActiveDescriptorT
    __del__ = lambda self : None;
ClAmsCSIActiveDescriptorT_swigregister = _safplusCApi.ClAmsCSIActiveDescriptorT_swigregister
ClAmsCSIActiveDescriptorT_swigregister(ClAmsCSIActiveDescriptorT)

class ClAmsCSIStandbyDescriptorT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSIStandbyDescriptorT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSIStandbyDescriptorT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["activeCompName"] = _safplusCApi.ClAmsCSIStandbyDescriptorT_activeCompName_set
    __swig_getmethods__["activeCompName"] = _safplusCApi.ClAmsCSIStandbyDescriptorT_activeCompName_get
    if _newclass:activeCompName = _swig_property(_safplusCApi.ClAmsCSIStandbyDescriptorT_activeCompName_get, _safplusCApi.ClAmsCSIStandbyDescriptorT_activeCompName_set)
    __swig_setmethods__["standbyRank"] = _safplusCApi.ClAmsCSIStandbyDescriptorT_standbyRank_set
    __swig_getmethods__["standbyRank"] = _safplusCApi.ClAmsCSIStandbyDescriptorT_standbyRank_get
    if _newclass:standbyRank = _swig_property(_safplusCApi.ClAmsCSIStandbyDescriptorT_standbyRank_get, _safplusCApi.ClAmsCSIStandbyDescriptorT_standbyRank_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSIStandbyDescriptorT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSIStandbyDescriptorT
    __del__ = lambda self : None;
ClAmsCSIStandbyDescriptorT_swigregister = _safplusCApi.ClAmsCSIStandbyDescriptorT_swigregister
ClAmsCSIStandbyDescriptorT_swigregister(ClAmsCSIStandbyDescriptorT)

class ClAmsCSIStateDescriptorT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSIStateDescriptorT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSIStateDescriptorT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["activeDescriptor"] = _safplusCApi.ClAmsCSIStateDescriptorT_activeDescriptor_set
    __swig_getmethods__["activeDescriptor"] = _safplusCApi.ClAmsCSIStateDescriptorT_activeDescriptor_get
    if _newclass:activeDescriptor = _swig_property(_safplusCApi.ClAmsCSIStateDescriptorT_activeDescriptor_get, _safplusCApi.ClAmsCSIStateDescriptorT_activeDescriptor_set)
    __swig_setmethods__["standbyDescriptor"] = _safplusCApi.ClAmsCSIStateDescriptorT_standbyDescriptor_set
    __swig_getmethods__["standbyDescriptor"] = _safplusCApi.ClAmsCSIStateDescriptorT_standbyDescriptor_get
    if _newclass:standbyDescriptor = _swig_property(_safplusCApi.ClAmsCSIStateDescriptorT_standbyDescriptor_get, _safplusCApi.ClAmsCSIStateDescriptorT_standbyDescriptor_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSIStateDescriptorT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSIStateDescriptorT
    __del__ = lambda self : None;
ClAmsCSIStateDescriptorT_swigregister = _safplusCApi.ClAmsCSIStateDescriptorT_swigregister
ClAmsCSIStateDescriptorT_swigregister(ClAmsCSIStateDescriptorT)

class ClAmsCSIAttributeT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSIAttributeT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSIAttributeT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["attributeName"] = _safplusCApi.ClAmsCSIAttributeT_attributeName_set
    __swig_getmethods__["attributeName"] = _safplusCApi.ClAmsCSIAttributeT_attributeName_get
    if _newclass:attributeName = _swig_property(_safplusCApi.ClAmsCSIAttributeT_attributeName_get, _safplusCApi.ClAmsCSIAttributeT_attributeName_set)
    __swig_setmethods__["attributeValue"] = _safplusCApi.ClAmsCSIAttributeT_attributeValue_set
    __swig_getmethods__["attributeValue"] = _safplusCApi.ClAmsCSIAttributeT_attributeValue_get
    if _newclass:attributeValue = _swig_property(_safplusCApi.ClAmsCSIAttributeT_attributeValue_get, _safplusCApi.ClAmsCSIAttributeT_attributeValue_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSIAttributeT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSIAttributeT
    __del__ = lambda self : None;
ClAmsCSIAttributeT_swigregister = _safplusCApi.ClAmsCSIAttributeT_swigregister
ClAmsCSIAttributeT_swigregister(ClAmsCSIAttributeT)

class ClAmsCSIAttributeListT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSIAttributeListT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSIAttributeListT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["attribute"] = _safplusCApi.ClAmsCSIAttributeListT_attribute_set
    __swig_getmethods__["attribute"] = _safplusCApi.ClAmsCSIAttributeListT_attribute_get
    if _newclass:attribute = _swig_property(_safplusCApi.ClAmsCSIAttributeListT_attribute_get, _safplusCApi.ClAmsCSIAttributeListT_attribute_set)
    __swig_setmethods__["numAttributes"] = _safplusCApi.ClAmsCSIAttributeListT_numAttributes_set
    __swig_getmethods__["numAttributes"] = _safplusCApi.ClAmsCSIAttributeListT_numAttributes_get
    if _newclass:numAttributes = _swig_property(_safplusCApi.ClAmsCSIAttributeListT_numAttributes_get, _safplusCApi.ClAmsCSIAttributeListT_numAttributes_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSIAttributeListT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSIAttributeListT
    __del__ = lambda self : None;
ClAmsCSIAttributeListT_swigregister = _safplusCApi.ClAmsCSIAttributeListT_swigregister
ClAmsCSIAttributeListT_swigregister(ClAmsCSIAttributeListT)

class ClAmsCSIDescriptorT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSIDescriptorT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSIDescriptorT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["csiFlags"] = _safplusCApi.ClAmsCSIDescriptorT_csiFlags_set
    __swig_getmethods__["csiFlags"] = _safplusCApi.ClAmsCSIDescriptorT_csiFlags_get
    if _newclass:csiFlags = _swig_property(_safplusCApi.ClAmsCSIDescriptorT_csiFlags_get, _safplusCApi.ClAmsCSIDescriptorT_csiFlags_set)
    __swig_setmethods__["csiName"] = _safplusCApi.ClAmsCSIDescriptorT_csiName_set
    __swig_getmethods__["csiName"] = _safplusCApi.ClAmsCSIDescriptorT_csiName_get
    if _newclass:csiName = _swig_property(_safplusCApi.ClAmsCSIDescriptorT_csiName_get, _safplusCApi.ClAmsCSIDescriptorT_csiName_set)
    __swig_setmethods__["csiStateDescriptor"] = _safplusCApi.ClAmsCSIDescriptorT_csiStateDescriptor_set
    __swig_getmethods__["csiStateDescriptor"] = _safplusCApi.ClAmsCSIDescriptorT_csiStateDescriptor_get
    if _newclass:csiStateDescriptor = _swig_property(_safplusCApi.ClAmsCSIDescriptorT_csiStateDescriptor_get, _safplusCApi.ClAmsCSIDescriptorT_csiStateDescriptor_set)
    __swig_setmethods__["csiAttributeList"] = _safplusCApi.ClAmsCSIDescriptorT_csiAttributeList_set
    __swig_getmethods__["csiAttributeList"] = _safplusCApi.ClAmsCSIDescriptorT_csiAttributeList_get
    if _newclass:csiAttributeList = _swig_property(_safplusCApi.ClAmsCSIDescriptorT_csiAttributeList_get, _safplusCApi.ClAmsCSIDescriptorT_csiAttributeList_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSIDescriptorT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSIDescriptorT
    __del__ = lambda self : None;
ClAmsCSIDescriptorT_swigregister = _safplusCApi.ClAmsCSIDescriptorT_swigregister
ClAmsCSIDescriptorT_swigregister(ClAmsCSIDescriptorT)

class ClAmsCSITypeDescriptorT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsCSITypeDescriptorT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsCSITypeDescriptorT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["csiDescriptor"] = _safplusCApi.ClAmsCSITypeDescriptorT_csiDescriptor_set
    __swig_getmethods__["csiDescriptor"] = _safplusCApi.ClAmsCSITypeDescriptorT_csiDescriptor_get
    if _newclass:csiDescriptor = _swig_property(_safplusCApi.ClAmsCSITypeDescriptorT_csiDescriptor_get, _safplusCApi.ClAmsCSITypeDescriptorT_csiDescriptor_set)
    __swig_setmethods__["csiType"] = _safplusCApi.ClAmsCSITypeDescriptorT_csiType_set
    __swig_getmethods__["csiType"] = _safplusCApi.ClAmsCSITypeDescriptorT_csiType_get
    if _newclass:csiType = _swig_property(_safplusCApi.ClAmsCSITypeDescriptorT_csiType_get, _safplusCApi.ClAmsCSITypeDescriptorT_csiType_set)
    __swig_setmethods__["compName"] = _safplusCApi.ClAmsCSITypeDescriptorT_compName_set
    __swig_getmethods__["compName"] = _safplusCApi.ClAmsCSITypeDescriptorT_compName_get
    if _newclass:compName = _swig_property(_safplusCApi.ClAmsCSITypeDescriptorT_compName_get, _safplusCApi.ClAmsCSITypeDescriptorT_compName_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsCSITypeDescriptorT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsCSITypeDescriptorT
    __del__ = lambda self : None;
ClAmsCSITypeDescriptorT_swigregister = _safplusCApi.ClAmsCSITypeDescriptorT_swigregister
ClAmsCSITypeDescriptorT_swigregister(ClAmsCSITypeDescriptorT)

CL_AMS_PG_TRACK_CURRENT = _safplusCApi.CL_AMS_PG_TRACK_CURRENT
CL_AMS_PG_TRACK_CHANGES = _safplusCApi.CL_AMS_PG_TRACK_CHANGES
CL_AMS_PG_TRACK_CHANGES_ONLY = _safplusCApi.CL_AMS_PG_TRACK_CHANGES_ONLY
CL_AMS_PG_NO_CHANGE = _safplusCApi.CL_AMS_PG_NO_CHANGE
CL_AMS_PG_ADDED = _safplusCApi.CL_AMS_PG_ADDED
CL_AMS_PG_REMOVED = _safplusCApi.CL_AMS_PG_REMOVED
CL_AMS_PG_STATE_CHANGE = _safplusCApi.CL_AMS_PG_STATE_CHANGE
class ClAmsPGMemberT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsPGMemberT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsPGMemberT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["compName"] = _safplusCApi.ClAmsPGMemberT_compName_set
    __swig_getmethods__["compName"] = _safplusCApi.ClAmsPGMemberT_compName_get
    if _newclass:compName = _swig_property(_safplusCApi.ClAmsPGMemberT_compName_get, _safplusCApi.ClAmsPGMemberT_compName_set)
    __swig_setmethods__["haState"] = _safplusCApi.ClAmsPGMemberT_haState_set
    __swig_getmethods__["haState"] = _safplusCApi.ClAmsPGMemberT_haState_get
    if _newclass:haState = _swig_property(_safplusCApi.ClAmsPGMemberT_haState_get, _safplusCApi.ClAmsPGMemberT_haState_set)
    __swig_setmethods__["rank"] = _safplusCApi.ClAmsPGMemberT_rank_set
    __swig_getmethods__["rank"] = _safplusCApi.ClAmsPGMemberT_rank_get
    if _newclass:rank = _swig_property(_safplusCApi.ClAmsPGMemberT_rank_get, _safplusCApi.ClAmsPGMemberT_rank_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsPGMemberT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsPGMemberT
    __del__ = lambda self : None;
ClAmsPGMemberT_swigregister = _safplusCApi.ClAmsPGMemberT_swigregister
ClAmsPGMemberT_swigregister(ClAmsPGMemberT)

class ClAmsPGNotificationT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsPGNotificationT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsPGNotificationT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["member"] = _safplusCApi.ClAmsPGNotificationT_member_set
    __swig_getmethods__["member"] = _safplusCApi.ClAmsPGNotificationT_member_get
    if _newclass:member = _swig_property(_safplusCApi.ClAmsPGNotificationT_member_get, _safplusCApi.ClAmsPGNotificationT_member_set)
    __swig_setmethods__["change"] = _safplusCApi.ClAmsPGNotificationT_change_set
    __swig_getmethods__["change"] = _safplusCApi.ClAmsPGNotificationT_change_get
    if _newclass:change = _swig_property(_safplusCApi.ClAmsPGNotificationT_change_get, _safplusCApi.ClAmsPGNotificationT_change_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsPGNotificationT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsPGNotificationT
    __del__ = lambda self : None;
ClAmsPGNotificationT_swigregister = _safplusCApi.ClAmsPGNotificationT_swigregister
ClAmsPGNotificationT_swigregister(ClAmsPGNotificationT)

class ClAmsPGNotificationBufferT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsPGNotificationBufferT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsPGNotificationBufferT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["numItems"] = _safplusCApi.ClAmsPGNotificationBufferT_numItems_set
    __swig_getmethods__["numItems"] = _safplusCApi.ClAmsPGNotificationBufferT_numItems_get
    if _newclass:numItems = _swig_property(_safplusCApi.ClAmsPGNotificationBufferT_numItems_get, _safplusCApi.ClAmsPGNotificationBufferT_numItems_set)
    __swig_setmethods__["notification"] = _safplusCApi.ClAmsPGNotificationBufferT_notification_set
    __swig_getmethods__["notification"] = _safplusCApi.ClAmsPGNotificationBufferT_notification_get
    if _newclass:notification = _swig_property(_safplusCApi.ClAmsPGNotificationBufferT_notification_get, _safplusCApi.ClAmsPGNotificationBufferT_notification_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsPGNotificationBufferT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsPGNotificationBufferT
    __del__ = lambda self : None;
ClAmsPGNotificationBufferT_swigregister = _safplusCApi.ClAmsPGNotificationBufferT_swigregister
ClAmsPGNotificationBufferT_swigregister(ClAmsPGNotificationBufferT)

class ClAmsSIDescriptorT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ClAmsSIDescriptorT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ClAmsSIDescriptorT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["numberOfItems"] = _safplusCApi.ClAmsSIDescriptorT_numberOfItems_set
    __swig_getmethods__["numberOfItems"] = _safplusCApi.ClAmsSIDescriptorT_numberOfItems_get
    if _newclass:numberOfItems = _swig_property(_safplusCApi.ClAmsSIDescriptorT_numberOfItems_get, _safplusCApi.ClAmsSIDescriptorT_numberOfItems_set)
    __swig_setmethods__["csiDefinition"] = _safplusCApi.ClAmsSIDescriptorT_csiDefinition_set
    __swig_getmethods__["csiDefinition"] = _safplusCApi.ClAmsSIDescriptorT_csiDefinition_get
    if _newclass:csiDefinition = _swig_property(_safplusCApi.ClAmsSIDescriptorT_csiDefinition_get, _safplusCApi.ClAmsSIDescriptorT_csiDefinition_set)
    def __init__(self): 
        this = _safplusCApi.new_ClAmsSIDescriptorT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_ClAmsSIDescriptorT
    __del__ = lambda self : None;
ClAmsSIDescriptorT_swigregister = _safplusCApi.ClAmsSIDescriptorT_swigregister
ClAmsSIDescriptorT_swigregister(ClAmsSIDescriptorT)


def saCkptInitialize(*args):
  return _safplusCApi.saCkptInitialize(*args)
saCkptInitialize = _safplusCApi.saCkptInitialize

def saCkptSectionCreate(*args):
  return _safplusCApi.saCkptSectionCreate(*args)
saCkptSectionCreate = _safplusCApi.saCkptSectionCreate

def saCkptCheckpointOpen(*args):
  return _safplusCApi.saCkptCheckpointOpen(*args)
saCkptCheckpointOpen = _safplusCApi.saCkptCheckpointOpen

def saCkptSectionOverwrite(*args):
  return _safplusCApi.saCkptSectionOverwrite(*args)
saCkptSectionOverwrite = _safplusCApi.saCkptSectionOverwrite

def saCkptCheckpointWrite(*args):
  return _safplusCApi.saCkptCheckpointWrite(*args)
saCkptCheckpointWrite = _safplusCApi.saCkptCheckpointWrite

def saCkptCheckpointRead(*args):
  return _safplusCApi.saCkptCheckpointRead(*args)
saCkptCheckpointRead = _safplusCApi.saCkptCheckpointRead

def saCkptCheckpointStatusGet(*args):
  return _safplusCApi.saCkptCheckpointStatusGet(*args)
saCkptCheckpointStatusGet = _safplusCApi.saCkptCheckpointStatusGet
SA_CKPT_WR_ALL_REPLICAS = _safplusCApi.SA_CKPT_WR_ALL_REPLICAS
SA_CKPT_WR_ACTIVE_REPLICA = _safplusCApi.SA_CKPT_WR_ACTIVE_REPLICA
SA_CKPT_WR_ACTIVE_REPLICA_WEAK = _safplusCApi.SA_CKPT_WR_ACTIVE_REPLICA_WEAK
SA_CKPT_CHECKPOINT_COLLOCATED = _safplusCApi.SA_CKPT_CHECKPOINT_COLLOCATED
class SaCkptCheckpointCreationAttributesT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaCkptCheckpointCreationAttributesT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaCkptCheckpointCreationAttributesT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["creationFlags"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_creationFlags_set
    __swig_getmethods__["creationFlags"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_creationFlags_get
    if _newclass:creationFlags = _swig_property(_safplusCApi.SaCkptCheckpointCreationAttributesT_creationFlags_get, _safplusCApi.SaCkptCheckpointCreationAttributesT_creationFlags_set)
    __swig_setmethods__["checkpointSize"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_checkpointSize_set
    __swig_getmethods__["checkpointSize"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_checkpointSize_get
    if _newclass:checkpointSize = _swig_property(_safplusCApi.SaCkptCheckpointCreationAttributesT_checkpointSize_get, _safplusCApi.SaCkptCheckpointCreationAttributesT_checkpointSize_set)
    __swig_setmethods__["retentionDuration"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_retentionDuration_set
    __swig_getmethods__["retentionDuration"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_retentionDuration_get
    if _newclass:retentionDuration = _swig_property(_safplusCApi.SaCkptCheckpointCreationAttributesT_retentionDuration_get, _safplusCApi.SaCkptCheckpointCreationAttributesT_retentionDuration_set)
    __swig_setmethods__["maxSections"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_maxSections_set
    __swig_getmethods__["maxSections"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_maxSections_get
    if _newclass:maxSections = _swig_property(_safplusCApi.SaCkptCheckpointCreationAttributesT_maxSections_get, _safplusCApi.SaCkptCheckpointCreationAttributesT_maxSections_set)
    __swig_setmethods__["maxSectionSize"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_maxSectionSize_set
    __swig_getmethods__["maxSectionSize"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_maxSectionSize_get
    if _newclass:maxSectionSize = _swig_property(_safplusCApi.SaCkptCheckpointCreationAttributesT_maxSectionSize_get, _safplusCApi.SaCkptCheckpointCreationAttributesT_maxSectionSize_set)
    __swig_setmethods__["maxSectionIdSize"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_maxSectionIdSize_set
    __swig_getmethods__["maxSectionIdSize"] = _safplusCApi.SaCkptCheckpointCreationAttributesT_maxSectionIdSize_get
    if _newclass:maxSectionIdSize = _swig_property(_safplusCApi.SaCkptCheckpointCreationAttributesT_maxSectionIdSize_get, _safplusCApi.SaCkptCheckpointCreationAttributesT_maxSectionIdSize_set)
    def __init__(self): 
        this = _safplusCApi.new_SaCkptCheckpointCreationAttributesT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaCkptCheckpointCreationAttributesT
    __del__ = lambda self : None;
SaCkptCheckpointCreationAttributesT_swigregister = _safplusCApi.SaCkptCheckpointCreationAttributesT_swigregister
SaCkptCheckpointCreationAttributesT_swigregister(SaCkptCheckpointCreationAttributesT)

SA_CKPT_CHECKPOINT_READ = _safplusCApi.SA_CKPT_CHECKPOINT_READ
SA_CKPT_CHECKPOINT_WRITE = _safplusCApi.SA_CKPT_CHECKPOINT_WRITE
SA_CKPT_CHECKPOINT_CREATE = _safplusCApi.SA_CKPT_CHECKPOINT_CREATE
class SaCkptSectionIdT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaCkptSectionIdT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaCkptSectionIdT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["idLen"] = _safplusCApi.SaCkptSectionIdT_idLen_set
    __swig_getmethods__["idLen"] = _safplusCApi.SaCkptSectionIdT_idLen_get
    if _newclass:idLen = _swig_property(_safplusCApi.SaCkptSectionIdT_idLen_get, _safplusCApi.SaCkptSectionIdT_idLen_set)
    __swig_setmethods__["id"] = _safplusCApi.SaCkptSectionIdT_id_set
    __swig_getmethods__["id"] = _safplusCApi.SaCkptSectionIdT_id_get
    if _newclass:id = _swig_property(_safplusCApi.SaCkptSectionIdT_id_get, _safplusCApi.SaCkptSectionIdT_id_set)
    def __init__(self): 
        this = _safplusCApi.new_SaCkptSectionIdT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaCkptSectionIdT
    __del__ = lambda self : None;
SaCkptSectionIdT_swigregister = _safplusCApi.SaCkptSectionIdT_swigregister
SaCkptSectionIdT_swigregister(SaCkptSectionIdT)

class SaCkptSectionCreationAttributesT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaCkptSectionCreationAttributesT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaCkptSectionCreationAttributesT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sectionId"] = _safplusCApi.SaCkptSectionCreationAttributesT_sectionId_set
    __swig_getmethods__["sectionId"] = _safplusCApi.SaCkptSectionCreationAttributesT_sectionId_get
    if _newclass:sectionId = _swig_property(_safplusCApi.SaCkptSectionCreationAttributesT_sectionId_get, _safplusCApi.SaCkptSectionCreationAttributesT_sectionId_set)
    __swig_setmethods__["expirationTime"] = _safplusCApi.SaCkptSectionCreationAttributesT_expirationTime_set
    __swig_getmethods__["expirationTime"] = _safplusCApi.SaCkptSectionCreationAttributesT_expirationTime_get
    if _newclass:expirationTime = _swig_property(_safplusCApi.SaCkptSectionCreationAttributesT_expirationTime_get, _safplusCApi.SaCkptSectionCreationAttributesT_expirationTime_set)
    def __init__(self): 
        this = _safplusCApi.new_SaCkptSectionCreationAttributesT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaCkptSectionCreationAttributesT
    __del__ = lambda self : None;
SaCkptSectionCreationAttributesT_swigregister = _safplusCApi.SaCkptSectionCreationAttributesT_swigregister
SaCkptSectionCreationAttributesT_swigregister(SaCkptSectionCreationAttributesT)

SA_CKPT_SECTION_VALID = _safplusCApi.SA_CKPT_SECTION_VALID
SA_CKPT_SECTION_CORRUPTED = _safplusCApi.SA_CKPT_SECTION_CORRUPTED
class SaCkptSectionDescriptorT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaCkptSectionDescriptorT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaCkptSectionDescriptorT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sectionId"] = _safplusCApi.SaCkptSectionDescriptorT_sectionId_set
    __swig_getmethods__["sectionId"] = _safplusCApi.SaCkptSectionDescriptorT_sectionId_get
    if _newclass:sectionId = _swig_property(_safplusCApi.SaCkptSectionDescriptorT_sectionId_get, _safplusCApi.SaCkptSectionDescriptorT_sectionId_set)
    __swig_setmethods__["expirationTime"] = _safplusCApi.SaCkptSectionDescriptorT_expirationTime_set
    __swig_getmethods__["expirationTime"] = _safplusCApi.SaCkptSectionDescriptorT_expirationTime_get
    if _newclass:expirationTime = _swig_property(_safplusCApi.SaCkptSectionDescriptorT_expirationTime_get, _safplusCApi.SaCkptSectionDescriptorT_expirationTime_set)
    __swig_setmethods__["sectionSize"] = _safplusCApi.SaCkptSectionDescriptorT_sectionSize_set
    __swig_getmethods__["sectionSize"] = _safplusCApi.SaCkptSectionDescriptorT_sectionSize_get
    if _newclass:sectionSize = _swig_property(_safplusCApi.SaCkptSectionDescriptorT_sectionSize_get, _safplusCApi.SaCkptSectionDescriptorT_sectionSize_set)
    __swig_setmethods__["sectionState"] = _safplusCApi.SaCkptSectionDescriptorT_sectionState_set
    __swig_getmethods__["sectionState"] = _safplusCApi.SaCkptSectionDescriptorT_sectionState_get
    if _newclass:sectionState = _swig_property(_safplusCApi.SaCkptSectionDescriptorT_sectionState_get, _safplusCApi.SaCkptSectionDescriptorT_sectionState_set)
    __swig_setmethods__["lastUpdate"] = _safplusCApi.SaCkptSectionDescriptorT_lastUpdate_set
    __swig_getmethods__["lastUpdate"] = _safplusCApi.SaCkptSectionDescriptorT_lastUpdate_get
    if _newclass:lastUpdate = _swig_property(_safplusCApi.SaCkptSectionDescriptorT_lastUpdate_get, _safplusCApi.SaCkptSectionDescriptorT_lastUpdate_set)
    def __init__(self): 
        this = _safplusCApi.new_SaCkptSectionDescriptorT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaCkptSectionDescriptorT
    __del__ = lambda self : None;
SaCkptSectionDescriptorT_swigregister = _safplusCApi.SaCkptSectionDescriptorT_swigregister
SaCkptSectionDescriptorT_swigregister(SaCkptSectionDescriptorT)

SA_CKPT_SECTIONS_FOREVER = _safplusCApi.SA_CKPT_SECTIONS_FOREVER
SA_CKPT_SECTIONS_LEQ_EXPIRATION_TIME = _safplusCApi.SA_CKPT_SECTIONS_LEQ_EXPIRATION_TIME
SA_CKPT_SECTIONS_GEQ_EXPIRATION_TIME = _safplusCApi.SA_CKPT_SECTIONS_GEQ_EXPIRATION_TIME
SA_CKPT_SECTIONS_CORRUPTED = _safplusCApi.SA_CKPT_SECTIONS_CORRUPTED
SA_CKPT_SECTIONS_ANY = _safplusCApi.SA_CKPT_SECTIONS_ANY
class SaCkptIOVectorElementT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaCkptIOVectorElementT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaCkptIOVectorElementT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sectionId"] = _safplusCApi.SaCkptIOVectorElementT_sectionId_set
    __swig_getmethods__["sectionId"] = _safplusCApi.SaCkptIOVectorElementT_sectionId_get
    if _newclass:sectionId = _swig_property(_safplusCApi.SaCkptIOVectorElementT_sectionId_get, _safplusCApi.SaCkptIOVectorElementT_sectionId_set)
    __swig_setmethods__["dataBuffer"] = _safplusCApi.SaCkptIOVectorElementT_dataBuffer_set
    __swig_getmethods__["dataBuffer"] = _safplusCApi.SaCkptIOVectorElementT_dataBuffer_get
    if _newclass:dataBuffer = _swig_property(_safplusCApi.SaCkptIOVectorElementT_dataBuffer_get, _safplusCApi.SaCkptIOVectorElementT_dataBuffer_set)
    __swig_setmethods__["dataSize"] = _safplusCApi.SaCkptIOVectorElementT_dataSize_set
    __swig_getmethods__["dataSize"] = _safplusCApi.SaCkptIOVectorElementT_dataSize_get
    if _newclass:dataSize = _swig_property(_safplusCApi.SaCkptIOVectorElementT_dataSize_get, _safplusCApi.SaCkptIOVectorElementT_dataSize_set)
    __swig_setmethods__["dataOffset"] = _safplusCApi.SaCkptIOVectorElementT_dataOffset_set
    __swig_getmethods__["dataOffset"] = _safplusCApi.SaCkptIOVectorElementT_dataOffset_get
    if _newclass:dataOffset = _swig_property(_safplusCApi.SaCkptIOVectorElementT_dataOffset_get, _safplusCApi.SaCkptIOVectorElementT_dataOffset_set)
    __swig_setmethods__["readSize"] = _safplusCApi.SaCkptIOVectorElementT_readSize_set
    __swig_getmethods__["readSize"] = _safplusCApi.SaCkptIOVectorElementT_readSize_get
    if _newclass:readSize = _swig_property(_safplusCApi.SaCkptIOVectorElementT_readSize_get, _safplusCApi.SaCkptIOVectorElementT_readSize_set)
    def __init__(self): 
        this = _safplusCApi.new_SaCkptIOVectorElementT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaCkptIOVectorElementT
    __del__ = lambda self : None;
SaCkptIOVectorElementT_swigregister = _safplusCApi.SaCkptIOVectorElementT_swigregister
SaCkptIOVectorElementT_swigregister(SaCkptIOVectorElementT)

class SaCkptCheckpointDescriptorT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaCkptCheckpointDescriptorT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaCkptCheckpointDescriptorT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["checkpointCreationAttributes"] = _safplusCApi.SaCkptCheckpointDescriptorT_checkpointCreationAttributes_set
    __swig_getmethods__["checkpointCreationAttributes"] = _safplusCApi.SaCkptCheckpointDescriptorT_checkpointCreationAttributes_get
    if _newclass:checkpointCreationAttributes = _swig_property(_safplusCApi.SaCkptCheckpointDescriptorT_checkpointCreationAttributes_get, _safplusCApi.SaCkptCheckpointDescriptorT_checkpointCreationAttributes_set)
    __swig_setmethods__["numberOfSections"] = _safplusCApi.SaCkptCheckpointDescriptorT_numberOfSections_set
    __swig_getmethods__["numberOfSections"] = _safplusCApi.SaCkptCheckpointDescriptorT_numberOfSections_get
    if _newclass:numberOfSections = _swig_property(_safplusCApi.SaCkptCheckpointDescriptorT_numberOfSections_get, _safplusCApi.SaCkptCheckpointDescriptorT_numberOfSections_set)
    __swig_setmethods__["memoryUsed"] = _safplusCApi.SaCkptCheckpointDescriptorT_memoryUsed_set
    __swig_getmethods__["memoryUsed"] = _safplusCApi.SaCkptCheckpointDescriptorT_memoryUsed_get
    if _newclass:memoryUsed = _swig_property(_safplusCApi.SaCkptCheckpointDescriptorT_memoryUsed_get, _safplusCApi.SaCkptCheckpointDescriptorT_memoryUsed_set)
    def __init__(self): 
        this = _safplusCApi.new_SaCkptCheckpointDescriptorT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaCkptCheckpointDescriptorT
    __del__ = lambda self : None;
SaCkptCheckpointDescriptorT_swigregister = _safplusCApi.SaCkptCheckpointDescriptorT_swigregister
SaCkptCheckpointDescriptorT_swigregister(SaCkptCheckpointDescriptorT)

class SaCkptCallbacksT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SaCkptCallbacksT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SaCkptCallbacksT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["saCkptCheckpointOpenCallback"] = _safplusCApi.SaCkptCallbacksT_saCkptCheckpointOpenCallback_set
    __swig_getmethods__["saCkptCheckpointOpenCallback"] = _safplusCApi.SaCkptCallbacksT_saCkptCheckpointOpenCallback_get
    if _newclass:saCkptCheckpointOpenCallback = _swig_property(_safplusCApi.SaCkptCallbacksT_saCkptCheckpointOpenCallback_get, _safplusCApi.SaCkptCallbacksT_saCkptCheckpointOpenCallback_set)
    __swig_setmethods__["saCkptCheckpointSynchronizeCallback"] = _safplusCApi.SaCkptCallbacksT_saCkptCheckpointSynchronizeCallback_set
    __swig_getmethods__["saCkptCheckpointSynchronizeCallback"] = _safplusCApi.SaCkptCallbacksT_saCkptCheckpointSynchronizeCallback_get
    if _newclass:saCkptCheckpointSynchronizeCallback = _swig_property(_safplusCApi.SaCkptCallbacksT_saCkptCheckpointSynchronizeCallback_get, _safplusCApi.SaCkptCallbacksT_saCkptCheckpointSynchronizeCallback_set)
    def __init__(self): 
        this = _safplusCApi.new_SaCkptCallbacksT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _safplusCApi.delete_SaCkptCallbacksT
    __del__ = lambda self : None;
SaCkptCallbacksT_swigregister = _safplusCApi.SaCkptCallbacksT_swigregister
SaCkptCallbacksT_swigregister(SaCkptCallbacksT)


def saCkptSelectionObjectGet(*args):
  return _safplusCApi.saCkptSelectionObjectGet(*args)
saCkptSelectionObjectGet = _safplusCApi.saCkptSelectionObjectGet

def saCkptDispatch(*args):
  return _safplusCApi.saCkptDispatch(*args)
saCkptDispatch = _safplusCApi.saCkptDispatch

def saCkptFinalize(*args):
  return _safplusCApi.saCkptFinalize(*args)
saCkptFinalize = _safplusCApi.saCkptFinalize

def saCkptCheckpointOpenAsync(*args):
  return _safplusCApi.saCkptCheckpointOpenAsync(*args)
saCkptCheckpointOpenAsync = _safplusCApi.saCkptCheckpointOpenAsync

def saCkptCheckpointClose(*args):
  return _safplusCApi.saCkptCheckpointClose(*args)
saCkptCheckpointClose = _safplusCApi.saCkptCheckpointClose

def saCkptCheckpointUnlink(*args):
  return _safplusCApi.saCkptCheckpointUnlink(*args)
saCkptCheckpointUnlink = _safplusCApi.saCkptCheckpointUnlink

def saCkptCheckpointRetentionDurationSet(*args):
  return _safplusCApi.saCkptCheckpointRetentionDurationSet(*args)
saCkptCheckpointRetentionDurationSet = _safplusCApi.saCkptCheckpointRetentionDurationSet

def saCkptActiveReplicaSet(*args):
  return _safplusCApi.saCkptActiveReplicaSet(*args)
saCkptActiveReplicaSet = _safplusCApi.saCkptActiveReplicaSet

def saCkptSectionDelete(*args):
  return _safplusCApi.saCkptSectionDelete(*args)
saCkptSectionDelete = _safplusCApi.saCkptSectionDelete

def saCkptSectionExpirationTimeSet(*args):
  return _safplusCApi.saCkptSectionExpirationTimeSet(*args)
saCkptSectionExpirationTimeSet = _safplusCApi.saCkptSectionExpirationTimeSet

def saCkptSectionIterationInitialize(*args):
  return _safplusCApi.saCkptSectionIterationInitialize(*args)
saCkptSectionIterationInitialize = _safplusCApi.saCkptSectionIterationInitialize

def saCkptSectionIterationNext(*args):
  return _safplusCApi.saCkptSectionIterationNext(*args)
saCkptSectionIterationNext = _safplusCApi.saCkptSectionIterationNext

def saCkptSectionIterationFinalize(*args):
  return _safplusCApi.saCkptSectionIterationFinalize(*args)
saCkptSectionIterationFinalize = _safplusCApi.saCkptSectionIterationFinalize

def saCkptCheckpointSynchronize(*args):
  return _safplusCApi.saCkptCheckpointSynchronize(*args)
saCkptCheckpointSynchronize = _safplusCApi.saCkptCheckpointSynchronize

def saCkptCheckpointSynchronizeAsync(*args):
  return _safplusCApi.saCkptCheckpointSynchronizeAsync(*args)
saCkptCheckpointSynchronizeAsync = _safplusCApi.saCkptCheckpointSynchronizeAsync
# This file is compatible with both classic and new-style classes.


