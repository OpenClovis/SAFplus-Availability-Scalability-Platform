/* 
 * File Xports.cxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#include <map>
#include "Xport.hxx"
#include "clMgtObject.hxx"
#include <vector>
#include "MgtFactory.hxx"
#include <string>
#include "Xports.hxx"

using namespace std;

namespace SAFplusMsgServer {

    /* Apply MGT object factory */
    MGT_REGISTER_IMPL(Xports, /SAFplusMsgServer/xports)

    Xports::Xports(): ClMgtObject("xports") {
    };

    vector<string> *Xports::getChildNames() {
        string childNames[] = { "xport" };
        return new vector<string> (childNames, childNames + sizeof(childNames) / sizeof(childNames[0]));
    };

    /*
     * XPATH: /SAFplusMsgServer/xports/xport
     */
    Xport* Xports::getXport(string typeValue) {
        map<string, vector<ClMgtObject*>* >::iterator mapIndex = mChildren.find("xport");
        /* Check if MGT module already exists in the database */
        if (mapIndex != mChildren.end()) {
            vector<ClMgtObject*> *objs = (vector<ClMgtObject*>*) (*mapIndex).second;
            for (unsigned int i = 0; i < objs->size(); i++) {
                ClMgtObject* childObject = (*objs)[i];
                if (((Xport*)childObject)->getType() == typeValue) {
                    return (Xport*)childObject;
                }
            }
        }
        return NULL;
    };

    /*
     * XPATH: /SAFplusMsgServer/xports/xport
     */
    void Xports::addXport(Xport *xportValue) {
        this->addChildObject(xportValue, "xport");
    };

    /*
     * XPATH: /SAFplusMsgServer/xports/xport
     */
    void Xports::addXport(string typeValue) {
        Xport *objxport = new Xport(typeValue);
        this->addChildObject(objxport, "xport");
    };

    Xports::~Xports() {
    };

}
/* namespace SAFplusMsgServer */
