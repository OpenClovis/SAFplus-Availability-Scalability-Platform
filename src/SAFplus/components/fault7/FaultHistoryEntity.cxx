/* 
 * File FaultHistoryEntity.cxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#include <iostream>
#include "clTransaction.hxx"
#include "FaultHistoryEntity.hxx"


namespace SAFplus
{

    FaultHistoryEntity::FaultHistoryEntity()
    {
    };

    FaultHistoryEntity FaultHistoryEntity::getValue()
    {
        FaultHistoryEntity temp;
        temp.faultData=this->faultData;
        temp.faultHdl=this->faultHdl;
        temp.time=this->time;
        return temp;
    };

    void FaultHistoryEntity::setValue(FaultEventData faultData, Handle faultHdl,Handle reporter,time_t time, SAFplus::Transaction &t)
    {
        if(&t == &SAFplus::NO_TXN)
        {
            this->faultData = faultData;
            this->faultHdl = faultHdl;
            this->time = time;
            this->reporter=reporter;
        }
        else
        {
            SAFplus::SimpleTxnOperation<FaultEventData> *optData = new SAFplus::SimpleTxnOperation<FaultEventData>(&this->faultData,faultData);
            t.addOperation(optData);
            SAFplus::SimpleTxnOperation<Handle> *optHdl = new SAFplus::SimpleTxnOperation<Handle>(&this->faultHdl,faultHdl);
            t.addOperation(optHdl);
            SAFplus::SimpleTxnOperation<time_t> *optTime = new SAFplus::SimpleTxnOperation<time_t>(&this->time,time);
            t.addOperation(optTime);
        }
    };

    SAFplus::FaultHistoryEntity& FaultHistoryEntity::operator=(const FaultHistoryEntity &FaultHistoryEntity)
    {
        faultData = FaultHistoryEntity.faultData;
        faultHdl = FaultHistoryEntity.faultHdl;
        time = FaultHistoryEntity.time;
        return *this;
    };
    FaultHistoryEntity::~FaultHistoryEntity()
    {
    };

    std::ostream& operator<<(std::ostream &os, const SAFplus::FaultHistoryEntity &FaultHistoryEntity)
    {
        return os << FaultHistoryEntity.time;
    };

    std::istream& operator>>(std::istream &is, SAFplus::FaultHistoryEntity &FaultHistoryEntity)
    {
        return is >> FaultHistoryEntity.time;
    };

}
