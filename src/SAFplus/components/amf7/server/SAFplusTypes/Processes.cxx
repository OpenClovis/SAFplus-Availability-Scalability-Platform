/* 
 * File Processes.cxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 
#include "SAFplusTypesCommon.hxx"

#include "clMgtObject.hxx"
#include "clMgtProv.hxx"
#include "Xpath10.hxx"
#include <vector>
#include "MgtFactory.hxx"
#include <string>
#include "Processes.hxx"

using namespace ietfYangTypes;

namespace SAFplusTypes
  {

    /* Apply MGT object factory */
    REGISTERIMPL(Processes, /SAFplusTypes/application/processes)

    Processes::Processes(): ClMgtObject("processes"), name("name"), ref("ref")
    {
        this->addChildObject(&name, "name");
        this->addChildObject(&ref, "ref");
        this->addKey("name");
    };

    Processes::Processes(std::string nameValue): ClMgtObject("processes"), name("name"), ref("ref")
    {
        this->name.Value =  nameValue;
        this->addKey("name");
        this->addChildObject(&name, "name");
        this->addChildObject(&ref, "ref");
    };

    std::vector<std::string> Processes::getKeys()
    {
        std::string keyNames[] = { "name" };
        return std::vector<std::string> (keyNames, keyNames + sizeof(keyNames) / sizeof(keyNames[0]));
    };

    std::vector<std::string>* Processes::getChildNames()
    {
        std::string childNames[] = { "name", "ref" };
        return new std::vector<std::string> (childNames, childNames + sizeof(childNames) / sizeof(childNames[0]));
    };

    /*
     * XPATH: /SAFplusTypes/application/processes/name
     */
    std::string Processes::getName()
    {
        return this->name.Value;
    };

    /*
     * XPATH: /SAFplusTypes/application/processes/name
     */
    void Processes::setName(std::string nameValue)
    {
        this->name.Value = nameValue;
    };

    /*
     * XPATH: /SAFplusTypes/application/processes/ref
     */
    ietfYangTypes::Xpath10 Processes::getRef()
    {
        return this->ref.Value;
    };

    /*
     * XPATH: /SAFplusTypes/application/processes/ref
     */
    void Processes::setRef(ietfYangTypes::Xpath10 refValue)
    {
        this->ref.Value = refValue;
    };

    Processes::~Processes()
    {
    };

}
/* namespace SAFplusTypes */
