/* 
 * File DecStatistic.hxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#pragma once
#ifndef DECSTATISTIC_HXX_
#define DECSTATISTIC_HXX_
#include "SAFplusTypesCommon.hxx"

#include "clMgtObject.hxx"
#include "clMgtProv.hxx"
#include <vector>
#include "MgtFactory.hxx"
#include "clMgtProvList.hxx"

namespace SAFplusTypes
  {

    class DecStatistic : public SAFplus::ClMgtObject {

        /* Apply MGT object factory */
        MGT_REGISTER(DecStatistic);

    public:
        SAFplus::ClMgtProv<long> current;
        SAFplus::ClMgtProvList<long> history10sec;
        SAFplus::ClMgtProvList<long> history1min;
        SAFplus::ClMgtProvList<long> history10min;
        SAFplus::ClMgtProvList<long> history1hour;
        SAFplus::ClMgtProvList<long> history12hour;
        SAFplus::ClMgtProvList<long> history1day;
        SAFplus::ClMgtProvList<long> history1week;
        SAFplus::ClMgtProvList<long> history1month;

    public:
        DecStatistic();
        std::vector<std::string>* getChildNames();

        /*
         * XPATH: /SAFplusTypes/decStatistic/current
         */
        long getCurrent();

        /*
         * XPATH: /SAFplusTypes/decStatistic/current
         */
        void setCurrent(long currentValue);

        /*
         * XPATH: /SAFplusTypes/decStatistic/history10sec
         */
        std::vector<long> getHistory10sec();

        /*
         * XPATH: /SAFplusTypes/decStatistic/history10sec
         */
        void setHistory10sec(long history10secValue);

        /*
         * XPATH: /SAFplusTypes/decStatistic/history1min
         */
        std::vector<long> getHistory1min();

        /*
         * XPATH: /SAFplusTypes/decStatistic/history1min
         */
        void setHistory1min(long history1minValue);

        /*
         * XPATH: /SAFplusTypes/decStatistic/history10min
         */
        std::vector<long> getHistory10min();

        /*
         * XPATH: /SAFplusTypes/decStatistic/history10min
         */
        void setHistory10min(long history10minValue);

        /*
         * XPATH: /SAFplusTypes/decStatistic/history1hour
         */
        std::vector<long> getHistory1hour();

        /*
         * XPATH: /SAFplusTypes/decStatistic/history1hour
         */
        void setHistory1hour(long history1hourValue);

        /*
         * XPATH: /SAFplusTypes/decStatistic/history12hour
         */
        std::vector<long> getHistory12hour();

        /*
         * XPATH: /SAFplusTypes/decStatistic/history12hour
         */
        void setHistory12hour(long history12hourValue);

        /*
         * XPATH: /SAFplusTypes/decStatistic/history1day
         */
        std::vector<long> getHistory1day();

        /*
         * XPATH: /SAFplusTypes/decStatistic/history1day
         */
        void setHistory1day(long history1dayValue);

        /*
         * XPATH: /SAFplusTypes/decStatistic/history1week
         */
        std::vector<long> getHistory1week();

        /*
         * XPATH: /SAFplusTypes/decStatistic/history1week
         */
        void setHistory1week(long history1weekValue);

        /*
         * XPATH: /SAFplusTypes/decStatistic/history1month
         */
        std::vector<long> getHistory1month();

        /*
         * XPATH: /SAFplusTypes/decStatistic/history1month
         */
        void setHistory1month(long history1monthValue);
        ~DecStatistic();

    };
}
/* namespace SAFplusTypes */
#endif /* DECSTATISTIC_HXX_ */
