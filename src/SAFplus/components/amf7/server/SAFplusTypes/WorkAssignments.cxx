/* 
 * File WorkAssignments.cxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 
#include "SAFplusTypesCommon.hxx"

#include "clMgtList.hxx"
#include <vector>
#include "MgtFactory.hxx"
#include "clMgtObject.hxx"
#include "clMgtProv.hxx"
#include "Provisioning.hxx"
#include "Provisioning.hxx"
#include <string>
#include "WorkAssignments.hxx"


namespace SAFplusTypes
  {

    /* Apply MGT object factory */
    REGISTERIMPL(WorkAssignments, /SAFplusTypes/application/workAssignments)

    WorkAssignments::WorkAssignments(): ClMgtObject("workAssignments"), name("name"), provisioningList("provisioning")
    {
        this->addChildObject(&name, "name");
        this->addChildObject(&provisioningList, "provisioning");
        this->addKey("name");
    };

    WorkAssignments::WorkAssignments(std::string nameValue): ClMgtObject("workAssignments"), name("name"), provisioningList("provisioning")
    {
        this->name.Value =  nameValue;
        this->addKey("name");
        this->addChildObject(&name, "name");
        this->addChildObject(&provisioningList, "provisioning");
    };

    std::vector<std::string> WorkAssignments::getKeys()
    {
        std::string keyNames[] = { "name" };
        return std::vector<std::string> (keyNames, keyNames + sizeof(keyNames) / sizeof(keyNames[0]));
    };

    std::vector<std::string>* WorkAssignments::getChildNames()
    {
        std::string childNames[] = { "name", "provisioning" };
        return new std::vector<std::string> (childNames, childNames + sizeof(childNames) / sizeof(childNames[0]));
    };

    /*
     * XPATH: /SAFplusTypes/application/workAssignments/name
     */
    std::string WorkAssignments::getName()
    {
        return this->name.Value;
    };

    /*
     * XPATH: /SAFplusTypes/application/workAssignments/name
     */
    void WorkAssignments::setName(std::string nameValue)
    {
        this->name.Value = nameValue;
    };

    /*
     * XPATH: /SAFplusTypes/application/workAssignments/provisioning
     */
    SAFplusTypes::Provisioning* WorkAssignments::getProvisioning(std::string nameValue)
    {
        for (unsigned int i = 0; i < this->provisioningList.getEntrySize(); i++)
        {
            Provisioning* childObject = (Provisioning*)this->provisioningList.getEntry(i);
            if (childObject->getName() == nameValue)
            {
                return childObject;
            }
        }
        return NULL;
    };

    /*
     * XPATH: /SAFplusTypes/application/workAssignments/provisioning
     */
    void WorkAssignments::addProvisioning(SAFplusTypes::Provisioning *provisioningValue)
    {
        this->provisioningList.addEntry(provisioningValue);
    };

    WorkAssignments::~WorkAssignments()
    {
    };

}
/* namespace SAFplusTypes */
