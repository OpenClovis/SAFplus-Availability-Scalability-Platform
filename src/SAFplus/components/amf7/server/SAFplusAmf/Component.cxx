/* 
 * File Component.cxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#include "RestartCount.hxx"
#include <string>
#include "Timeouts.hxx"
#include "StandbyAssignments.hxx"
#include "Instantiate.hxx"
#include "Cleanup.hxx"
#include "MgtFactory.hxx"
#include "ActiveAssignments.hxx"
#include "ReadinessState.hxx"
#include "clMgtObject.hxx"
#include "clMgtProv.hxx"
#include "HighAvailabilityReadinessState.hxx"
#include <vector>
#include "HighAvailabilityState.hxx"
#include "PresenceState.hxx"
#include "Terminate.hxx"
#include "clMgtProvList.hxx"
#include "Component.hxx"

using namespace std;
using namespace SAFplusAmf;

namespace SAFplusAmf {

    /* Apply MGT object factory */
    REGISTERIMPL(Component, /SAFplusAmf/Component)

    Component::Component(): ClMgtObject("Component"), name("name"), id("id"), presence("presence"), capabilityModel("capabilityModel"), maxActiveAssignments("maxActiveAssignments"), maxStandbyAssignments("maxStandbyAssignments"), assignedWork("assignedWork"), operState("operState"), readinessState("readinessState"), haReadinessState("haReadinessState"), haState("haState"), safVersion("safVersion"), compCategory("compCategory"), swBundle("swBundle"), commandEnvironment("commandEnvironment"), maxInstantInstantiations("maxInstantInstantiations"), maxDelayedInstantiations("maxDelayedInstantiations"), delayBetweenInstantiation("delayBetweenInstantiation"), recovery("recovery"), restartable("restartable"), proxy("proxy"), proxied("proxied") {
        this->addChildObject(&name, "name");
        this->addChildObject(&id, "id");
        this->addChildObject(&presence, "presence");
        this->addChildObject(&capabilityModel, "capabilityModel");
        this->addChildObject(&maxActiveAssignments, "maxActiveAssignments");
        this->addChildObject(&maxStandbyAssignments, "maxStandbyAssignments");
        this->addChildObject(&assignedWork, "assignedWork");
        this->addChildObject(&operState, "operState");
        this->addChildObject(&readinessState, "readinessState");
        this->addChildObject(&haReadinessState, "haReadinessState");
        this->addChildObject(&haState, "haState");
        this->addChildObject(&safVersion, "safVersion");
        this->addChildObject(&compCategory, "compCategory");
        this->addChildObject(&swBundle, "swBundle");
        this->addChildObject(&commandEnvironment, "commandEnvironment");
        this->addChildObject(&maxInstantInstantiations, "maxInstantInstantiations");
        this->addChildObject(&maxDelayedInstantiations, "maxDelayedInstantiations");
        this->addChildObject(&delayBetweenInstantiation, "delayBetweenInstantiation");
        this->addChildObject(&recovery, "recovery");
        this->addChildObject(&restartable, "restartable");
        this->addChildObject(&proxy, "proxy");
        this->addChildObject(&proxied, "proxied");
        this->addKey("name");
    };

    Component::Component(string nameValue): ClMgtObject("Component"), name("name"), id("id"), presence("presence"), capabilityModel("capabilityModel"), maxActiveAssignments("maxActiveAssignments"), maxStandbyAssignments("maxStandbyAssignments"), assignedWork("assignedWork"), operState("operState"), readinessState("readinessState"), haReadinessState("haReadinessState"), haState("haState"), safVersion("safVersion"), compCategory("compCategory"), swBundle("swBundle"), commandEnvironment("commandEnvironment"), maxInstantInstantiations("maxInstantInstantiations"), maxDelayedInstantiations("maxDelayedInstantiations"), delayBetweenInstantiation("delayBetweenInstantiation"), recovery("recovery"), restartable("restartable"), proxy("proxy"), proxied("proxied") {
        this->name.Value =  nameValue;
        this->addKey("name");
        this->addChildObject(&name, "name");
        this->addChildObject(&id, "id");
        this->addChildObject(&presence, "presence");
        this->addChildObject(&capabilityModel, "capabilityModel");
        this->addChildObject(&maxActiveAssignments, "maxActiveAssignments");
        this->addChildObject(&maxStandbyAssignments, "maxStandbyAssignments");
        this->addChildObject(&assignedWork, "assignedWork");
        this->addChildObject(&operState, "operState");
        this->addChildObject(&readinessState, "readinessState");
        this->addChildObject(&haReadinessState, "haReadinessState");
        this->addChildObject(&haState, "haState");
        this->addChildObject(&safVersion, "safVersion");
        this->addChildObject(&compCategory, "compCategory");
        this->addChildObject(&swBundle, "swBundle");
        this->addChildObject(&commandEnvironment, "commandEnvironment");
        this->addChildObject(&maxInstantInstantiations, "maxInstantInstantiations");
        this->addChildObject(&maxDelayedInstantiations, "maxDelayedInstantiations");
        this->addChildObject(&delayBetweenInstantiation, "delayBetweenInstantiation");
        this->addChildObject(&recovery, "recovery");
        this->addChildObject(&restartable, "restartable");
        this->addChildObject(&proxy, "proxy");
        this->addChildObject(&proxied, "proxied");
    };

    vector<string> Component::getKeys() {
        string keyNames[] = { "name" };
        return vector<string> (keyNames, keyNames + sizeof(keyNames) / sizeof(keyNames[0]));
    };

    vector<string> *Component::getChildNames() {
        string childNames[] = { "name", "id", "presence", "capabilityModel", "maxActiveAssignments", "maxStandbyAssignments", "activeAssignments", "standbyAssignments", "assignedWork", "operState", "readinessState", "haReadinessState", "haState", "safVersion", "compCategory", "swBundle", "commandEnvironment", "instantiate", "terminate", "cleanup", "maxInstantInstantiations", "maxDelayedInstantiations", "delayBetweenInstantiation", "timeouts", "recovery", "restartable", "restartCount", "proxy", "proxied" };
        return new vector<string> (childNames, childNames + sizeof(childNames) / sizeof(childNames[0]));
    };

    /*
     * XPATH: /SAFplusAmf/Component/name
     */
    string Component::getName() {
        return this->name.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/name
     */
    void Component::setName(string nameValue) {
        this->name.Value = nameValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/id
     */
    unsigned short int Component::getId() {
        return this->id.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/id
     */
    void Component::setId(unsigned short int idValue) {
        this->id.Value = idValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/presence
     */
    PresenceState Component::getPresence() {
        return this->presence.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/presence
     */
    void Component::setPresence(PresenceState presenceValue) {
        this->presence.Value = presenceValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/capabilityModel
     */
    CapabilityModelOption Component::getCapabilityModel() {
        return static_cast<CapabilityModelOption>(this->capabilityModel.Value);
    };

    /*
     * XPATH: /SAFplusAmf/Component/capabilityModel
     */
    void Component::setCapabilityModel(CapabilityModelOption capabilityModelValue) {
        this->capabilityModel.Value = static_cast<int>(capabilityModelValue);
    };

    /*
     * XPATH: /SAFplusAmf/Component/maxActiveAssignments
     */
    unsigned int Component::getMaxActiveAssignments() {
        return this->maxActiveAssignments.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/maxActiveAssignments
     */
    void Component::setMaxActiveAssignments(unsigned int maxActiveAssignmentsValue) {
        this->maxActiveAssignments.Value = maxActiveAssignmentsValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/maxStandbyAssignments
     */
    unsigned int Component::getMaxStandbyAssignments() {
        return this->maxStandbyAssignments.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/maxStandbyAssignments
     */
    void Component::setMaxStandbyAssignments(unsigned int maxStandbyAssignmentsValue) {
        this->maxStandbyAssignments.Value = maxStandbyAssignmentsValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/assignedWork
     */
    vector<string> Component::getAssignedWork() {
        return this->assignedWork.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/assignedWork
     */
    void Component::setAssignedWork(string assignedWorkValue) {
        this->assignedWork.Value.push_back(assignedWorkValue);
    };

    /*
     * XPATH: /SAFplusAmf/Component/operState
     */
    bool Component::getOperState() {
        return this->operState.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/operState
     */
    void Component::setOperState(bool operStateValue) {
        this->operState.Value = operStateValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/readinessState
     */
    ReadinessState Component::getReadinessState() {
        return this->readinessState.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/readinessState
     */
    void Component::setReadinessState(ReadinessState readinessStateValue) {
        this->readinessState.Value = readinessStateValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/haReadinessState
     */
    HighAvailabilityReadinessState Component::getHaReadinessState() {
        return this->haReadinessState.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/haReadinessState
     */
    void Component::setHaReadinessState(HighAvailabilityReadinessState haReadinessStateValue) {
        this->haReadinessState.Value = haReadinessStateValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/haState
     */
    HighAvailabilityState Component::getHaState() {
        return this->haState.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/haState
     */
    void Component::setHaState(HighAvailabilityState haStateValue) {
        this->haState.Value = haStateValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/safVersion
     */
    string Component::getSafVersion() {
        return this->safVersion.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/safVersion
     */
    void Component::setSafVersion(string safVersionValue) {
        this->safVersion.Value = safVersionValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/compCategory
     */
    unsigned int Component::getCompCategory() {
        return this->compCategory.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/compCategory
     */
    void Component::setCompCategory(unsigned int compCategoryValue) {
        this->compCategory.Value = compCategoryValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/swBundle
     */
    string Component::getSwBundle() {
        return this->swBundle.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/swBundle
     */
    void Component::setSwBundle(string swBundleValue) {
        this->swBundle.Value = swBundleValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/commandEnvironment
     */
    vector<string> Component::getCommandEnvironment() {
        return this->commandEnvironment.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/commandEnvironment
     */
    void Component::setCommandEnvironment(string commandEnvironmentValue) {
        this->commandEnvironment.Value.push_back(commandEnvironmentValue);
    };

    /*
     * XPATH: /SAFplusAmf/Component/maxInstantInstantiations
     */
    unsigned int Component::getMaxInstantInstantiations() {
        return this->maxInstantInstantiations.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/maxInstantInstantiations
     */
    void Component::setMaxInstantInstantiations(unsigned int maxInstantInstantiationsValue) {
        this->maxInstantInstantiations.Value = maxInstantInstantiationsValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/maxDelayedInstantiations
     */
    unsigned int Component::getMaxDelayedInstantiations() {
        return this->maxDelayedInstantiations.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/maxDelayedInstantiations
     */
    void Component::setMaxDelayedInstantiations(unsigned int maxDelayedInstantiationsValue) {
        this->maxDelayedInstantiations.Value = maxDelayedInstantiationsValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/delayBetweenInstantiation
     */
    unsigned int Component::getDelayBetweenInstantiation() {
        return this->delayBetweenInstantiation.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/delayBetweenInstantiation
     */
    void Component::setDelayBetweenInstantiation(unsigned int delayBetweenInstantiationValue) {
        this->delayBetweenInstantiation.Value = delayBetweenInstantiationValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/recovery
     */
    RecoveryOption Component::getRecovery() {
        return static_cast<RecoveryOption>(this->recovery.Value);
    };

    /*
     * XPATH: /SAFplusAmf/Component/recovery
     */
    void Component::setRecovery(RecoveryOption recoveryValue) {
        this->recovery.Value = static_cast<int>(recoveryValue);
    };

    /*
     * XPATH: /SAFplusAmf/Component/restartable
     */
    bool Component::getRestartable() {
        return this->restartable.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/restartable
     */
    void Component::setRestartable(bool restartableValue) {
        this->restartable.Value = restartableValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/proxy
     */
    string Component::getProxy() {
        return this->proxy.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/proxy
     */
    void Component::setProxy(string proxyValue) {
        this->proxy.Value = proxyValue;
    };

    /*
     * XPATH: /SAFplusAmf/Component/proxied
     */
    vector<string> Component::getProxied() {
        return this->proxied.Value;
    };

    /*
     * XPATH: /SAFplusAmf/Component/proxied
     */
    void Component::setProxied(string proxiedValue) {
        this->proxied.Value.push_back(proxiedValue);
    };

    /*
     * XPATH: /SAFplusAmf/Component/activeAssignments
     */
    ActiveAssignments* Component::getActiveAssignments() {
        return (ActiveAssignments*)this->getChildObject("activeAssignments");
    };

    /*
     * XPATH: /SAFplusAmf/Component/activeAssignments
     */
    void Component::addActiveAssignments(ActiveAssignments *activeAssignmentsValue) {
        this->addChildObject(activeAssignmentsValue, "activeAssignments");
    };

    /*
     * XPATH: /SAFplusAmf/Component/standbyAssignments
     */
    StandbyAssignments* Component::getStandbyAssignments() {
        return (StandbyAssignments*)this->getChildObject("standbyAssignments");
    };

    /*
     * XPATH: /SAFplusAmf/Component/standbyAssignments
     */
    void Component::addStandbyAssignments(StandbyAssignments *standbyAssignmentsValue) {
        this->addChildObject(standbyAssignmentsValue, "standbyAssignments");
    };

    /*
     * XPATH: /SAFplusAmf/Component/instantiate
     */
    Instantiate* Component::getInstantiate() {
        return (Instantiate*)this->getChildObject("instantiate");
    };

    /*
     * XPATH: /SAFplusAmf/Component/instantiate
     */
    void Component::addInstantiate(Instantiate *instantiateValue) {
        this->addChildObject(instantiateValue, "instantiate");
    };

    /*
     * XPATH: /SAFplusAmf/Component/terminate
     */
    Terminate* Component::getTerminate() {
        return (Terminate*)this->getChildObject("terminate");
    };

    /*
     * XPATH: /SAFplusAmf/Component/terminate
     */
    void Component::addTerminate(Terminate *terminateValue) {
        this->addChildObject(terminateValue, "terminate");
    };

    /*
     * XPATH: /SAFplusAmf/Component/cleanup
     */
    Cleanup* Component::getCleanup() {
        return (Cleanup*)this->getChildObject("cleanup");
    };

    /*
     * XPATH: /SAFplusAmf/Component/cleanup
     */
    void Component::addCleanup(Cleanup *cleanupValue) {
        this->addChildObject(cleanupValue, "cleanup");
    };

    /*
     * XPATH: /SAFplusAmf/Component/timeouts
     */
    Timeouts* Component::getTimeouts() {
        return (Timeouts*)this->getChildObject("timeouts");
    };

    /*
     * XPATH: /SAFplusAmf/Component/timeouts
     */
    void Component::addTimeouts(Timeouts *timeoutsValue) {
        this->addChildObject(timeoutsValue, "timeouts");
    };

    /*
     * XPATH: /SAFplusAmf/Component/restartCount
     */
    RestartCount* Component::getRestartCount() {
        return (RestartCount*)this->getChildObject("restartCount");
    };

    /*
     * XPATH: /SAFplusAmf/Component/restartCount
     */
    void Component::addRestartCount(RestartCount *restartCountValue) {
        this->addChildObject(restartCountValue, "restartCount");
    };

    Component::~Component() {
    };

}
/* namespace SAFplusAmf */
