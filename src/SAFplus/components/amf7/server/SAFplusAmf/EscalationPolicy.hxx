/* 
 * File EscalationPolicy.hxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#pragma once
#ifndef ESCALATIONPOLICY_HXX_
#define ESCALATIONPOLICY_HXX_
#include "SAFplusAmfCommon.hxx"

#include <vector>
#include "clMgtObject.hxx"
#include "clMgtProv.hxx"

namespace SAFplusAmf
  {

    class EscalationPolicy : public SAFplus::ClMgtObject {
    public:

        /*
         * The maximum number of events that can occur within that time period before escalation occurs.
         */
        SAFplus::ClMgtProv<unsigned long int> maximum;

        /*
         * The time period (in milliseconds) involved.
         */
        SAFplus::ClMgtProv<SaTimeT> duration;

    public:
        EscalationPolicy();
        std::vector<std::string>* getChildNames();

        /*
         * XPATH: /SAFplusAmf/EscalationPolicy/maximum
         */
        unsigned long int getMaximum();

        /*
         * XPATH: /SAFplusAmf/EscalationPolicy/maximum
         */
        void setMaximum(unsigned long int maximumValue);

        /*
         * XPATH: /SAFplusAmf/EscalationPolicy/duration
         */
        SaTimeT getDuration();

        /*
         * XPATH: /SAFplusAmf/EscalationPolicy/duration
         */
        void setDuration(SaTimeT durationValue);
        ~EscalationPolicy();

    };
}
/* namespace SAFplusAmf */
#endif /* ESCALATIONPOLICY_HXX_ */
