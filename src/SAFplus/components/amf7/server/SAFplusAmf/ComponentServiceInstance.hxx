/* 
 * File ComponentServiceInstance.hxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#pragma once
#ifndef COMPONENTSERVICEINSTANCE_HXX_
#define COMPONENTSERVICEINSTANCE_HXX_
#include "SAFplusAmfCommon.hxx"

#include "clMgtObject.hxx"
#include "clMgtProv.hxx"
#include <vector>
#include "MgtFactory.hxx"
#include <string>
#include "clMgtProvList.hxx"

namespace SAFplusAmf
  {

    class ComponentServiceInstance : public ClMgtObject {

        /* Apply MGT object factory */
        REGISTER(ComponentServiceInstance);

    public:

        /*
         * Unique name of this entity
         */
        ClMgtProv<std::string> name;

        /*
         * Each SAFplus AMF entity gets a unique numerical identifier
         */
        ClMgtProv<unsigned short int> id;

        /*
         * A protection group for a specific component service instance is the group of components to which the component service instance has been assigned
         */
        ClMgtProvList<std::string> protectionGroup;

        /*
         * 
         */
        ClMgtProvList<SAFplusAmf::ComponentServiceInstance*> dependencies;

    public:
        ComponentServiceInstance();
        ComponentServiceInstance(std::string nameValue);
        std::vector<std::string> getKeys();
        std::vector<std::string>* getChildNames();

        /*
         * XPATH: /SAFplusAmf/ComponentServiceInstance/name
         */
        std::string getName();

        /*
         * XPATH: /SAFplusAmf/ComponentServiceInstance/name
         */
        void setName(std::string nameValue);

        /*
         * XPATH: /SAFplusAmf/ComponentServiceInstance/id
         */
        unsigned short int getId();

        /*
         * XPATH: /SAFplusAmf/ComponentServiceInstance/id
         */
        void setId(unsigned short int idValue);

        /*
         * XPATH: /SAFplusAmf/ComponentServiceInstance/protectionGroup
         */
        std::vector<std::string> getProtectionGroup();

        /*
         * XPATH: /SAFplusAmf/ComponentServiceInstance/protectionGroup
         */
        void setProtectionGroup(std::string protectionGroupValue);

        /*
         * XPATH: /SAFplusAmf/ComponentServiceInstance/dependencies
         */
        std::vector<SAFplusAmf::ComponentServiceInstance*> getDependencies();

        /*
         * XPATH: /SAFplusAmf/ComponentServiceInstance/dependencies
         */
        void setDependencies(SAFplusAmf::ComponentServiceInstance* dependenciesValue);
        ~ComponentServiceInstance();

    };
}
/* namespace SAFplusAmf */
#endif /* COMPONENTSERVICEINSTANCE_HXX_ */
