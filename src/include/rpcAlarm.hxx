// Generated by the protocol buffer compiler.
#pragma once
#include <string>

#include <google/protobuf/service.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <clRpcService.hxx>
#include "rpcAlarm.pb.hxx"

namespace SAFplus {
  namespace Rpc {
    class RpcChannel;
  }
}

namespace SAFplus {
namespace Rpc {
namespace rpcAlarm {
class rpcAlarm_Stub;

class rpcAlarm : public SAFplus::Rpc::RpcService {
 protected:
  // This class should be treated as an abstract interface.
  inline rpcAlarm() {};
 public:
  virtual ~rpcAlarm();

  typedef rpcAlarm_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();


  // implements rpcAlarmImpl ----------------------------------------------
  virtual void alarmCreateRpcMethod(const ::SAFplus::Rpc::rpcAlarm::alarmProfileCreateRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response);
  virtual void alarmDeleteRpcMethod(const ::SAFplus::Rpc::rpcAlarm::alarmProfileDeleteRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response);
  virtual void alarmRaiseRpcMethod(const ::SAFplus::Rpc::rpcAlarm::alarmDataRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response);

  // implements rpcAlarm ------------------------------------------
  virtual void alarmCreateRpcMethod(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::rpcAlarm::alarmProfileCreateRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void alarmDeleteRpcMethod(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::rpcAlarm::alarmProfileDeleteRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void alarmRaiseRpcMethod(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::rpcAlarm::alarmDataRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));


  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  SAFplus::Handle destination,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(rpcAlarm);
};

class rpcAlarm_Stub : public rpcAlarm {
 public:
  rpcAlarm_Stub(SAFplus::Rpc::RpcChannel* channel);
  rpcAlarm_Stub(SAFplus::Rpc::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~rpcAlarm_Stub();

  inline SAFplus::Rpc::RpcChannel* channel() { return channel_; }


  // implements rpcAlarm ------------------------------------------
  void alarmCreateRpcMethod(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::rpcAlarm::alarmProfileCreateRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void alarmDeleteRpcMethod(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::rpcAlarm::alarmProfileDeleteRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void alarmRaiseRpcMethod(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::rpcAlarm::alarmDataRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
 private:
  SAFplus::Rpc::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(rpcAlarm_Stub);
};

class rpcAlarmImpl : public rpcAlarm {
 public:
  rpcAlarmImpl();
  ~rpcAlarmImpl();


  // implements rpcAlarmImpl ----------------------------------------------
  void alarmCreateRpcMethod(const ::SAFplus::Rpc::rpcAlarm::alarmProfileCreateRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response);
  void alarmDeleteRpcMethod(const ::SAFplus::Rpc::rpcAlarm::alarmProfileDeleteRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response);
  void alarmRaiseRpcMethod(const ::SAFplus::Rpc::rpcAlarm::alarmDataRequest* request,
                       ::SAFplus::Rpc::rpcAlarm::alarmResponse* response);
};

}  // namespace rpcAlarm
}  // namespace Rpc
}  // namespace SAFplus
