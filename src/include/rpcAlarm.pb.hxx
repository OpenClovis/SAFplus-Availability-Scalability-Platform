// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpcAlarm.proto

#ifndef PROTOBUF_rpcAlarm_2eproto__INCLUDED
#define PROTOBUF_rpcAlarm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace SAFplus {
namespace Rpc {
namespace rpcAlarm {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rpcAlarm_2eproto();
void protobuf_AssignDesc_rpcAlarm_2eproto();
void protobuf_ShutdownFile_rpcAlarm_2eproto();

class Handle;
class alarmProfileCreateRequest;
class alarmProfileDeleteRequest;
class alarmDataRequest;
class alarmResponse;
class NO_REQUEST;

// ===================================================================

class Handle : public ::google::protobuf::Message {
 public:
  Handle();
  virtual ~Handle();

  Handle(const Handle& from);

  inline Handle& operator=(const Handle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Handle& default_instance();

  void Swap(Handle* other);

  // implements Message ----------------------------------------------

  Handle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Handle& from);
  void MergeFrom(const Handle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 id0 = 1;
  inline bool has_id0() const;
  inline void clear_id0();
  static const int kId0FieldNumber = 1;
  inline ::google::protobuf::uint64 id0() const;
  inline void set_id0(::google::protobuf::uint64 value);

  // required fixed64 id1 = 2;
  inline bool has_id1() const;
  inline void clear_id1();
  static const int kId1FieldNumber = 2;
  inline ::google::protobuf::uint64 id1() const;
  inline void set_id1(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.rpcAlarm.Handle)
 private:
  inline void set_has_id0();
  inline void clear_has_id0();
  inline void set_has_id1();
  inline void clear_has_id1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id0_;
  ::google::protobuf::uint64 id1_;
  friend void  protobuf_AddDesc_rpcAlarm_2eproto();
  friend void protobuf_AssignDesc_rpcAlarm_2eproto();
  friend void protobuf_ShutdownFile_rpcAlarm_2eproto();

  void InitAsDefaultInstance();
  static Handle* default_instance_;
};
// -------------------------------------------------------------------

class alarmProfileCreateRequest : public ::google::protobuf::Message {
 public:
  alarmProfileCreateRequest();
  virtual ~alarmProfileCreateRequest();

  alarmProfileCreateRequest(const alarmProfileCreateRequest& from);

  inline alarmProfileCreateRequest& operator=(const alarmProfileCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const alarmProfileCreateRequest& default_instance();

  void Swap(alarmProfileCreateRequest* other);

  // implements Message ----------------------------------------------

  alarmProfileCreateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const alarmProfileCreateRequest& from);
  void MergeFrom(const alarmProfileCreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string resourceId = 1;
  inline bool has_resourceid() const;
  inline void clear_resourceid();
  static const int kResourceIdFieldNumber = 1;
  inline const ::std::string& resourceid() const;
  inline void set_resourceid(const ::std::string& value);
  inline void set_resourceid(const char* value);
  inline void set_resourceid(const char* value, size_t size);
  inline ::std::string* mutable_resourceid();
  inline ::std::string* release_resourceid();
  inline void set_allocated_resourceid(::std::string* resourceid);

  // required uint32 category = 2;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 2;
  inline ::google::protobuf::uint32 category() const;
  inline void set_category(::google::protobuf::uint32 value);

  // required uint32 probCause = 3;
  inline bool has_probcause() const;
  inline void clear_probcause();
  static const int kProbCauseFieldNumber = 3;
  inline ::google::protobuf::uint32 probcause() const;
  inline void set_probcause(::google::protobuf::uint32 value);

  // required uint32 specificProblem = 4;
  inline bool has_specificproblem() const;
  inline void clear_specificproblem();
  static const int kSpecificProblemFieldNumber = 4;
  inline ::google::protobuf::uint32 specificproblem() const;
  inline void set_specificproblem(::google::protobuf::uint32 value);

  // required bool isSend = 5;
  inline bool has_issend() const;
  inline void clear_issend();
  static const int kIsSendFieldNumber = 5;
  inline bool issend() const;
  inline void set_issend(bool value);

  // required int32 intAssertSoakingTime = 6;
  inline bool has_intassertsoakingtime() const;
  inline void clear_intassertsoakingtime();
  static const int kIntAssertSoakingTimeFieldNumber = 6;
  inline ::google::protobuf::int32 intassertsoakingtime() const;
  inline void set_intassertsoakingtime(::google::protobuf::int32 value);

  // required int32 intClearSoakingTime = 7;
  inline bool has_intclearsoakingtime() const;
  inline void clear_intclearsoakingtime();
  static const int kIntClearSoakingTimeFieldNumber = 7;
  inline ::google::protobuf::int32 intclearsoakingtime() const;
  inline void set_intclearsoakingtime(::google::protobuf::int32 value);

  // required fixed64 generationRuleBitmap = 8;
  inline bool has_generationrulebitmap() const;
  inline void clear_generationrulebitmap();
  static const int kGenerationRuleBitmapFieldNumber = 8;
  inline ::google::protobuf::uint64 generationrulebitmap() const;
  inline void set_generationrulebitmap(::google::protobuf::uint64 value);

  // required uint32 genRuleRelation = 9;
  inline bool has_genrulerelation() const;
  inline void clear_genrulerelation();
  static const int kGenRuleRelationFieldNumber = 9;
  inline ::google::protobuf::uint32 genrulerelation() const;
  inline void set_genrulerelation(::google::protobuf::uint32 value);

  // required fixed64 suppressionRuleBitmap = 10;
  inline bool has_suppressionrulebitmap() const;
  inline void clear_suppressionrulebitmap();
  static const int kSuppressionRuleBitmapFieldNumber = 10;
  inline ::google::protobuf::uint64 suppressionrulebitmap() const;
  inline void set_suppressionrulebitmap(::google::protobuf::uint64 value);

  // required uint32 suppRuleRelation = 11;
  inline bool has_supprulerelation() const;
  inline void clear_supprulerelation();
  static const int kSuppRuleRelationFieldNumber = 11;
  inline ::google::protobuf::uint32 supprulerelation() const;
  inline void set_supprulerelation(::google::protobuf::uint32 value);

  // required int32 intIndex = 12;
  inline bool has_intindex() const;
  inline void clear_intindex();
  static const int kIntIndexFieldNumber = 12;
  inline ::google::protobuf::int32 intindex() const;
  inline void set_intindex(::google::protobuf::int32 value);

  // required fixed64 affectedBitmap = 13;
  inline bool has_affectedbitmap() const;
  inline void clear_affectedbitmap();
  static const int kAffectedBitmapFieldNumber = 13;
  inline ::google::protobuf::uint64 affectedbitmap() const;
  inline void set_affectedbitmap(::google::protobuf::uint64 value);

  // required bool isSuppressChild = 14;
  inline bool has_issuppresschild() const;
  inline void clear_issuppresschild();
  static const int kIsSuppressChildFieldNumber = 14;
  inline bool issuppresschild() const;
  inline void set_issuppresschild(bool value);

  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest)
 private:
  inline void set_has_resourceid();
  inline void clear_has_resourceid();
  inline void set_has_category();
  inline void clear_has_category();
  inline void set_has_probcause();
  inline void clear_has_probcause();
  inline void set_has_specificproblem();
  inline void clear_has_specificproblem();
  inline void set_has_issend();
  inline void clear_has_issend();
  inline void set_has_intassertsoakingtime();
  inline void clear_has_intassertsoakingtime();
  inline void set_has_intclearsoakingtime();
  inline void clear_has_intclearsoakingtime();
  inline void set_has_generationrulebitmap();
  inline void clear_has_generationrulebitmap();
  inline void set_has_genrulerelation();
  inline void clear_has_genrulerelation();
  inline void set_has_suppressionrulebitmap();
  inline void clear_has_suppressionrulebitmap();
  inline void set_has_supprulerelation();
  inline void clear_has_supprulerelation();
  inline void set_has_intindex();
  inline void clear_has_intindex();
  inline void set_has_affectedbitmap();
  inline void clear_has_affectedbitmap();
  inline void set_has_issuppresschild();
  inline void clear_has_issuppresschild();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* resourceid_;
  ::google::protobuf::uint32 category_;
  ::google::protobuf::uint32 probcause_;
  ::google::protobuf::uint32 specificproblem_;
  ::google::protobuf::int32 intassertsoakingtime_;
  ::google::protobuf::uint64 generationrulebitmap_;
  ::google::protobuf::int32 intclearsoakingtime_;
  ::google::protobuf::uint32 genrulerelation_;
  ::google::protobuf::uint64 suppressionrulebitmap_;
  bool issend_;
  bool issuppresschild_;
  ::google::protobuf::uint32 supprulerelation_;
  ::google::protobuf::uint64 affectedbitmap_;
  ::google::protobuf::int32 intindex_;
  friend void  protobuf_AddDesc_rpcAlarm_2eproto();
  friend void protobuf_AssignDesc_rpcAlarm_2eproto();
  friend void protobuf_ShutdownFile_rpcAlarm_2eproto();

  void InitAsDefaultInstance();
  static alarmProfileCreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class alarmProfileDeleteRequest : public ::google::protobuf::Message {
 public:
  alarmProfileDeleteRequest();
  virtual ~alarmProfileDeleteRequest();

  alarmProfileDeleteRequest(const alarmProfileDeleteRequest& from);

  inline alarmProfileDeleteRequest& operator=(const alarmProfileDeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const alarmProfileDeleteRequest& default_instance();

  void Swap(alarmProfileDeleteRequest* other);

  // implements Message ----------------------------------------------

  alarmProfileDeleteRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const alarmProfileDeleteRequest& from);
  void MergeFrom(const alarmProfileDeleteRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string resourceId = 1;
  inline bool has_resourceid() const;
  inline void clear_resourceid();
  static const int kResourceIdFieldNumber = 1;
  inline const ::std::string& resourceid() const;
  inline void set_resourceid(const ::std::string& value);
  inline void set_resourceid(const char* value);
  inline void set_resourceid(const char* value, size_t size);
  inline ::std::string* mutable_resourceid();
  inline ::std::string* release_resourceid();
  inline void set_allocated_resourceid(::std::string* resourceid);

  // required uint32 category = 2;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 2;
  inline ::google::protobuf::uint32 category() const;
  inline void set_category(::google::protobuf::uint32 value);

  // required uint32 probCause = 3;
  inline bool has_probcause() const;
  inline void clear_probcause();
  static const int kProbCauseFieldNumber = 3;
  inline ::google::protobuf::uint32 probcause() const;
  inline void set_probcause(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.rpcAlarm.alarmProfileDeleteRequest)
 private:
  inline void set_has_resourceid();
  inline void clear_has_resourceid();
  inline void set_has_category();
  inline void clear_has_category();
  inline void set_has_probcause();
  inline void clear_has_probcause();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* resourceid_;
  ::google::protobuf::uint32 category_;
  ::google::protobuf::uint32 probcause_;
  friend void  protobuf_AddDesc_rpcAlarm_2eproto();
  friend void protobuf_AssignDesc_rpcAlarm_2eproto();
  friend void protobuf_ShutdownFile_rpcAlarm_2eproto();

  void InitAsDefaultInstance();
  static alarmProfileDeleteRequest* default_instance_;
};
// -------------------------------------------------------------------

class alarmDataRequest : public ::google::protobuf::Message {
 public:
  alarmDataRequest();
  virtual ~alarmDataRequest();

  alarmDataRequest(const alarmDataRequest& from);

  inline alarmDataRequest& operator=(const alarmDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const alarmDataRequest& default_instance();

  void Swap(alarmDataRequest* other);

  // implements Message ----------------------------------------------

  alarmDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const alarmDataRequest& from);
  void MergeFrom(const alarmDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string resourceId = 1;
  inline bool has_resourceid() const;
  inline void clear_resourceid();
  static const int kResourceIdFieldNumber = 1;
  inline const ::std::string& resourceid() const;
  inline void set_resourceid(const ::std::string& value);
  inline void set_resourceid(const char* value);
  inline void set_resourceid(const char* value, size_t size);
  inline ::std::string* mutable_resourceid();
  inline ::std::string* release_resourceid();
  inline void set_allocated_resourceid(::std::string* resourceid);

  // required uint32 category = 2;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 2;
  inline ::google::protobuf::uint32 category() const;
  inline void set_category(::google::protobuf::uint32 value);

  // required uint32 probCause = 3;
  inline bool has_probcause() const;
  inline void clear_probcause();
  static const int kProbCauseFieldNumber = 3;
  inline ::google::protobuf::uint32 probcause() const;
  inline void set_probcause(::google::protobuf::uint32 value);

  // required uint32 specificProblem = 4;
  inline bool has_specificproblem() const;
  inline void clear_specificproblem();
  static const int kSpecificProblemFieldNumber = 4;
  inline ::google::protobuf::uint32 specificproblem() const;
  inline void set_specificproblem(::google::protobuf::uint32 value);

  // required uint32 severity = 5;
  inline bool has_severity() const;
  inline void clear_severity();
  static const int kSeverityFieldNumber = 5;
  inline ::google::protobuf::uint32 severity() const;
  inline void set_severity(::google::protobuf::uint32 value);

  // required uint32 state = 6;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // required string syncData = 7;
  inline bool has_syncdata() const;
  inline void clear_syncdata();
  static const int kSyncDataFieldNumber = 7;
  inline const ::std::string& syncdata() const;
  inline void set_syncdata(const ::std::string& value);
  inline void set_syncdata(const char* value);
  inline void set_syncdata(const char* value, size_t size);
  inline ::std::string* mutable_syncdata();
  inline ::std::string* release_syncdata();
  inline void set_allocated_syncdata(::std::string* syncdata);

  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.rpcAlarm.alarmDataRequest)
 private:
  inline void set_has_resourceid();
  inline void clear_has_resourceid();
  inline void set_has_category();
  inline void clear_has_category();
  inline void set_has_probcause();
  inline void clear_has_probcause();
  inline void set_has_specificproblem();
  inline void clear_has_specificproblem();
  inline void set_has_severity();
  inline void clear_has_severity();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_syncdata();
  inline void clear_has_syncdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* resourceid_;
  ::google::protobuf::uint32 category_;
  ::google::protobuf::uint32 probcause_;
  ::google::protobuf::uint32 specificproblem_;
  ::google::protobuf::uint32 severity_;
  ::std::string* syncdata_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_rpcAlarm_2eproto();
  friend void protobuf_AssignDesc_rpcAlarm_2eproto();
  friend void protobuf_ShutdownFile_rpcAlarm_2eproto();

  void InitAsDefaultInstance();
  static alarmDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class alarmResponse : public ::google::protobuf::Message {
 public:
  alarmResponse();
  virtual ~alarmResponse();

  alarmResponse(const alarmResponse& from);

  inline alarmResponse& operator=(const alarmResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const alarmResponse& default_instance();

  void Swap(alarmResponse* other);

  // implements Message ----------------------------------------------

  alarmResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const alarmResponse& from);
  void MergeFrom(const alarmResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 saError = 1;
  inline bool has_saerror() const;
  inline void clear_saerror();
  static const int kSaErrorFieldNumber = 1;
  inline ::google::protobuf::int32 saerror() const;
  inline void set_saerror(::google::protobuf::int32 value);

  // optional string errStr = 2;
  inline bool has_errstr() const;
  inline void clear_errstr();
  static const int kErrStrFieldNumber = 2;
  inline const ::std::string& errstr() const;
  inline void set_errstr(const ::std::string& value);
  inline void set_errstr(const char* value);
  inline void set_errstr(const char* value, size_t size);
  inline ::std::string* mutable_errstr();
  inline ::std::string* release_errstr();
  inline void set_allocated_errstr(::std::string* errstr);

  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.rpcAlarm.alarmResponse)
 private:
  inline void set_has_saerror();
  inline void clear_has_saerror();
  inline void set_has_errstr();
  inline void clear_has_errstr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* errstr_;
  ::google::protobuf::int32 saerror_;
  friend void  protobuf_AddDesc_rpcAlarm_2eproto();
  friend void protobuf_AssignDesc_rpcAlarm_2eproto();
  friend void protobuf_ShutdownFile_rpcAlarm_2eproto();

  void InitAsDefaultInstance();
  static alarmResponse* default_instance_;
};
// -------------------------------------------------------------------

class NO_REQUEST : public ::google::protobuf::Message {
 public:
  NO_REQUEST();
  virtual ~NO_REQUEST();

  NO_REQUEST(const NO_REQUEST& from);

  inline NO_REQUEST& operator=(const NO_REQUEST& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NO_REQUEST& default_instance();

  void Swap(NO_REQUEST* other);

  // implements Message ----------------------------------------------

  NO_REQUEST* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NO_REQUEST& from);
  void MergeFrom(const NO_REQUEST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.rpcAlarm.NO_REQUEST)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_rpcAlarm_2eproto();
  friend void protobuf_AssignDesc_rpcAlarm_2eproto();
  friend void protobuf_ShutdownFile_rpcAlarm_2eproto();

  void InitAsDefaultInstance();
  static NO_REQUEST* default_instance_;
};
// ===================================================================


// ===================================================================

// Handle

// required fixed64 id0 = 1;
inline bool Handle::has_id0() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Handle::set_has_id0() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Handle::clear_has_id0() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Handle::clear_id0() {
  id0_ = GOOGLE_ULONGLONG(0);
  clear_has_id0();
}
inline ::google::protobuf::uint64 Handle::id0() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.Handle.id0)
  return id0_;
}
inline void Handle::set_id0(::google::protobuf::uint64 value) {
  set_has_id0();
  id0_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.Handle.id0)
}

// required fixed64 id1 = 2;
inline bool Handle::has_id1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Handle::set_has_id1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Handle::clear_has_id1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Handle::clear_id1() {
  id1_ = GOOGLE_ULONGLONG(0);
  clear_has_id1();
}
inline ::google::protobuf::uint64 Handle::id1() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.Handle.id1)
  return id1_;
}
inline void Handle::set_id1(::google::protobuf::uint64 value) {
  set_has_id1();
  id1_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.Handle.id1)
}

// -------------------------------------------------------------------

// alarmProfileCreateRequest

// required string resourceId = 1;
inline bool alarmProfileCreateRequest::has_resourceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void alarmProfileCreateRequest::set_has_resourceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void alarmProfileCreateRequest::clear_has_resourceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void alarmProfileCreateRequest::clear_resourceid() {
  if (resourceid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_->clear();
  }
  clear_has_resourceid();
}
inline const ::std::string& alarmProfileCreateRequest::resourceid() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.resourceId)
  return *resourceid_;
}
inline void alarmProfileCreateRequest::set_resourceid(const ::std::string& value) {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  resourceid_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.resourceId)
}
inline void alarmProfileCreateRequest::set_resourceid(const char* value) {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  resourceid_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.resourceId)
}
inline void alarmProfileCreateRequest::set_resourceid(const char* value, size_t size) {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  resourceid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.resourceId)
}
inline ::std::string* alarmProfileCreateRequest::mutable_resourceid() {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.resourceId)
  return resourceid_;
}
inline ::std::string* alarmProfileCreateRequest::release_resourceid() {
  clear_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = resourceid_;
    resourceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void alarmProfileCreateRequest::set_allocated_resourceid(::std::string* resourceid) {
  if (resourceid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resourceid_;
  }
  if (resourceid) {
    set_has_resourceid();
    resourceid_ = resourceid;
  } else {
    clear_has_resourceid();
    resourceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.resourceId)
}

// required uint32 category = 2;
inline bool alarmProfileCreateRequest::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void alarmProfileCreateRequest::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void alarmProfileCreateRequest::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void alarmProfileCreateRequest::clear_category() {
  category_ = 0u;
  clear_has_category();
}
inline ::google::protobuf::uint32 alarmProfileCreateRequest::category() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.category)
  return category_;
}
inline void alarmProfileCreateRequest::set_category(::google::protobuf::uint32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.category)
}

// required uint32 probCause = 3;
inline bool alarmProfileCreateRequest::has_probcause() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void alarmProfileCreateRequest::set_has_probcause() {
  _has_bits_[0] |= 0x00000004u;
}
inline void alarmProfileCreateRequest::clear_has_probcause() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void alarmProfileCreateRequest::clear_probcause() {
  probcause_ = 0u;
  clear_has_probcause();
}
inline ::google::protobuf::uint32 alarmProfileCreateRequest::probcause() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.probCause)
  return probcause_;
}
inline void alarmProfileCreateRequest::set_probcause(::google::protobuf::uint32 value) {
  set_has_probcause();
  probcause_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.probCause)
}

// required uint32 specificProblem = 4;
inline bool alarmProfileCreateRequest::has_specificproblem() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void alarmProfileCreateRequest::set_has_specificproblem() {
  _has_bits_[0] |= 0x00000008u;
}
inline void alarmProfileCreateRequest::clear_has_specificproblem() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void alarmProfileCreateRequest::clear_specificproblem() {
  specificproblem_ = 0u;
  clear_has_specificproblem();
}
inline ::google::protobuf::uint32 alarmProfileCreateRequest::specificproblem() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.specificProblem)
  return specificproblem_;
}
inline void alarmProfileCreateRequest::set_specificproblem(::google::protobuf::uint32 value) {
  set_has_specificproblem();
  specificproblem_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.specificProblem)
}

// required bool isSend = 5;
inline bool alarmProfileCreateRequest::has_issend() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void alarmProfileCreateRequest::set_has_issend() {
  _has_bits_[0] |= 0x00000010u;
}
inline void alarmProfileCreateRequest::clear_has_issend() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void alarmProfileCreateRequest::clear_issend() {
  issend_ = false;
  clear_has_issend();
}
inline bool alarmProfileCreateRequest::issend() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.isSend)
  return issend_;
}
inline void alarmProfileCreateRequest::set_issend(bool value) {
  set_has_issend();
  issend_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.isSend)
}

// required int32 intAssertSoakingTime = 6;
inline bool alarmProfileCreateRequest::has_intassertsoakingtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void alarmProfileCreateRequest::set_has_intassertsoakingtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void alarmProfileCreateRequest::clear_has_intassertsoakingtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void alarmProfileCreateRequest::clear_intassertsoakingtime() {
  intassertsoakingtime_ = 0;
  clear_has_intassertsoakingtime();
}
inline ::google::protobuf::int32 alarmProfileCreateRequest::intassertsoakingtime() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.intAssertSoakingTime)
  return intassertsoakingtime_;
}
inline void alarmProfileCreateRequest::set_intassertsoakingtime(::google::protobuf::int32 value) {
  set_has_intassertsoakingtime();
  intassertsoakingtime_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.intAssertSoakingTime)
}

// required int32 intClearSoakingTime = 7;
inline bool alarmProfileCreateRequest::has_intclearsoakingtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void alarmProfileCreateRequest::set_has_intclearsoakingtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void alarmProfileCreateRequest::clear_has_intclearsoakingtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void alarmProfileCreateRequest::clear_intclearsoakingtime() {
  intclearsoakingtime_ = 0;
  clear_has_intclearsoakingtime();
}
inline ::google::protobuf::int32 alarmProfileCreateRequest::intclearsoakingtime() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.intClearSoakingTime)
  return intclearsoakingtime_;
}
inline void alarmProfileCreateRequest::set_intclearsoakingtime(::google::protobuf::int32 value) {
  set_has_intclearsoakingtime();
  intclearsoakingtime_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.intClearSoakingTime)
}

// required fixed64 generationRuleBitmap = 8;
inline bool alarmProfileCreateRequest::has_generationrulebitmap() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void alarmProfileCreateRequest::set_has_generationrulebitmap() {
  _has_bits_[0] |= 0x00000080u;
}
inline void alarmProfileCreateRequest::clear_has_generationrulebitmap() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void alarmProfileCreateRequest::clear_generationrulebitmap() {
  generationrulebitmap_ = GOOGLE_ULONGLONG(0);
  clear_has_generationrulebitmap();
}
inline ::google::protobuf::uint64 alarmProfileCreateRequest::generationrulebitmap() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.generationRuleBitmap)
  return generationrulebitmap_;
}
inline void alarmProfileCreateRequest::set_generationrulebitmap(::google::protobuf::uint64 value) {
  set_has_generationrulebitmap();
  generationrulebitmap_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.generationRuleBitmap)
}

// required uint32 genRuleRelation = 9;
inline bool alarmProfileCreateRequest::has_genrulerelation() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void alarmProfileCreateRequest::set_has_genrulerelation() {
  _has_bits_[0] |= 0x00000100u;
}
inline void alarmProfileCreateRequest::clear_has_genrulerelation() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void alarmProfileCreateRequest::clear_genrulerelation() {
  genrulerelation_ = 0u;
  clear_has_genrulerelation();
}
inline ::google::protobuf::uint32 alarmProfileCreateRequest::genrulerelation() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.genRuleRelation)
  return genrulerelation_;
}
inline void alarmProfileCreateRequest::set_genrulerelation(::google::protobuf::uint32 value) {
  set_has_genrulerelation();
  genrulerelation_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.genRuleRelation)
}

// required fixed64 suppressionRuleBitmap = 10;
inline bool alarmProfileCreateRequest::has_suppressionrulebitmap() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void alarmProfileCreateRequest::set_has_suppressionrulebitmap() {
  _has_bits_[0] |= 0x00000200u;
}
inline void alarmProfileCreateRequest::clear_has_suppressionrulebitmap() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void alarmProfileCreateRequest::clear_suppressionrulebitmap() {
  suppressionrulebitmap_ = GOOGLE_ULONGLONG(0);
  clear_has_suppressionrulebitmap();
}
inline ::google::protobuf::uint64 alarmProfileCreateRequest::suppressionrulebitmap() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.suppressionRuleBitmap)
  return suppressionrulebitmap_;
}
inline void alarmProfileCreateRequest::set_suppressionrulebitmap(::google::protobuf::uint64 value) {
  set_has_suppressionrulebitmap();
  suppressionrulebitmap_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.suppressionRuleBitmap)
}

// required uint32 suppRuleRelation = 11;
inline bool alarmProfileCreateRequest::has_supprulerelation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void alarmProfileCreateRequest::set_has_supprulerelation() {
  _has_bits_[0] |= 0x00000400u;
}
inline void alarmProfileCreateRequest::clear_has_supprulerelation() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void alarmProfileCreateRequest::clear_supprulerelation() {
  supprulerelation_ = 0u;
  clear_has_supprulerelation();
}
inline ::google::protobuf::uint32 alarmProfileCreateRequest::supprulerelation() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.suppRuleRelation)
  return supprulerelation_;
}
inline void alarmProfileCreateRequest::set_supprulerelation(::google::protobuf::uint32 value) {
  set_has_supprulerelation();
  supprulerelation_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.suppRuleRelation)
}

// required int32 intIndex = 12;
inline bool alarmProfileCreateRequest::has_intindex() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void alarmProfileCreateRequest::set_has_intindex() {
  _has_bits_[0] |= 0x00000800u;
}
inline void alarmProfileCreateRequest::clear_has_intindex() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void alarmProfileCreateRequest::clear_intindex() {
  intindex_ = 0;
  clear_has_intindex();
}
inline ::google::protobuf::int32 alarmProfileCreateRequest::intindex() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.intIndex)
  return intindex_;
}
inline void alarmProfileCreateRequest::set_intindex(::google::protobuf::int32 value) {
  set_has_intindex();
  intindex_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.intIndex)
}

// required fixed64 affectedBitmap = 13;
inline bool alarmProfileCreateRequest::has_affectedbitmap() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void alarmProfileCreateRequest::set_has_affectedbitmap() {
  _has_bits_[0] |= 0x00001000u;
}
inline void alarmProfileCreateRequest::clear_has_affectedbitmap() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void alarmProfileCreateRequest::clear_affectedbitmap() {
  affectedbitmap_ = GOOGLE_ULONGLONG(0);
  clear_has_affectedbitmap();
}
inline ::google::protobuf::uint64 alarmProfileCreateRequest::affectedbitmap() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.affectedBitmap)
  return affectedbitmap_;
}
inline void alarmProfileCreateRequest::set_affectedbitmap(::google::protobuf::uint64 value) {
  set_has_affectedbitmap();
  affectedbitmap_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.affectedBitmap)
}

// required bool isSuppressChild = 14;
inline bool alarmProfileCreateRequest::has_issuppresschild() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void alarmProfileCreateRequest::set_has_issuppresschild() {
  _has_bits_[0] |= 0x00002000u;
}
inline void alarmProfileCreateRequest::clear_has_issuppresschild() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void alarmProfileCreateRequest::clear_issuppresschild() {
  issuppresschild_ = false;
  clear_has_issuppresschild();
}
inline bool alarmProfileCreateRequest::issuppresschild() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.isSuppressChild)
  return issuppresschild_;
}
inline void alarmProfileCreateRequest::set_issuppresschild(bool value) {
  set_has_issuppresschild();
  issuppresschild_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileCreateRequest.isSuppressChild)
}

// -------------------------------------------------------------------

// alarmProfileDeleteRequest

// required string resourceId = 1;
inline bool alarmProfileDeleteRequest::has_resourceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void alarmProfileDeleteRequest::set_has_resourceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void alarmProfileDeleteRequest::clear_has_resourceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void alarmProfileDeleteRequest::clear_resourceid() {
  if (resourceid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_->clear();
  }
  clear_has_resourceid();
}
inline const ::std::string& alarmProfileDeleteRequest::resourceid() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileDeleteRequest.resourceId)
  return *resourceid_;
}
inline void alarmProfileDeleteRequest::set_resourceid(const ::std::string& value) {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  resourceid_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileDeleteRequest.resourceId)
}
inline void alarmProfileDeleteRequest::set_resourceid(const char* value) {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  resourceid_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.rpcAlarm.alarmProfileDeleteRequest.resourceId)
}
inline void alarmProfileDeleteRequest::set_resourceid(const char* value, size_t size) {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  resourceid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.rpcAlarm.alarmProfileDeleteRequest.resourceId)
}
inline ::std::string* alarmProfileDeleteRequest::mutable_resourceid() {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.rpcAlarm.alarmProfileDeleteRequest.resourceId)
  return resourceid_;
}
inline ::std::string* alarmProfileDeleteRequest::release_resourceid() {
  clear_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = resourceid_;
    resourceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void alarmProfileDeleteRequest::set_allocated_resourceid(::std::string* resourceid) {
  if (resourceid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resourceid_;
  }
  if (resourceid) {
    set_has_resourceid();
    resourceid_ = resourceid;
  } else {
    clear_has_resourceid();
    resourceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.rpcAlarm.alarmProfileDeleteRequest.resourceId)
}

// required uint32 category = 2;
inline bool alarmProfileDeleteRequest::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void alarmProfileDeleteRequest::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void alarmProfileDeleteRequest::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void alarmProfileDeleteRequest::clear_category() {
  category_ = 0u;
  clear_has_category();
}
inline ::google::protobuf::uint32 alarmProfileDeleteRequest::category() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileDeleteRequest.category)
  return category_;
}
inline void alarmProfileDeleteRequest::set_category(::google::protobuf::uint32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileDeleteRequest.category)
}

// required uint32 probCause = 3;
inline bool alarmProfileDeleteRequest::has_probcause() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void alarmProfileDeleteRequest::set_has_probcause() {
  _has_bits_[0] |= 0x00000004u;
}
inline void alarmProfileDeleteRequest::clear_has_probcause() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void alarmProfileDeleteRequest::clear_probcause() {
  probcause_ = 0u;
  clear_has_probcause();
}
inline ::google::protobuf::uint32 alarmProfileDeleteRequest::probcause() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmProfileDeleteRequest.probCause)
  return probcause_;
}
inline void alarmProfileDeleteRequest::set_probcause(::google::protobuf::uint32 value) {
  set_has_probcause();
  probcause_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmProfileDeleteRequest.probCause)
}

// -------------------------------------------------------------------

// alarmDataRequest

// required string resourceId = 1;
inline bool alarmDataRequest::has_resourceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void alarmDataRequest::set_has_resourceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void alarmDataRequest::clear_has_resourceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void alarmDataRequest::clear_resourceid() {
  if (resourceid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_->clear();
  }
  clear_has_resourceid();
}
inline const ::std::string& alarmDataRequest::resourceid() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmDataRequest.resourceId)
  return *resourceid_;
}
inline void alarmDataRequest::set_resourceid(const ::std::string& value) {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  resourceid_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmDataRequest.resourceId)
}
inline void alarmDataRequest::set_resourceid(const char* value) {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  resourceid_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.rpcAlarm.alarmDataRequest.resourceId)
}
inline void alarmDataRequest::set_resourceid(const char* value, size_t size) {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  resourceid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.rpcAlarm.alarmDataRequest.resourceId)
}
inline ::std::string* alarmDataRequest::mutable_resourceid() {
  set_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resourceid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.rpcAlarm.alarmDataRequest.resourceId)
  return resourceid_;
}
inline ::std::string* alarmDataRequest::release_resourceid() {
  clear_has_resourceid();
  if (resourceid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = resourceid_;
    resourceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void alarmDataRequest::set_allocated_resourceid(::std::string* resourceid) {
  if (resourceid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resourceid_;
  }
  if (resourceid) {
    set_has_resourceid();
    resourceid_ = resourceid;
  } else {
    clear_has_resourceid();
    resourceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.rpcAlarm.alarmDataRequest.resourceId)
}

// required uint32 category = 2;
inline bool alarmDataRequest::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void alarmDataRequest::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void alarmDataRequest::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void alarmDataRequest::clear_category() {
  category_ = 0u;
  clear_has_category();
}
inline ::google::protobuf::uint32 alarmDataRequest::category() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmDataRequest.category)
  return category_;
}
inline void alarmDataRequest::set_category(::google::protobuf::uint32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmDataRequest.category)
}

// required uint32 probCause = 3;
inline bool alarmDataRequest::has_probcause() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void alarmDataRequest::set_has_probcause() {
  _has_bits_[0] |= 0x00000004u;
}
inline void alarmDataRequest::clear_has_probcause() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void alarmDataRequest::clear_probcause() {
  probcause_ = 0u;
  clear_has_probcause();
}
inline ::google::protobuf::uint32 alarmDataRequest::probcause() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmDataRequest.probCause)
  return probcause_;
}
inline void alarmDataRequest::set_probcause(::google::protobuf::uint32 value) {
  set_has_probcause();
  probcause_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmDataRequest.probCause)
}

// required uint32 specificProblem = 4;
inline bool alarmDataRequest::has_specificproblem() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void alarmDataRequest::set_has_specificproblem() {
  _has_bits_[0] |= 0x00000008u;
}
inline void alarmDataRequest::clear_has_specificproblem() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void alarmDataRequest::clear_specificproblem() {
  specificproblem_ = 0u;
  clear_has_specificproblem();
}
inline ::google::protobuf::uint32 alarmDataRequest::specificproblem() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmDataRequest.specificProblem)
  return specificproblem_;
}
inline void alarmDataRequest::set_specificproblem(::google::protobuf::uint32 value) {
  set_has_specificproblem();
  specificproblem_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmDataRequest.specificProblem)
}

// required uint32 severity = 5;
inline bool alarmDataRequest::has_severity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void alarmDataRequest::set_has_severity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void alarmDataRequest::clear_has_severity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void alarmDataRequest::clear_severity() {
  severity_ = 0u;
  clear_has_severity();
}
inline ::google::protobuf::uint32 alarmDataRequest::severity() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmDataRequest.severity)
  return severity_;
}
inline void alarmDataRequest::set_severity(::google::protobuf::uint32 value) {
  set_has_severity();
  severity_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmDataRequest.severity)
}

// required uint32 state = 6;
inline bool alarmDataRequest::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void alarmDataRequest::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void alarmDataRequest::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void alarmDataRequest::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 alarmDataRequest::state() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmDataRequest.state)
  return state_;
}
inline void alarmDataRequest::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmDataRequest.state)
}

// required string syncData = 7;
inline bool alarmDataRequest::has_syncdata() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void alarmDataRequest::set_has_syncdata() {
  _has_bits_[0] |= 0x00000040u;
}
inline void alarmDataRequest::clear_has_syncdata() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void alarmDataRequest::clear_syncdata() {
  if (syncdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    syncdata_->clear();
  }
  clear_has_syncdata();
}
inline const ::std::string& alarmDataRequest::syncdata() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmDataRequest.syncData)
  return *syncdata_;
}
inline void alarmDataRequest::set_syncdata(const ::std::string& value) {
  set_has_syncdata();
  if (syncdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    syncdata_ = new ::std::string;
  }
  syncdata_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmDataRequest.syncData)
}
inline void alarmDataRequest::set_syncdata(const char* value) {
  set_has_syncdata();
  if (syncdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    syncdata_ = new ::std::string;
  }
  syncdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.rpcAlarm.alarmDataRequest.syncData)
}
inline void alarmDataRequest::set_syncdata(const char* value, size_t size) {
  set_has_syncdata();
  if (syncdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    syncdata_ = new ::std::string;
  }
  syncdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.rpcAlarm.alarmDataRequest.syncData)
}
inline ::std::string* alarmDataRequest::mutable_syncdata() {
  set_has_syncdata();
  if (syncdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    syncdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.rpcAlarm.alarmDataRequest.syncData)
  return syncdata_;
}
inline ::std::string* alarmDataRequest::release_syncdata() {
  clear_has_syncdata();
  if (syncdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = syncdata_;
    syncdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void alarmDataRequest::set_allocated_syncdata(::std::string* syncdata) {
  if (syncdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete syncdata_;
  }
  if (syncdata) {
    set_has_syncdata();
    syncdata_ = syncdata;
  } else {
    clear_has_syncdata();
    syncdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.rpcAlarm.alarmDataRequest.syncData)
}

// -------------------------------------------------------------------

// alarmResponse

// optional int32 saError = 1;
inline bool alarmResponse::has_saerror() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void alarmResponse::set_has_saerror() {
  _has_bits_[0] |= 0x00000001u;
}
inline void alarmResponse::clear_has_saerror() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void alarmResponse::clear_saerror() {
  saerror_ = 0;
  clear_has_saerror();
}
inline ::google::protobuf::int32 alarmResponse::saerror() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmResponse.saError)
  return saerror_;
}
inline void alarmResponse::set_saerror(::google::protobuf::int32 value) {
  set_has_saerror();
  saerror_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmResponse.saError)
}

// optional string errStr = 2;
inline bool alarmResponse::has_errstr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void alarmResponse::set_has_errstr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void alarmResponse::clear_has_errstr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void alarmResponse::clear_errstr() {
  if (errstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errstr_->clear();
  }
  clear_has_errstr();
}
inline const ::std::string& alarmResponse::errstr() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.rpcAlarm.alarmResponse.errStr)
  return *errstr_;
}
inline void alarmResponse::set_errstr(const ::std::string& value) {
  set_has_errstr();
  if (errstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errstr_ = new ::std::string;
  }
  errstr_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.rpcAlarm.alarmResponse.errStr)
}
inline void alarmResponse::set_errstr(const char* value) {
  set_has_errstr();
  if (errstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errstr_ = new ::std::string;
  }
  errstr_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.rpcAlarm.alarmResponse.errStr)
}
inline void alarmResponse::set_errstr(const char* value, size_t size) {
  set_has_errstr();
  if (errstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errstr_ = new ::std::string;
  }
  errstr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.rpcAlarm.alarmResponse.errStr)
}
inline ::std::string* alarmResponse::mutable_errstr() {
  set_has_errstr();
  if (errstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errstr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.rpcAlarm.alarmResponse.errStr)
  return errstr_;
}
inline ::std::string* alarmResponse::release_errstr() {
  clear_has_errstr();
  if (errstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = errstr_;
    errstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void alarmResponse::set_allocated_errstr(::std::string* errstr) {
  if (errstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete errstr_;
  }
  if (errstr) {
    set_has_errstr();
    errstr_ = errstr;
  } else {
    clear_has_errstr();
    errstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.rpcAlarm.alarmResponse.errStr)
}

// -------------------------------------------------------------------

// NO_REQUEST


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpcAlarm
}  // namespace Rpc
}  // namespace SAFplus

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rpcAlarm_2eproto__INCLUDED
