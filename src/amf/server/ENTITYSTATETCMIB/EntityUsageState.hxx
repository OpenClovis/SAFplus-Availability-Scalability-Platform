/* 
 * File EntityUsageState.hxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#pragma once
#ifndef ENTITYUSAGESTATE_HXX_
#define ENTITYUSAGESTATE_HXX_
#include "ENTITYSTATETCMIBCommon.hxx"

#include "MgtEnumType.hxx"
#include <iostream>

namespace ENTITYSTATETCMIB
  {

    enum class EntityUsageState
      {
        unknown=1, idle=2, active=3, busy=4
      };
    std::ostream& operator<<(std::ostream& os, const EntityUsageState& e);
    std::istream& operator>>(std::istream& is, EntityUsageState& e);
    const char* c_str(const EntityUsageState& e);

    /*
     * This is the class that will handle the conversion for us.
     */
    class EntityUsageStateManager : public SAFplus::MgtEnumType<EntityUsageStateManager, EntityUsageState> {
        EntityUsageStateManager();  // private to prevent instantiation
    public:
        static const map_t en2str_map;  // This is the lookup table.
    };
}
/* namespace ::ENTITYSTATETCMIB */
#endif /* ENTITYUSAGESTATE_HXX_ */
