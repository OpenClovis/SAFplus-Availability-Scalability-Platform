// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: amfAppRpc.proto

#ifndef PROTOBUF_amfAppRpc_2eproto__INCLUDED
#define PROTOBUF_amfAppRpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "SAFplusPBExt.pb.hxx"
// @@protoc_insertion_point(includes)

namespace SAFplus {
namespace Rpc {
namespace amfAppRpc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_amfAppRpc_2eproto();
void protobuf_AssignDesc_amfAppRpc_2eproto();
void protobuf_ShutdownFile_amfAppRpc_2eproto();

class HeartbeatRequest;
class HeartbeatResponse;
class TerminateRequest;
class TerminateResponse;
class KeyValuePairs;
class WorkOperationRequest;
class WorkOperationResponseRequest;
class ProxiedComponentInstantiateRequest;
class ProxiedComponentCleanupRequest;

// ===================================================================

class HeartbeatRequest : public ::google::protobuf::Message {
 public:
  HeartbeatRequest();
  virtual ~HeartbeatRequest();

  HeartbeatRequest(const HeartbeatRequest& from);

  inline HeartbeatRequest& operator=(const HeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatRequest& default_instance();

  void Swap(HeartbeatRequest* other);

  // implements Message ----------------------------------------------

  HeartbeatRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatRequest& from);
  void MergeFrom(const HeartbeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint64 count() const;
  inline void set_count(::google::protobuf::uint64 value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(HeartbeatRequest)
  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.amfAppRpc.HeartbeatRequest)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 count_;
  friend void  protobuf_AddDesc_amfAppRpc_2eproto();
  friend void protobuf_AssignDesc_amfAppRpc_2eproto();
  friend void protobuf_ShutdownFile_amfAppRpc_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class HeartbeatResponse : public ::google::protobuf::Message {
 public:
  HeartbeatResponse();
  virtual ~HeartbeatResponse();

  HeartbeatResponse(const HeartbeatResponse& from);

  inline HeartbeatResponse& operator=(const HeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatResponse& default_instance();

  void Swap(HeartbeatResponse* other);

  // implements Message ----------------------------------------------

  HeartbeatResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatResponse& from);
  void MergeFrom(const HeartbeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 nextInterval = 1;
  inline bool has_nextinterval() const;
  inline void clear_nextinterval();
  static const int kNextIntervalFieldNumber = 1;
  inline ::google::protobuf::uint32 nextinterval() const;
  inline void set_nextinterval(::google::protobuf::uint32 value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(HeartbeatResponse)
  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.amfAppRpc.HeartbeatResponse)
 private:
  inline void set_has_nextinterval();
  inline void clear_has_nextinterval();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 nextinterval_;
  friend void  protobuf_AddDesc_amfAppRpc_2eproto();
  friend void protobuf_AssignDesc_amfAppRpc_2eproto();
  friend void protobuf_ShutdownFile_amfAppRpc_2eproto();

  void InitAsDefaultInstance();
  static HeartbeatResponse* default_instance_;
};
// -------------------------------------------------------------------

class TerminateRequest : public ::google::protobuf::Message {
 public:
  TerminateRequest();
  virtual ~TerminateRequest();

  TerminateRequest(const TerminateRequest& from);

  inline TerminateRequest& operator=(const TerminateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminateRequest& default_instance();

  void Swap(TerminateRequest* other);

  // implements Message ----------------------------------------------

  TerminateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TerminateRequest& from);
  void MergeFrom(const TerminateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 invocation = 1;
  inline bool has_invocation() const;
  inline void clear_invocation();
  static const int kInvocationFieldNumber = 1;
  inline ::google::protobuf::uint64 invocation() const;
  inline void set_invocation(::google::protobuf::uint64 value);

  // optional string componentName = 2;
  inline bool has_componentname() const;
  inline void clear_componentname();
  static const int kComponentNameFieldNumber = 2;
  inline const ::std::string& componentname() const;
  inline void set_componentname(const ::std::string& value);
  inline void set_componentname(const char* value);
  inline void set_componentname(const char* value, size_t size);
  inline ::std::string* mutable_componentname();
  inline ::std::string* release_componentname();
  inline void set_allocated_componentname(::std::string* componentname);

  // optional bytes componentHandle = 3;
  inline bool has_componenthandle() const;
  inline void clear_componenthandle();
  static const int kComponentHandleFieldNumber = 3;
  inline const ::std::string& componenthandle() const;
  inline void set_componenthandle(const ::std::string& value);
  inline void set_componenthandle(const char* value);
  inline void set_componenthandle(const void* value, size_t size);
  inline ::std::string* mutable_componenthandle();
  inline ::std::string* release_componenthandle();
  inline void set_allocated_componenthandle(::std::string* componenthandle);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(TerminateRequest)
  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.amfAppRpc.TerminateRequest)
 private:
  inline void set_has_invocation();
  inline void clear_has_invocation();
  inline void set_has_componentname();
  inline void clear_has_componentname();
  inline void set_has_componenthandle();
  inline void clear_has_componenthandle();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 invocation_;
  ::std::string* componentname_;
  ::std::string* componenthandle_;
  friend void  protobuf_AddDesc_amfAppRpc_2eproto();
  friend void protobuf_AssignDesc_amfAppRpc_2eproto();
  friend void protobuf_ShutdownFile_amfAppRpc_2eproto();

  void InitAsDefaultInstance();
  static TerminateRequest* default_instance_;
};
// -------------------------------------------------------------------

class TerminateResponse : public ::google::protobuf::Message {
 public:
  TerminateResponse();
  virtual ~TerminateResponse();

  TerminateResponse(const TerminateResponse& from);

  inline TerminateResponse& operator=(const TerminateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminateResponse& default_instance();

  void Swap(TerminateResponse* other);

  // implements Message ----------------------------------------------

  TerminateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TerminateResponse& from);
  void MergeFrom(const TerminateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 invocation = 1;
  inline bool has_invocation() const;
  inline void clear_invocation();
  static const int kInvocationFieldNumber = 1;
  inline ::google::protobuf::uint64 invocation() const;
  inline void set_invocation(::google::protobuf::uint64 value);

  // optional fixed32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(TerminateResponse)
  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.amfAppRpc.TerminateResponse)
 private:
  inline void set_has_invocation();
  inline void clear_has_invocation();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 invocation_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_amfAppRpc_2eproto();
  friend void protobuf_AssignDesc_amfAppRpc_2eproto();
  friend void protobuf_ShutdownFile_amfAppRpc_2eproto();

  void InitAsDefaultInstance();
  static TerminateResponse* default_instance_;
};
// -------------------------------------------------------------------

class KeyValuePairs : public ::google::protobuf::Message {
 public:
  KeyValuePairs();
  virtual ~KeyValuePairs();

  KeyValuePairs(const KeyValuePairs& from);

  inline KeyValuePairs& operator=(const KeyValuePairs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValuePairs& default_instance();

  void Swap(KeyValuePairs* other);

  // implements Message ----------------------------------------------

  KeyValuePairs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyValuePairs& from);
  void MergeFrom(const KeyValuePairs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string theKey = 1;
  inline bool has_thekey() const;
  inline void clear_thekey();
  static const int kTheKeyFieldNumber = 1;
  inline const ::std::string& thekey() const;
  inline void set_thekey(const ::std::string& value);
  inline void set_thekey(const char* value);
  inline void set_thekey(const char* value, size_t size);
  inline ::std::string* mutable_thekey();
  inline ::std::string* release_thekey();
  inline void set_allocated_thekey(::std::string* thekey);

  // optional string theValue = 2;
  inline bool has_thevalue() const;
  inline void clear_thevalue();
  static const int kTheValueFieldNumber = 2;
  inline const ::std::string& thevalue() const;
  inline void set_thevalue(const ::std::string& value);
  inline void set_thevalue(const char* value);
  inline void set_thevalue(const char* value, size_t size);
  inline ::std::string* mutable_thevalue();
  inline ::std::string* release_thevalue();
  inline void set_allocated_thevalue(::std::string* thevalue);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(KeyValuePairs)
  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.amfAppRpc.KeyValuePairs)
 private:
  inline void set_has_thekey();
  inline void clear_has_thekey();
  inline void set_has_thevalue();
  inline void clear_has_thevalue();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* thekey_;
  ::std::string* thevalue_;
  friend void  protobuf_AddDesc_amfAppRpc_2eproto();
  friend void protobuf_AssignDesc_amfAppRpc_2eproto();
  friend void protobuf_ShutdownFile_amfAppRpc_2eproto();

  void InitAsDefaultInstance();
  static KeyValuePairs* default_instance_;
};
// -------------------------------------------------------------------

class WorkOperationRequest : public ::google::protobuf::Message {
 public:
  WorkOperationRequest();
  virtual ~WorkOperationRequest();

  WorkOperationRequest(const WorkOperationRequest& from);

  inline WorkOperationRequest& operator=(const WorkOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkOperationRequest& default_instance();

  void Swap(WorkOperationRequest* other);

  // implements Message ----------------------------------------------

  WorkOperationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkOperationRequest& from);
  void MergeFrom(const WorkOperationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 invocation = 1;
  inline bool has_invocation() const;
  inline void clear_invocation();
  static const int kInvocationFieldNumber = 1;
  inline ::google::protobuf::uint64 invocation() const;
  inline void set_invocation(::google::protobuf::uint64 value);

  // optional string componentName = 2;
  inline bool has_componentname() const;
  inline void clear_componentname();
  static const int kComponentNameFieldNumber = 2;
  inline const ::std::string& componentname() const;
  inline void set_componentname(const ::std::string& value);
  inline void set_componentname(const char* value);
  inline void set_componentname(const char* value, size_t size);
  inline ::std::string* mutable_componentname();
  inline ::std::string* release_componentname();
  inline void set_allocated_componentname(::std::string* componentname);

  // repeated bytes componentHandle = 3;
  inline int componenthandle_size() const;
  inline void clear_componenthandle();
  static const int kComponentHandleFieldNumber = 3;
  inline const ::std::string& componenthandle(int index) const;
  inline ::std::string* mutable_componenthandle(int index);
  inline void set_componenthandle(int index, const ::std::string& value);
  inline void set_componenthandle(int index, const char* value);
  inline void set_componenthandle(int index, const void* value, size_t size);
  inline ::std::string* add_componenthandle();
  inline void add_componenthandle(const ::std::string& value);
  inline void add_componenthandle(const char* value);
  inline void add_componenthandle(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& componenthandle() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_componenthandle();

  // optional fixed32 operation = 4;
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 4;
  inline ::google::protobuf::uint32 operation() const;
  inline void set_operation(::google::protobuf::uint32 value);

  // optional fixed32 target = 5;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 5;
  inline ::google::protobuf::uint32 target() const;
  inline void set_target(::google::protobuf::uint32 value);

  // repeated .SAFplus.Rpc.amfAppRpc.KeyValuePairs keyValuePairs = 6;
  inline int keyvaluepairs_size() const;
  inline void clear_keyvaluepairs();
  static const int kKeyValuePairsFieldNumber = 6;
  inline const ::SAFplus::Rpc::amfAppRpc::KeyValuePairs& keyvaluepairs(int index) const;
  inline ::SAFplus::Rpc::amfAppRpc::KeyValuePairs* mutable_keyvaluepairs(int index);
  inline ::SAFplus::Rpc::amfAppRpc::KeyValuePairs* add_keyvaluepairs();
  inline const ::google::protobuf::RepeatedPtrField< ::SAFplus::Rpc::amfAppRpc::KeyValuePairs >&
      keyvaluepairs() const;
  inline ::google::protobuf::RepeatedPtrField< ::SAFplus::Rpc::amfAppRpc::KeyValuePairs >*
      mutable_keyvaluepairs();

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(WorkOperationRequest)
  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.amfAppRpc.WorkOperationRequest)
 private:
  inline void set_has_invocation();
  inline void clear_has_invocation();
  inline void set_has_componentname();
  inline void clear_has_componentname();
  inline void set_has_operation();
  inline void clear_has_operation();
  inline void set_has_target();
  inline void clear_has_target();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 invocation_;
  ::std::string* componentname_;
  ::google::protobuf::RepeatedPtrField< ::std::string> componenthandle_;
  ::google::protobuf::uint32 operation_;
  ::google::protobuf::uint32 target_;
  ::google::protobuf::RepeatedPtrField< ::SAFplus::Rpc::amfAppRpc::KeyValuePairs > keyvaluepairs_;
  friend void  protobuf_AddDesc_amfAppRpc_2eproto();
  friend void protobuf_AssignDesc_amfAppRpc_2eproto();
  friend void protobuf_ShutdownFile_amfAppRpc_2eproto();

  void InitAsDefaultInstance();
  static WorkOperationRequest* default_instance_;
};
// -------------------------------------------------------------------

class WorkOperationResponseRequest : public ::google::protobuf::Message {
 public:
  WorkOperationResponseRequest();
  virtual ~WorkOperationResponseRequest();

  WorkOperationResponseRequest(const WorkOperationResponseRequest& from);

  inline WorkOperationResponseRequest& operator=(const WorkOperationResponseRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkOperationResponseRequest& default_instance();

  void Swap(WorkOperationResponseRequest* other);

  // implements Message ----------------------------------------------

  WorkOperationResponseRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorkOperationResponseRequest& from);
  void MergeFrom(const WorkOperationResponseRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 invocation = 1;
  inline bool has_invocation() const;
  inline void clear_invocation();
  static const int kInvocationFieldNumber = 1;
  inline ::google::protobuf::uint64 invocation() const;
  inline void set_invocation(::google::protobuf::uint64 value);

  // optional fixed32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(WorkOperationResponseRequest)
  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.amfAppRpc.WorkOperationResponseRequest)
 private:
  inline void set_has_invocation();
  inline void clear_has_invocation();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 invocation_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_amfAppRpc_2eproto();
  friend void protobuf_AssignDesc_amfAppRpc_2eproto();
  friend void protobuf_ShutdownFile_amfAppRpc_2eproto();

  void InitAsDefaultInstance();
  static WorkOperationResponseRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProxiedComponentInstantiateRequest : public ::google::protobuf::Message {
 public:
  ProxiedComponentInstantiateRequest();
  virtual ~ProxiedComponentInstantiateRequest();

  ProxiedComponentInstantiateRequest(const ProxiedComponentInstantiateRequest& from);

  inline ProxiedComponentInstantiateRequest& operator=(const ProxiedComponentInstantiateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxiedComponentInstantiateRequest& default_instance();

  void Swap(ProxiedComponentInstantiateRequest* other);

  // implements Message ----------------------------------------------

  ProxiedComponentInstantiateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxiedComponentInstantiateRequest& from);
  void MergeFrom(const ProxiedComponentInstantiateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 invocation = 1;
  inline bool has_invocation() const;
  inline void clear_invocation();
  static const int kInvocationFieldNumber = 1;
  inline ::google::protobuf::uint64 invocation() const;
  inline void set_invocation(::google::protobuf::uint64 value);

  // optional string componentName = 2;
  inline bool has_componentname() const;
  inline void clear_componentname();
  static const int kComponentNameFieldNumber = 2;
  inline const ::std::string& componentname() const;
  inline void set_componentname(const ::std::string& value);
  inline void set_componentname(const char* value);
  inline void set_componentname(const char* value, size_t size);
  inline ::std::string* mutable_componentname();
  inline ::std::string* release_componentname();
  inline void set_allocated_componentname(::std::string* componentname);

  // repeated bytes componentHandle = 3;
  inline int componenthandle_size() const;
  inline void clear_componenthandle();
  static const int kComponentHandleFieldNumber = 3;
  inline const ::std::string& componenthandle(int index) const;
  inline ::std::string* mutable_componenthandle(int index);
  inline void set_componenthandle(int index, const ::std::string& value);
  inline void set_componenthandle(int index, const char* value);
  inline void set_componenthandle(int index, const void* value, size_t size);
  inline ::std::string* add_componenthandle();
  inline void add_componenthandle(const ::std::string& value);
  inline void add_componenthandle(const char* value);
  inline void add_componenthandle(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& componenthandle() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_componenthandle();

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(ProxiedComponentInstantiateRequest)
  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest)
 private:
  inline void set_has_invocation();
  inline void clear_has_invocation();
  inline void set_has_componentname();
  inline void clear_has_componentname();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 invocation_;
  ::std::string* componentname_;
  ::google::protobuf::RepeatedPtrField< ::std::string> componenthandle_;
  friend void  protobuf_AddDesc_amfAppRpc_2eproto();
  friend void protobuf_AssignDesc_amfAppRpc_2eproto();
  friend void protobuf_ShutdownFile_amfAppRpc_2eproto();

  void InitAsDefaultInstance();
  static ProxiedComponentInstantiateRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProxiedComponentCleanupRequest : public ::google::protobuf::Message {
 public:
  ProxiedComponentCleanupRequest();
  virtual ~ProxiedComponentCleanupRequest();

  ProxiedComponentCleanupRequest(const ProxiedComponentCleanupRequest& from);

  inline ProxiedComponentCleanupRequest& operator=(const ProxiedComponentCleanupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxiedComponentCleanupRequest& default_instance();

  void Swap(ProxiedComponentCleanupRequest* other);

  // implements Message ----------------------------------------------

  ProxiedComponentCleanupRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxiedComponentCleanupRequest& from);
  void MergeFrom(const ProxiedComponentCleanupRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 invocation = 1;
  inline bool has_invocation() const;
  inline void clear_invocation();
  static const int kInvocationFieldNumber = 1;
  inline ::google::protobuf::uint64 invocation() const;
  inline void set_invocation(::google::protobuf::uint64 value);

  // optional string componentName = 2;
  inline bool has_componentname() const;
  inline void clear_componentname();
  static const int kComponentNameFieldNumber = 2;
  inline const ::std::string& componentname() const;
  inline void set_componentname(const ::std::string& value);
  inline void set_componentname(const char* value);
  inline void set_componentname(const char* value, size_t size);
  inline ::std::string* mutable_componentname();
  inline ::std::string* release_componentname();
  inline void set_allocated_componentname(::std::string* componentname);

  // repeated bytes componentHandle = 3;
  inline int componenthandle_size() const;
  inline void clear_componenthandle();
  static const int kComponentHandleFieldNumber = 3;
  inline const ::std::string& componenthandle(int index) const;
  inline ::std::string* mutable_componenthandle(int index);
  inline void set_componenthandle(int index, const ::std::string& value);
  inline void set_componenthandle(int index, const char* value);
  inline void set_componenthandle(int index, const void* value, size_t size);
  inline ::std::string* add_componenthandle();
  inline void add_componenthandle(const ::std::string& value);
  inline void add_componenthandle(const char* value);
  inline void add_componenthandle(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& componenthandle() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_componenthandle();

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(ProxiedComponentCleanupRequest)
  // @@protoc_insertion_point(class_scope:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest)
 private:
  inline void set_has_invocation();
  inline void clear_has_invocation();
  inline void set_has_componentname();
  inline void clear_has_componentname();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 invocation_;
  ::std::string* componentname_;
  ::google::protobuf::RepeatedPtrField< ::std::string> componenthandle_;
  friend void  protobuf_AddDesc_amfAppRpc_2eproto();
  friend void protobuf_AssignDesc_amfAppRpc_2eproto();
  friend void protobuf_ShutdownFile_amfAppRpc_2eproto();

  void InitAsDefaultInstance();
  static ProxiedComponentCleanupRequest* default_instance_;
};
// ===================================================================


// ===================================================================

// HeartbeatRequest

// optional uint64 count = 1;
inline bool HeartbeatRequest::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatRequest::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatRequest::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
  clear_has_count();
}
inline ::google::protobuf::uint64 HeartbeatRequest::count() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.HeartbeatRequest.count)
  return count_;
}
inline void HeartbeatRequest::set_count(::google::protobuf::uint64 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.HeartbeatRequest.count)
}

// -------------------------------------------------------------------

// HeartbeatResponse

// optional fixed32 nextInterval = 1;
inline bool HeartbeatResponse::has_nextinterval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartbeatResponse::set_has_nextinterval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartbeatResponse::clear_has_nextinterval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartbeatResponse::clear_nextinterval() {
  nextinterval_ = 0u;
  clear_has_nextinterval();
}
inline ::google::protobuf::uint32 HeartbeatResponse::nextinterval() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.HeartbeatResponse.nextInterval)
  return nextinterval_;
}
inline void HeartbeatResponse::set_nextinterval(::google::protobuf::uint32 value) {
  set_has_nextinterval();
  nextinterval_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.HeartbeatResponse.nextInterval)
}

// -------------------------------------------------------------------

// TerminateRequest

// optional uint64 invocation = 1;
inline bool TerminateRequest::has_invocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TerminateRequest::set_has_invocation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TerminateRequest::clear_has_invocation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TerminateRequest::clear_invocation() {
  invocation_ = GOOGLE_ULONGLONG(0);
  clear_has_invocation();
}
inline ::google::protobuf::uint64 TerminateRequest::invocation() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.TerminateRequest.invocation)
  return invocation_;
}
inline void TerminateRequest::set_invocation(::google::protobuf::uint64 value) {
  set_has_invocation();
  invocation_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.TerminateRequest.invocation)
}

// optional string componentName = 2;
inline bool TerminateRequest::has_componentname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TerminateRequest::set_has_componentname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TerminateRequest::clear_has_componentname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TerminateRequest::clear_componentname() {
  if (componentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_->clear();
  }
  clear_has_componentname();
}
inline const ::std::string& TerminateRequest::componentname() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentName)
  return *componentname_;
}
inline void TerminateRequest::set_componentname(const ::std::string& value) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentName)
}
inline void TerminateRequest::set_componentname(const char* value) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentName)
}
inline void TerminateRequest::set_componentname(const char* value, size_t size) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentName)
}
inline ::std::string* TerminateRequest::mutable_componentname() {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentName)
  return componentname_;
}
inline ::std::string* TerminateRequest::release_componentname() {
  clear_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = componentname_;
    componentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TerminateRequest::set_allocated_componentname(::std::string* componentname) {
  if (componentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componentname_;
  }
  if (componentname) {
    set_has_componentname();
    componentname_ = componentname;
  } else {
    clear_has_componentname();
    componentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentName)
}

// optional bytes componentHandle = 3;
inline bool TerminateRequest::has_componenthandle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TerminateRequest::set_has_componenthandle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TerminateRequest::clear_has_componenthandle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TerminateRequest::clear_componenthandle() {
  if (componenthandle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componenthandle_->clear();
  }
  clear_has_componenthandle();
}
inline const ::std::string& TerminateRequest::componenthandle() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentHandle)
  return *componenthandle_;
}
inline void TerminateRequest::set_componenthandle(const ::std::string& value) {
  set_has_componenthandle();
  if (componenthandle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componenthandle_ = new ::std::string;
  }
  componenthandle_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentHandle)
}
inline void TerminateRequest::set_componenthandle(const char* value) {
  set_has_componenthandle();
  if (componenthandle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componenthandle_ = new ::std::string;
  }
  componenthandle_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentHandle)
}
inline void TerminateRequest::set_componenthandle(const void* value, size_t size) {
  set_has_componenthandle();
  if (componenthandle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componenthandle_ = new ::std::string;
  }
  componenthandle_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentHandle)
}
inline ::std::string* TerminateRequest::mutable_componenthandle() {
  set_has_componenthandle();
  if (componenthandle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componenthandle_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentHandle)
  return componenthandle_;
}
inline ::std::string* TerminateRequest::release_componenthandle() {
  clear_has_componenthandle();
  if (componenthandle_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = componenthandle_;
    componenthandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TerminateRequest::set_allocated_componenthandle(::std::string* componenthandle) {
  if (componenthandle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componenthandle_;
  }
  if (componenthandle) {
    set_has_componenthandle();
    componenthandle_ = componenthandle;
  } else {
    clear_has_componenthandle();
    componenthandle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.amfAppRpc.TerminateRequest.componentHandle)
}

// -------------------------------------------------------------------

// TerminateResponse

// optional uint64 invocation = 1;
inline bool TerminateResponse::has_invocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TerminateResponse::set_has_invocation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TerminateResponse::clear_has_invocation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TerminateResponse::clear_invocation() {
  invocation_ = GOOGLE_ULONGLONG(0);
  clear_has_invocation();
}
inline ::google::protobuf::uint64 TerminateResponse::invocation() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.TerminateResponse.invocation)
  return invocation_;
}
inline void TerminateResponse::set_invocation(::google::protobuf::uint64 value) {
  set_has_invocation();
  invocation_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.TerminateResponse.invocation)
}

// optional fixed32 result = 2;
inline bool TerminateResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TerminateResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TerminateResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TerminateResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 TerminateResponse::result() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.TerminateResponse.result)
  return result_;
}
inline void TerminateResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.TerminateResponse.result)
}

// -------------------------------------------------------------------

// KeyValuePairs

// optional string theKey = 1;
inline bool KeyValuePairs::has_thekey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyValuePairs::set_has_thekey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyValuePairs::clear_has_thekey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyValuePairs::clear_thekey() {
  if (thekey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    thekey_->clear();
  }
  clear_has_thekey();
}
inline const ::std::string& KeyValuePairs::thekey() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theKey)
  return *thekey_;
}
inline void KeyValuePairs::set_thekey(const ::std::string& value) {
  set_has_thekey();
  if (thekey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    thekey_ = new ::std::string;
  }
  thekey_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theKey)
}
inline void KeyValuePairs::set_thekey(const char* value) {
  set_has_thekey();
  if (thekey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    thekey_ = new ::std::string;
  }
  thekey_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theKey)
}
inline void KeyValuePairs::set_thekey(const char* value, size_t size) {
  set_has_thekey();
  if (thekey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    thekey_ = new ::std::string;
  }
  thekey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theKey)
}
inline ::std::string* KeyValuePairs::mutable_thekey() {
  set_has_thekey();
  if (thekey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    thekey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theKey)
  return thekey_;
}
inline ::std::string* KeyValuePairs::release_thekey() {
  clear_has_thekey();
  if (thekey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = thekey_;
    thekey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void KeyValuePairs::set_allocated_thekey(::std::string* thekey) {
  if (thekey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete thekey_;
  }
  if (thekey) {
    set_has_thekey();
    thekey_ = thekey;
  } else {
    clear_has_thekey();
    thekey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theKey)
}

// optional string theValue = 2;
inline bool KeyValuePairs::has_thevalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyValuePairs::set_has_thevalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyValuePairs::clear_has_thevalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyValuePairs::clear_thevalue() {
  if (thevalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    thevalue_->clear();
  }
  clear_has_thevalue();
}
inline const ::std::string& KeyValuePairs::thevalue() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theValue)
  return *thevalue_;
}
inline void KeyValuePairs::set_thevalue(const ::std::string& value) {
  set_has_thevalue();
  if (thevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    thevalue_ = new ::std::string;
  }
  thevalue_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theValue)
}
inline void KeyValuePairs::set_thevalue(const char* value) {
  set_has_thevalue();
  if (thevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    thevalue_ = new ::std::string;
  }
  thevalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theValue)
}
inline void KeyValuePairs::set_thevalue(const char* value, size_t size) {
  set_has_thevalue();
  if (thevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    thevalue_ = new ::std::string;
  }
  thevalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theValue)
}
inline ::std::string* KeyValuePairs::mutable_thevalue() {
  set_has_thevalue();
  if (thevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    thevalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theValue)
  return thevalue_;
}
inline ::std::string* KeyValuePairs::release_thevalue() {
  clear_has_thevalue();
  if (thevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = thevalue_;
    thevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void KeyValuePairs::set_allocated_thevalue(::std::string* thevalue) {
  if (thevalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete thevalue_;
  }
  if (thevalue) {
    set_has_thevalue();
    thevalue_ = thevalue;
  } else {
    clear_has_thevalue();
    thevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.amfAppRpc.KeyValuePairs.theValue)
}

// -------------------------------------------------------------------

// WorkOperationRequest

// optional uint64 invocation = 1;
inline bool WorkOperationRequest::has_invocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkOperationRequest::set_has_invocation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkOperationRequest::clear_has_invocation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkOperationRequest::clear_invocation() {
  invocation_ = GOOGLE_ULONGLONG(0);
  clear_has_invocation();
}
inline ::google::protobuf::uint64 WorkOperationRequest::invocation() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.invocation)
  return invocation_;
}
inline void WorkOperationRequest::set_invocation(::google::protobuf::uint64 value) {
  set_has_invocation();
  invocation_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.invocation)
}

// optional string componentName = 2;
inline bool WorkOperationRequest::has_componentname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkOperationRequest::set_has_componentname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkOperationRequest::clear_has_componentname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkOperationRequest::clear_componentname() {
  if (componentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_->clear();
  }
  clear_has_componentname();
}
inline const ::std::string& WorkOperationRequest::componentname() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentName)
  return *componentname_;
}
inline void WorkOperationRequest::set_componentname(const ::std::string& value) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentName)
}
inline void WorkOperationRequest::set_componentname(const char* value) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentName)
}
inline void WorkOperationRequest::set_componentname(const char* value, size_t size) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentName)
}
inline ::std::string* WorkOperationRequest::mutable_componentname() {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentName)
  return componentname_;
}
inline ::std::string* WorkOperationRequest::release_componentname() {
  clear_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = componentname_;
    componentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WorkOperationRequest::set_allocated_componentname(::std::string* componentname) {
  if (componentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componentname_;
  }
  if (componentname) {
    set_has_componentname();
    componentname_ = componentname;
  } else {
    clear_has_componentname();
    componentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentName)
}

// repeated bytes componentHandle = 3;
inline int WorkOperationRequest::componenthandle_size() const {
  return componenthandle_.size();
}
inline void WorkOperationRequest::clear_componenthandle() {
  componenthandle_.Clear();
}
inline const ::std::string& WorkOperationRequest::componenthandle(int index) const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentHandle)
  return componenthandle_.Get(index);
}
inline ::std::string* WorkOperationRequest::mutable_componenthandle(int index) {
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentHandle)
  return componenthandle_.Mutable(index);
}
inline void WorkOperationRequest::set_componenthandle(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentHandle)
  componenthandle_.Mutable(index)->assign(value);
}
inline void WorkOperationRequest::set_componenthandle(int index, const char* value) {
  componenthandle_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentHandle)
}
inline void WorkOperationRequest::set_componenthandle(int index, const void* value, size_t size) {
  componenthandle_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentHandle)
}
inline ::std::string* WorkOperationRequest::add_componenthandle() {
  return componenthandle_.Add();
}
inline void WorkOperationRequest::add_componenthandle(const ::std::string& value) {
  componenthandle_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentHandle)
}
inline void WorkOperationRequest::add_componenthandle(const char* value) {
  componenthandle_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentHandle)
}
inline void WorkOperationRequest::add_componenthandle(const void* value, size_t size) {
  componenthandle_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentHandle)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
WorkOperationRequest::componenthandle() const {
  // @@protoc_insertion_point(field_list:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentHandle)
  return componenthandle_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
WorkOperationRequest::mutable_componenthandle() {
  // @@protoc_insertion_point(field_mutable_list:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.componentHandle)
  return &componenthandle_;
}

// optional fixed32 operation = 4;
inline bool WorkOperationRequest::has_operation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorkOperationRequest::set_has_operation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorkOperationRequest::clear_has_operation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorkOperationRequest::clear_operation() {
  operation_ = 0u;
  clear_has_operation();
}
inline ::google::protobuf::uint32 WorkOperationRequest::operation() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.operation)
  return operation_;
}
inline void WorkOperationRequest::set_operation(::google::protobuf::uint32 value) {
  set_has_operation();
  operation_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.operation)
}

// optional fixed32 target = 5;
inline bool WorkOperationRequest::has_target() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorkOperationRequest::set_has_target() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorkOperationRequest::clear_has_target() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorkOperationRequest::clear_target() {
  target_ = 0u;
  clear_has_target();
}
inline ::google::protobuf::uint32 WorkOperationRequest::target() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.target)
  return target_;
}
inline void WorkOperationRequest::set_target(::google::protobuf::uint32 value) {
  set_has_target();
  target_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.target)
}

// repeated .SAFplus.Rpc.amfAppRpc.KeyValuePairs keyValuePairs = 6;
inline int WorkOperationRequest::keyvaluepairs_size() const {
  return keyvaluepairs_.size();
}
inline void WorkOperationRequest::clear_keyvaluepairs() {
  keyvaluepairs_.Clear();
}
inline const ::SAFplus::Rpc::amfAppRpc::KeyValuePairs& WorkOperationRequest::keyvaluepairs(int index) const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.keyValuePairs)
  return keyvaluepairs_.Get(index);
}
inline ::SAFplus::Rpc::amfAppRpc::KeyValuePairs* WorkOperationRequest::mutable_keyvaluepairs(int index) {
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.keyValuePairs)
  return keyvaluepairs_.Mutable(index);
}
inline ::SAFplus::Rpc::amfAppRpc::KeyValuePairs* WorkOperationRequest::add_keyvaluepairs() {
  // @@protoc_insertion_point(field_add:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.keyValuePairs)
  return keyvaluepairs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SAFplus::Rpc::amfAppRpc::KeyValuePairs >&
WorkOperationRequest::keyvaluepairs() const {
  // @@protoc_insertion_point(field_list:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.keyValuePairs)
  return keyvaluepairs_;
}
inline ::google::protobuf::RepeatedPtrField< ::SAFplus::Rpc::amfAppRpc::KeyValuePairs >*
WorkOperationRequest::mutable_keyvaluepairs() {
  // @@protoc_insertion_point(field_mutable_list:SAFplus.Rpc.amfAppRpc.WorkOperationRequest.keyValuePairs)
  return &keyvaluepairs_;
}

// -------------------------------------------------------------------

// WorkOperationResponseRequest

// optional uint64 invocation = 1;
inline bool WorkOperationResponseRequest::has_invocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorkOperationResponseRequest::set_has_invocation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorkOperationResponseRequest::clear_has_invocation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorkOperationResponseRequest::clear_invocation() {
  invocation_ = GOOGLE_ULONGLONG(0);
  clear_has_invocation();
}
inline ::google::protobuf::uint64 WorkOperationResponseRequest::invocation() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.WorkOperationResponseRequest.invocation)
  return invocation_;
}
inline void WorkOperationResponseRequest::set_invocation(::google::protobuf::uint64 value) {
  set_has_invocation();
  invocation_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.WorkOperationResponseRequest.invocation)
}

// optional fixed32 result = 2;
inline bool WorkOperationResponseRequest::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorkOperationResponseRequest::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorkOperationResponseRequest::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorkOperationResponseRequest::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 WorkOperationResponseRequest::result() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.WorkOperationResponseRequest.result)
  return result_;
}
inline void WorkOperationResponseRequest::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.WorkOperationResponseRequest.result)
}

// -------------------------------------------------------------------

// ProxiedComponentInstantiateRequest

// optional uint64 invocation = 1;
inline bool ProxiedComponentInstantiateRequest::has_invocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProxiedComponentInstantiateRequest::set_has_invocation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProxiedComponentInstantiateRequest::clear_has_invocation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProxiedComponentInstantiateRequest::clear_invocation() {
  invocation_ = GOOGLE_ULONGLONG(0);
  clear_has_invocation();
}
inline ::google::protobuf::uint64 ProxiedComponentInstantiateRequest::invocation() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.invocation)
  return invocation_;
}
inline void ProxiedComponentInstantiateRequest::set_invocation(::google::protobuf::uint64 value) {
  set_has_invocation();
  invocation_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.invocation)
}

// optional string componentName = 2;
inline bool ProxiedComponentInstantiateRequest::has_componentname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProxiedComponentInstantiateRequest::set_has_componentname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProxiedComponentInstantiateRequest::clear_has_componentname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProxiedComponentInstantiateRequest::clear_componentname() {
  if (componentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_->clear();
  }
  clear_has_componentname();
}
inline const ::std::string& ProxiedComponentInstantiateRequest::componentname() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentName)
  return *componentname_;
}
inline void ProxiedComponentInstantiateRequest::set_componentname(const ::std::string& value) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentName)
}
inline void ProxiedComponentInstantiateRequest::set_componentname(const char* value) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentName)
}
inline void ProxiedComponentInstantiateRequest::set_componentname(const char* value, size_t size) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentName)
}
inline ::std::string* ProxiedComponentInstantiateRequest::mutable_componentname() {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentName)
  return componentname_;
}
inline ::std::string* ProxiedComponentInstantiateRequest::release_componentname() {
  clear_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = componentname_;
    componentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ProxiedComponentInstantiateRequest::set_allocated_componentname(::std::string* componentname) {
  if (componentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componentname_;
  }
  if (componentname) {
    set_has_componentname();
    componentname_ = componentname;
  } else {
    clear_has_componentname();
    componentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentName)
}

// repeated bytes componentHandle = 3;
inline int ProxiedComponentInstantiateRequest::componenthandle_size() const {
  return componenthandle_.size();
}
inline void ProxiedComponentInstantiateRequest::clear_componenthandle() {
  componenthandle_.Clear();
}
inline const ::std::string& ProxiedComponentInstantiateRequest::componenthandle(int index) const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentHandle)
  return componenthandle_.Get(index);
}
inline ::std::string* ProxiedComponentInstantiateRequest::mutable_componenthandle(int index) {
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentHandle)
  return componenthandle_.Mutable(index);
}
inline void ProxiedComponentInstantiateRequest::set_componenthandle(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentHandle)
  componenthandle_.Mutable(index)->assign(value);
}
inline void ProxiedComponentInstantiateRequest::set_componenthandle(int index, const char* value) {
  componenthandle_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentHandle)
}
inline void ProxiedComponentInstantiateRequest::set_componenthandle(int index, const void* value, size_t size) {
  componenthandle_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentHandle)
}
inline ::std::string* ProxiedComponentInstantiateRequest::add_componenthandle() {
  return componenthandle_.Add();
}
inline void ProxiedComponentInstantiateRequest::add_componenthandle(const ::std::string& value) {
  componenthandle_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentHandle)
}
inline void ProxiedComponentInstantiateRequest::add_componenthandle(const char* value) {
  componenthandle_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentHandle)
}
inline void ProxiedComponentInstantiateRequest::add_componenthandle(const void* value, size_t size) {
  componenthandle_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentHandle)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProxiedComponentInstantiateRequest::componenthandle() const {
  // @@protoc_insertion_point(field_list:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentHandle)
  return componenthandle_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProxiedComponentInstantiateRequest::mutable_componenthandle() {
  // @@protoc_insertion_point(field_mutable_list:SAFplus.Rpc.amfAppRpc.ProxiedComponentInstantiateRequest.componentHandle)
  return &componenthandle_;
}

// -------------------------------------------------------------------

// ProxiedComponentCleanupRequest

// optional uint64 invocation = 1;
inline bool ProxiedComponentCleanupRequest::has_invocation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProxiedComponentCleanupRequest::set_has_invocation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProxiedComponentCleanupRequest::clear_has_invocation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProxiedComponentCleanupRequest::clear_invocation() {
  invocation_ = GOOGLE_ULONGLONG(0);
  clear_has_invocation();
}
inline ::google::protobuf::uint64 ProxiedComponentCleanupRequest::invocation() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.invocation)
  return invocation_;
}
inline void ProxiedComponentCleanupRequest::set_invocation(::google::protobuf::uint64 value) {
  set_has_invocation();
  invocation_ = value;
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.invocation)
}

// optional string componentName = 2;
inline bool ProxiedComponentCleanupRequest::has_componentname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProxiedComponentCleanupRequest::set_has_componentname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProxiedComponentCleanupRequest::clear_has_componentname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProxiedComponentCleanupRequest::clear_componentname() {
  if (componentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_->clear();
  }
  clear_has_componentname();
}
inline const ::std::string& ProxiedComponentCleanupRequest::componentname() const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentName)
  return *componentname_;
}
inline void ProxiedComponentCleanupRequest::set_componentname(const ::std::string& value) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(value);
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentName)
}
inline void ProxiedComponentCleanupRequest::set_componentname(const char* value) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentName)
}
inline void ProxiedComponentCleanupRequest::set_componentname(const char* value, size_t size) {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  componentname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentName)
}
inline ::std::string* ProxiedComponentCleanupRequest::mutable_componentname() {
  set_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    componentname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentName)
  return componentname_;
}
inline ::std::string* ProxiedComponentCleanupRequest::release_componentname() {
  clear_has_componentname();
  if (componentname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = componentname_;
    componentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ProxiedComponentCleanupRequest::set_allocated_componentname(::std::string* componentname) {
  if (componentname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete componentname_;
  }
  if (componentname) {
    set_has_componentname();
    componentname_ = componentname;
  } else {
    clear_has_componentname();
    componentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentName)
}

// repeated bytes componentHandle = 3;
inline int ProxiedComponentCleanupRequest::componenthandle_size() const {
  return componenthandle_.size();
}
inline void ProxiedComponentCleanupRequest::clear_componenthandle() {
  componenthandle_.Clear();
}
inline const ::std::string& ProxiedComponentCleanupRequest::componenthandle(int index) const {
  // @@protoc_insertion_point(field_get:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentHandle)
  return componenthandle_.Get(index);
}
inline ::std::string* ProxiedComponentCleanupRequest::mutable_componenthandle(int index) {
  // @@protoc_insertion_point(field_mutable:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentHandle)
  return componenthandle_.Mutable(index);
}
inline void ProxiedComponentCleanupRequest::set_componenthandle(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentHandle)
  componenthandle_.Mutable(index)->assign(value);
}
inline void ProxiedComponentCleanupRequest::set_componenthandle(int index, const char* value) {
  componenthandle_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentHandle)
}
inline void ProxiedComponentCleanupRequest::set_componenthandle(int index, const void* value, size_t size) {
  componenthandle_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentHandle)
}
inline ::std::string* ProxiedComponentCleanupRequest::add_componenthandle() {
  return componenthandle_.Add();
}
inline void ProxiedComponentCleanupRequest::add_componenthandle(const ::std::string& value) {
  componenthandle_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentHandle)
}
inline void ProxiedComponentCleanupRequest::add_componenthandle(const char* value) {
  componenthandle_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentHandle)
}
inline void ProxiedComponentCleanupRequest::add_componenthandle(const void* value, size_t size) {
  componenthandle_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentHandle)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProxiedComponentCleanupRequest::componenthandle() const {
  // @@protoc_insertion_point(field_list:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentHandle)
  return componenthandle_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProxiedComponentCleanupRequest::mutable_componenthandle() {
  // @@protoc_insertion_point(field_mutable_list:SAFplus.Rpc.amfAppRpc.ProxiedComponentCleanupRequest.componentHandle)
  return &componenthandle_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace amfAppRpc
}  // namespace Rpc
}  // namespace SAFplus

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_amfAppRpc_2eproto__INCLUDED
