// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: amfMgmtRpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "amfMgmtRpc.pb.hxx"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace SAFplus {
namespace Rpc {
namespace amfMgmtRpc {

namespace {

const ::google::protobuf::Descriptor* SaTimeT_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SaTimeT_reflection_ = NULL;
const ::google::protobuf::Descriptor* Date_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Date_reflection_ = NULL;
const ::google::protobuf::Descriptor* IntStatistic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IntStatistic_reflection_ = NULL;
const ::google::protobuf::Descriptor* DecStatistic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DecStatistic_reflection_ = NULL;
const ::google::protobuf::Descriptor* Failures_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Failures_reflection_ = NULL;
const ::google::protobuf::Descriptor* CpuUtilization_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CpuUtilization_reflection_ = NULL;
const ::google::protobuf::Descriptor* MemUtilization_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MemUtilization_reflection_ = NULL;
const ::google::protobuf::Descriptor* PageFaults_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PageFaults_reflection_ = NULL;
const ::google::protobuf::Descriptor* NumThreads_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NumThreads_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResidentMem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResidentMem_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProcessStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProcessStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* EscalationPolicy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EscalationPolicy_reflection_ = NULL;
const ::google::protobuf::Descriptor* Execution_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Execution_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceUnitFailureEscalationPolicy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceUnitFailureEscalationPolicy_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentRestart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentRestart_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceUnitRestart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceUnitRestart_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceGroupConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceGroupConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* Instantiate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Instantiate_reflection_ = NULL;
const ::google::protobuf::Descriptor* Terminate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Terminate_reflection_ = NULL;
const ::google::protobuf::Descriptor* Cleanup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cleanup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Timeouts_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Timeouts_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentServiceInstanceConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentServiceInstanceConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceInstanceConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceInstanceConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceUnitConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceUnitConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* User_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  User_reflection_ = NULL;
const ::google::protobuf::Descriptor* LowPriorityUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LowPriorityUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* IoWait_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IoWait_reflection_ = NULL;
const ::google::protobuf::Descriptor* SysTime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SysTime_reflection_ = NULL;
const ::google::protobuf::Descriptor* IntTime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IntTime_reflection_ = NULL;
const ::google::protobuf::Descriptor* SoftIrqs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SoftIrqs_reflection_ = NULL;
const ::google::protobuf::Descriptor* Idle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Idle_reflection_ = NULL;
const ::google::protobuf::Descriptor* ContextSwitches_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ContextSwitches_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProcessCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProcessCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProcessStarts_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProcessStarts_reflection_ = NULL;
const ::google::protobuf::Descriptor* Load_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Load_reflection_ = NULL;
const ::google::protobuf::Descriptor* Stats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Stats_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* NumAssignedServiceUnits_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NumAssignedServiceUnits_reflection_ = NULL;
const ::google::protobuf::Descriptor* NumIdleServiceUnits_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NumIdleServiceUnits_reflection_ = NULL;
const ::google::protobuf::Descriptor* NumSpareServiceUnits_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NumSpareServiceUnits_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceGroupStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceGroupStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProcStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProcStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActiveAssignments_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActiveAssignments_reflection_ = NULL;
const ::google::protobuf::Descriptor* StandbyAssignments_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StandbyAssignments_reflection_ = NULL;
const ::google::protobuf::Descriptor* RestartCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RestartCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentServiceInstanceStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentServiceInstanceStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* NumActiveAssignments_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NumActiveAssignments_reflection_ = NULL;
const ::google::protobuf::Descriptor* NumStandbyAssignments_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NumStandbyAssignments_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceInstanceStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceInstanceStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* NumActiveServiceInstances_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NumActiveServiceInstances_reflection_ = NULL;
const ::google::protobuf::Descriptor* NumStandbyServiceInstances_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NumStandbyServiceInstances_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceUnitStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceUnitStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* InitializeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InitializeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* InitializeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InitializeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* FinalizeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FinalizeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* FinalizeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FinalizeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommitRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommitRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommitResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommitResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateComponentRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateComponentRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateComponentResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateComponentResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateComponentRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateComponentRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateComponentResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateComponentResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteComponentRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteComponentRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteComponentResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteComponentResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateSGRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateSGRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateSGResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateSGResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSGRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSGRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSGResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSGResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSGRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSGRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSGResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSGResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateNodeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateNodeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateNodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateNodeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateNodeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateNodeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateNodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateNodeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteNodeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteNodeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteNodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteNodeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateSURequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateSURequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateSUResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateSUResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSURequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSURequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSUResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSUResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSURequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSURequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSUResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSUResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateSIRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateSIRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateSIResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateSIResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSIRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSIRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSIResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSIResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSIRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSIRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSIResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSIResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateCSIRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateCSIRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateCSIResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateCSIResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateCSIRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateCSIRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateCSIResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateCSIResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteCSIRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteCSIRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteCSIResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteCSIResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteCSINVPRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteCSINVPRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteCSINVPResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteCSINVPResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteNodeSUListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteNodeSUListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteNodeSUListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteNodeSUListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSGSUListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSGSUListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSGSUListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSGSUListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSGSIListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSGSIListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSGSIListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSGSIListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSUCompListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSUCompListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSUCompListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSUCompListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSICSIListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSICSIListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteSICSIListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteSICSIListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockNodeAssignmentRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockNodeAssignmentRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockNodeAssignmentResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockNodeAssignmentResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockSGAssignmentRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockSGAssignmentRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockSGAssignmentResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockSGAssignmentResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockSUAssignmentRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockSUAssignmentRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockSUAssignmentResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockSUAssignmentResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockSIAssignmentRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockSIAssignmentRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockSIAssignmentResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockSIAssignmentResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockNodeInstantiationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockNodeInstantiationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockNodeInstantiationResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockNodeInstantiationResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockSGInstantiationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockSGInstantiationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockSGInstantiationResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockSGInstantiationResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockSUInstantiationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockSUInstantiationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LockSUInstantiationResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LockSUInstantiationResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnlockNodeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnlockNodeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnlockNodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnlockNodeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnlockSGRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnlockSGRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnlockSGResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnlockSGResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnlockSURequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnlockSURequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnlockSUResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnlockSUResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnlockSIRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnlockSIRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnlockSIResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnlockSIResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RepairNodeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RepairNodeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RepairNodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RepairNodeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RepairComponentRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RepairComponentRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RepairComponentResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RepairComponentResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RepairSURequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RepairSURequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RepairSUResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RepairSUResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetComponentConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetComponentConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetComponentConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetComponentConfigResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNodeConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNodeConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNodeConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNodeConfigResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSUConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSUConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSUConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSUConfigResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSGConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSGConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSGConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSGConfigResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSIConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSIConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSIConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSIConfigResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCSIConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCSIConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCSIConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCSIConfigResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetComponentStatusRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetComponentStatusRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetComponentStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetComponentStatusResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNodeStatusRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNodeStatusRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetNodeStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetNodeStatusResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSUStatusRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSUStatusRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSUStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSUStatusResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSGStatusRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSGStatusRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSGStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSGStatusResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSIStatusRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSIStatusRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSIStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSIStatusResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCSIStatusRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCSIStatusRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCSIStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCSIStatusResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeRestartRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeRestartRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeRestartResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeRestartResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceUnitRestartRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceUnitRestartRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceUnitRestartResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceUnitRestartResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentRestartRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentRestartRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentRestartResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentRestartResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AdjustSGRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AdjustSGRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AdjustSGResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AdjustSGResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SwapSIRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SwapSIRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SwapSIResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SwapSIResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompErrorReportRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompErrorReportRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompErrorReportResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompErrorReportResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PresenceState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ReadinessState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* HighAvailabilityReadinessState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* HighAvailabilityState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AdministrativeState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Recovery_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ProcessState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CapabilityModel_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PendingOperation_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AssignmentState_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_amfMgmtRpc_2eproto() {
  protobuf_AddDesc_amfMgmtRpc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "amfMgmtRpc.proto");
  GOOGLE_CHECK(file != NULL);
  SaTimeT_descriptor_ = file->message_type(0);
  static const int SaTimeT_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaTimeT, uint64_),
  };
  SaTimeT_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SaTimeT_descriptor_,
      SaTimeT::default_instance_,
      SaTimeT_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaTimeT, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaTimeT, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SaTimeT, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SaTimeT));
  Date_descriptor_ = file->message_type(1);
  static const int Date_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Date, uint64_),
  };
  Date_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Date_descriptor_,
      Date::default_instance_,
      Date_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Date, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Date, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Date, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Date));
  IntStatistic_descriptor_ = file->message_type(2);
  static const int IntStatistic_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntStatistic, current_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntStatistic, history10sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntStatistic, history1min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntStatistic, history10min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntStatistic, history1hour_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntStatistic, history1day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntStatistic, history1week_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntStatistic, history4weeks_),
  };
  IntStatistic_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IntStatistic_descriptor_,
      IntStatistic::default_instance_,
      IntStatistic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntStatistic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntStatistic, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntStatistic, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IntStatistic));
  DecStatistic_descriptor_ = file->message_type(3);
  static const int DecStatistic_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecStatistic, current_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecStatistic, history10sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecStatistic, history1min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecStatistic, history10min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecStatistic, history1hour_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecStatistic, history1day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecStatistic, history1week_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecStatistic, history4weeks_),
  };
  DecStatistic_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DecStatistic_descriptor_,
      DecStatistic::default_instance_,
      DecStatistic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecStatistic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecStatistic, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DecStatistic, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DecStatistic));
  Failures_descriptor_ = file->message_type(4);
  static const int Failures_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Failures, intstatistic_),
  };
  Failures_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Failures_descriptor_,
      Failures::default_instance_,
      Failures_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Failures, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Failures, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Failures, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Failures));
  CpuUtilization_descriptor_ = file->message_type(5);
  static const int CpuUtilization_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuUtilization, decstatistic_),
  };
  CpuUtilization_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CpuUtilization_descriptor_,
      CpuUtilization::default_instance_,
      CpuUtilization_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuUtilization, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuUtilization, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuUtilization, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CpuUtilization));
  MemUtilization_descriptor_ = file->message_type(6);
  static const int MemUtilization_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemUtilization, decstatistic_),
  };
  MemUtilization_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MemUtilization_descriptor_,
      MemUtilization::default_instance_,
      MemUtilization_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemUtilization, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemUtilization, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemUtilization, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MemUtilization));
  PageFaults_descriptor_ = file->message_type(7);
  static const int PageFaults_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PageFaults, intstatistic_),
  };
  PageFaults_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PageFaults_descriptor_,
      PageFaults::default_instance_,
      PageFaults_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PageFaults, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PageFaults, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PageFaults, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PageFaults));
  NumThreads_descriptor_ = file->message_type(8);
  static const int NumThreads_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumThreads, intstatistic_),
  };
  NumThreads_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NumThreads_descriptor_,
      NumThreads::default_instance_,
      NumThreads_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumThreads, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumThreads, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumThreads, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NumThreads));
  ResidentMem_descriptor_ = file->message_type(9);
  static const int ResidentMem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResidentMem, intstatistic_),
  };
  ResidentMem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResidentMem_descriptor_,
      ResidentMem::default_instance_,
      ResidentMem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResidentMem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResidentMem, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResidentMem, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResidentMem));
  ProcessStats_descriptor_ = file->message_type(10);
  static const int ProcessStats_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStats, failures_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStats, cpuutilization_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStats, memutilization_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStats, pagefaults_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStats, numthreads_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStats, residentmem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStats, processstate_),
  };
  ProcessStats_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProcessStats_descriptor_,
      ProcessStats::default_instance_,
      ProcessStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStats, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStats, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStats, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProcessStats));
  EscalationPolicy_descriptor_ = file->message_type(11);
  static const int EscalationPolicy_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EscalationPolicy, maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EscalationPolicy, duration_),
  };
  EscalationPolicy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EscalationPolicy_descriptor_,
      EscalationPolicy::default_instance_,
      EscalationPolicy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EscalationPolicy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EscalationPolicy, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EscalationPolicy, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EscalationPolicy));
  Execution_descriptor_ = file->message_type(12);
  static const int Execution_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Execution, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Execution, timeout_),
  };
  Execution_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Execution_descriptor_,
      Execution::default_instance_,
      Execution_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Execution, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Execution, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Execution, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Execution));
  ServiceUnitFailureEscalationPolicy_descriptor_ = file->message_type(13);
  static const int ServiceUnitFailureEscalationPolicy_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitFailureEscalationPolicy, escalationpolicy_),
  };
  ServiceUnitFailureEscalationPolicy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceUnitFailureEscalationPolicy_descriptor_,
      ServiceUnitFailureEscalationPolicy::default_instance_,
      ServiceUnitFailureEscalationPolicy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitFailureEscalationPolicy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitFailureEscalationPolicy, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitFailureEscalationPolicy, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceUnitFailureEscalationPolicy));
  NodeConfig_descriptor_ = file->message_type(14);
  static const int NodeConfig_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeConfig, adminstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeConfig, serviceunitfailureescalationpolicy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeConfig, autorepair_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeConfig, failfastoninstantiationfailure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeConfig, failfastoncleanupfailure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeConfig, serviceunits_),
  };
  NodeConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeConfig_descriptor_,
      NodeConfig::default_instance_,
      NodeConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeConfig, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeConfig, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeConfig));
  ComponentRestart_descriptor_ = file->message_type(15);
  static const int ComponentRestart_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestart, escalationpolicy_),
  };
  ComponentRestart_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentRestart_descriptor_,
      ComponentRestart::default_instance_,
      ComponentRestart_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestart, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestart, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestart, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentRestart));
  ServiceUnitRestart_descriptor_ = file->message_type(16);
  static const int ServiceUnitRestart_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestart, escalationpolicy_),
  };
  ServiceUnitRestart_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceUnitRestart_descriptor_,
      ServiceUnitRestart::default_instance_,
      ServiceUnitRestart_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestart, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestart, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestart, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceUnitRestart));
  ServiceGroupConfig_descriptor_ = file->message_type(17);
  static const int ServiceGroupConfig_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, adminstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, autorepair_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, autoadjust_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, autoadjustinterval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, preferrednumactiveserviceunits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, preferrednumstandbyserviceunits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, preferrednumidleserviceunits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, maxactiveworkassignments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, maxstandbyworkassignments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, componentrestart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, serviceunitrestart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, serviceunits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, serviceinstances_),
  };
  ServiceGroupConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceGroupConfig_descriptor_,
      ServiceGroupConfig::default_instance_,
      ServiceGroupConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupConfig, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceGroupConfig));
  Instantiate_descriptor_ = file->message_type(18);
  static const int Instantiate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instantiate, execution_),
  };
  Instantiate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Instantiate_descriptor_,
      Instantiate::default_instance_,
      Instantiate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instantiate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instantiate, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Instantiate, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Instantiate));
  Terminate_descriptor_ = file->message_type(19);
  static const int Terminate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terminate, execution_),
  };
  Terminate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Terminate_descriptor_,
      Terminate::default_instance_,
      Terminate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terminate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terminate, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Terminate, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Terminate));
  Cleanup_descriptor_ = file->message_type(20);
  static const int Cleanup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cleanup, execution_),
  };
  Cleanup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Cleanup_descriptor_,
      Cleanup::default_instance_,
      Cleanup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cleanup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cleanup, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cleanup, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Cleanup));
  Timeouts_descriptor_ = file->message_type(21);
  static const int Timeouts_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timeouts, terminate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timeouts, quiescingcomplete_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timeouts, workremoval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timeouts, workassignment_),
  };
  Timeouts_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Timeouts_descriptor_,
      Timeouts::default_instance_,
      Timeouts_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timeouts, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timeouts, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timeouts, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Timeouts));
  ComponentConfig_descriptor_ = file->message_type(22);
  static const int ComponentConfig_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, capabilitymodel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, maxactiveassignments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, maxstandbyassignments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, commandenvironment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, instantiate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, terminate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, cleanup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, maxinstantinstantiations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, maxdelayedinstantiations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, instantiationsuccessduration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, delaybetweeninstantiation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, timeouts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, serviceunit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, recovery_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, restartable_),
  };
  ComponentConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentConfig_descriptor_,
      ComponentConfig::default_instance_,
      ComponentConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentConfig));
  Data_descriptor_ = file->message_type(23);
  static const int Data_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, val_),
  };
  Data_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Data_descriptor_,
      Data::default_instance_,
      Data_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Data));
  ComponentServiceInstanceConfig_descriptor_ = file->message_type(24);
  static const int ComponentServiceInstanceConfig_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceConfig, dependencies_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceConfig, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceConfig, serviceinstance_),
  };
  ComponentServiceInstanceConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentServiceInstanceConfig_descriptor_,
      ComponentServiceInstanceConfig::default_instance_,
      ComponentServiceInstanceConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceConfig, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceConfig, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentServiceInstanceConfig));
  ServiceInstanceConfig_descriptor_ = file->message_type(25);
  static const int ServiceInstanceConfig_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceConfig, adminstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceConfig, preferredactiveassignments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceConfig, preferredstandbyassignments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceConfig, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceConfig, componentserviceinstances_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceConfig, servicegroup_),
  };
  ServiceInstanceConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceInstanceConfig_descriptor_,
      ServiceInstanceConfig::default_instance_,
      ServiceInstanceConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceConfig, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceConfig, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceInstanceConfig));
  ServiceUnitConfig_descriptor_ = file->message_type(26);
  static const int ServiceUnitConfig_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitConfig, adminstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitConfig, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitConfig, failover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitConfig, components_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitConfig, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitConfig, servicegroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitConfig, probationtime_),
  };
  ServiceUnitConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceUnitConfig_descriptor_,
      ServiceUnitConfig::default_instance_,
      ServiceUnitConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitConfig, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitConfig, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceUnitConfig));
  User_descriptor_ = file->message_type(27);
  static const int User_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, decstatistic_),
  };
  User_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      User_descriptor_,
      User::default_instance_,
      User_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(User));
  LowPriorityUser_descriptor_ = file->message_type(28);
  static const int LowPriorityUser_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowPriorityUser, decstatistic_),
  };
  LowPriorityUser_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LowPriorityUser_descriptor_,
      LowPriorityUser::default_instance_,
      LowPriorityUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowPriorityUser, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowPriorityUser, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LowPriorityUser, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LowPriorityUser));
  IoWait_descriptor_ = file->message_type(29);
  static const int IoWait_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IoWait, decstatistic_),
  };
  IoWait_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IoWait_descriptor_,
      IoWait::default_instance_,
      IoWait_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IoWait, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IoWait, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IoWait, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IoWait));
  SysTime_descriptor_ = file->message_type(30);
  static const int SysTime_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysTime, decstatistic_),
  };
  SysTime_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SysTime_descriptor_,
      SysTime::default_instance_,
      SysTime_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysTime, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysTime, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysTime, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SysTime));
  IntTime_descriptor_ = file->message_type(31);
  static const int IntTime_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntTime, decstatistic_),
  };
  IntTime_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IntTime_descriptor_,
      IntTime::default_instance_,
      IntTime_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntTime, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntTime, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntTime, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IntTime));
  SoftIrqs_descriptor_ = file->message_type(32);
  static const int SoftIrqs_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftIrqs, decstatistic_),
  };
  SoftIrqs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SoftIrqs_descriptor_,
      SoftIrqs::default_instance_,
      SoftIrqs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftIrqs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftIrqs, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftIrqs, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SoftIrqs));
  Idle_descriptor_ = file->message_type(33);
  static const int Idle_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Idle, decstatistic_),
  };
  Idle_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Idle_descriptor_,
      Idle::default_instance_,
      Idle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Idle, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Idle, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Idle, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Idle));
  ContextSwitches_descriptor_ = file->message_type(34);
  static const int ContextSwitches_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextSwitches, intstatistic_),
  };
  ContextSwitches_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ContextSwitches_descriptor_,
      ContextSwitches::default_instance_,
      ContextSwitches_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextSwitches, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextSwitches, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ContextSwitches, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ContextSwitches));
  ProcessCount_descriptor_ = file->message_type(35);
  static const int ProcessCount_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessCount, intstatistic_),
  };
  ProcessCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProcessCount_descriptor_,
      ProcessCount::default_instance_,
      ProcessCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessCount, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessCount, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProcessCount));
  ProcessStarts_descriptor_ = file->message_type(36);
  static const int ProcessStarts_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStarts, intstatistic_),
  };
  ProcessStarts_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProcessStarts_descriptor_,
      ProcessStarts::default_instance_,
      ProcessStarts_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStarts, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStarts, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcessStarts, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProcessStarts));
  Load_descriptor_ = file->message_type(37);
  static const int Load_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, lowpriorityuser_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, iowait_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, systime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, inttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, softirqs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, idle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, contextswitches_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, processcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, processstarts_),
  };
  Load_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Load_descriptor_,
      Load::default_instance_,
      Load_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Load, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Load));
  Stats_descriptor_ = file->message_type(38);
  static const int Stats_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stats, load_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stats, uptime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stats, boottime_),
  };
  Stats_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Stats_descriptor_,
      Stats::default_instance_,
      Stats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stats, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stats, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stats, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Stats));
  NodeStatus_descriptor_ = file->message_type(39);
  static const int NodeStatus_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeStatus, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeStatus, stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeStatus, presencestate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeStatus, operstate_),
  };
  NodeStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeStatus_descriptor_,
      NodeStatus::default_instance_,
      NodeStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeStatus, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeStatus, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeStatus));
  NumAssignedServiceUnits_descriptor_ = file->message_type(40);
  static const int NumAssignedServiceUnits_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumAssignedServiceUnits, intstatistic_),
  };
  NumAssignedServiceUnits_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NumAssignedServiceUnits_descriptor_,
      NumAssignedServiceUnits::default_instance_,
      NumAssignedServiceUnits_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumAssignedServiceUnits, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumAssignedServiceUnits, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumAssignedServiceUnits, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NumAssignedServiceUnits));
  NumIdleServiceUnits_descriptor_ = file->message_type(41);
  static const int NumIdleServiceUnits_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumIdleServiceUnits, intstatistic_),
  };
  NumIdleServiceUnits_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NumIdleServiceUnits_descriptor_,
      NumIdleServiceUnits::default_instance_,
      NumIdleServiceUnits_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumIdleServiceUnits, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumIdleServiceUnits, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumIdleServiceUnits, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NumIdleServiceUnits));
  NumSpareServiceUnits_descriptor_ = file->message_type(42);
  static const int NumSpareServiceUnits_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumSpareServiceUnits, intstatistic_),
  };
  NumSpareServiceUnits_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NumSpareServiceUnits_descriptor_,
      NumSpareServiceUnits::default_instance_,
      NumSpareServiceUnits_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumSpareServiceUnits, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumSpareServiceUnits, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumSpareServiceUnits, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NumSpareServiceUnits));
  ServiceGroupStatus_descriptor_ = file->message_type(43);
  static const int ServiceGroupStatus_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupStatus, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupStatus, numassignedserviceunits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupStatus, numidleserviceunits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupStatus, numspareserviceunits_),
  };
  ServiceGroupStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceGroupStatus_descriptor_,
      ServiceGroupStatus::default_instance_,
      ServiceGroupStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupStatus, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceGroupStatus, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceGroupStatus));
  ProcStats_descriptor_ = file->message_type(44);
  static const int ProcStats_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcStats, processstats_),
  };
  ProcStats_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProcStats_descriptor_,
      ProcStats::default_instance_,
      ProcStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcStats, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcStats, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProcStats, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProcStats));
  ActiveAssignments_descriptor_ = file->message_type(45);
  static const int ActiveAssignments_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveAssignments, intstatistic_),
  };
  ActiveAssignments_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActiveAssignments_descriptor_,
      ActiveAssignments::default_instance_,
      ActiveAssignments_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveAssignments, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveAssignments, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveAssignments, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActiveAssignments));
  StandbyAssignments_descriptor_ = file->message_type(46);
  static const int StandbyAssignments_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StandbyAssignments, intstatistic_),
  };
  StandbyAssignments_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StandbyAssignments_descriptor_,
      StandbyAssignments::default_instance_,
      StandbyAssignments_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StandbyAssignments, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StandbyAssignments, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StandbyAssignments, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StandbyAssignments));
  RestartCount_descriptor_ = file->message_type(47);
  static const int RestartCount_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestartCount, intstatistic_),
  };
  RestartCount_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RestartCount_descriptor_,
      RestartCount::default_instance_,
      RestartCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestartCount, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestartCount, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RestartCount, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RestartCount));
  ComponentStatus_descriptor_ = file->message_type(48);
  static const int ComponentStatus_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, procstats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, presencestate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, activeassignments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, standbyassignments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, assignedwork_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, operstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, readinessstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, hareadinessstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, hastate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, safversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, compcategory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, swbundle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, numinstantiationattempts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, lastinstantiation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, restartcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, processid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, lasterror_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, pendingoperation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, pendingoperationexpiration_),
  };
  ComponentStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentStatus_descriptor_,
      ComponentStatus::default_instance_,
      ComponentStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentStatus, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentStatus));
  ComponentServiceInstanceStatus_descriptor_ = file->message_type(49);
  static const int ComponentServiceInstanceStatus_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceStatus, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceStatus, standbycomponents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceStatus, activecomponents_),
  };
  ComponentServiceInstanceStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentServiceInstanceStatus_descriptor_,
      ComponentServiceInstanceStatus::default_instance_,
      ComponentServiceInstanceStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceStatus, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentServiceInstanceStatus, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentServiceInstanceStatus));
  NumActiveAssignments_descriptor_ = file->message_type(50);
  static const int NumActiveAssignments_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumActiveAssignments, intstatistic_),
  };
  NumActiveAssignments_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NumActiveAssignments_descriptor_,
      NumActiveAssignments::default_instance_,
      NumActiveAssignments_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumActiveAssignments, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumActiveAssignments, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumActiveAssignments, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NumActiveAssignments));
  NumStandbyAssignments_descriptor_ = file->message_type(51);
  static const int NumStandbyAssignments_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumStandbyAssignments, intstatistic_),
  };
  NumStandbyAssignments_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NumStandbyAssignments_descriptor_,
      NumStandbyAssignments::default_instance_,
      NumStandbyAssignments_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumStandbyAssignments, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumStandbyAssignments, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumStandbyAssignments, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NumStandbyAssignments));
  ServiceInstanceStatus_descriptor_ = file->message_type(52);
  static const int ServiceInstanceStatus_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceStatus, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceStatus, assignmentstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceStatus, activeassignments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceStatus, standbyassignments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceStatus, numactiveassignments_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceStatus, numstandbyassignments_),
  };
  ServiceInstanceStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceInstanceStatus_descriptor_,
      ServiceInstanceStatus::default_instance_,
      ServiceInstanceStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceStatus, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceInstanceStatus, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceInstanceStatus));
  NumActiveServiceInstances_descriptor_ = file->message_type(53);
  static const int NumActiveServiceInstances_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumActiveServiceInstances, intstatistic_),
  };
  NumActiveServiceInstances_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NumActiveServiceInstances_descriptor_,
      NumActiveServiceInstances::default_instance_,
      NumActiveServiceInstances_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumActiveServiceInstances, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumActiveServiceInstances, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumActiveServiceInstances, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NumActiveServiceInstances));
  NumStandbyServiceInstances_descriptor_ = file->message_type(54);
  static const int NumStandbyServiceInstances_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumStandbyServiceInstances, intstatistic_),
  };
  NumStandbyServiceInstances_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NumStandbyServiceInstances_descriptor_,
      NumStandbyServiceInstances::default_instance_,
      NumStandbyServiceInstances_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumStandbyServiceInstances, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumStandbyServiceInstances, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NumStandbyServiceInstances, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NumStandbyServiceInstances));
  ServiceUnitStatus_descriptor_ = file->message_type(55);
  static const int ServiceUnitStatus_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, preinstantiable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, presencestate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, readinessstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, hareadinessstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, hastate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, operstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, assignedserviceinstances_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, numactiveserviceinstances_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, numstandbyserviceinstances_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, restartcount_),
  };
  ServiceUnitStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceUnitStatus_descriptor_,
      ServiceUnitStatus::default_instance_,
      ServiceUnitStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitStatus, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceUnitStatus));
  InitializeRequest_descriptor_ = file->message_type(56);
  static const int InitializeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitializeRequest, amfmgmthandle_),
  };
  InitializeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InitializeRequest_descriptor_,
      InitializeRequest::default_instance_,
      InitializeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitializeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitializeRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitializeRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InitializeRequest));
  InitializeResponse_descriptor_ = file->message_type(57);
  static const int InitializeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitializeResponse, err_),
  };
  InitializeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InitializeResponse_descriptor_,
      InitializeResponse::default_instance_,
      InitializeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitializeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitializeResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitializeResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InitializeResponse));
  FinalizeRequest_descriptor_ = file->message_type(58);
  static const int FinalizeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalizeRequest, amfmgmthandle_),
  };
  FinalizeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FinalizeRequest_descriptor_,
      FinalizeRequest::default_instance_,
      FinalizeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalizeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalizeRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalizeRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FinalizeRequest));
  FinalizeResponse_descriptor_ = file->message_type(59);
  static const int FinalizeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalizeResponse, err_),
  };
  FinalizeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FinalizeResponse_descriptor_,
      FinalizeResponse::default_instance_,
      FinalizeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalizeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalizeResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinalizeResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FinalizeResponse));
  CommitRequest_descriptor_ = file->message_type(60);
  static const int CommitRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitRequest, amfmgmthandle_),
  };
  CommitRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CommitRequest_descriptor_,
      CommitRequest::default_instance_,
      CommitRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CommitRequest));
  CommitResponse_descriptor_ = file->message_type(61);
  static const int CommitResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitResponse, err_),
  };
  CommitResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CommitResponse_descriptor_,
      CommitResponse::default_instance_,
      CommitResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommitResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CommitResponse));
  CreateComponentRequest_descriptor_ = file->message_type(62);
  static const int CreateComponentRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateComponentRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateComponentRequest, componentconfig_),
  };
  CreateComponentRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateComponentRequest_descriptor_,
      CreateComponentRequest::default_instance_,
      CreateComponentRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateComponentRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateComponentRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateComponentRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateComponentRequest));
  CreateComponentResponse_descriptor_ = file->message_type(63);
  static const int CreateComponentResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateComponentResponse, err_),
  };
  CreateComponentResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateComponentResponse_descriptor_,
      CreateComponentResponse::default_instance_,
      CreateComponentResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateComponentResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateComponentResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateComponentResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateComponentResponse));
  UpdateComponentRequest_descriptor_ = file->message_type(64);
  static const int UpdateComponentRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateComponentRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateComponentRequest, componentconfig_),
  };
  UpdateComponentRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateComponentRequest_descriptor_,
      UpdateComponentRequest::default_instance_,
      UpdateComponentRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateComponentRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateComponentRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateComponentRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateComponentRequest));
  UpdateComponentResponse_descriptor_ = file->message_type(65);
  static const int UpdateComponentResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateComponentResponse, err_),
  };
  UpdateComponentResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateComponentResponse_descriptor_,
      UpdateComponentResponse::default_instance_,
      UpdateComponentResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateComponentResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateComponentResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateComponentResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateComponentResponse));
  DeleteComponentRequest_descriptor_ = file->message_type(66);
  static const int DeleteComponentRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteComponentRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteComponentRequest, name_),
  };
  DeleteComponentRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteComponentRequest_descriptor_,
      DeleteComponentRequest::default_instance_,
      DeleteComponentRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteComponentRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteComponentRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteComponentRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteComponentRequest));
  DeleteComponentResponse_descriptor_ = file->message_type(67);
  static const int DeleteComponentResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteComponentResponse, err_),
  };
  DeleteComponentResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteComponentResponse_descriptor_,
      DeleteComponentResponse::default_instance_,
      DeleteComponentResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteComponentResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteComponentResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteComponentResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteComponentResponse));
  CreateSGRequest_descriptor_ = file->message_type(68);
  static const int CreateSGRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSGRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSGRequest, servicegroupconfig_),
  };
  CreateSGRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateSGRequest_descriptor_,
      CreateSGRequest::default_instance_,
      CreateSGRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSGRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSGRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSGRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateSGRequest));
  CreateSGResponse_descriptor_ = file->message_type(69);
  static const int CreateSGResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSGResponse, err_),
  };
  CreateSGResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateSGResponse_descriptor_,
      CreateSGResponse::default_instance_,
      CreateSGResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSGResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSGResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSGResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateSGResponse));
  UpdateSGRequest_descriptor_ = file->message_type(70);
  static const int UpdateSGRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSGRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSGRequest, servicegroupconfig_),
  };
  UpdateSGRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateSGRequest_descriptor_,
      UpdateSGRequest::default_instance_,
      UpdateSGRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSGRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSGRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSGRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateSGRequest));
  UpdateSGResponse_descriptor_ = file->message_type(71);
  static const int UpdateSGResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSGResponse, err_),
  };
  UpdateSGResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateSGResponse_descriptor_,
      UpdateSGResponse::default_instance_,
      UpdateSGResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSGResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSGResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSGResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateSGResponse));
  DeleteSGRequest_descriptor_ = file->message_type(72);
  static const int DeleteSGRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGRequest, name_),
  };
  DeleteSGRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSGRequest_descriptor_,
      DeleteSGRequest::default_instance_,
      DeleteSGRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSGRequest));
  DeleteSGResponse_descriptor_ = file->message_type(73);
  static const int DeleteSGResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGResponse, err_),
  };
  DeleteSGResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSGResponse_descriptor_,
      DeleteSGResponse::default_instance_,
      DeleteSGResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSGResponse));
  CreateNodeRequest_descriptor_ = file->message_type(74);
  static const int CreateNodeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNodeRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNodeRequest, nodeconfig_),
  };
  CreateNodeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateNodeRequest_descriptor_,
      CreateNodeRequest::default_instance_,
      CreateNodeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNodeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNodeRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNodeRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateNodeRequest));
  CreateNodeResponse_descriptor_ = file->message_type(75);
  static const int CreateNodeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNodeResponse, err_),
  };
  CreateNodeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateNodeResponse_descriptor_,
      CreateNodeResponse::default_instance_,
      CreateNodeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNodeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNodeResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNodeResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateNodeResponse));
  UpdateNodeRequest_descriptor_ = file->message_type(76);
  static const int UpdateNodeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateNodeRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateNodeRequest, nodeconfig_),
  };
  UpdateNodeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateNodeRequest_descriptor_,
      UpdateNodeRequest::default_instance_,
      UpdateNodeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateNodeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateNodeRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateNodeRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateNodeRequest));
  UpdateNodeResponse_descriptor_ = file->message_type(77);
  static const int UpdateNodeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateNodeResponse, err_),
  };
  UpdateNodeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateNodeResponse_descriptor_,
      UpdateNodeResponse::default_instance_,
      UpdateNodeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateNodeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateNodeResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateNodeResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateNodeResponse));
  DeleteNodeRequest_descriptor_ = file->message_type(78);
  static const int DeleteNodeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeRequest, name_),
  };
  DeleteNodeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteNodeRequest_descriptor_,
      DeleteNodeRequest::default_instance_,
      DeleteNodeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteNodeRequest));
  DeleteNodeResponse_descriptor_ = file->message_type(79);
  static const int DeleteNodeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeResponse, err_),
  };
  DeleteNodeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteNodeResponse_descriptor_,
      DeleteNodeResponse::default_instance_,
      DeleteNodeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteNodeResponse));
  CreateSURequest_descriptor_ = file->message_type(80);
  static const int CreateSURequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSURequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSURequest, serviceunitconfig_),
  };
  CreateSURequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateSURequest_descriptor_,
      CreateSURequest::default_instance_,
      CreateSURequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSURequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSURequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSURequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateSURequest));
  CreateSUResponse_descriptor_ = file->message_type(81);
  static const int CreateSUResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSUResponse, err_),
  };
  CreateSUResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateSUResponse_descriptor_,
      CreateSUResponse::default_instance_,
      CreateSUResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSUResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSUResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSUResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateSUResponse));
  UpdateSURequest_descriptor_ = file->message_type(82);
  static const int UpdateSURequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSURequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSURequest, serviceunitconfig_),
  };
  UpdateSURequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateSURequest_descriptor_,
      UpdateSURequest::default_instance_,
      UpdateSURequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSURequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSURequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSURequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateSURequest));
  UpdateSUResponse_descriptor_ = file->message_type(83);
  static const int UpdateSUResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSUResponse, err_),
  };
  UpdateSUResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateSUResponse_descriptor_,
      UpdateSUResponse::default_instance_,
      UpdateSUResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSUResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSUResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSUResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateSUResponse));
  DeleteSURequest_descriptor_ = file->message_type(84);
  static const int DeleteSURequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSURequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSURequest, name_),
  };
  DeleteSURequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSURequest_descriptor_,
      DeleteSURequest::default_instance_,
      DeleteSURequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSURequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSURequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSURequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSURequest));
  DeleteSUResponse_descriptor_ = file->message_type(85);
  static const int DeleteSUResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUResponse, err_),
  };
  DeleteSUResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSUResponse_descriptor_,
      DeleteSUResponse::default_instance_,
      DeleteSUResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSUResponse));
  CreateSIRequest_descriptor_ = file->message_type(86);
  static const int CreateSIRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSIRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSIRequest, serviceinstanceconfig_),
  };
  CreateSIRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateSIRequest_descriptor_,
      CreateSIRequest::default_instance_,
      CreateSIRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSIRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSIRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSIRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateSIRequest));
  CreateSIResponse_descriptor_ = file->message_type(87);
  static const int CreateSIResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSIResponse, err_),
  };
  CreateSIResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateSIResponse_descriptor_,
      CreateSIResponse::default_instance_,
      CreateSIResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSIResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSIResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateSIResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateSIResponse));
  UpdateSIRequest_descriptor_ = file->message_type(88);
  static const int UpdateSIRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSIRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSIRequest, serviceinstanceconfig_),
  };
  UpdateSIRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateSIRequest_descriptor_,
      UpdateSIRequest::default_instance_,
      UpdateSIRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSIRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSIRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSIRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateSIRequest));
  UpdateSIResponse_descriptor_ = file->message_type(89);
  static const int UpdateSIResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSIResponse, err_),
  };
  UpdateSIResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateSIResponse_descriptor_,
      UpdateSIResponse::default_instance_,
      UpdateSIResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSIResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSIResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSIResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateSIResponse));
  DeleteSIRequest_descriptor_ = file->message_type(90);
  static const int DeleteSIRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSIRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSIRequest, name_),
  };
  DeleteSIRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSIRequest_descriptor_,
      DeleteSIRequest::default_instance_,
      DeleteSIRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSIRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSIRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSIRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSIRequest));
  DeleteSIResponse_descriptor_ = file->message_type(91);
  static const int DeleteSIResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSIResponse, err_),
  };
  DeleteSIResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSIResponse_descriptor_,
      DeleteSIResponse::default_instance_,
      DeleteSIResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSIResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSIResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSIResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSIResponse));
  CreateCSIRequest_descriptor_ = file->message_type(92);
  static const int CreateCSIRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCSIRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCSIRequest, componentserviceinstanceconfig_),
  };
  CreateCSIRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateCSIRequest_descriptor_,
      CreateCSIRequest::default_instance_,
      CreateCSIRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCSIRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCSIRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCSIRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateCSIRequest));
  CreateCSIResponse_descriptor_ = file->message_type(93);
  static const int CreateCSIResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCSIResponse, err_),
  };
  CreateCSIResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreateCSIResponse_descriptor_,
      CreateCSIResponse::default_instance_,
      CreateCSIResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCSIResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCSIResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateCSIResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreateCSIResponse));
  UpdateCSIRequest_descriptor_ = file->message_type(94);
  static const int UpdateCSIRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCSIRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCSIRequest, componentserviceinstanceconfig_),
  };
  UpdateCSIRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateCSIRequest_descriptor_,
      UpdateCSIRequest::default_instance_,
      UpdateCSIRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCSIRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCSIRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCSIRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateCSIRequest));
  UpdateCSIResponse_descriptor_ = file->message_type(95);
  static const int UpdateCSIResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCSIResponse, err_),
  };
  UpdateCSIResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateCSIResponse_descriptor_,
      UpdateCSIResponse::default_instance_,
      UpdateCSIResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCSIResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCSIResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCSIResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateCSIResponse));
  DeleteCSIRequest_descriptor_ = file->message_type(96);
  static const int DeleteCSIRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSIRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSIRequest, name_),
  };
  DeleteCSIRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteCSIRequest_descriptor_,
      DeleteCSIRequest::default_instance_,
      DeleteCSIRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSIRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSIRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSIRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteCSIRequest));
  DeleteCSIResponse_descriptor_ = file->message_type(97);
  static const int DeleteCSIResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSIResponse, err_),
  };
  DeleteCSIResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteCSIResponse_descriptor_,
      DeleteCSIResponse::default_instance_,
      DeleteCSIResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSIResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSIResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSIResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteCSIResponse));
  DeleteCSINVPRequest_descriptor_ = file->message_type(98);
  static const int DeleteCSINVPRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSINVPRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSINVPRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSINVPRequest, data_),
  };
  DeleteCSINVPRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteCSINVPRequest_descriptor_,
      DeleteCSINVPRequest::default_instance_,
      DeleteCSINVPRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSINVPRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSINVPRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSINVPRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteCSINVPRequest));
  DeleteCSINVPResponse_descriptor_ = file->message_type(99);
  static const int DeleteCSINVPResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSINVPResponse, err_),
  };
  DeleteCSINVPResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteCSINVPResponse_descriptor_,
      DeleteCSINVPResponse::default_instance_,
      DeleteCSINVPResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSINVPResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSINVPResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteCSINVPResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteCSINVPResponse));
  DeleteNodeSUListRequest_descriptor_ = file->message_type(100);
  static const int DeleteNodeSUListRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeSUListRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeSUListRequest, nodename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeSUListRequest, sulist_),
  };
  DeleteNodeSUListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteNodeSUListRequest_descriptor_,
      DeleteNodeSUListRequest::default_instance_,
      DeleteNodeSUListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeSUListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeSUListRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeSUListRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteNodeSUListRequest));
  DeleteNodeSUListResponse_descriptor_ = file->message_type(101);
  static const int DeleteNodeSUListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeSUListResponse, err_),
  };
  DeleteNodeSUListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteNodeSUListResponse_descriptor_,
      DeleteNodeSUListResponse::default_instance_,
      DeleteNodeSUListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeSUListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeSUListResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteNodeSUListResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteNodeSUListResponse));
  DeleteSGSUListRequest_descriptor_ = file->message_type(102);
  static const int DeleteSGSUListRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSUListRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSUListRequest, sgname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSUListRequest, sulist_),
  };
  DeleteSGSUListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSGSUListRequest_descriptor_,
      DeleteSGSUListRequest::default_instance_,
      DeleteSGSUListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSUListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSUListRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSUListRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSGSUListRequest));
  DeleteSGSUListResponse_descriptor_ = file->message_type(103);
  static const int DeleteSGSUListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSUListResponse, err_),
  };
  DeleteSGSUListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSGSUListResponse_descriptor_,
      DeleteSGSUListResponse::default_instance_,
      DeleteSGSUListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSUListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSUListResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSUListResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSGSUListResponse));
  DeleteSGSIListRequest_descriptor_ = file->message_type(104);
  static const int DeleteSGSIListRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSIListRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSIListRequest, sgname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSIListRequest, silist_),
  };
  DeleteSGSIListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSGSIListRequest_descriptor_,
      DeleteSGSIListRequest::default_instance_,
      DeleteSGSIListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSIListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSIListRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSIListRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSGSIListRequest));
  DeleteSGSIListResponse_descriptor_ = file->message_type(105);
  static const int DeleteSGSIListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSIListResponse, err_),
  };
  DeleteSGSIListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSGSIListResponse_descriptor_,
      DeleteSGSIListResponse::default_instance_,
      DeleteSGSIListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSIListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSIListResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSGSIListResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSGSIListResponse));
  DeleteSUCompListRequest_descriptor_ = file->message_type(106);
  static const int DeleteSUCompListRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUCompListRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUCompListRequest, suname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUCompListRequest, complist_),
  };
  DeleteSUCompListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSUCompListRequest_descriptor_,
      DeleteSUCompListRequest::default_instance_,
      DeleteSUCompListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUCompListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUCompListRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUCompListRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSUCompListRequest));
  DeleteSUCompListResponse_descriptor_ = file->message_type(107);
  static const int DeleteSUCompListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUCompListResponse, err_),
  };
  DeleteSUCompListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSUCompListResponse_descriptor_,
      DeleteSUCompListResponse::default_instance_,
      DeleteSUCompListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUCompListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUCompListResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSUCompListResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSUCompListResponse));
  DeleteSICSIListRequest_descriptor_ = file->message_type(108);
  static const int DeleteSICSIListRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSICSIListRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSICSIListRequest, siname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSICSIListRequest, csilist_),
  };
  DeleteSICSIListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSICSIListRequest_descriptor_,
      DeleteSICSIListRequest::default_instance_,
      DeleteSICSIListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSICSIListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSICSIListRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSICSIListRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSICSIListRequest));
  DeleteSICSIListResponse_descriptor_ = file->message_type(109);
  static const int DeleteSICSIListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSICSIListResponse, err_),
  };
  DeleteSICSIListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteSICSIListResponse_descriptor_,
      DeleteSICSIListResponse::default_instance_,
      DeleteSICSIListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSICSIListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSICSIListResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteSICSIListResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteSICSIListResponse));
  LockNodeAssignmentRequest_descriptor_ = file->message_type(110);
  static const int LockNodeAssignmentRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeAssignmentRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeAssignmentRequest, nodename_),
  };
  LockNodeAssignmentRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockNodeAssignmentRequest_descriptor_,
      LockNodeAssignmentRequest::default_instance_,
      LockNodeAssignmentRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeAssignmentRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeAssignmentRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeAssignmentRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockNodeAssignmentRequest));
  LockNodeAssignmentResponse_descriptor_ = file->message_type(111);
  static const int LockNodeAssignmentResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeAssignmentResponse, err_),
  };
  LockNodeAssignmentResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockNodeAssignmentResponse_descriptor_,
      LockNodeAssignmentResponse::default_instance_,
      LockNodeAssignmentResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeAssignmentResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeAssignmentResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeAssignmentResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockNodeAssignmentResponse));
  LockSGAssignmentRequest_descriptor_ = file->message_type(112);
  static const int LockSGAssignmentRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGAssignmentRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGAssignmentRequest, sgname_),
  };
  LockSGAssignmentRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockSGAssignmentRequest_descriptor_,
      LockSGAssignmentRequest::default_instance_,
      LockSGAssignmentRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGAssignmentRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGAssignmentRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGAssignmentRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockSGAssignmentRequest));
  LockSGAssignmentResponse_descriptor_ = file->message_type(113);
  static const int LockSGAssignmentResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGAssignmentResponse, err_),
  };
  LockSGAssignmentResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockSGAssignmentResponse_descriptor_,
      LockSGAssignmentResponse::default_instance_,
      LockSGAssignmentResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGAssignmentResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGAssignmentResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGAssignmentResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockSGAssignmentResponse));
  LockSUAssignmentRequest_descriptor_ = file->message_type(114);
  static const int LockSUAssignmentRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUAssignmentRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUAssignmentRequest, suname_),
  };
  LockSUAssignmentRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockSUAssignmentRequest_descriptor_,
      LockSUAssignmentRequest::default_instance_,
      LockSUAssignmentRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUAssignmentRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUAssignmentRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUAssignmentRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockSUAssignmentRequest));
  LockSUAssignmentResponse_descriptor_ = file->message_type(115);
  static const int LockSUAssignmentResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUAssignmentResponse, err_),
  };
  LockSUAssignmentResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockSUAssignmentResponse_descriptor_,
      LockSUAssignmentResponse::default_instance_,
      LockSUAssignmentResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUAssignmentResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUAssignmentResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUAssignmentResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockSUAssignmentResponse));
  LockSIAssignmentRequest_descriptor_ = file->message_type(116);
  static const int LockSIAssignmentRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSIAssignmentRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSIAssignmentRequest, siname_),
  };
  LockSIAssignmentRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockSIAssignmentRequest_descriptor_,
      LockSIAssignmentRequest::default_instance_,
      LockSIAssignmentRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSIAssignmentRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSIAssignmentRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSIAssignmentRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockSIAssignmentRequest));
  LockSIAssignmentResponse_descriptor_ = file->message_type(117);
  static const int LockSIAssignmentResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSIAssignmentResponse, err_),
  };
  LockSIAssignmentResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockSIAssignmentResponse_descriptor_,
      LockSIAssignmentResponse::default_instance_,
      LockSIAssignmentResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSIAssignmentResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSIAssignmentResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSIAssignmentResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockSIAssignmentResponse));
  LockNodeInstantiationRequest_descriptor_ = file->message_type(118);
  static const int LockNodeInstantiationRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeInstantiationRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeInstantiationRequest, nodename_),
  };
  LockNodeInstantiationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockNodeInstantiationRequest_descriptor_,
      LockNodeInstantiationRequest::default_instance_,
      LockNodeInstantiationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeInstantiationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeInstantiationRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeInstantiationRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockNodeInstantiationRequest));
  LockNodeInstantiationResponse_descriptor_ = file->message_type(119);
  static const int LockNodeInstantiationResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeInstantiationResponse, err_),
  };
  LockNodeInstantiationResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockNodeInstantiationResponse_descriptor_,
      LockNodeInstantiationResponse::default_instance_,
      LockNodeInstantiationResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeInstantiationResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeInstantiationResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockNodeInstantiationResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockNodeInstantiationResponse));
  LockSGInstantiationRequest_descriptor_ = file->message_type(120);
  static const int LockSGInstantiationRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGInstantiationRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGInstantiationRequest, sgname_),
  };
  LockSGInstantiationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockSGInstantiationRequest_descriptor_,
      LockSGInstantiationRequest::default_instance_,
      LockSGInstantiationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGInstantiationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGInstantiationRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGInstantiationRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockSGInstantiationRequest));
  LockSGInstantiationResponse_descriptor_ = file->message_type(121);
  static const int LockSGInstantiationResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGInstantiationResponse, err_),
  };
  LockSGInstantiationResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockSGInstantiationResponse_descriptor_,
      LockSGInstantiationResponse::default_instance_,
      LockSGInstantiationResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGInstantiationResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGInstantiationResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSGInstantiationResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockSGInstantiationResponse));
  LockSUInstantiationRequest_descriptor_ = file->message_type(122);
  static const int LockSUInstantiationRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUInstantiationRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUInstantiationRequest, suname_),
  };
  LockSUInstantiationRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockSUInstantiationRequest_descriptor_,
      LockSUInstantiationRequest::default_instance_,
      LockSUInstantiationRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUInstantiationRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUInstantiationRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUInstantiationRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockSUInstantiationRequest));
  LockSUInstantiationResponse_descriptor_ = file->message_type(123);
  static const int LockSUInstantiationResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUInstantiationResponse, err_),
  };
  LockSUInstantiationResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LockSUInstantiationResponse_descriptor_,
      LockSUInstantiationResponse::default_instance_,
      LockSUInstantiationResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUInstantiationResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUInstantiationResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockSUInstantiationResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LockSUInstantiationResponse));
  UnlockNodeRequest_descriptor_ = file->message_type(124);
  static const int UnlockNodeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockNodeRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockNodeRequest, nodename_),
  };
  UnlockNodeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnlockNodeRequest_descriptor_,
      UnlockNodeRequest::default_instance_,
      UnlockNodeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockNodeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockNodeRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockNodeRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnlockNodeRequest));
  UnlockNodeResponse_descriptor_ = file->message_type(125);
  static const int UnlockNodeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockNodeResponse, err_),
  };
  UnlockNodeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnlockNodeResponse_descriptor_,
      UnlockNodeResponse::default_instance_,
      UnlockNodeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockNodeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockNodeResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockNodeResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnlockNodeResponse));
  UnlockSGRequest_descriptor_ = file->message_type(126);
  static const int UnlockSGRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSGRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSGRequest, sgname_),
  };
  UnlockSGRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnlockSGRequest_descriptor_,
      UnlockSGRequest::default_instance_,
      UnlockSGRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSGRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSGRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSGRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnlockSGRequest));
  UnlockSGResponse_descriptor_ = file->message_type(127);
  static const int UnlockSGResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSGResponse, err_),
  };
  UnlockSGResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnlockSGResponse_descriptor_,
      UnlockSGResponse::default_instance_,
      UnlockSGResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSGResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSGResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSGResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnlockSGResponse));
  UnlockSURequest_descriptor_ = file->message_type(128);
  static const int UnlockSURequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSURequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSURequest, suname_),
  };
  UnlockSURequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnlockSURequest_descriptor_,
      UnlockSURequest::default_instance_,
      UnlockSURequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSURequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSURequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSURequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnlockSURequest));
  UnlockSUResponse_descriptor_ = file->message_type(129);
  static const int UnlockSUResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSUResponse, err_),
  };
  UnlockSUResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnlockSUResponse_descriptor_,
      UnlockSUResponse::default_instance_,
      UnlockSUResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSUResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSUResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSUResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnlockSUResponse));
  UnlockSIRequest_descriptor_ = file->message_type(130);
  static const int UnlockSIRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSIRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSIRequest, siname_),
  };
  UnlockSIRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnlockSIRequest_descriptor_,
      UnlockSIRequest::default_instance_,
      UnlockSIRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSIRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSIRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSIRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnlockSIRequest));
  UnlockSIResponse_descriptor_ = file->message_type(131);
  static const int UnlockSIResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSIResponse, err_),
  };
  UnlockSIResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnlockSIResponse_descriptor_,
      UnlockSIResponse::default_instance_,
      UnlockSIResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSIResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSIResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockSIResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnlockSIResponse));
  RepairNodeRequest_descriptor_ = file->message_type(132);
  static const int RepairNodeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairNodeRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairNodeRequest, nodename_),
  };
  RepairNodeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RepairNodeRequest_descriptor_,
      RepairNodeRequest::default_instance_,
      RepairNodeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairNodeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairNodeRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairNodeRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RepairNodeRequest));
  RepairNodeResponse_descriptor_ = file->message_type(133);
  static const int RepairNodeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairNodeResponse, err_),
  };
  RepairNodeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RepairNodeResponse_descriptor_,
      RepairNodeResponse::default_instance_,
      RepairNodeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairNodeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairNodeResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairNodeResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RepairNodeResponse));
  RepairComponentRequest_descriptor_ = file->message_type(134);
  static const int RepairComponentRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairComponentRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairComponentRequest, compname_),
  };
  RepairComponentRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RepairComponentRequest_descriptor_,
      RepairComponentRequest::default_instance_,
      RepairComponentRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairComponentRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairComponentRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairComponentRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RepairComponentRequest));
  RepairComponentResponse_descriptor_ = file->message_type(135);
  static const int RepairComponentResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairComponentResponse, err_),
  };
  RepairComponentResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RepairComponentResponse_descriptor_,
      RepairComponentResponse::default_instance_,
      RepairComponentResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairComponentResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairComponentResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairComponentResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RepairComponentResponse));
  RepairSURequest_descriptor_ = file->message_type(136);
  static const int RepairSURequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairSURequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairSURequest, suname_),
  };
  RepairSURequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RepairSURequest_descriptor_,
      RepairSURequest::default_instance_,
      RepairSURequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairSURequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairSURequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairSURequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RepairSURequest));
  RepairSUResponse_descriptor_ = file->message_type(137);
  static const int RepairSUResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairSUResponse, err_),
  };
  RepairSUResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RepairSUResponse_descriptor_,
      RepairSUResponse::default_instance_,
      RepairSUResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairSUResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairSUResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RepairSUResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RepairSUResponse));
  GetComponentConfigRequest_descriptor_ = file->message_type(138);
  static const int GetComponentConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentConfigRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentConfigRequest, compname_),
  };
  GetComponentConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetComponentConfigRequest_descriptor_,
      GetComponentConfigRequest::default_instance_,
      GetComponentConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentConfigRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentConfigRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetComponentConfigRequest));
  GetComponentConfigResponse_descriptor_ = file->message_type(139);
  static const int GetComponentConfigResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentConfigResponse, componentconfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentConfigResponse, err_),
  };
  GetComponentConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetComponentConfigResponse_descriptor_,
      GetComponentConfigResponse::default_instance_,
      GetComponentConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentConfigResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentConfigResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetComponentConfigResponse));
  GetNodeConfigRequest_descriptor_ = file->message_type(140);
  static const int GetNodeConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeConfigRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeConfigRequest, nodename_),
  };
  GetNodeConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNodeConfigRequest_descriptor_,
      GetNodeConfigRequest::default_instance_,
      GetNodeConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeConfigRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeConfigRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNodeConfigRequest));
  GetNodeConfigResponse_descriptor_ = file->message_type(141);
  static const int GetNodeConfigResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeConfigResponse, nodeconfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeConfigResponse, err_),
  };
  GetNodeConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNodeConfigResponse_descriptor_,
      GetNodeConfigResponse::default_instance_,
      GetNodeConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeConfigResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeConfigResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNodeConfigResponse));
  GetSUConfigRequest_descriptor_ = file->message_type(142);
  static const int GetSUConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUConfigRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUConfigRequest, suname_),
  };
  GetSUConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSUConfigRequest_descriptor_,
      GetSUConfigRequest::default_instance_,
      GetSUConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUConfigRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUConfigRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSUConfigRequest));
  GetSUConfigResponse_descriptor_ = file->message_type(143);
  static const int GetSUConfigResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUConfigResponse, serviceunitconfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUConfigResponse, err_),
  };
  GetSUConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSUConfigResponse_descriptor_,
      GetSUConfigResponse::default_instance_,
      GetSUConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUConfigResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUConfigResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSUConfigResponse));
  GetSGConfigRequest_descriptor_ = file->message_type(144);
  static const int GetSGConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGConfigRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGConfigRequest, sgname_),
  };
  GetSGConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSGConfigRequest_descriptor_,
      GetSGConfigRequest::default_instance_,
      GetSGConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGConfigRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGConfigRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSGConfigRequest));
  GetSGConfigResponse_descriptor_ = file->message_type(145);
  static const int GetSGConfigResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGConfigResponse, servicegroupconfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGConfigResponse, err_),
  };
  GetSGConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSGConfigResponse_descriptor_,
      GetSGConfigResponse::default_instance_,
      GetSGConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGConfigResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGConfigResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSGConfigResponse));
  GetSIConfigRequest_descriptor_ = file->message_type(146);
  static const int GetSIConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIConfigRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIConfigRequest, siname_),
  };
  GetSIConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSIConfigRequest_descriptor_,
      GetSIConfigRequest::default_instance_,
      GetSIConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIConfigRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIConfigRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSIConfigRequest));
  GetSIConfigResponse_descriptor_ = file->message_type(147);
  static const int GetSIConfigResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIConfigResponse, serviceinstanceconfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIConfigResponse, err_),
  };
  GetSIConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSIConfigResponse_descriptor_,
      GetSIConfigResponse::default_instance_,
      GetSIConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIConfigResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIConfigResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSIConfigResponse));
  GetCSIConfigRequest_descriptor_ = file->message_type(148);
  static const int GetCSIConfigRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIConfigRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIConfigRequest, csiname_),
  };
  GetCSIConfigRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetCSIConfigRequest_descriptor_,
      GetCSIConfigRequest::default_instance_,
      GetCSIConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIConfigRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIConfigRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIConfigRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetCSIConfigRequest));
  GetCSIConfigResponse_descriptor_ = file->message_type(149);
  static const int GetCSIConfigResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIConfigResponse, componentserviceinstanceconfig_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIConfigResponse, err_),
  };
  GetCSIConfigResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetCSIConfigResponse_descriptor_,
      GetCSIConfigResponse::default_instance_,
      GetCSIConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIConfigResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIConfigResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIConfigResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetCSIConfigResponse));
  GetComponentStatusRequest_descriptor_ = file->message_type(150);
  static const int GetComponentStatusRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentStatusRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentStatusRequest, compname_),
  };
  GetComponentStatusRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetComponentStatusRequest_descriptor_,
      GetComponentStatusRequest::default_instance_,
      GetComponentStatusRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentStatusRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentStatusRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentStatusRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetComponentStatusRequest));
  GetComponentStatusResponse_descriptor_ = file->message_type(151);
  static const int GetComponentStatusResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentStatusResponse, componentstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentStatusResponse, err_),
  };
  GetComponentStatusResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetComponentStatusResponse_descriptor_,
      GetComponentStatusResponse::default_instance_,
      GetComponentStatusResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentStatusResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentStatusResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetComponentStatusResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetComponentStatusResponse));
  GetNodeStatusRequest_descriptor_ = file->message_type(152);
  static const int GetNodeStatusRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeStatusRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeStatusRequest, nodename_),
  };
  GetNodeStatusRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNodeStatusRequest_descriptor_,
      GetNodeStatusRequest::default_instance_,
      GetNodeStatusRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeStatusRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeStatusRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeStatusRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNodeStatusRequest));
  GetNodeStatusResponse_descriptor_ = file->message_type(153);
  static const int GetNodeStatusResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeStatusResponse, nodestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeStatusResponse, err_),
  };
  GetNodeStatusResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetNodeStatusResponse_descriptor_,
      GetNodeStatusResponse::default_instance_,
      GetNodeStatusResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeStatusResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeStatusResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetNodeStatusResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetNodeStatusResponse));
  GetSUStatusRequest_descriptor_ = file->message_type(154);
  static const int GetSUStatusRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUStatusRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUStatusRequest, suname_),
  };
  GetSUStatusRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSUStatusRequest_descriptor_,
      GetSUStatusRequest::default_instance_,
      GetSUStatusRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUStatusRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUStatusRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUStatusRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSUStatusRequest));
  GetSUStatusResponse_descriptor_ = file->message_type(155);
  static const int GetSUStatusResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUStatusResponse, serviceunitstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUStatusResponse, err_),
  };
  GetSUStatusResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSUStatusResponse_descriptor_,
      GetSUStatusResponse::default_instance_,
      GetSUStatusResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUStatusResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUStatusResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSUStatusResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSUStatusResponse));
  GetSGStatusRequest_descriptor_ = file->message_type(156);
  static const int GetSGStatusRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGStatusRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGStatusRequest, sgname_),
  };
  GetSGStatusRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSGStatusRequest_descriptor_,
      GetSGStatusRequest::default_instance_,
      GetSGStatusRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGStatusRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGStatusRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGStatusRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSGStatusRequest));
  GetSGStatusResponse_descriptor_ = file->message_type(157);
  static const int GetSGStatusResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGStatusResponse, servicegroupstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGStatusResponse, err_),
  };
  GetSGStatusResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSGStatusResponse_descriptor_,
      GetSGStatusResponse::default_instance_,
      GetSGStatusResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGStatusResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGStatusResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSGStatusResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSGStatusResponse));
  GetSIStatusRequest_descriptor_ = file->message_type(158);
  static const int GetSIStatusRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIStatusRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIStatusRequest, siname_),
  };
  GetSIStatusRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSIStatusRequest_descriptor_,
      GetSIStatusRequest::default_instance_,
      GetSIStatusRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIStatusRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIStatusRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIStatusRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSIStatusRequest));
  GetSIStatusResponse_descriptor_ = file->message_type(159);
  static const int GetSIStatusResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIStatusResponse, serviceinstancestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIStatusResponse, err_),
  };
  GetSIStatusResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSIStatusResponse_descriptor_,
      GetSIStatusResponse::default_instance_,
      GetSIStatusResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIStatusResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIStatusResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSIStatusResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSIStatusResponse));
  GetCSIStatusRequest_descriptor_ = file->message_type(160);
  static const int GetCSIStatusRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIStatusRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIStatusRequest, csiname_),
  };
  GetCSIStatusRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetCSIStatusRequest_descriptor_,
      GetCSIStatusRequest::default_instance_,
      GetCSIStatusRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIStatusRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIStatusRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIStatusRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetCSIStatusRequest));
  GetCSIStatusResponse_descriptor_ = file->message_type(161);
  static const int GetCSIStatusResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIStatusResponse, componentserviceinstancestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIStatusResponse, err_),
  };
  GetCSIStatusResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetCSIStatusResponse_descriptor_,
      GetCSIStatusResponse::default_instance_,
      GetCSIStatusResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIStatusResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIStatusResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCSIStatusResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetCSIStatusResponse));
  NodeRestartRequest_descriptor_ = file->message_type(162);
  static const int NodeRestartRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeRestartRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeRestartRequest, nodename_),
  };
  NodeRestartRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeRestartRequest_descriptor_,
      NodeRestartRequest::default_instance_,
      NodeRestartRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeRestartRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeRestartRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeRestartRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeRestartRequest));
  NodeRestartResponse_descriptor_ = file->message_type(163);
  static const int NodeRestartResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeRestartResponse, err_),
  };
  NodeRestartResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeRestartResponse_descriptor_,
      NodeRestartResponse::default_instance_,
      NodeRestartResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeRestartResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeRestartResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeRestartResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeRestartResponse));
  ServiceUnitRestartRequest_descriptor_ = file->message_type(164);
  static const int ServiceUnitRestartRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestartRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestartRequest, suname_),
  };
  ServiceUnitRestartRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceUnitRestartRequest_descriptor_,
      ServiceUnitRestartRequest::default_instance_,
      ServiceUnitRestartRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestartRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestartRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestartRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceUnitRestartRequest));
  ServiceUnitRestartResponse_descriptor_ = file->message_type(165);
  static const int ServiceUnitRestartResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestartResponse, err_),
  };
  ServiceUnitRestartResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceUnitRestartResponse_descriptor_,
      ServiceUnitRestartResponse::default_instance_,
      ServiceUnitRestartResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestartResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestartResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceUnitRestartResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceUnitRestartResponse));
  ComponentRestartRequest_descriptor_ = file->message_type(166);
  static const int ComponentRestartRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestartRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestartRequest, compname_),
  };
  ComponentRestartRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentRestartRequest_descriptor_,
      ComponentRestartRequest::default_instance_,
      ComponentRestartRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestartRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestartRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestartRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentRestartRequest));
  ComponentRestartResponse_descriptor_ = file->message_type(167);
  static const int ComponentRestartResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestartResponse, err_),
  };
  ComponentRestartResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComponentRestartResponse_descriptor_,
      ComponentRestartResponse::default_instance_,
      ComponentRestartResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestartResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestartResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentRestartResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComponentRestartResponse));
  AdjustSGRequest_descriptor_ = file->message_type(168);
  static const int AdjustSGRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustSGRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustSGRequest, sgname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustSGRequest, enabled_),
  };
  AdjustSGRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AdjustSGRequest_descriptor_,
      AdjustSGRequest::default_instance_,
      AdjustSGRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustSGRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustSGRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustSGRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AdjustSGRequest));
  AdjustSGResponse_descriptor_ = file->message_type(169);
  static const int AdjustSGResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustSGResponse, err_),
  };
  AdjustSGResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AdjustSGResponse_descriptor_,
      AdjustSGResponse::default_instance_,
      AdjustSGResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustSGResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustSGResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdjustSGResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AdjustSGResponse));
  SwapSIRequest_descriptor_ = file->message_type(170);
  static const int SwapSIRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwapSIRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwapSIRequest, siname_),
  };
  SwapSIRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SwapSIRequest_descriptor_,
      SwapSIRequest::default_instance_,
      SwapSIRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwapSIRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwapSIRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwapSIRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SwapSIRequest));
  SwapSIResponse_descriptor_ = file->message_type(171);
  static const int SwapSIResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwapSIResponse, err_),
  };
  SwapSIResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SwapSIResponse_descriptor_,
      SwapSIResponse::default_instance_,
      SwapSIResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwapSIResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwapSIResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SwapSIResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SwapSIResponse));
  CompErrorReportRequest_descriptor_ = file->message_type(172);
  static const int CompErrorReportRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompErrorReportRequest, amfmgmthandle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompErrorReportRequest, compname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompErrorReportRequest, recommendedrecovery_),
  };
  CompErrorReportRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CompErrorReportRequest_descriptor_,
      CompErrorReportRequest::default_instance_,
      CompErrorReportRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompErrorReportRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompErrorReportRequest, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompErrorReportRequest, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CompErrorReportRequest));
  CompErrorReportResponse_descriptor_ = file->message_type(173);
  static const int CompErrorReportResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompErrorReportResponse, err_),
  };
  CompErrorReportResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CompErrorReportResponse_descriptor_,
      CompErrorReportResponse::default_instance_,
      CompErrorReportResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompErrorReportResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompErrorReportResponse, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompErrorReportResponse, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CompErrorReportResponse));
  PresenceState_descriptor_ = file->enum_type(0);
  ReadinessState_descriptor_ = file->enum_type(1);
  HighAvailabilityReadinessState_descriptor_ = file->enum_type(2);
  HighAvailabilityState_descriptor_ = file->enum_type(3);
  AdministrativeState_descriptor_ = file->enum_type(4);
  Recovery_descriptor_ = file->enum_type(5);
  ProcessState_descriptor_ = file->enum_type(6);
  CapabilityModel_descriptor_ = file->enum_type(7);
  PendingOperation_descriptor_ = file->enum_type(8);
  AssignmentState_descriptor_ = file->enum_type(9);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_amfMgmtRpc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SaTimeT_descriptor_, &SaTimeT::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Date_descriptor_, &Date::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IntStatistic_descriptor_, &IntStatistic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DecStatistic_descriptor_, &DecStatistic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Failures_descriptor_, &Failures::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CpuUtilization_descriptor_, &CpuUtilization::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MemUtilization_descriptor_, &MemUtilization::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PageFaults_descriptor_, &PageFaults::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NumThreads_descriptor_, &NumThreads::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResidentMem_descriptor_, &ResidentMem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProcessStats_descriptor_, &ProcessStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EscalationPolicy_descriptor_, &EscalationPolicy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Execution_descriptor_, &Execution::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceUnitFailureEscalationPolicy_descriptor_, &ServiceUnitFailureEscalationPolicy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeConfig_descriptor_, &NodeConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentRestart_descriptor_, &ComponentRestart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceUnitRestart_descriptor_, &ServiceUnitRestart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceGroupConfig_descriptor_, &ServiceGroupConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Instantiate_descriptor_, &Instantiate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Terminate_descriptor_, &Terminate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Cleanup_descriptor_, &Cleanup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Timeouts_descriptor_, &Timeouts::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentConfig_descriptor_, &ComponentConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Data_descriptor_, &Data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentServiceInstanceConfig_descriptor_, &ComponentServiceInstanceConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceInstanceConfig_descriptor_, &ServiceInstanceConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceUnitConfig_descriptor_, &ServiceUnitConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    User_descriptor_, &User::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LowPriorityUser_descriptor_, &LowPriorityUser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IoWait_descriptor_, &IoWait::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SysTime_descriptor_, &SysTime::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IntTime_descriptor_, &IntTime::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SoftIrqs_descriptor_, &SoftIrqs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Idle_descriptor_, &Idle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ContextSwitches_descriptor_, &ContextSwitches::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProcessCount_descriptor_, &ProcessCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProcessStarts_descriptor_, &ProcessStarts::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Load_descriptor_, &Load::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Stats_descriptor_, &Stats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeStatus_descriptor_, &NodeStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NumAssignedServiceUnits_descriptor_, &NumAssignedServiceUnits::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NumIdleServiceUnits_descriptor_, &NumIdleServiceUnits::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NumSpareServiceUnits_descriptor_, &NumSpareServiceUnits::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceGroupStatus_descriptor_, &ServiceGroupStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProcStats_descriptor_, &ProcStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActiveAssignments_descriptor_, &ActiveAssignments::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StandbyAssignments_descriptor_, &StandbyAssignments::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RestartCount_descriptor_, &RestartCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentStatus_descriptor_, &ComponentStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentServiceInstanceStatus_descriptor_, &ComponentServiceInstanceStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NumActiveAssignments_descriptor_, &NumActiveAssignments::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NumStandbyAssignments_descriptor_, &NumStandbyAssignments::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceInstanceStatus_descriptor_, &ServiceInstanceStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NumActiveServiceInstances_descriptor_, &NumActiveServiceInstances::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NumStandbyServiceInstances_descriptor_, &NumStandbyServiceInstances::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceUnitStatus_descriptor_, &ServiceUnitStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InitializeRequest_descriptor_, &InitializeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InitializeResponse_descriptor_, &InitializeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FinalizeRequest_descriptor_, &FinalizeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FinalizeResponse_descriptor_, &FinalizeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CommitRequest_descriptor_, &CommitRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CommitResponse_descriptor_, &CommitResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateComponentRequest_descriptor_, &CreateComponentRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateComponentResponse_descriptor_, &CreateComponentResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateComponentRequest_descriptor_, &UpdateComponentRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateComponentResponse_descriptor_, &UpdateComponentResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteComponentRequest_descriptor_, &DeleteComponentRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteComponentResponse_descriptor_, &DeleteComponentResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateSGRequest_descriptor_, &CreateSGRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateSGResponse_descriptor_, &CreateSGResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateSGRequest_descriptor_, &UpdateSGRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateSGResponse_descriptor_, &UpdateSGResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSGRequest_descriptor_, &DeleteSGRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSGResponse_descriptor_, &DeleteSGResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateNodeRequest_descriptor_, &CreateNodeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateNodeResponse_descriptor_, &CreateNodeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateNodeRequest_descriptor_, &UpdateNodeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateNodeResponse_descriptor_, &UpdateNodeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteNodeRequest_descriptor_, &DeleteNodeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteNodeResponse_descriptor_, &DeleteNodeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateSURequest_descriptor_, &CreateSURequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateSUResponse_descriptor_, &CreateSUResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateSURequest_descriptor_, &UpdateSURequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateSUResponse_descriptor_, &UpdateSUResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSURequest_descriptor_, &DeleteSURequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSUResponse_descriptor_, &DeleteSUResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateSIRequest_descriptor_, &CreateSIRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateSIResponse_descriptor_, &CreateSIResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateSIRequest_descriptor_, &UpdateSIRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateSIResponse_descriptor_, &UpdateSIResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSIRequest_descriptor_, &DeleteSIRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSIResponse_descriptor_, &DeleteSIResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateCSIRequest_descriptor_, &CreateCSIRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreateCSIResponse_descriptor_, &CreateCSIResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateCSIRequest_descriptor_, &UpdateCSIRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateCSIResponse_descriptor_, &UpdateCSIResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteCSIRequest_descriptor_, &DeleteCSIRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteCSIResponse_descriptor_, &DeleteCSIResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteCSINVPRequest_descriptor_, &DeleteCSINVPRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteCSINVPResponse_descriptor_, &DeleteCSINVPResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteNodeSUListRequest_descriptor_, &DeleteNodeSUListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteNodeSUListResponse_descriptor_, &DeleteNodeSUListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSGSUListRequest_descriptor_, &DeleteSGSUListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSGSUListResponse_descriptor_, &DeleteSGSUListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSGSIListRequest_descriptor_, &DeleteSGSIListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSGSIListResponse_descriptor_, &DeleteSGSIListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSUCompListRequest_descriptor_, &DeleteSUCompListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSUCompListResponse_descriptor_, &DeleteSUCompListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSICSIListRequest_descriptor_, &DeleteSICSIListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteSICSIListResponse_descriptor_, &DeleteSICSIListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockNodeAssignmentRequest_descriptor_, &LockNodeAssignmentRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockNodeAssignmentResponse_descriptor_, &LockNodeAssignmentResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockSGAssignmentRequest_descriptor_, &LockSGAssignmentRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockSGAssignmentResponse_descriptor_, &LockSGAssignmentResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockSUAssignmentRequest_descriptor_, &LockSUAssignmentRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockSUAssignmentResponse_descriptor_, &LockSUAssignmentResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockSIAssignmentRequest_descriptor_, &LockSIAssignmentRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockSIAssignmentResponse_descriptor_, &LockSIAssignmentResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockNodeInstantiationRequest_descriptor_, &LockNodeInstantiationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockNodeInstantiationResponse_descriptor_, &LockNodeInstantiationResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockSGInstantiationRequest_descriptor_, &LockSGInstantiationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockSGInstantiationResponse_descriptor_, &LockSGInstantiationResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockSUInstantiationRequest_descriptor_, &LockSUInstantiationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LockSUInstantiationResponse_descriptor_, &LockSUInstantiationResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnlockNodeRequest_descriptor_, &UnlockNodeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnlockNodeResponse_descriptor_, &UnlockNodeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnlockSGRequest_descriptor_, &UnlockSGRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnlockSGResponse_descriptor_, &UnlockSGResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnlockSURequest_descriptor_, &UnlockSURequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnlockSUResponse_descriptor_, &UnlockSUResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnlockSIRequest_descriptor_, &UnlockSIRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnlockSIResponse_descriptor_, &UnlockSIResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RepairNodeRequest_descriptor_, &RepairNodeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RepairNodeResponse_descriptor_, &RepairNodeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RepairComponentRequest_descriptor_, &RepairComponentRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RepairComponentResponse_descriptor_, &RepairComponentResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RepairSURequest_descriptor_, &RepairSURequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RepairSUResponse_descriptor_, &RepairSUResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetComponentConfigRequest_descriptor_, &GetComponentConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetComponentConfigResponse_descriptor_, &GetComponentConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNodeConfigRequest_descriptor_, &GetNodeConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNodeConfigResponse_descriptor_, &GetNodeConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSUConfigRequest_descriptor_, &GetSUConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSUConfigResponse_descriptor_, &GetSUConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSGConfigRequest_descriptor_, &GetSGConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSGConfigResponse_descriptor_, &GetSGConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSIConfigRequest_descriptor_, &GetSIConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSIConfigResponse_descriptor_, &GetSIConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetCSIConfigRequest_descriptor_, &GetCSIConfigRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetCSIConfigResponse_descriptor_, &GetCSIConfigResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetComponentStatusRequest_descriptor_, &GetComponentStatusRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetComponentStatusResponse_descriptor_, &GetComponentStatusResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNodeStatusRequest_descriptor_, &GetNodeStatusRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetNodeStatusResponse_descriptor_, &GetNodeStatusResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSUStatusRequest_descriptor_, &GetSUStatusRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSUStatusResponse_descriptor_, &GetSUStatusResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSGStatusRequest_descriptor_, &GetSGStatusRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSGStatusResponse_descriptor_, &GetSGStatusResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSIStatusRequest_descriptor_, &GetSIStatusRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSIStatusResponse_descriptor_, &GetSIStatusResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetCSIStatusRequest_descriptor_, &GetCSIStatusRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetCSIStatusResponse_descriptor_, &GetCSIStatusResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeRestartRequest_descriptor_, &NodeRestartRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeRestartResponse_descriptor_, &NodeRestartResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceUnitRestartRequest_descriptor_, &ServiceUnitRestartRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceUnitRestartResponse_descriptor_, &ServiceUnitRestartResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentRestartRequest_descriptor_, &ComponentRestartRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComponentRestartResponse_descriptor_, &ComponentRestartResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AdjustSGRequest_descriptor_, &AdjustSGRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AdjustSGResponse_descriptor_, &AdjustSGResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SwapSIRequest_descriptor_, &SwapSIRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SwapSIResponse_descriptor_, &SwapSIResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CompErrorReportRequest_descriptor_, &CompErrorReportRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CompErrorReportResponse_descriptor_, &CompErrorReportResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_amfMgmtRpc_2eproto() {
  delete SaTimeT::default_instance_;
  delete SaTimeT_reflection_;
  delete Date::default_instance_;
  delete Date_reflection_;
  delete IntStatistic::default_instance_;
  delete IntStatistic_reflection_;
  delete DecStatistic::default_instance_;
  delete DecStatistic_reflection_;
  delete Failures::default_instance_;
  delete Failures_reflection_;
  delete CpuUtilization::default_instance_;
  delete CpuUtilization_reflection_;
  delete MemUtilization::default_instance_;
  delete MemUtilization_reflection_;
  delete PageFaults::default_instance_;
  delete PageFaults_reflection_;
  delete NumThreads::default_instance_;
  delete NumThreads_reflection_;
  delete ResidentMem::default_instance_;
  delete ResidentMem_reflection_;
  delete ProcessStats::default_instance_;
  delete ProcessStats_reflection_;
  delete EscalationPolicy::default_instance_;
  delete EscalationPolicy_reflection_;
  delete Execution::default_instance_;
  delete Execution_reflection_;
  delete ServiceUnitFailureEscalationPolicy::default_instance_;
  delete ServiceUnitFailureEscalationPolicy_reflection_;
  delete NodeConfig::default_instance_;
  delete NodeConfig_reflection_;
  delete ComponentRestart::default_instance_;
  delete ComponentRestart_reflection_;
  delete ServiceUnitRestart::default_instance_;
  delete ServiceUnitRestart_reflection_;
  delete ServiceGroupConfig::default_instance_;
  delete ServiceGroupConfig_reflection_;
  delete Instantiate::default_instance_;
  delete Instantiate_reflection_;
  delete Terminate::default_instance_;
  delete Terminate_reflection_;
  delete Cleanup::default_instance_;
  delete Cleanup_reflection_;
  delete Timeouts::default_instance_;
  delete Timeouts_reflection_;
  delete ComponentConfig::default_instance_;
  delete ComponentConfig_reflection_;
  delete Data::default_instance_;
  delete Data_reflection_;
  delete ComponentServiceInstanceConfig::default_instance_;
  delete ComponentServiceInstanceConfig_reflection_;
  delete ServiceInstanceConfig::default_instance_;
  delete ServiceInstanceConfig_reflection_;
  delete ServiceUnitConfig::default_instance_;
  delete ServiceUnitConfig_reflection_;
  delete User::default_instance_;
  delete User_reflection_;
  delete LowPriorityUser::default_instance_;
  delete LowPriorityUser_reflection_;
  delete IoWait::default_instance_;
  delete IoWait_reflection_;
  delete SysTime::default_instance_;
  delete SysTime_reflection_;
  delete IntTime::default_instance_;
  delete IntTime_reflection_;
  delete SoftIrqs::default_instance_;
  delete SoftIrqs_reflection_;
  delete Idle::default_instance_;
  delete Idle_reflection_;
  delete ContextSwitches::default_instance_;
  delete ContextSwitches_reflection_;
  delete ProcessCount::default_instance_;
  delete ProcessCount_reflection_;
  delete ProcessStarts::default_instance_;
  delete ProcessStarts_reflection_;
  delete Load::default_instance_;
  delete Load_reflection_;
  delete Stats::default_instance_;
  delete Stats_reflection_;
  delete NodeStatus::default_instance_;
  delete NodeStatus_reflection_;
  delete NumAssignedServiceUnits::default_instance_;
  delete NumAssignedServiceUnits_reflection_;
  delete NumIdleServiceUnits::default_instance_;
  delete NumIdleServiceUnits_reflection_;
  delete NumSpareServiceUnits::default_instance_;
  delete NumSpareServiceUnits_reflection_;
  delete ServiceGroupStatus::default_instance_;
  delete ServiceGroupStatus_reflection_;
  delete ProcStats::default_instance_;
  delete ProcStats_reflection_;
  delete ActiveAssignments::default_instance_;
  delete ActiveAssignments_reflection_;
  delete StandbyAssignments::default_instance_;
  delete StandbyAssignments_reflection_;
  delete RestartCount::default_instance_;
  delete RestartCount_reflection_;
  delete ComponentStatus::default_instance_;
  delete ComponentStatus_reflection_;
  delete ComponentServiceInstanceStatus::default_instance_;
  delete ComponentServiceInstanceStatus_reflection_;
  delete NumActiveAssignments::default_instance_;
  delete NumActiveAssignments_reflection_;
  delete NumStandbyAssignments::default_instance_;
  delete NumStandbyAssignments_reflection_;
  delete ServiceInstanceStatus::default_instance_;
  delete ServiceInstanceStatus_reflection_;
  delete NumActiveServiceInstances::default_instance_;
  delete NumActiveServiceInstances_reflection_;
  delete NumStandbyServiceInstances::default_instance_;
  delete NumStandbyServiceInstances_reflection_;
  delete ServiceUnitStatus::default_instance_;
  delete ServiceUnitStatus_reflection_;
  delete InitializeRequest::default_instance_;
  delete InitializeRequest_reflection_;
  delete InitializeResponse::default_instance_;
  delete InitializeResponse_reflection_;
  delete FinalizeRequest::default_instance_;
  delete FinalizeRequest_reflection_;
  delete FinalizeResponse::default_instance_;
  delete FinalizeResponse_reflection_;
  delete CommitRequest::default_instance_;
  delete CommitRequest_reflection_;
  delete CommitResponse::default_instance_;
  delete CommitResponse_reflection_;
  delete CreateComponentRequest::default_instance_;
  delete CreateComponentRequest_reflection_;
  delete CreateComponentResponse::default_instance_;
  delete CreateComponentResponse_reflection_;
  delete UpdateComponentRequest::default_instance_;
  delete UpdateComponentRequest_reflection_;
  delete UpdateComponentResponse::default_instance_;
  delete UpdateComponentResponse_reflection_;
  delete DeleteComponentRequest::default_instance_;
  delete DeleteComponentRequest_reflection_;
  delete DeleteComponentResponse::default_instance_;
  delete DeleteComponentResponse_reflection_;
  delete CreateSGRequest::default_instance_;
  delete CreateSGRequest_reflection_;
  delete CreateSGResponse::default_instance_;
  delete CreateSGResponse_reflection_;
  delete UpdateSGRequest::default_instance_;
  delete UpdateSGRequest_reflection_;
  delete UpdateSGResponse::default_instance_;
  delete UpdateSGResponse_reflection_;
  delete DeleteSGRequest::default_instance_;
  delete DeleteSGRequest_reflection_;
  delete DeleteSGResponse::default_instance_;
  delete DeleteSGResponse_reflection_;
  delete CreateNodeRequest::default_instance_;
  delete CreateNodeRequest_reflection_;
  delete CreateNodeResponse::default_instance_;
  delete CreateNodeResponse_reflection_;
  delete UpdateNodeRequest::default_instance_;
  delete UpdateNodeRequest_reflection_;
  delete UpdateNodeResponse::default_instance_;
  delete UpdateNodeResponse_reflection_;
  delete DeleteNodeRequest::default_instance_;
  delete DeleteNodeRequest_reflection_;
  delete DeleteNodeResponse::default_instance_;
  delete DeleteNodeResponse_reflection_;
  delete CreateSURequest::default_instance_;
  delete CreateSURequest_reflection_;
  delete CreateSUResponse::default_instance_;
  delete CreateSUResponse_reflection_;
  delete UpdateSURequest::default_instance_;
  delete UpdateSURequest_reflection_;
  delete UpdateSUResponse::default_instance_;
  delete UpdateSUResponse_reflection_;
  delete DeleteSURequest::default_instance_;
  delete DeleteSURequest_reflection_;
  delete DeleteSUResponse::default_instance_;
  delete DeleteSUResponse_reflection_;
  delete CreateSIRequest::default_instance_;
  delete CreateSIRequest_reflection_;
  delete CreateSIResponse::default_instance_;
  delete CreateSIResponse_reflection_;
  delete UpdateSIRequest::default_instance_;
  delete UpdateSIRequest_reflection_;
  delete UpdateSIResponse::default_instance_;
  delete UpdateSIResponse_reflection_;
  delete DeleteSIRequest::default_instance_;
  delete DeleteSIRequest_reflection_;
  delete DeleteSIResponse::default_instance_;
  delete DeleteSIResponse_reflection_;
  delete CreateCSIRequest::default_instance_;
  delete CreateCSIRequest_reflection_;
  delete CreateCSIResponse::default_instance_;
  delete CreateCSIResponse_reflection_;
  delete UpdateCSIRequest::default_instance_;
  delete UpdateCSIRequest_reflection_;
  delete UpdateCSIResponse::default_instance_;
  delete UpdateCSIResponse_reflection_;
  delete DeleteCSIRequest::default_instance_;
  delete DeleteCSIRequest_reflection_;
  delete DeleteCSIResponse::default_instance_;
  delete DeleteCSIResponse_reflection_;
  delete DeleteCSINVPRequest::default_instance_;
  delete DeleteCSINVPRequest_reflection_;
  delete DeleteCSINVPResponse::default_instance_;
  delete DeleteCSINVPResponse_reflection_;
  delete DeleteNodeSUListRequest::default_instance_;
  delete DeleteNodeSUListRequest_reflection_;
  delete DeleteNodeSUListResponse::default_instance_;
  delete DeleteNodeSUListResponse_reflection_;
  delete DeleteSGSUListRequest::default_instance_;
  delete DeleteSGSUListRequest_reflection_;
  delete DeleteSGSUListResponse::default_instance_;
  delete DeleteSGSUListResponse_reflection_;
  delete DeleteSGSIListRequest::default_instance_;
  delete DeleteSGSIListRequest_reflection_;
  delete DeleteSGSIListResponse::default_instance_;
  delete DeleteSGSIListResponse_reflection_;
  delete DeleteSUCompListRequest::default_instance_;
  delete DeleteSUCompListRequest_reflection_;
  delete DeleteSUCompListResponse::default_instance_;
  delete DeleteSUCompListResponse_reflection_;
  delete DeleteSICSIListRequest::default_instance_;
  delete DeleteSICSIListRequest_reflection_;
  delete DeleteSICSIListResponse::default_instance_;
  delete DeleteSICSIListResponse_reflection_;
  delete LockNodeAssignmentRequest::default_instance_;
  delete LockNodeAssignmentRequest_reflection_;
  delete LockNodeAssignmentResponse::default_instance_;
  delete LockNodeAssignmentResponse_reflection_;
  delete LockSGAssignmentRequest::default_instance_;
  delete LockSGAssignmentRequest_reflection_;
  delete LockSGAssignmentResponse::default_instance_;
  delete LockSGAssignmentResponse_reflection_;
  delete LockSUAssignmentRequest::default_instance_;
  delete LockSUAssignmentRequest_reflection_;
  delete LockSUAssignmentResponse::default_instance_;
  delete LockSUAssignmentResponse_reflection_;
  delete LockSIAssignmentRequest::default_instance_;
  delete LockSIAssignmentRequest_reflection_;
  delete LockSIAssignmentResponse::default_instance_;
  delete LockSIAssignmentResponse_reflection_;
  delete LockNodeInstantiationRequest::default_instance_;
  delete LockNodeInstantiationRequest_reflection_;
  delete LockNodeInstantiationResponse::default_instance_;
  delete LockNodeInstantiationResponse_reflection_;
  delete LockSGInstantiationRequest::default_instance_;
  delete LockSGInstantiationRequest_reflection_;
  delete LockSGInstantiationResponse::default_instance_;
  delete LockSGInstantiationResponse_reflection_;
  delete LockSUInstantiationRequest::default_instance_;
  delete LockSUInstantiationRequest_reflection_;
  delete LockSUInstantiationResponse::default_instance_;
  delete LockSUInstantiationResponse_reflection_;
  delete UnlockNodeRequest::default_instance_;
  delete UnlockNodeRequest_reflection_;
  delete UnlockNodeResponse::default_instance_;
  delete UnlockNodeResponse_reflection_;
  delete UnlockSGRequest::default_instance_;
  delete UnlockSGRequest_reflection_;
  delete UnlockSGResponse::default_instance_;
  delete UnlockSGResponse_reflection_;
  delete UnlockSURequest::default_instance_;
  delete UnlockSURequest_reflection_;
  delete UnlockSUResponse::default_instance_;
  delete UnlockSUResponse_reflection_;
  delete UnlockSIRequest::default_instance_;
  delete UnlockSIRequest_reflection_;
  delete UnlockSIResponse::default_instance_;
  delete UnlockSIResponse_reflection_;
  delete RepairNodeRequest::default_instance_;
  delete RepairNodeRequest_reflection_;
  delete RepairNodeResponse::default_instance_;
  delete RepairNodeResponse_reflection_;
  delete RepairComponentRequest::default_instance_;
  delete RepairComponentRequest_reflection_;
  delete RepairComponentResponse::default_instance_;
  delete RepairComponentResponse_reflection_;
  delete RepairSURequest::default_instance_;
  delete RepairSURequest_reflection_;
  delete RepairSUResponse::default_instance_;
  delete RepairSUResponse_reflection_;
  delete GetComponentConfigRequest::default_instance_;
  delete GetComponentConfigRequest_reflection_;
  delete GetComponentConfigResponse::default_instance_;
  delete GetComponentConfigResponse_reflection_;
  delete GetNodeConfigRequest::default_instance_;
  delete GetNodeConfigRequest_reflection_;
  delete GetNodeConfigResponse::default_instance_;
  delete GetNodeConfigResponse_reflection_;
  delete GetSUConfigRequest::default_instance_;
  delete GetSUConfigRequest_reflection_;
  delete GetSUConfigResponse::default_instance_;
  delete GetSUConfigResponse_reflection_;
  delete GetSGConfigRequest::default_instance_;
  delete GetSGConfigRequest_reflection_;
  delete GetSGConfigResponse::default_instance_;
  delete GetSGConfigResponse_reflection_;
  delete GetSIConfigRequest::default_instance_;
  delete GetSIConfigRequest_reflection_;
  delete GetSIConfigResponse::default_instance_;
  delete GetSIConfigResponse_reflection_;
  delete GetCSIConfigRequest::default_instance_;
  delete GetCSIConfigRequest_reflection_;
  delete GetCSIConfigResponse::default_instance_;
  delete GetCSIConfigResponse_reflection_;
  delete GetComponentStatusRequest::default_instance_;
  delete GetComponentStatusRequest_reflection_;
  delete GetComponentStatusResponse::default_instance_;
  delete GetComponentStatusResponse_reflection_;
  delete GetNodeStatusRequest::default_instance_;
  delete GetNodeStatusRequest_reflection_;
  delete GetNodeStatusResponse::default_instance_;
  delete GetNodeStatusResponse_reflection_;
  delete GetSUStatusRequest::default_instance_;
  delete GetSUStatusRequest_reflection_;
  delete GetSUStatusResponse::default_instance_;
  delete GetSUStatusResponse_reflection_;
  delete GetSGStatusRequest::default_instance_;
  delete GetSGStatusRequest_reflection_;
  delete GetSGStatusResponse::default_instance_;
  delete GetSGStatusResponse_reflection_;
  delete GetSIStatusRequest::default_instance_;
  delete GetSIStatusRequest_reflection_;
  delete GetSIStatusResponse::default_instance_;
  delete GetSIStatusResponse_reflection_;
  delete GetCSIStatusRequest::default_instance_;
  delete GetCSIStatusRequest_reflection_;
  delete GetCSIStatusResponse::default_instance_;
  delete GetCSIStatusResponse_reflection_;
  delete NodeRestartRequest::default_instance_;
  delete NodeRestartRequest_reflection_;
  delete NodeRestartResponse::default_instance_;
  delete NodeRestartResponse_reflection_;
  delete ServiceUnitRestartRequest::default_instance_;
  delete ServiceUnitRestartRequest_reflection_;
  delete ServiceUnitRestartResponse::default_instance_;
  delete ServiceUnitRestartResponse_reflection_;
  delete ComponentRestartRequest::default_instance_;
  delete ComponentRestartRequest_reflection_;
  delete ComponentRestartResponse::default_instance_;
  delete ComponentRestartResponse_reflection_;
  delete AdjustSGRequest::default_instance_;
  delete AdjustSGRequest_reflection_;
  delete AdjustSGResponse::default_instance_;
  delete AdjustSGResponse_reflection_;
  delete SwapSIRequest::default_instance_;
  delete SwapSIRequest_reflection_;
  delete SwapSIResponse::default_instance_;
  delete SwapSIResponse_reflection_;
  delete CompErrorReportRequest::default_instance_;
  delete CompErrorReportRequest_reflection_;
  delete CompErrorReportResponse::default_instance_;
  delete CompErrorReportResponse_reflection_;
}

void protobuf_AddDesc_amfMgmtRpc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::SAFplus::Rpc::protobuf_AddDesc_SAFplusPBExt_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020amfMgmtRpc.proto\022\026SAFplus.Rpc.amfMgmtR"
    "pc\032\022SAFplusPBExt.proto\"$\n\007SaTimeT\022\016\n\006uin"
    "t64\030\001 \002(\004*\t\010\350\007\020\200\200\200\200\002\"!\n\004Date\022\016\n\006uint64\030\001"
    " \002(\004*\t\010\350\007\020\200\200\200\200\002\"\303\001\n\014IntStatistic\022\017\n\007curr"
    "ent\030\001 \001(\004\022\024\n\014history10sec\030\002 \001(\t\022\023\n\013histo"
    "ry1min\030\003 \001(\t\022\024\n\014history10min\030\004 \001(\t\022\024\n\014hi"
    "story1hour\030\005 \001(\t\022\023\n\013history1day\030\006 \001(\t\022\024\n"
    "\014history1week\030\007 \001(\t\022\025\n\rhistory4weeks\030\010 \001"
    "(\t*\t\010\350\007\020\200\200\200\200\002\"\303\001\n\014DecStatistic\022\017\n\007curren"
    "t\030\001 \001(\020\022\024\n\014history10sec\030\002 \001(\t\022\023\n\013history"
    "1min\030\003 \001(\t\022\024\n\014history10min\030\004 \001(\t\022\024\n\014hist"
    "ory1hour\030\005 \001(\t\022\023\n\013history1day\030\006 \001(\t\022\024\n\014h"
    "istory1week\030\007 \001(\t\022\025\n\rhistory4weeks\030\010 \001(\t"
    "*\t\010\350\007\020\200\200\200\200\002\"Q\n\010Failures\022:\n\014IntStatistic\030"
    "\001 \001(\0132$.SAFplus.Rpc.amfMgmtRpc.IntStatis"
    "tic*\t\010\350\007\020\200\200\200\200\002\"W\n\016CpuUtilization\022:\n\014DecS"
    "tatistic\030\001 \001(\0132$.SAFplus.Rpc.amfMgmtRpc."
    "DecStatistic*\t\010\350\007\020\200\200\200\200\002\"W\n\016MemUtilizatio"
    "n\022:\n\014DecStatistic\030\001 \001(\0132$.SAFplus.Rpc.am"
    "fMgmtRpc.DecStatistic*\t\010\350\007\020\200\200\200\200\002\"S\n\nPage"
    "Faults\022:\n\014IntStatistic\030\001 \001(\0132$.SAFplus.R"
    "pc.amfMgmtRpc.IntStatistic*\t\010\350\007\020\200\200\200\200\002\"S\n"
    "\nNumThreads\022:\n\014IntStatistic\030\001 \001(\0132$.SAFp"
    "lus.Rpc.amfMgmtRpc.IntStatistic*\t\010\350\007\020\200\200\200"
    "\200\002\"T\n\013ResidentMem\022:\n\014IntStatistic\030\001 \001(\0132"
    "$.SAFplus.Rpc.amfMgmtRpc.IntStatistic*\t\010"
    "\350\007\020\200\200\200\200\002\"\263\003\n\014ProcessStats\0222\n\010failures\030\001 "
    "\001(\0132 .SAFplus.Rpc.amfMgmtRpc.Failures\022>\n"
    "\016cpuUtilization\030\002 \001(\0132&.SAFplus.Rpc.amfM"
    "gmtRpc.CpuUtilization\022>\n\016memUtilization\030"
    "\003 \001(\0132&.SAFplus.Rpc.amfMgmtRpc.MemUtiliz"
    "ation\0226\n\npageFaults\030\004 \001(\0132\".SAFplus.Rpc."
    "amfMgmtRpc.PageFaults\0226\n\nnumThreads\030\005 \001("
    "\0132\".SAFplus.Rpc.amfMgmtRpc.NumThreads\0228\n"
    "\013residentMem\030\006 \001(\0132#.SAFplus.Rpc.amfMgmt"
    "Rpc.ResidentMem\022:\n\014processState\030\007 \001(\0162$."
    "SAFplus.Rpc.amfMgmtRpc.ProcessState*\t\010\350\007"
    "\020\200\200\200\200\002\"a\n\020EscalationPolicy\022\017\n\007maximum\030\001 "
    "\001(\004\0221\n\010duration\030\002 \001(\0132\037.SAFplus.Rpc.amfM"
    "gmtRpc.SaTimeT*\t\010\350\007\020\200\200\200\200\002\"8\n\tExecution\022\017"
    "\n\007command\030\001 \001(\t\022\017\n\007timeout\030\002 \001(\004*\t\010\350\007\020\200\200"
    "\200\200\002\"s\n\"ServiceUnitFailureEscalationPolic"
    "y\022B\n\020EscalationPolicy\030\001 \001(\0132(.SAFplus.Rp"
    "c.amfMgmtRpc.EscalationPolicy*\t\010\350\007\020\200\200\200\200\002"
    "\"\302\002\n\nNodeConfig\022\014\n\004name\030\001 \001(\t\022\?\n\nadminSt"
    "ate\030\002 \001(\0162+.SAFplus.Rpc.amfMgmtRpc.Admin"
    "istrativeState\022f\n\"serviceUnitFailureEsca"
    "lationPolicy\030\003 \001(\0132:.SAFplus.Rpc.amfMgmt"
    "Rpc.ServiceUnitFailureEscalationPolicy\022\022"
    "\n\nautoRepair\030\004 \001(\010\022&\n\036failFastOnInstanti"
    "ationFailure\030\005 \001(\010\022 \n\030failFastOnCleanupF"
    "ailure\030\006 \001(\010\022\024\n\014serviceUnits\030\007 \003(\t*\t\010\350\007\020"
    "\200\200\200\200\002\"a\n\020ComponentRestart\022B\n\020EscalationP"
    "olicy\030\001 \001(\0132(.SAFplus.Rpc.amfMgmtRpc.Esc"
    "alationPolicy*\t\010\350\007\020\200\200\200\200\002\"c\n\022ServiceUnitR"
    "estart\022B\n\020EscalationPolicy\030\001 \001(\0132(.SAFpl"
    "us.Rpc.amfMgmtRpc.EscalationPolicy*\t\010\350\007\020"
    "\200\200\200\200\002\"\313\004\n\022ServiceGroupConfig\022\014\n\004name\030\001 \001"
    "(\t\022\?\n\nadminState\030\002 \001(\0162+.SAFplus.Rpc.amf"
    "MgmtRpc.AdministrativeState\022\022\n\nautoRepai"
    "r\030\003 \001(\010\022\022\n\nautoAdjust\030\004 \001(\010\022;\n\022autoAdjus"
    "tInterval\030\005 \001(\0132\037.SAFplus.Rpc.amfMgmtRpc"
    ".SaTimeT\022&\n\036preferredNumActiveServiceUni"
    "ts\030\006 \001(\007\022\'\n\037preferredNumStandbyServiceUn"
    "its\030\007 \001(\007\022$\n\034preferredNumIdleServiceUnit"
    "s\030\010 \001(\007\022 \n\030maxActiveWorkAssignments\030\t \001("
    "\007\022!\n\031maxStandbyWorkAssignments\030\n \001(\007\022B\n\020"
    "componentRestart\030\013 \001(\0132(.SAFplus.Rpc.amf"
    "MgmtRpc.ComponentRestart\022F\n\022serviceUnitR"
    "estart\030\014 \001(\0132*.SAFplus.Rpc.amfMgmtRpc.Se"
    "rviceUnitRestart\022\024\n\014serviceUnits\030\r \003(\t\022\030"
    "\n\020serviceInstances\030\016 \003(\t*\t\010\350\007\020\200\200\200\200\002\"N\n\013I"
    "nstantiate\0224\n\tExecution\030\001 \001(\0132!.SAFplus."
    "Rpc.amfMgmtRpc.Execution*\t\010\350\007\020\200\200\200\200\002\"L\n\tT"
    "erminate\0224\n\tExecution\030\001 \001(\0132!.SAFplus.Rp"
    "c.amfMgmtRpc.Execution*\t\010\350\007\020\200\200\200\200\002\"J\n\007Cle"
    "anup\0224\n\tExecution\030\001 \001(\0132!.SAFplus.Rpc.am"
    "fMgmtRpc.Execution*\t\010\350\007\020\200\200\200\200\002\"\364\001\n\010Timeou"
    "ts\0222\n\tterminate\030\001 \001(\0132\037.SAFplus.Rpc.amfM"
    "gmtRpc.SaTimeT\022:\n\021quiescingComplete\030\002 \001("
    "\0132\037.SAFplus.Rpc.amfMgmtRpc.SaTimeT\0224\n\013wo"
    "rkRemoval\030\003 \001(\0132\037.SAFplus.Rpc.amfMgmtRpc"
    ".SaTimeT\0227\n\016workAssignment\030\004 \001(\0132\037.SAFpl"
    "us.Rpc.amfMgmtRpc.SaTimeT*\t\010\350\007\020\200\200\200\200\002\"\206\005\n"
    "\017ComponentConfig\022\014\n\004name\030\001 \001(\t\022@\n\017capabi"
    "lityModel\030\002 \001(\0162\'.SAFplus.Rpc.amfMgmtRpc"
    ".CapabilityModel\022\034\n\024maxActiveAssignments"
    "\030\003 \001(\007\022\035\n\025maxStandbyAssignments\030\004 \001(\007\022\032\n"
    "\022commandEnvironment\030\005 \003(\t\0228\n\013instantiate"
    "\030\006 \001(\0132#.SAFplus.Rpc.amfMgmtRpc.Instanti"
    "ate\0224\n\tterminate\030\007 \001(\0132!.SAFplus.Rpc.amf"
    "MgmtRpc.Terminate\0220\n\007cleanup\030\010 \001(\0132\037.SAF"
    "plus.Rpc.amfMgmtRpc.Cleanup\022 \n\030maxInstan"
    "tInstantiations\030\t \001(\007\022 \n\030maxDelayedInsta"
    "ntiations\030\n \001(\007\022$\n\034instantiationSuccessD"
    "uration\030\013 \001(\007\022!\n\031delayBetweenInstantiati"
    "on\030\014 \001(\007\0222\n\010timeouts\030\r \001(\0132 .SAFplus.Rpc"
    ".amfMgmtRpc.Timeouts\022\023\n\013serviceUnit\030\016 \001("
    "\t\0222\n\010recovery\030\017 \001(\0162 .SAFplus.Rpc.amfMgm"
    "tRpc.Recovery\022\023\n\013restartable\030\020 \001(\010*\t\010\350\007\020"
    "\200\200\200\200\002\",\n\004Data\022\014\n\004name\030\001 \001(\t\022\013\n\003val\030\002 \001(\t"
    "*\t\010\350\007\020\200\200\200\200\002\"\224\001\n\036ComponentServiceInstance"
    "Config\022\014\n\004name\030\001 \001(\t\022\024\n\014dependencies\030\002 \003"
    "(\t\022*\n\004data\030\003 \003(\0132\034.SAFplus.Rpc.amfMgmtRp"
    "c.Data\022\027\n\017serviceInstance\030\004 \001(\t*\t\010\350\007\020\200\200\200"
    "\200\002\"\201\002\n\025ServiceInstanceConfig\022\014\n\004name\030\001 \001"
    "(\t\022\?\n\nadminState\030\002 \001(\0162+.SAFplus.Rpc.amf"
    "MgmtRpc.AdministrativeState\022\"\n\032preferred"
    "ActiveAssignments\030\003 \001(\007\022#\n\033preferredStan"
    "dbyAssignments\030\004 \001(\007\022\014\n\004rank\030\005 \001(\007\022!\n\031co"
    "mponentServiceInstances\030\006 \003(\t\022\024\n\014service"
    "Group\030\007 \001(\t*\t\010\350\007\020\200\200\200\200\002\"\334\001\n\021ServiceUnitCo"
    "nfig\022\014\n\004name\030\001 \001(\t\022\?\n\nadminState\030\002 \001(\0162+"
    ".SAFplus.Rpc.amfMgmtRpc.AdministrativeSt"
    "ate\022\014\n\004rank\030\003 \001(\007\022\020\n\010failover\030\004 \001(\010\022\022\n\nc"
    "omponents\030\005 \003(\t\022\014\n\004node\030\006 \001(\t\022\024\n\014service"
    "Group\030\007 \001(\t\022\025\n\rprobationTime\030\010 \001(\007*\t\010\350\007\020"
    "\200\200\200\200\002\"M\n\004User\022:\n\014DecStatistic\030\001 \001(\0132$.SA"
    "Fplus.Rpc.amfMgmtRpc.DecStatistic*\t\010\350\007\020\200"
    "\200\200\200\002\"X\n\017LowPriorityUser\022:\n\014DecStatistic\030"
    "\001 \001(\0132$.SAFplus.Rpc.amfMgmtRpc.DecStatis"
    "tic*\t\010\350\007\020\200\200\200\200\002\"O\n\006IoWait\022:\n\014DecStatistic"
    "\030\001 \001(\0132$.SAFplus.Rpc.amfMgmtRpc.DecStati"
    "stic*\t\010\350\007\020\200\200\200\200\002\"P\n\007SysTime\022:\n\014DecStatist"
    "ic\030\001 \001(\0132$.SAFplus.Rpc.amfMgmtRpc.DecSta"
    "tistic*\t\010\350\007\020\200\200\200\200\002\"P\n\007IntTime\022:\n\014DecStati"
    "stic\030\001 \001(\0132$.SAFplus.Rpc.amfMgmtRpc.DecS"
    "tatistic*\t\010\350\007\020\200\200\200\200\002\"Q\n\010SoftIrqs\022:\n\014DecSt"
    "atistic\030\001 \001(\0132$.SAFplus.Rpc.amfMgmtRpc.D"
    "ecStatistic*\t\010\350\007\020\200\200\200\200\002\"M\n\004Idle\022:\n\014DecSta"
    "tistic\030\001 \001(\0132$.SAFplus.Rpc.amfMgmtRpc.De"
    "cStatistic*\t\010\350\007\020\200\200\200\200\002\"X\n\017ContextSwitches"
    "\022:\n\014IntStatistic\030\001 \001(\0132$.SAFplus.Rpc.amf"
    "MgmtRpc.IntStatistic*\t\010\350\007\020\200\200\200\200\002\"U\n\014Proce"
    "ssCount\022:\n\014IntStatistic\030\001 \001(\0132$.SAFplus."
    "Rpc.amfMgmtRpc.IntStatistic*\t\010\350\007\020\200\200\200\200\002\"V"
    "\n\rProcessStarts\022:\n\014IntStatistic\030\001 \001(\0132$."
    "SAFplus.Rpc.amfMgmtRpc.IntStatistic*\t\010\350\007"
    "\020\200\200\200\200\002\"\257\004\n\004Load\022*\n\004user\030\001 \001(\0132\034.SAFplus."
    "Rpc.amfMgmtRpc.User\022@\n\017lowPriorityUser\030\002"
    " \001(\0132\'.SAFplus.Rpc.amfMgmtRpc.LowPriorit"
    "yUser\022.\n\006ioWait\030\003 \001(\0132\036.SAFplus.Rpc.amfM"
    "gmtRpc.IoWait\0220\n\007sysTime\030\004 \001(\0132\037.SAFplus"
    ".Rpc.amfMgmtRpc.SysTime\0220\n\007intTime\030\005 \001(\013"
    "2\037.SAFplus.Rpc.amfMgmtRpc.IntTime\0222\n\010sof"
    "tIrqs\030\006 \001(\0132 .SAFplus.Rpc.amfMgmtRpc.Sof"
    "tIrqs\022*\n\004idle\030\007 \001(\0132\034.SAFplus.Rpc.amfMgm"
    "tRpc.Idle\022@\n\017contextSwitches\030\010 \001(\0132\'.SAF"
    "plus.Rpc.amfMgmtRpc.ContextSwitches\022:\n\014p"
    "rocessCount\030\t \001(\0132$.SAFplus.Rpc.amfMgmtR"
    "pc.ProcessCount\022<\n\rprocessStarts\030\n \001(\0132%"
    ".SAFplus.Rpc.amfMgmtRpc.ProcessStarts*\t\010"
    "\350\007\020\200\200\200\200\002\"`\n\005Stats\022*\n\004load\030\001 \001(\0132\034.SAFplu"
    "s.Rpc.amfMgmtRpc.Load\022\016\n\006upTime\030\002 \001(\004\022\020\n"
    "\010bootTime\030\003 \001(\004*\t\010\350\007\020\200\200\200\200\002\"\244\001\n\nNodeStatu"
    "s\022\014\n\004name\030\001 \001(\t\022,\n\005stats\030\002 \001(\0132\035.SAFplus"
    ".Rpc.amfMgmtRpc.Stats\022<\n\rpresenceState\030\003"
    " \001(\0162%.SAFplus.Rpc.amfMgmtRpc.PresenceSt"
    "ate\022\021\n\toperState\030\004 \001(\010*\t\010\350\007\020\200\200\200\200\002\"`\n\027Num"
    "AssignedServiceUnits\022:\n\014IntStatistic\030\001 \001"
    "(\0132$.SAFplus.Rpc.amfMgmtRpc.IntStatistic"
    "*\t\010\350\007\020\200\200\200\200\002\"\\\n\023NumIdleServiceUnits\022:\n\014In"
    "tStatistic\030\001 \001(\0132$.SAFplus.Rpc.amfMgmtRp"
    "c.IntStatistic*\t\010\350\007\020\200\200\200\200\002\"]\n\024NumSpareSer"
    "viceUnits\022:\n\014IntStatistic\030\001 \001(\0132$.SAFplu"
    "s.Rpc.amfMgmtRpc.IntStatistic*\t\010\350\007\020\200\200\200\200\002"
    "\"\225\002\n\022ServiceGroupStatus\022\014\n\004name\030\001 \001(\t\022P\n"
    "\027numAssignedServiceUnits\030\002 \001(\0132/.SAFplus"
    ".Rpc.amfMgmtRpc.NumAssignedServiceUnits\022"
    "H\n\023numIdleServiceUnits\030\003 \001(\0132+.SAFplus.R"
    "pc.amfMgmtRpc.NumIdleServiceUnits\022J\n\024num"
    "SpareServiceUnits\030\004 \001(\0132,.SAFplus.Rpc.am"
    "fMgmtRpc.NumSpareServiceUnits*\t\010\350\007\020\200\200\200\200\002"
    "\"R\n\tProcStats\022:\n\014ProcessStats\030\001 \001(\0132$.SA"
    "Fplus.Rpc.amfMgmtRpc.ProcessStats*\t\010\350\007\020\200"
    "\200\200\200\002\"Z\n\021ActiveAssignments\022:\n\014IntStatisti"
    "c\030\001 \001(\0132$.SAFplus.Rpc.amfMgmtRpc.IntStat"
    "istic*\t\010\350\007\020\200\200\200\200\002\"[\n\022StandbyAssignments\022:"
    "\n\014IntStatistic\030\001 \001(\0132$.SAFplus.Rpc.amfMg"
    "mtRpc.IntStatistic*\t\010\350\007\020\200\200\200\200\002\"U\n\014Restart"
    "Count\022:\n\014IntStatistic\030\001 \001(\0132$.SAFplus.Rp"
    "c.amfMgmtRpc.IntStatistic*\t\010\350\007\020\200\200\200\200\002\"\246\007\n"
    "\017ComponentStatus\022\014\n\004name\030\001 \001(\t\0224\n\tprocSt"
    "ats\030\002 \001(\0132!.SAFplus.Rpc.amfMgmtRpc.ProcS"
    "tats\022<\n\rpresenceState\030\003 \001(\0162%.SAFplus.Rp"
    "c.amfMgmtRpc.PresenceState\022D\n\021activeAssi"
    "gnments\030\004 \001(\0132).SAFplus.Rpc.amfMgmtRpc.A"
    "ctiveAssignments\022F\n\022standbyAssignments\030\005"
    " \001(\0132*.SAFplus.Rpc.amfMgmtRpc.StandbyAss"
    "ignments\022\024\n\014assignedWork\030\006 \003(\t\022\021\n\toperSt"
    "ate\030\007 \001(\010\022>\n\016readinessState\030\010 \001(\0162&.SAFp"
    "lus.Rpc.amfMgmtRpc.ReadinessState\022P\n\020haR"
    "eadinessState\030\t \001(\01626.SAFplus.Rpc.amfMgm"
    "tRpc.HighAvailabilityReadinessState\022>\n\007h"
    "aState\030\n \001(\0162-.SAFplus.Rpc.amfMgmtRpc.Hi"
    "ghAvailabilityState\022\022\n\nsafVersion\030\013 \001(\t\022"
    "\024\n\014compCategory\030\014 \001(\007\022\020\n\010swBundle\030\r \001(\t\022"
    " \n\030numInstantiationAttempts\030\016 \001(\007\0227\n\021las"
    "tInstantiation\030\017 \001(\0132\034.SAFplus.Rpc.amfMg"
    "mtRpc.Date\022:\n\014restartCount\030\020 \001(\0132$.SAFpl"
    "us.Rpc.amfMgmtRpc.RestartCount\022\021\n\tproces"
    "sId\030\021 \001(\021\022\021\n\tlastError\030\022 \001(\t\022B\n\020pendingO"
    "peration\030\023 \001(\0162(.SAFplus.Rpc.amfMgmtRpc."
    "PendingOperation\022@\n\032pendingOperationExpi"
    "ration\030\024 \001(\0132\034.SAFplus.Rpc.amfMgmtRpc.Da"
    "te*\t\010\350\007\020\200\200\200\200\002\"n\n\036ComponentServiceInstanc"
    "eStatus\022\014\n\004name\030\001 \001(\t\022\031\n\021standbyComponen"
    "ts\030\002 \003(\t\022\030\n\020activeComponents\030\003 \003(\t*\t\010\350\007\020"
    "\200\200\200\200\002\"]\n\024NumActiveAssignments\022:\n\014IntStat"
    "istic\030\001 \001(\0132$.SAFplus.Rpc.amfMgmtRpc.Int"
    "Statistic*\t\010\350\007\020\200\200\200\200\002\"^\n\025NumStandbyAssign"
    "ments\022:\n\014IntStatistic\030\001 \001(\0132$.SAFplus.Rp"
    "c.amfMgmtRpc.IntStatistic*\t\010\350\007\020\200\200\200\200\002\"\303\002\n"
    "\025ServiceInstanceStatus\022\014\n\004name\030\001 \001(\t\022@\n\017"
    "assignmentState\030\002 \001(\0162\'.SAFplus.Rpc.amfM"
    "gmtRpc.AssignmentState\022\031\n\021activeAssignme"
    "nts\030\003 \003(\t\022\032\n\022standbyAssignments\030\004 \003(\t\022J\n"
    "\024numActiveAssignments\030\005 \001(\0132,.SAFplus.Rp"
    "c.amfMgmtRpc.NumActiveAssignments\022L\n\025num"
    "StandbyAssignments\030\006 \001(\0132-.SAFplus.Rpc.a"
    "mfMgmtRpc.NumStandbyAssignments*\t\010\350\007\020\200\200\200"
    "\200\002\"b\n\031NumActiveServiceInstances\022:\n\014IntSt"
    "atistic\030\001 \001(\0132$.SAFplus.Rpc.amfMgmtRpc.I"
    "ntStatistic*\t\010\350\007\020\200\200\200\200\002\"c\n\032NumStandbyServ"
    "iceInstances\022:\n\014IntStatistic\030\001 \001(\0132$.SAF"
    "plus.Rpc.amfMgmtRpc.IntStatistic*\t\010\350\007\020\200\200"
    "\200\200\002\"\364\004\n\021ServiceUnitStatus\022\014\n\004name\030\001 \001(\t\022"
    "\027\n\017preinstantiable\030\002 \001(\010\022<\n\rpresenceStat"
    "e\030\003 \001(\0162%.SAFplus.Rpc.amfMgmtRpc.Presenc"
    "eState\022>\n\016readinessState\030\004 \001(\0162&.SAFplus"
    ".Rpc.amfMgmtRpc.ReadinessState\022P\n\020haRead"
    "inessState\030\005 \001(\01626.SAFplus.Rpc.amfMgmtRp"
    "c.HighAvailabilityReadinessState\022>\n\007haSt"
    "ate\030\006 \001(\0162-.SAFplus.Rpc.amfMgmtRpc.HighA"
    "vailabilityState\022\021\n\toperState\030\007 \001(\010\022 \n\030a"
    "ssignedServiceInstances\030\010 \003(\t\022T\n\031numActi"
    "veServiceInstances\030\t \001(\01321.SAFplus.Rpc.a"
    "mfMgmtRpc.NumActiveServiceInstances\022V\n\032n"
    "umStandbyServiceInstances\030\n \001(\01322.SAFplu"
    "s.Rpc.amfMgmtRpc.NumStandbyServiceInstan"
    "ces\022:\n\014restartCount\030\013 \001(\0132$.SAFplus.Rpc."
    "amfMgmtRpc.RestartCount*\t\010\350\007\020\200\200\200\200\002\"5\n\021In"
    "itializeRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014*\t"
    "\010\350\007\020\200\200\200\200\002\",\n\022InitializeResponse\022\013\n\003err\030\001"
    " \001(\021*\t\010\350\007\020\200\200\200\200\002\"3\n\017FinalizeRequest\022\025\n\ram"
    "fMgmtHandle\030\001 \003(\014*\t\010\350\007\020\200\200\200\200\002\"*\n\020Finalize"
    "Response\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"1\n\rComm"
    "itRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014*\t\010\350\007\020\200\200"
    "\200\200\002\"(\n\016CommitResponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020"
    "\200\200\200\200\002\"|\n\026CreateComponentRequest\022\025\n\ramfMg"
    "mtHandle\030\001 \003(\014\022@\n\017ComponentConfig\030\002 \001(\0132"
    "\'.SAFplus.Rpc.amfMgmtRpc.ComponentConfig"
    "*\t\010\350\007\020\200\200\200\200\002\"1\n\027CreateComponentResponse\022\013"
    "\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"|\n\026UpdateComponen"
    "tRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022@\n\017Compo"
    "nentConfig\030\002 \001(\0132\'.SAFplus.Rpc.amfMgmtRp"
    "c.ComponentConfig*\t\010\350\007\020\200\200\200\200\002\"1\n\027UpdateCo"
    "mponentResponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\""
    "H\n\026DeleteComponentRequest\022\025\n\ramfMgmtHand"
    "le\030\001 \003(\014\022\014\n\004name\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"1\n\027Del"
    "eteComponentResponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200"
    "\200\200\200\002\"{\n\017CreateSGRequest\022\025\n\ramfMgmtHandle"
    "\030\001 \003(\014\022F\n\022ServiceGroupConfig\030\002 \001(\0132*.SAF"
    "plus.Rpc.amfMgmtRpc.ServiceGroupConfig*\t"
    "\010\350\007\020\200\200\200\200\002\"*\n\020CreateSGResponse\022\013\n\003err\030\001 \001"
    "(\021*\t\010\350\007\020\200\200\200\200\002\"{\n\017UpdateSGRequest\022\025\n\ramfM"
    "gmtHandle\030\001 \003(\014\022F\n\022ServiceGroupConfig\030\002 "
    "\001(\0132*.SAFplus.Rpc.amfMgmtRpc.ServiceGrou"
    "pConfig*\t\010\350\007\020\200\200\200\200\002\"*\n\020UpdateSGResponse\022\013"
    "\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"A\n\017DeleteSGReques"
    "t\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\014\n\004name\030\002 \001(\t*\t"
    "\010\350\007\020\200\200\200\200\002\"*\n\020DeleteSGResponse\022\013\n\003err\030\001 \001"
    "(\021*\t\010\350\007\020\200\200\200\200\002\"m\n\021CreateNodeRequest\022\025\n\ram"
    "fMgmtHandle\030\001 \003(\014\0226\n\nNodeConfig\030\002 \001(\0132\"."
    "SAFplus.Rpc.amfMgmtRpc.NodeConfig*\t\010\350\007\020\200"
    "\200\200\200\002\",\n\022CreateNodeResponse\022\013\n\003err\030\001 \001(\021*"
    "\t\010\350\007\020\200\200\200\200\002\"m\n\021UpdateNodeRequest\022\025\n\ramfMg"
    "mtHandle\030\001 \003(\014\0226\n\nNodeConfig\030\002 \001(\0132\".SAF"
    "plus.Rpc.amfMgmtRpc.NodeConfig*\t\010\350\007\020\200\200\200\200"
    "\002\",\n\022UpdateNodeResponse\022\013\n\003err\030\001 \001(\021*\t\010\350"
    "\007\020\200\200\200\200\002\"C\n\021DeleteNodeRequest\022\025\n\ramfMgmtH"
    "andle\030\001 \003(\014\022\014\n\004name\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\",\n\022"
    "DeleteNodeResponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200"
    "\200\002\"y\n\017CreateSURequest\022\025\n\ramfMgmtHandle\030\001"
    " \003(\014\022D\n\021ServiceUnitConfig\030\002 \001(\0132).SAFplu"
    "s.Rpc.amfMgmtRpc.ServiceUnitConfig*\t\010\350\007\020"
    "\200\200\200\200\002\"*\n\020CreateSUResponse\022\013\n\003err\030\001 \001(\021*\t"
    "\010\350\007\020\200\200\200\200\002\"y\n\017UpdateSURequest\022\025\n\ramfMgmtH"
    "andle\030\001 \003(\014\022D\n\021ServiceUnitConfig\030\002 \001(\0132)"
    ".SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfi"
    "g*\t\010\350\007\020\200\200\200\200\002\"*\n\020UpdateSUResponse\022\013\n\003err\030"
    "\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"A\n\017DeleteSURequest\022\025\n\ra"
    "mfMgmtHandle\030\001 \003(\014\022\014\n\004name\030\002 \001(\t*\t\010\350\007\020\200\200"
    "\200\200\002\"*\n\020DeleteSUResponse\022\013\n\003err\030\001 \001(\021*\t\010\350"
    "\007\020\200\200\200\200\002\"\201\001\n\017CreateSIRequest\022\025\n\ramfMgmtHa"
    "ndle\030\001 \003(\014\022L\n\025ServiceInstanceConfig\030\002 \001("
    "\0132-.SAFplus.Rpc.amfMgmtRpc.ServiceInstan"
    "ceConfig*\t\010\350\007\020\200\200\200\200\002\"*\n\020CreateSIResponse\022"
    "\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"\201\001\n\017UpdateSIRequ"
    "est\022\025\n\ramfMgmtHandle\030\001 \003(\014\022L\n\025ServiceIns"
    "tanceConfig\030\002 \001(\0132-.SAFplus.Rpc.amfMgmtR"
    "pc.ServiceInstanceConfig*\t\010\350\007\020\200\200\200\200\002\"*\n\020U"
    "pdateSIResponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\""
    "A\n\017DeleteSIRequest\022\025\n\ramfMgmtHandle\030\001 \003("
    "\014\022\014\n\004name\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"*\n\020DeleteSIRe"
    "sponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"\224\001\n\020Creat"
    "eCSIRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022^\n\036Co"
    "mponentServiceInstanceConfig\030\002 \001(\01326.SAF"
    "plus.Rpc.amfMgmtRpc.ComponentServiceInst"
    "anceConfig*\t\010\350\007\020\200\200\200\200\002\"+\n\021CreateCSIRespon"
    "se\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"\224\001\n\020UpdateCSI"
    "Request\022\025\n\ramfMgmtHandle\030\001 \003(\014\022^\n\036Compon"
    "entServiceInstanceConfig\030\002 \001(\01326.SAFplus"
    ".Rpc.amfMgmtRpc.ComponentServiceInstance"
    "Config*\t\010\350\007\020\200\200\200\200\002\"+\n\021UpdateCSIResponse\022\013"
    "\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"B\n\020DeleteCSIReque"
    "st\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\014\n\004name\030\002 \001(\t*"
    "\t\010\350\007\020\200\200\200\200\002\"+\n\021DeleteCSIResponse\022\013\n\003err\030\001"
    " \001(\021*\t\010\350\007\020\200\200\200\200\002\"q\n\023DeleteCSINVPRequest\022\025"
    "\n\ramfMgmtHandle\030\001 \003(\014\022\014\n\004name\030\002 \001(\t\022*\n\004d"
    "ata\030\003 \003(\0132\034.SAFplus.Rpc.amfMgmtRpc.Data*"
    "\t\010\350\007\020\200\200\200\200\002\".\n\024DeleteCSINVPResponse\022\013\n\003er"
    "r\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"]\n\027DeleteNodeSUListRe"
    "quest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\020\n\010nodeName"
    "\030\002 \001(\t\022\016\n\006suList\030\003 \003(\t*\t\010\350\007\020\200\200\200\200\002\"2\n\030Del"
    "eteNodeSUListResponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020"
    "\200\200\200\200\002\"Y\n\025DeleteSGSUListRequest\022\025\n\ramfMgm"
    "tHandle\030\001 \003(\014\022\016\n\006sgName\030\002 \001(\t\022\016\n\006suList\030"
    "\003 \003(\t*\t\010\350\007\020\200\200\200\200\002\"0\n\026DeleteSGSUListRespon"
    "se\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"Y\n\025DeleteSGSI"
    "ListRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\016\n\006sg"
    "Name\030\002 \001(\t\022\016\n\006siList\030\003 \003(\t*\t\010\350\007\020\200\200\200\200\002\"0\n"
    "\026DeleteSGSIListResponse\022\013\n\003err\030\001 \001(\021*\t\010\350"
    "\007\020\200\200\200\200\002\"]\n\027DeleteSUCompListRequest\022\025\n\ram"
    "fMgmtHandle\030\001 \003(\014\022\016\n\006suName\030\002 \001(\t\022\020\n\010com"
    "pList\030\003 \003(\t*\t\010\350\007\020\200\200\200\200\002\"2\n\030DeleteSUCompLi"
    "stResponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"[\n\026De"
    "leteSICSIListRequest\022\025\n\ramfMgmtHandle\030\001 "
    "\003(\014\022\016\n\006siName\030\002 \001(\t\022\017\n\007csiList\030\003 \003(\t*\t\010\350"
    "\007\020\200\200\200\200\002\"1\n\027DeleteSICSIListResponse\022\013\n\003er"
    "r\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"O\n\031LockNodeAssignment"
    "Request\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\020\n\010nodeNa"
    "me\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"4\n\032LockNodeAssignmen"
    "tResponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"K\n\027Loc"
    "kSGAssignmentRequest\022\025\n\ramfMgmtHandle\030\001 "
    "\003(\014\022\016\n\006sgName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"2\n\030LockSG"
    "AssignmentResponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200"
    "\200\002\"K\n\027LockSUAssignmentRequest\022\025\n\ramfMgmt"
    "Handle\030\001 \003(\014\022\016\n\006suName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\""
    "2\n\030LockSUAssignmentResponse\022\013\n\003err\030\001 \001(\021"
    "*\t\010\350\007\020\200\200\200\200\002\"K\n\027LockSIAssignmentRequest\022\025"
    "\n\ramfMgmtHandle\030\001 \003(\014\022\016\n\006siName\030\002 \001(\t*\t\010"
    "\350\007\020\200\200\200\200\002\"2\n\030LockSIAssignmentResponse\022\013\n\003"
    "err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"R\n\034LockNodeInstanti"
    "ationRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\020\n\010n"
    "odeName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"7\n\035LockNodeInst"
    "antiationResponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200"
    "\002\"N\n\032LockSGInstantiationRequest\022\025\n\ramfMg"
    "mtHandle\030\001 \003(\014\022\016\n\006sgName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200"
    "\002\"5\n\033LockSGInstantiationResponse\022\013\n\003err\030"
    "\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"N\n\032LockSUInstantiationR"
    "equest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\016\n\006suName\030"
    "\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"5\n\033LockSUInstantiationR"
    "esponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"G\n\021Unloc"
    "kNodeRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\020\n\010n"
    "odeName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\",\n\022UnlockNodeRe"
    "sponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"C\n\017Unlock"
    "SGRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\016\n\006sgNa"
    "me\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"*\n\020UnlockSGResponse\022"
    "\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"C\n\017UnlockSUReque"
    "st\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\016\n\006suName\030\002 \001("
    "\t*\t\010\350\007\020\200\200\200\200\002\"*\n\020UnlockSUResponse\022\013\n\003err\030"
    "\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"C\n\017UnlockSIRequest\022\025\n\ra"
    "mfMgmtHandle\030\001 \003(\014\022\016\n\006siName\030\002 \001(\t*\t\010\350\007\020"
    "\200\200\200\200\002\"*\n\020UnlockSIResponse\022\013\n\003err\030\001 \001(\021*\t"
    "\010\350\007\020\200\200\200\200\002\"G\n\021RepairNodeRequest\022\025\n\ramfMgm"
    "tHandle\030\001 \003(\014\022\020\n\010nodeName\030\002 \001(\t*\t\010\350\007\020\200\200\200"
    "\200\002\",\n\022RepairNodeResponse\022\013\n\003err\030\001 \001(\021*\t\010"
    "\350\007\020\200\200\200\200\002\"L\n\026RepairComponentRequest\022\025\n\ram"
    "fMgmtHandle\030\001 \003(\014\022\020\n\010compName\030\002 \001(\t*\t\010\350\007"
    "\020\200\200\200\200\002\"1\n\027RepairComponentResponse\022\013\n\003err"
    "\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"C\n\017RepairSURequest\022\025\n\r"
    "amfMgmtHandle\030\001 \003(\014\022\016\n\006suName\030\002 \001(\t*\t\010\350\007"
    "\020\200\200\200\200\002\"*\n\020RepairSUResponse\022\013\n\003err\030\001 \001(\021*"
    "\t\010\350\007\020\200\200\200\200\002\"O\n\031GetComponentConfigRequest\022"
    "\025\n\ramfMgmtHandle\030\001 \003(\014\022\020\n\010compName\030\002 \001(\t"
    "*\t\010\350\007\020\200\200\200\200\002\"v\n\032GetComponentConfigRespons"
    "e\022@\n\017ComponentConfig\030\001 \001(\0132\'.SAFplus.Rpc"
    ".amfMgmtRpc.ComponentConfig\022\013\n\003err\030\002 \001(\021"
    "*\t\010\350\007\020\200\200\200\200\002\"J\n\024GetNodeConfigRequest\022\025\n\ra"
    "mfMgmtHandle\030\001 \003(\014\022\020\n\010nodeName\030\002 \001(\t*\t\010\350"
    "\007\020\200\200\200\200\002\"g\n\025GetNodeConfigResponse\0226\n\nNode"
    "Config\030\001 \001(\0132\".SAFplus.Rpc.amfMgmtRpc.No"
    "deConfig\022\013\n\003err\030\002 \001(\021*\t\010\350\007\020\200\200\200\200\002\"F\n\022GetS"
    "UConfigRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\016\n"
    "\006suName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"s\n\023GetSUConfigR"
    "esponse\022D\n\021ServiceUnitConfig\030\001 \001(\0132).SAF"
    "plus.Rpc.amfMgmtRpc.ServiceUnitConfig\022\013\n"
    "\003err\030\002 \001(\021*\t\010\350\007\020\200\200\200\200\002\"F\n\022GetSGConfigRequ"
    "est\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\016\n\006sgName\030\002 \001"
    "(\t*\t\010\350\007\020\200\200\200\200\002\"u\n\023GetSGConfigResponse\022F\n\022"
    "ServiceGroupConfig\030\001 \001(\0132*.SAFplus.Rpc.a"
    "mfMgmtRpc.ServiceGroupConfig\022\013\n\003err\030\002 \001("
    "\021*\t\010\350\007\020\200\200\200\200\002\"F\n\022GetSIConfigRequest\022\025\n\ram"
    "fMgmtHandle\030\001 \003(\014\022\016\n\006siName\030\002 \001(\t*\t\010\350\007\020\200"
    "\200\200\200\002\"{\n\023GetSIConfigResponse\022L\n\025ServiceIn"
    "stanceConfig\030\001 \001(\0132-.SAFplus.Rpc.amfMgmt"
    "Rpc.ServiceInstanceConfig\022\013\n\003err\030\002 \001(\021*\t"
    "\010\350\007\020\200\200\200\200\002\"H\n\023GetCSIConfigRequest\022\025\n\ramfM"
    "gmtHandle\030\001 \003(\014\022\017\n\007csiName\030\002 \001(\t*\t\010\350\007\020\200\200"
    "\200\200\002\"\216\001\n\024GetCSIConfigResponse\022^\n\036Componen"
    "tServiceInstanceConfig\030\001 \001(\01326.SAFplus.R"
    "pc.amfMgmtRpc.ComponentServiceInstanceCo"
    "nfig\022\013\n\003err\030\002 \001(\021*\t\010\350\007\020\200\200\200\200\002\"O\n\031GetCompo"
    "nentStatusRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014"
    "\022\020\n\010compName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"v\n\032GetComp"
    "onentStatusResponse\022@\n\017ComponentStatus\030\001"
    " \001(\0132\'.SAFplus.Rpc.amfMgmtRpc.ComponentS"
    "tatus\022\013\n\003err\030\002 \001(\021*\t\010\350\007\020\200\200\200\200\002\"J\n\024GetNode"
    "StatusRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\020\n\010"
    "nodeName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"g\n\025GetNodeStat"
    "usResponse\0226\n\nNodeStatus\030\001 \001(\0132\".SAFplus"
    ".Rpc.amfMgmtRpc.NodeStatus\022\013\n\003err\030\002 \001(\021*"
    "\t\010\350\007\020\200\200\200\200\002\"F\n\022GetSUStatusRequest\022\025\n\ramfM"
    "gmtHandle\030\001 \003(\014\022\016\n\006suName\030\002 \001(\t*\t\010\350\007\020\200\200\200"
    "\200\002\"s\n\023GetSUStatusResponse\022D\n\021ServiceUnit"
    "Status\030\001 \001(\0132).SAFplus.Rpc.amfMgmtRpc.Se"
    "rviceUnitStatus\022\013\n\003err\030\002 \001(\021*\t\010\350\007\020\200\200\200\200\002\""
    "F\n\022GetSGStatusRequest\022\025\n\ramfMgmtHandle\030\001"
    " \003(\014\022\016\n\006sgName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"u\n\023GetSG"
    "StatusResponse\022F\n\022ServiceGroupStatus\030\001 \001"
    "(\0132*.SAFplus.Rpc.amfMgmtRpc.ServiceGroup"
    "Status\022\013\n\003err\030\002 \001(\021*\t\010\350\007\020\200\200\200\200\002\"F\n\022GetSIS"
    "tatusRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\016\n\006s"
    "iName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"{\n\023GetSIStatusRes"
    "ponse\022L\n\025ServiceInstanceStatus\030\001 \001(\0132-.S"
    "AFplus.Rpc.amfMgmtRpc.ServiceInstanceSta"
    "tus\022\013\n\003err\030\002 \001(\021*\t\010\350\007\020\200\200\200\200\002\"H\n\023GetCSISta"
    "tusRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\017\n\007csi"
    "Name\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"\216\001\n\024GetCSIStatusRe"
    "sponse\022^\n\036ComponentServiceInstanceStatus"
    "\030\001 \001(\01326.SAFplus.Rpc.amfMgmtRpc.Componen"
    "tServiceInstanceStatus\022\013\n\003err\030\002 \001(\021*\t\010\350\007"
    "\020\200\200\200\200\002\"H\n\022NodeRestartRequest\022\025\n\ramfMgmtH"
    "andle\030\001 \003(\014\022\020\n\010nodeName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002"
    "\"-\n\023NodeRestartResponse\022\013\n\003err\030\001 \001(\021*\t\010\350"
    "\007\020\200\200\200\200\002\"M\n\031ServiceUnitRestartRequest\022\025\n\r"
    "amfMgmtHandle\030\001 \003(\014\022\016\n\006suName\030\002 \001(\t*\t\010\350\007"
    "\020\200\200\200\200\002\"4\n\032ServiceUnitRestartResponse\022\013\n\003"
    "err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"M\n\027ComponentRestart"
    "Request\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\020\n\010compNa"
    "me\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"2\n\030ComponentRestartR"
    "esponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"T\n\017Adjus"
    "tSGRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014\022\016\n\006sgN"
    "ame\030\002 \001(\t\022\017\n\007enabled\030\003 \001(\010*\t\010\350\007\020\200\200\200\200\002\"*\n"
    "\020AdjustSGResponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200"
    "\002\"A\n\rSwapSIRequest\022\025\n\ramfMgmtHandle\030\001 \003("
    "\014\022\016\n\006siName\030\002 \001(\t*\t\010\350\007\020\200\200\200\200\002\"(\n\016SwapSIRe"
    "sponse\022\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002\"\213\001\n\026CompE"
    "rrorReportRequest\022\025\n\ramfMgmtHandle\030\001 \003(\014"
    "\022\020\n\010compName\030\002 \001(\t\022=\n\023recommendedRecover"
    "y\030\003 \001(\0162 .SAFplus.Rpc.amfMgmtRpc.Recover"
    "y*\t\010\350\007\020\200\200\200\200\002\"1\n\027CompErrorReportResponse\022"
    "\013\n\003err\030\001 \001(\021*\t\010\350\007\020\200\200\200\200\002*\377\001\n\rPresenceStat"
    "e\022 \n\034PresenceState_uninstantiated\020\000\022\037\n\033P"
    "resenceState_instantiating\020\001\022\036\n\032Presence"
    "State_instantiated\020\002\022\035\n\031PresenceState_te"
    "rminating\020\003\022\034\n\030PresenceState_restarting\020"
    "\004\022%\n!PresenceState_instantiationFailed\020\005"
    "\022#\n\037PresenceState_terminationFailed\020\006\032\002\020"
    "\001*p\n\016ReadinessState\022\037\n\033ReadinessState_ou"
    "tOfService\020\000\022\034\n\030ReadinessState_inService"
    "\020\001\022\033\n\027ReadinessState_stopping\020\002\032\002\020\001*\206\002\n\036"
    "HighAvailabilityReadinessState\0225\n1HighAv"
    "ailabilityReadinessState_readyForAssignm"
    "ent\020\000\0229\n5HighAvailabilityReadinessState_"
    "readyForActiveDegraded\020\001\0224\n0HighAvailabi"
    "lityReadinessState_notReadyForActive\020\002\0228"
    "\n4HighAvailabilityReadinessState_notRead"
    "yForAssignment\020\003\032\002\020\001*\245\001\n\025HighAvailabilit"
    "yState\022 \n\034HighAvailabilityState_active\020\001"
    "\022!\n\035HighAvailabilityState_standby\020\002\022\036\n\032H"
    "ighAvailabilityState_idle\020\003\022#\n\037HighAvail"
    "abilityState_quiescing\020\004\032\002\020\001*p\n\023Administ"
    "rativeState\022\033\n\027AdministrativeState_off\020\000"
    "\022\034\n\030AdministrativeState_idle\020\001\022\032\n\026Admini"
    "strativeState_on\020\002\032\002\020\001*\210\002\n\010Recovery\022\035\n\031R"
    "ecovery_NoRecommendation\020\001\022\024\n\020Recovery_R"
    "estart\020\002\022\025\n\021Recovery_Failover\020\003\022\033\n\027Recov"
    "ery_NodeSwitchover\020\004\022\031\n\025Recovery_NodeFai"
    "lover\020\005\022\031\n\025Recovery_NodeFailfast\020\006\022\031\n\025Re"
    "covery_ClusterReset\020\007\022\037\n\033Recovery_Applic"
    "ationRestart\020\010\022\035\n\031Recovery_ContainerRest"
    "art\020\t\032\002\020\001*\271\001\n\014ProcessState\022\030\n\024ProcessSta"
    "te_Running\020\000\022\031\n\025ProcessState_Sleeping\020\001\022"
    "\037\n\033ProcessState_WaitingForDisk\020\002\022\027\n\023Proc"
    "essState_Zombie\020\003\022\030\n\024ProcessState_Stoppe"
    "d\020\004\022\034\n\030ProcessState_TracingStop\020\005\032\002\020\001*\225\001"
    "\n\017CapabilityModel\022*\n&CapabilityModel_x_a"
    "ctive_and_y_standby\020\000\022)\n%CapabilityModel"
    "_x_active_or_y_standby\020\001\022\'\n#CapabilityMo"
    "del_not_preinstantiable\020\002\032\002\020\001*\273\001\n\020Pendin"
    "gOperation\022\031\n\025PendingOperation_none\020\000\022\"\n"
    "\036PendingOperation_instantiation\020\001\022\035\n\031Pen"
    "dingOperation_shutdown\020\002\022#\n\037PendingOpera"
    "tion_workAssignment\020\003\022 \n\034PendingOperatio"
    "n_workRemoval\020\004\032\002\020\001*\177\n\017AssignmentState\022\036"
    "\n\032AssignmentState_unassigned\020\000\022!\n\035Assign"
    "mentState_fullyAssigned\020\001\022%\n!AssignmentS"
    "tate_partiallyAssigned\020\002\032\002\020\0012\2471\n\namfMgmt"
    "Rpc\022c\n\ninitialize\022).SAFplus.Rpc.amfMgmtR"
    "pc.InitializeRequest\032*.SAFplus.Rpc.amfMg"
    "mtRpc.InitializeResponse\022]\n\010finalize\022\'.S"
    "AFplus.Rpc.amfMgmtRpc.FinalizeRequest\032(."
    "SAFplus.Rpc.amfMgmtRpc.FinalizeResponse\022"
    "W\n\006commit\022%.SAFplus.Rpc.amfMgmtRpc.Commi"
    "tRequest\032&.SAFplus.Rpc.amfMgmtRpc.Commit"
    "Response\022r\n\017createComponent\022..SAFplus.Rp"
    "c.amfMgmtRpc.CreateComponentRequest\032/.SA"
    "Fplus.Rpc.amfMgmtRpc.CreateComponentResp"
    "onse\022r\n\017updateComponent\022..SAFplus.Rpc.am"
    "fMgmtRpc.UpdateComponentRequest\032/.SAFplu"
    "s.Rpc.amfMgmtRpc.UpdateComponentResponse"
    "\022r\n\017deleteComponent\022..SAFplus.Rpc.amfMgm"
    "tRpc.DeleteComponentRequest\032/.SAFplus.Rp"
    "c.amfMgmtRpc.DeleteComponentResponse\022]\n\010"
    "createSG\022\'.SAFplus.Rpc.amfMgmtRpc.Create"
    "SGRequest\032(.SAFplus.Rpc.amfMgmtRpc.Creat"
    "eSGResponse\022]\n\010updateSG\022\'.SAFplus.Rpc.am"
    "fMgmtRpc.UpdateSGRequest\032(.SAFplus.Rpc.a"
    "mfMgmtRpc.UpdateSGResponse\022]\n\010deleteSG\022\'"
    ".SAFplus.Rpc.amfMgmtRpc.DeleteSGRequest\032"
    "(.SAFplus.Rpc.amfMgmtRpc.DeleteSGRespons"
    "e\022c\n\ncreateNode\022).SAFplus.Rpc.amfMgmtRpc"
    ".CreateNodeRequest\032*.SAFplus.Rpc.amfMgmt"
    "Rpc.CreateNodeResponse\022c\n\nupdateNode\022).S"
    "AFplus.Rpc.amfMgmtRpc.UpdateNodeRequest\032"
    "*.SAFplus.Rpc.amfMgmtRpc.UpdateNodeRespo"
    "nse\022c\n\ndeleteNode\022).SAFplus.Rpc.amfMgmtR"
    "pc.DeleteNodeRequest\032*.SAFplus.Rpc.amfMg"
    "mtRpc.DeleteNodeResponse\022]\n\010createSU\022\'.S"
    "AFplus.Rpc.amfMgmtRpc.CreateSURequest\032(."
    "SAFplus.Rpc.amfMgmtRpc.CreateSUResponse\022"
    "]\n\010updateSU\022\'.SAFplus.Rpc.amfMgmtRpc.Upd"
    "ateSURequest\032(.SAFplus.Rpc.amfMgmtRpc.Up"
    "dateSUResponse\022]\n\010deleteSU\022\'.SAFplus.Rpc"
    ".amfMgmtRpc.DeleteSURequest\032(.SAFplus.Rp"
    "c.amfMgmtRpc.DeleteSUResponse\022]\n\010createS"
    "I\022\'.SAFplus.Rpc.amfMgmtRpc.CreateSIReque"
    "st\032(.SAFplus.Rpc.amfMgmtRpc.CreateSIResp"
    "onse\022]\n\010updateSI\022\'.SAFplus.Rpc.amfMgmtRp"
    "c.UpdateSIRequest\032(.SAFplus.Rpc.amfMgmtR"
    "pc.UpdateSIResponse\022]\n\010deleteSI\022\'.SAFplu"
    "s.Rpc.amfMgmtRpc.DeleteSIRequest\032(.SAFpl"
    "us.Rpc.amfMgmtRpc.DeleteSIResponse\022`\n\tcr"
    "eateCSI\022(.SAFplus.Rpc.amfMgmtRpc.CreateC"
    "SIRequest\032).SAFplus.Rpc.amfMgmtRpc.Creat"
    "eCSIResponse\022`\n\tupdateCSI\022(.SAFplus.Rpc."
    "amfMgmtRpc.UpdateCSIRequest\032).SAFplus.Rp"
    "c.amfMgmtRpc.UpdateCSIResponse\022`\n\tdelete"
    "CSI\022(.SAFplus.Rpc.amfMgmtRpc.DeleteCSIRe"
    "quest\032).SAFplus.Rpc.amfMgmtRpc.DeleteCSI"
    "Response\022i\n\014deleteCSINVP\022+.SAFplus.Rpc.a"
    "mfMgmtRpc.DeleteCSINVPRequest\032,.SAFplus."
    "Rpc.amfMgmtRpc.DeleteCSINVPResponse\022u\n\020d"
    "eleteNodeSUList\022/.SAFplus.Rpc.amfMgmtRpc"
    ".DeleteNodeSUListRequest\0320.SAFplus.Rpc.a"
    "mfMgmtRpc.DeleteNodeSUListResponse\022o\n\016de"
    "leteSGSUList\022-.SAFplus.Rpc.amfMgmtRpc.De"
    "leteSGSUListRequest\032..SAFplus.Rpc.amfMgm"
    "tRpc.DeleteSGSUListResponse\022o\n\016deleteSGS"
    "IList\022-.SAFplus.Rpc.amfMgmtRpc.DeleteSGS"
    "IListRequest\032..SAFplus.Rpc.amfMgmtRpc.De"
    "leteSGSIListResponse\022u\n\020deleteSUCompList"
    "\022/.SAFplus.Rpc.amfMgmtRpc.DeleteSUCompLi"
    "stRequest\0320.SAFplus.Rpc.amfMgmtRpc.Delet"
    "eSUCompListResponse\022r\n\017deleteSICSIList\022."
    ".SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListR"
    "equest\032/.SAFplus.Rpc.amfMgmtRpc.DeleteSI"
    "CSIListResponse\022{\n\022lockNodeAssignment\0221."
    "SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmen"
    "tRequest\0322.SAFplus.Rpc.amfMgmtRpc.LockNo"
    "deAssignmentResponse\022u\n\020lockSGAssignment"
    "\022/.SAFplus.Rpc.amfMgmtRpc.LockSGAssignme"
    "ntRequest\0320.SAFplus.Rpc.amfMgmtRpc.LockS"
    "GAssignmentResponse\022u\n\020lockSUAssignment\022"
    "/.SAFplus.Rpc.amfMgmtRpc.LockSUAssignmen"
    "tRequest\0320.SAFplus.Rpc.amfMgmtRpc.LockSU"
    "AssignmentResponse\022u\n\020lockSIAssignment\022/"
    ".SAFplus.Rpc.amfMgmtRpc.LockSIAssignment"
    "Request\0320.SAFplus.Rpc.amfMgmtRpc.LockSIA"
    "ssignmentResponse\022\204\001\n\025lockNodeInstantiat"
    "ion\0224.SAFplus.Rpc.amfMgmtRpc.LockNodeIns"
    "tantiationRequest\0325.SAFplus.Rpc.amfMgmtR"
    "pc.LockNodeInstantiationResponse\022~\n\023lock"
    "SGInstantiation\0222.SAFplus.Rpc.amfMgmtRpc"
    ".LockSGInstantiationRequest\0323.SAFplus.Rp"
    "c.amfMgmtRpc.LockSGInstantiationResponse"
    "\022~\n\023lockSUInstantiation\0222.SAFplus.Rpc.am"
    "fMgmtRpc.LockSUInstantiationRequest\0323.SA"
    "Fplus.Rpc.amfMgmtRpc.LockSUInstantiation"
    "Response\022c\n\nunlockNode\022).SAFplus.Rpc.amf"
    "MgmtRpc.UnlockNodeRequest\032*.SAFplus.Rpc."
    "amfMgmtRpc.UnlockNodeResponse\022]\n\010unlockS"
    "G\022\'.SAFplus.Rpc.amfMgmtRpc.UnlockSGReque"
    "st\032(.SAFplus.Rpc.amfMgmtRpc.UnlockSGResp"
    "onse\022]\n\010unlockSU\022\'.SAFplus.Rpc.amfMgmtRp"
    "c.UnlockSURequest\032(.SAFplus.Rpc.amfMgmtR"
    "pc.UnlockSUResponse\022]\n\010unlockSI\022\'.SAFplu"
    "s.Rpc.amfMgmtRpc.UnlockSIRequest\032(.SAFpl"
    "us.Rpc.amfMgmtRpc.UnlockSIResponse\022c\n\nre"
    "pairNode\022).SAFplus.Rpc.amfMgmtRpc.Repair"
    "NodeRequest\032*.SAFplus.Rpc.amfMgmtRpc.Rep"
    "airNodeResponse\022r\n\017repairComponent\022..SAF"
    "plus.Rpc.amfMgmtRpc.RepairComponentReque"
    "st\032/.SAFplus.Rpc.amfMgmtRpc.RepairCompon"
    "entResponse\022]\n\010repairSU\022\'.SAFplus.Rpc.am"
    "fMgmtRpc.RepairSURequest\032(.SAFplus.Rpc.a"
    "mfMgmtRpc.RepairSUResponse\022{\n\022getCompone"
    "ntConfig\0221.SAFplus.Rpc.amfMgmtRpc.GetCom"
    "ponentConfigRequest\0322.SAFplus.Rpc.amfMgm"
    "tRpc.GetComponentConfigResponse\022l\n\rgetNo"
    "deConfig\022,.SAFplus.Rpc.amfMgmtRpc.GetNod"
    "eConfigRequest\032-.SAFplus.Rpc.amfMgmtRpc."
    "GetNodeConfigResponse\022f\n\013getSUConfig\022*.S"
    "AFplus.Rpc.amfMgmtRpc.GetSUConfigRequest"
    "\032+.SAFplus.Rpc.amfMgmtRpc.GetSUConfigRes"
    "ponse\022f\n\013getSGConfig\022*.SAFplus.Rpc.amfMg"
    "mtRpc.GetSGConfigRequest\032+.SAFplus.Rpc.a"
    "mfMgmtRpc.GetSGConfigResponse\022f\n\013getSICo"
    "nfig\022*.SAFplus.Rpc.amfMgmtRpc.GetSIConfi"
    "gRequest\032+.SAFplus.Rpc.amfMgmtRpc.GetSIC"
    "onfigResponse\022i\n\014getCSIConfig\022+.SAFplus."
    "Rpc.amfMgmtRpc.GetCSIConfigRequest\032,.SAF"
    "plus.Rpc.amfMgmtRpc.GetCSIConfigResponse"
    "\022{\n\022getComponentStatus\0221.SAFplus.Rpc.amf"
    "MgmtRpc.GetComponentStatusRequest\0322.SAFp"
    "lus.Rpc.amfMgmtRpc.GetComponentStatusRes"
    "ponse\022l\n\rgetNodeStatus\022,.SAFplus.Rpc.amf"
    "MgmtRpc.GetNodeStatusRequest\032-.SAFplus.R"
    "pc.amfMgmtRpc.GetNodeStatusResponse\022f\n\013g"
    "etSUStatus\022*.SAFplus.Rpc.amfMgmtRpc.GetS"
    "UStatusRequest\032+.SAFplus.Rpc.amfMgmtRpc."
    "GetSUStatusResponse\022f\n\013getSGStatus\022*.SAF"
    "plus.Rpc.amfMgmtRpc.GetSGStatusRequest\032+"
    ".SAFplus.Rpc.amfMgmtRpc.GetSGStatusRespo"
    "nse\022f\n\013getSIStatus\022*.SAFplus.Rpc.amfMgmt"
    "Rpc.GetSIStatusRequest\032+.SAFplus.Rpc.amf"
    "MgmtRpc.GetSIStatusResponse\022i\n\014getCSISta"
    "tus\022+.SAFplus.Rpc.amfMgmtRpc.GetCSIStatu"
    "sRequest\032,.SAFplus.Rpc.amfMgmtRpc.GetCSI"
    "StatusResponse\022f\n\013nodeRestart\022*.SAFplus."
    "Rpc.amfMgmtRpc.NodeRestartRequest\032+.SAFp"
    "lus.Rpc.amfMgmtRpc.NodeRestartResponse\022{"
    "\n\022serviceUnitRestart\0221.SAFplus.Rpc.amfMg"
    "mtRpc.ServiceUnitRestartRequest\0322.SAFplu"
    "s.Rpc.amfMgmtRpc.ServiceUnitRestartRespo"
    "nse\022u\n\020componentRestart\022/.SAFplus.Rpc.am"
    "fMgmtRpc.ComponentRestartRequest\0320.SAFpl"
    "us.Rpc.amfMgmtRpc.ComponentRestartRespon"
    "se\022]\n\010adjustSG\022\'.SAFplus.Rpc.amfMgmtRpc."
    "AdjustSGRequest\032(.SAFplus.Rpc.amfMgmtRpc"
    ".AdjustSGResponse\022W\n\006swapSI\022%.SAFplus.Rp"
    "c.amfMgmtRpc.SwapSIRequest\032&.SAFplus.Rpc"
    ".amfMgmtRpc.SwapSIResponse\022r\n\017compErrorR"
    "eport\022..SAFplus.Rpc.amfMgmtRpc.CompError"
    "ReportRequest\032/.SAFplus.Rpc.amfMgmtRpc.C"
    "ompErrorReportResponseB\t\200\001\000\210\001\000\220\001\001", 26713);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "amfMgmtRpc.proto", &protobuf_RegisterTypes);
  SaTimeT::default_instance_ = new SaTimeT();
  Date::default_instance_ = new Date();
  IntStatistic::default_instance_ = new IntStatistic();
  DecStatistic::default_instance_ = new DecStatistic();
  Failures::default_instance_ = new Failures();
  CpuUtilization::default_instance_ = new CpuUtilization();
  MemUtilization::default_instance_ = new MemUtilization();
  PageFaults::default_instance_ = new PageFaults();
  NumThreads::default_instance_ = new NumThreads();
  ResidentMem::default_instance_ = new ResidentMem();
  ProcessStats::default_instance_ = new ProcessStats();
  EscalationPolicy::default_instance_ = new EscalationPolicy();
  Execution::default_instance_ = new Execution();
  ServiceUnitFailureEscalationPolicy::default_instance_ = new ServiceUnitFailureEscalationPolicy();
  NodeConfig::default_instance_ = new NodeConfig();
  ComponentRestart::default_instance_ = new ComponentRestart();
  ServiceUnitRestart::default_instance_ = new ServiceUnitRestart();
  ServiceGroupConfig::default_instance_ = new ServiceGroupConfig();
  Instantiate::default_instance_ = new Instantiate();
  Terminate::default_instance_ = new Terminate();
  Cleanup::default_instance_ = new Cleanup();
  Timeouts::default_instance_ = new Timeouts();
  ComponentConfig::default_instance_ = new ComponentConfig();
  Data::default_instance_ = new Data();
  ComponentServiceInstanceConfig::default_instance_ = new ComponentServiceInstanceConfig();
  ServiceInstanceConfig::default_instance_ = new ServiceInstanceConfig();
  ServiceUnitConfig::default_instance_ = new ServiceUnitConfig();
  User::default_instance_ = new User();
  LowPriorityUser::default_instance_ = new LowPriorityUser();
  IoWait::default_instance_ = new IoWait();
  SysTime::default_instance_ = new SysTime();
  IntTime::default_instance_ = new IntTime();
  SoftIrqs::default_instance_ = new SoftIrqs();
  Idle::default_instance_ = new Idle();
  ContextSwitches::default_instance_ = new ContextSwitches();
  ProcessCount::default_instance_ = new ProcessCount();
  ProcessStarts::default_instance_ = new ProcessStarts();
  Load::default_instance_ = new Load();
  Stats::default_instance_ = new Stats();
  NodeStatus::default_instance_ = new NodeStatus();
  NumAssignedServiceUnits::default_instance_ = new NumAssignedServiceUnits();
  NumIdleServiceUnits::default_instance_ = new NumIdleServiceUnits();
  NumSpareServiceUnits::default_instance_ = new NumSpareServiceUnits();
  ServiceGroupStatus::default_instance_ = new ServiceGroupStatus();
  ProcStats::default_instance_ = new ProcStats();
  ActiveAssignments::default_instance_ = new ActiveAssignments();
  StandbyAssignments::default_instance_ = new StandbyAssignments();
  RestartCount::default_instance_ = new RestartCount();
  ComponentStatus::default_instance_ = new ComponentStatus();
  ComponentServiceInstanceStatus::default_instance_ = new ComponentServiceInstanceStatus();
  NumActiveAssignments::default_instance_ = new NumActiveAssignments();
  NumStandbyAssignments::default_instance_ = new NumStandbyAssignments();
  ServiceInstanceStatus::default_instance_ = new ServiceInstanceStatus();
  NumActiveServiceInstances::default_instance_ = new NumActiveServiceInstances();
  NumStandbyServiceInstances::default_instance_ = new NumStandbyServiceInstances();
  ServiceUnitStatus::default_instance_ = new ServiceUnitStatus();
  InitializeRequest::default_instance_ = new InitializeRequest();
  InitializeResponse::default_instance_ = new InitializeResponse();
  FinalizeRequest::default_instance_ = new FinalizeRequest();
  FinalizeResponse::default_instance_ = new FinalizeResponse();
  CommitRequest::default_instance_ = new CommitRequest();
  CommitResponse::default_instance_ = new CommitResponse();
  CreateComponentRequest::default_instance_ = new CreateComponentRequest();
  CreateComponentResponse::default_instance_ = new CreateComponentResponse();
  UpdateComponentRequest::default_instance_ = new UpdateComponentRequest();
  UpdateComponentResponse::default_instance_ = new UpdateComponentResponse();
  DeleteComponentRequest::default_instance_ = new DeleteComponentRequest();
  DeleteComponentResponse::default_instance_ = new DeleteComponentResponse();
  CreateSGRequest::default_instance_ = new CreateSGRequest();
  CreateSGResponse::default_instance_ = new CreateSGResponse();
  UpdateSGRequest::default_instance_ = new UpdateSGRequest();
  UpdateSGResponse::default_instance_ = new UpdateSGResponse();
  DeleteSGRequest::default_instance_ = new DeleteSGRequest();
  DeleteSGResponse::default_instance_ = new DeleteSGResponse();
  CreateNodeRequest::default_instance_ = new CreateNodeRequest();
  CreateNodeResponse::default_instance_ = new CreateNodeResponse();
  UpdateNodeRequest::default_instance_ = new UpdateNodeRequest();
  UpdateNodeResponse::default_instance_ = new UpdateNodeResponse();
  DeleteNodeRequest::default_instance_ = new DeleteNodeRequest();
  DeleteNodeResponse::default_instance_ = new DeleteNodeResponse();
  CreateSURequest::default_instance_ = new CreateSURequest();
  CreateSUResponse::default_instance_ = new CreateSUResponse();
  UpdateSURequest::default_instance_ = new UpdateSURequest();
  UpdateSUResponse::default_instance_ = new UpdateSUResponse();
  DeleteSURequest::default_instance_ = new DeleteSURequest();
  DeleteSUResponse::default_instance_ = new DeleteSUResponse();
  CreateSIRequest::default_instance_ = new CreateSIRequest();
  CreateSIResponse::default_instance_ = new CreateSIResponse();
  UpdateSIRequest::default_instance_ = new UpdateSIRequest();
  UpdateSIResponse::default_instance_ = new UpdateSIResponse();
  DeleteSIRequest::default_instance_ = new DeleteSIRequest();
  DeleteSIResponse::default_instance_ = new DeleteSIResponse();
  CreateCSIRequest::default_instance_ = new CreateCSIRequest();
  CreateCSIResponse::default_instance_ = new CreateCSIResponse();
  UpdateCSIRequest::default_instance_ = new UpdateCSIRequest();
  UpdateCSIResponse::default_instance_ = new UpdateCSIResponse();
  DeleteCSIRequest::default_instance_ = new DeleteCSIRequest();
  DeleteCSIResponse::default_instance_ = new DeleteCSIResponse();
  DeleteCSINVPRequest::default_instance_ = new DeleteCSINVPRequest();
  DeleteCSINVPResponse::default_instance_ = new DeleteCSINVPResponse();
  DeleteNodeSUListRequest::default_instance_ = new DeleteNodeSUListRequest();
  DeleteNodeSUListResponse::default_instance_ = new DeleteNodeSUListResponse();
  DeleteSGSUListRequest::default_instance_ = new DeleteSGSUListRequest();
  DeleteSGSUListResponse::default_instance_ = new DeleteSGSUListResponse();
  DeleteSGSIListRequest::default_instance_ = new DeleteSGSIListRequest();
  DeleteSGSIListResponse::default_instance_ = new DeleteSGSIListResponse();
  DeleteSUCompListRequest::default_instance_ = new DeleteSUCompListRequest();
  DeleteSUCompListResponse::default_instance_ = new DeleteSUCompListResponse();
  DeleteSICSIListRequest::default_instance_ = new DeleteSICSIListRequest();
  DeleteSICSIListResponse::default_instance_ = new DeleteSICSIListResponse();
  LockNodeAssignmentRequest::default_instance_ = new LockNodeAssignmentRequest();
  LockNodeAssignmentResponse::default_instance_ = new LockNodeAssignmentResponse();
  LockSGAssignmentRequest::default_instance_ = new LockSGAssignmentRequest();
  LockSGAssignmentResponse::default_instance_ = new LockSGAssignmentResponse();
  LockSUAssignmentRequest::default_instance_ = new LockSUAssignmentRequest();
  LockSUAssignmentResponse::default_instance_ = new LockSUAssignmentResponse();
  LockSIAssignmentRequest::default_instance_ = new LockSIAssignmentRequest();
  LockSIAssignmentResponse::default_instance_ = new LockSIAssignmentResponse();
  LockNodeInstantiationRequest::default_instance_ = new LockNodeInstantiationRequest();
  LockNodeInstantiationResponse::default_instance_ = new LockNodeInstantiationResponse();
  LockSGInstantiationRequest::default_instance_ = new LockSGInstantiationRequest();
  LockSGInstantiationResponse::default_instance_ = new LockSGInstantiationResponse();
  LockSUInstantiationRequest::default_instance_ = new LockSUInstantiationRequest();
  LockSUInstantiationResponse::default_instance_ = new LockSUInstantiationResponse();
  UnlockNodeRequest::default_instance_ = new UnlockNodeRequest();
  UnlockNodeResponse::default_instance_ = new UnlockNodeResponse();
  UnlockSGRequest::default_instance_ = new UnlockSGRequest();
  UnlockSGResponse::default_instance_ = new UnlockSGResponse();
  UnlockSURequest::default_instance_ = new UnlockSURequest();
  UnlockSUResponse::default_instance_ = new UnlockSUResponse();
  UnlockSIRequest::default_instance_ = new UnlockSIRequest();
  UnlockSIResponse::default_instance_ = new UnlockSIResponse();
  RepairNodeRequest::default_instance_ = new RepairNodeRequest();
  RepairNodeResponse::default_instance_ = new RepairNodeResponse();
  RepairComponentRequest::default_instance_ = new RepairComponentRequest();
  RepairComponentResponse::default_instance_ = new RepairComponentResponse();
  RepairSURequest::default_instance_ = new RepairSURequest();
  RepairSUResponse::default_instance_ = new RepairSUResponse();
  GetComponentConfigRequest::default_instance_ = new GetComponentConfigRequest();
  GetComponentConfigResponse::default_instance_ = new GetComponentConfigResponse();
  GetNodeConfigRequest::default_instance_ = new GetNodeConfigRequest();
  GetNodeConfigResponse::default_instance_ = new GetNodeConfigResponse();
  GetSUConfigRequest::default_instance_ = new GetSUConfigRequest();
  GetSUConfigResponse::default_instance_ = new GetSUConfigResponse();
  GetSGConfigRequest::default_instance_ = new GetSGConfigRequest();
  GetSGConfigResponse::default_instance_ = new GetSGConfigResponse();
  GetSIConfigRequest::default_instance_ = new GetSIConfigRequest();
  GetSIConfigResponse::default_instance_ = new GetSIConfigResponse();
  GetCSIConfigRequest::default_instance_ = new GetCSIConfigRequest();
  GetCSIConfigResponse::default_instance_ = new GetCSIConfigResponse();
  GetComponentStatusRequest::default_instance_ = new GetComponentStatusRequest();
  GetComponentStatusResponse::default_instance_ = new GetComponentStatusResponse();
  GetNodeStatusRequest::default_instance_ = new GetNodeStatusRequest();
  GetNodeStatusResponse::default_instance_ = new GetNodeStatusResponse();
  GetSUStatusRequest::default_instance_ = new GetSUStatusRequest();
  GetSUStatusResponse::default_instance_ = new GetSUStatusResponse();
  GetSGStatusRequest::default_instance_ = new GetSGStatusRequest();
  GetSGStatusResponse::default_instance_ = new GetSGStatusResponse();
  GetSIStatusRequest::default_instance_ = new GetSIStatusRequest();
  GetSIStatusResponse::default_instance_ = new GetSIStatusResponse();
  GetCSIStatusRequest::default_instance_ = new GetCSIStatusRequest();
  GetCSIStatusResponse::default_instance_ = new GetCSIStatusResponse();
  NodeRestartRequest::default_instance_ = new NodeRestartRequest();
  NodeRestartResponse::default_instance_ = new NodeRestartResponse();
  ServiceUnitRestartRequest::default_instance_ = new ServiceUnitRestartRequest();
  ServiceUnitRestartResponse::default_instance_ = new ServiceUnitRestartResponse();
  ComponentRestartRequest::default_instance_ = new ComponentRestartRequest();
  ComponentRestartResponse::default_instance_ = new ComponentRestartResponse();
  AdjustSGRequest::default_instance_ = new AdjustSGRequest();
  AdjustSGResponse::default_instance_ = new AdjustSGResponse();
  SwapSIRequest::default_instance_ = new SwapSIRequest();
  SwapSIResponse::default_instance_ = new SwapSIResponse();
  CompErrorReportRequest::default_instance_ = new CompErrorReportRequest();
  CompErrorReportResponse::default_instance_ = new CompErrorReportResponse();
  SaTimeT::default_instance_->InitAsDefaultInstance();
  Date::default_instance_->InitAsDefaultInstance();
  IntStatistic::default_instance_->InitAsDefaultInstance();
  DecStatistic::default_instance_->InitAsDefaultInstance();
  Failures::default_instance_->InitAsDefaultInstance();
  CpuUtilization::default_instance_->InitAsDefaultInstance();
  MemUtilization::default_instance_->InitAsDefaultInstance();
  PageFaults::default_instance_->InitAsDefaultInstance();
  NumThreads::default_instance_->InitAsDefaultInstance();
  ResidentMem::default_instance_->InitAsDefaultInstance();
  ProcessStats::default_instance_->InitAsDefaultInstance();
  EscalationPolicy::default_instance_->InitAsDefaultInstance();
  Execution::default_instance_->InitAsDefaultInstance();
  ServiceUnitFailureEscalationPolicy::default_instance_->InitAsDefaultInstance();
  NodeConfig::default_instance_->InitAsDefaultInstance();
  ComponentRestart::default_instance_->InitAsDefaultInstance();
  ServiceUnitRestart::default_instance_->InitAsDefaultInstance();
  ServiceGroupConfig::default_instance_->InitAsDefaultInstance();
  Instantiate::default_instance_->InitAsDefaultInstance();
  Terminate::default_instance_->InitAsDefaultInstance();
  Cleanup::default_instance_->InitAsDefaultInstance();
  Timeouts::default_instance_->InitAsDefaultInstance();
  ComponentConfig::default_instance_->InitAsDefaultInstance();
  Data::default_instance_->InitAsDefaultInstance();
  ComponentServiceInstanceConfig::default_instance_->InitAsDefaultInstance();
  ServiceInstanceConfig::default_instance_->InitAsDefaultInstance();
  ServiceUnitConfig::default_instance_->InitAsDefaultInstance();
  User::default_instance_->InitAsDefaultInstance();
  LowPriorityUser::default_instance_->InitAsDefaultInstance();
  IoWait::default_instance_->InitAsDefaultInstance();
  SysTime::default_instance_->InitAsDefaultInstance();
  IntTime::default_instance_->InitAsDefaultInstance();
  SoftIrqs::default_instance_->InitAsDefaultInstance();
  Idle::default_instance_->InitAsDefaultInstance();
  ContextSwitches::default_instance_->InitAsDefaultInstance();
  ProcessCount::default_instance_->InitAsDefaultInstance();
  ProcessStarts::default_instance_->InitAsDefaultInstance();
  Load::default_instance_->InitAsDefaultInstance();
  Stats::default_instance_->InitAsDefaultInstance();
  NodeStatus::default_instance_->InitAsDefaultInstance();
  NumAssignedServiceUnits::default_instance_->InitAsDefaultInstance();
  NumIdleServiceUnits::default_instance_->InitAsDefaultInstance();
  NumSpareServiceUnits::default_instance_->InitAsDefaultInstance();
  ServiceGroupStatus::default_instance_->InitAsDefaultInstance();
  ProcStats::default_instance_->InitAsDefaultInstance();
  ActiveAssignments::default_instance_->InitAsDefaultInstance();
  StandbyAssignments::default_instance_->InitAsDefaultInstance();
  RestartCount::default_instance_->InitAsDefaultInstance();
  ComponentStatus::default_instance_->InitAsDefaultInstance();
  ComponentServiceInstanceStatus::default_instance_->InitAsDefaultInstance();
  NumActiveAssignments::default_instance_->InitAsDefaultInstance();
  NumStandbyAssignments::default_instance_->InitAsDefaultInstance();
  ServiceInstanceStatus::default_instance_->InitAsDefaultInstance();
  NumActiveServiceInstances::default_instance_->InitAsDefaultInstance();
  NumStandbyServiceInstances::default_instance_->InitAsDefaultInstance();
  ServiceUnitStatus::default_instance_->InitAsDefaultInstance();
  InitializeRequest::default_instance_->InitAsDefaultInstance();
  InitializeResponse::default_instance_->InitAsDefaultInstance();
  FinalizeRequest::default_instance_->InitAsDefaultInstance();
  FinalizeResponse::default_instance_->InitAsDefaultInstance();
  CommitRequest::default_instance_->InitAsDefaultInstance();
  CommitResponse::default_instance_->InitAsDefaultInstance();
  CreateComponentRequest::default_instance_->InitAsDefaultInstance();
  CreateComponentResponse::default_instance_->InitAsDefaultInstance();
  UpdateComponentRequest::default_instance_->InitAsDefaultInstance();
  UpdateComponentResponse::default_instance_->InitAsDefaultInstance();
  DeleteComponentRequest::default_instance_->InitAsDefaultInstance();
  DeleteComponentResponse::default_instance_->InitAsDefaultInstance();
  CreateSGRequest::default_instance_->InitAsDefaultInstance();
  CreateSGResponse::default_instance_->InitAsDefaultInstance();
  UpdateSGRequest::default_instance_->InitAsDefaultInstance();
  UpdateSGResponse::default_instance_->InitAsDefaultInstance();
  DeleteSGRequest::default_instance_->InitAsDefaultInstance();
  DeleteSGResponse::default_instance_->InitAsDefaultInstance();
  CreateNodeRequest::default_instance_->InitAsDefaultInstance();
  CreateNodeResponse::default_instance_->InitAsDefaultInstance();
  UpdateNodeRequest::default_instance_->InitAsDefaultInstance();
  UpdateNodeResponse::default_instance_->InitAsDefaultInstance();
  DeleteNodeRequest::default_instance_->InitAsDefaultInstance();
  DeleteNodeResponse::default_instance_->InitAsDefaultInstance();
  CreateSURequest::default_instance_->InitAsDefaultInstance();
  CreateSUResponse::default_instance_->InitAsDefaultInstance();
  UpdateSURequest::default_instance_->InitAsDefaultInstance();
  UpdateSUResponse::default_instance_->InitAsDefaultInstance();
  DeleteSURequest::default_instance_->InitAsDefaultInstance();
  DeleteSUResponse::default_instance_->InitAsDefaultInstance();
  CreateSIRequest::default_instance_->InitAsDefaultInstance();
  CreateSIResponse::default_instance_->InitAsDefaultInstance();
  UpdateSIRequest::default_instance_->InitAsDefaultInstance();
  UpdateSIResponse::default_instance_->InitAsDefaultInstance();
  DeleteSIRequest::default_instance_->InitAsDefaultInstance();
  DeleteSIResponse::default_instance_->InitAsDefaultInstance();
  CreateCSIRequest::default_instance_->InitAsDefaultInstance();
  CreateCSIResponse::default_instance_->InitAsDefaultInstance();
  UpdateCSIRequest::default_instance_->InitAsDefaultInstance();
  UpdateCSIResponse::default_instance_->InitAsDefaultInstance();
  DeleteCSIRequest::default_instance_->InitAsDefaultInstance();
  DeleteCSIResponse::default_instance_->InitAsDefaultInstance();
  DeleteCSINVPRequest::default_instance_->InitAsDefaultInstance();
  DeleteCSINVPResponse::default_instance_->InitAsDefaultInstance();
  DeleteNodeSUListRequest::default_instance_->InitAsDefaultInstance();
  DeleteNodeSUListResponse::default_instance_->InitAsDefaultInstance();
  DeleteSGSUListRequest::default_instance_->InitAsDefaultInstance();
  DeleteSGSUListResponse::default_instance_->InitAsDefaultInstance();
  DeleteSGSIListRequest::default_instance_->InitAsDefaultInstance();
  DeleteSGSIListResponse::default_instance_->InitAsDefaultInstance();
  DeleteSUCompListRequest::default_instance_->InitAsDefaultInstance();
  DeleteSUCompListResponse::default_instance_->InitAsDefaultInstance();
  DeleteSICSIListRequest::default_instance_->InitAsDefaultInstance();
  DeleteSICSIListResponse::default_instance_->InitAsDefaultInstance();
  LockNodeAssignmentRequest::default_instance_->InitAsDefaultInstance();
  LockNodeAssignmentResponse::default_instance_->InitAsDefaultInstance();
  LockSGAssignmentRequest::default_instance_->InitAsDefaultInstance();
  LockSGAssignmentResponse::default_instance_->InitAsDefaultInstance();
  LockSUAssignmentRequest::default_instance_->InitAsDefaultInstance();
  LockSUAssignmentResponse::default_instance_->InitAsDefaultInstance();
  LockSIAssignmentRequest::default_instance_->InitAsDefaultInstance();
  LockSIAssignmentResponse::default_instance_->InitAsDefaultInstance();
  LockNodeInstantiationRequest::default_instance_->InitAsDefaultInstance();
  LockNodeInstantiationResponse::default_instance_->InitAsDefaultInstance();
  LockSGInstantiationRequest::default_instance_->InitAsDefaultInstance();
  LockSGInstantiationResponse::default_instance_->InitAsDefaultInstance();
  LockSUInstantiationRequest::default_instance_->InitAsDefaultInstance();
  LockSUInstantiationResponse::default_instance_->InitAsDefaultInstance();
  UnlockNodeRequest::default_instance_->InitAsDefaultInstance();
  UnlockNodeResponse::default_instance_->InitAsDefaultInstance();
  UnlockSGRequest::default_instance_->InitAsDefaultInstance();
  UnlockSGResponse::default_instance_->InitAsDefaultInstance();
  UnlockSURequest::default_instance_->InitAsDefaultInstance();
  UnlockSUResponse::default_instance_->InitAsDefaultInstance();
  UnlockSIRequest::default_instance_->InitAsDefaultInstance();
  UnlockSIResponse::default_instance_->InitAsDefaultInstance();
  RepairNodeRequest::default_instance_->InitAsDefaultInstance();
  RepairNodeResponse::default_instance_->InitAsDefaultInstance();
  RepairComponentRequest::default_instance_->InitAsDefaultInstance();
  RepairComponentResponse::default_instance_->InitAsDefaultInstance();
  RepairSURequest::default_instance_->InitAsDefaultInstance();
  RepairSUResponse::default_instance_->InitAsDefaultInstance();
  GetComponentConfigRequest::default_instance_->InitAsDefaultInstance();
  GetComponentConfigResponse::default_instance_->InitAsDefaultInstance();
  GetNodeConfigRequest::default_instance_->InitAsDefaultInstance();
  GetNodeConfigResponse::default_instance_->InitAsDefaultInstance();
  GetSUConfigRequest::default_instance_->InitAsDefaultInstance();
  GetSUConfigResponse::default_instance_->InitAsDefaultInstance();
  GetSGConfigRequest::default_instance_->InitAsDefaultInstance();
  GetSGConfigResponse::default_instance_->InitAsDefaultInstance();
  GetSIConfigRequest::default_instance_->InitAsDefaultInstance();
  GetSIConfigResponse::default_instance_->InitAsDefaultInstance();
  GetCSIConfigRequest::default_instance_->InitAsDefaultInstance();
  GetCSIConfigResponse::default_instance_->InitAsDefaultInstance();
  GetComponentStatusRequest::default_instance_->InitAsDefaultInstance();
  GetComponentStatusResponse::default_instance_->InitAsDefaultInstance();
  GetNodeStatusRequest::default_instance_->InitAsDefaultInstance();
  GetNodeStatusResponse::default_instance_->InitAsDefaultInstance();
  GetSUStatusRequest::default_instance_->InitAsDefaultInstance();
  GetSUStatusResponse::default_instance_->InitAsDefaultInstance();
  GetSGStatusRequest::default_instance_->InitAsDefaultInstance();
  GetSGStatusResponse::default_instance_->InitAsDefaultInstance();
  GetSIStatusRequest::default_instance_->InitAsDefaultInstance();
  GetSIStatusResponse::default_instance_->InitAsDefaultInstance();
  GetCSIStatusRequest::default_instance_->InitAsDefaultInstance();
  GetCSIStatusResponse::default_instance_->InitAsDefaultInstance();
  NodeRestartRequest::default_instance_->InitAsDefaultInstance();
  NodeRestartResponse::default_instance_->InitAsDefaultInstance();
  ServiceUnitRestartRequest::default_instance_->InitAsDefaultInstance();
  ServiceUnitRestartResponse::default_instance_->InitAsDefaultInstance();
  ComponentRestartRequest::default_instance_->InitAsDefaultInstance();
  ComponentRestartResponse::default_instance_->InitAsDefaultInstance();
  AdjustSGRequest::default_instance_->InitAsDefaultInstance();
  AdjustSGResponse::default_instance_->InitAsDefaultInstance();
  SwapSIRequest::default_instance_->InitAsDefaultInstance();
  SwapSIResponse::default_instance_->InitAsDefaultInstance();
  CompErrorReportRequest::default_instance_->InitAsDefaultInstance();
  CompErrorReportResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_amfMgmtRpc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_amfMgmtRpc_2eproto {
  StaticDescriptorInitializer_amfMgmtRpc_2eproto() {
    protobuf_AddDesc_amfMgmtRpc_2eproto();
  }
} static_descriptor_initializer_amfMgmtRpc_2eproto_;
const ::google::protobuf::EnumDescriptor* PresenceState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PresenceState_descriptor_;
}
bool PresenceState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ReadinessState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadinessState_descriptor_;
}
bool ReadinessState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HighAvailabilityReadinessState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HighAvailabilityReadinessState_descriptor_;
}
bool HighAvailabilityReadinessState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HighAvailabilityState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HighAvailabilityState_descriptor_;
}
bool HighAvailabilityState_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AdministrativeState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdministrativeState_descriptor_;
}
bool AdministrativeState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Recovery_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Recovery_descriptor_;
}
bool Recovery_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ProcessState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProcessState_descriptor_;
}
bool ProcessState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CapabilityModel_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CapabilityModel_descriptor_;
}
bool CapabilityModel_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PendingOperation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PendingOperation_descriptor_;
}
bool PendingOperation_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AssignmentState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AssignmentState_descriptor_;
}
bool AssignmentState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int SaTimeT::kUint64FieldNumber;
#endif  // !_MSC_VER

SaTimeT::SaTimeT()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.SaTimeT)
}

void SaTimeT::InitAsDefaultInstance() {
}

SaTimeT::SaTimeT(const SaTimeT& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.SaTimeT)
}

void SaTimeT::SharedCtor() {
  _cached_size_ = 0;
  uint64_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SaTimeT::~SaTimeT() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.SaTimeT)
  SharedDtor();
}

void SaTimeT::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SaTimeT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SaTimeT::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SaTimeT_descriptor_;
}

const SaTimeT& SaTimeT::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

SaTimeT* SaTimeT::default_instance_ = NULL;

SaTimeT* SaTimeT::New() const {
  return new SaTimeT;
}

void SaTimeT::Clear() {
  _extensions_.Clear();
  uint64_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SaTimeT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.SaTimeT)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uint64 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint64_)));
          set_has_uint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.SaTimeT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.SaTimeT)
  return false;
#undef DO_
}

void SaTimeT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.SaTimeT)
  // required uint64 uint64 = 1;
  if (has_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uint64(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.SaTimeT)
}

::google::protobuf::uint8* SaTimeT::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.SaTimeT)
  // required uint64 uint64 = 1;
  if (has_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uint64(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.SaTimeT)
  return target;
}

int SaTimeT::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 uint64 = 1;
    if (has_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint64());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SaTimeT::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SaTimeT* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SaTimeT*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SaTimeT::MergeFrom(const SaTimeT& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uint64()) {
      set_uint64(from.uint64());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SaTimeT::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaTimeT::CopyFrom(const SaTimeT& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaTimeT::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void SaTimeT::Swap(SaTimeT* other) {
  if (other != this) {
    std::swap(uint64_, other->uint64_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata SaTimeT::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SaTimeT_descriptor_;
  metadata.reflection = SaTimeT_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Date::kUint64FieldNumber;
#endif  // !_MSC_VER

Date::Date()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.Date)
}

void Date::InitAsDefaultInstance() {
}

Date::Date(const Date& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.Date)
}

void Date::SharedCtor() {
  _cached_size_ = 0;
  uint64_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Date::~Date() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.Date)
  SharedDtor();
}

void Date::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Date::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Date::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Date_descriptor_;
}

const Date& Date::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

Date* Date::default_instance_ = NULL;

Date* Date::New() const {
  return new Date;
}

void Date::Clear() {
  _extensions_.Clear();
  uint64_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Date::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.Date)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 uint64 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint64_)));
          set_has_uint64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.Date)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.Date)
  return false;
#undef DO_
}

void Date::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.Date)
  // required uint64 uint64 = 1;
  if (has_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uint64(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.Date)
}

::google::protobuf::uint8* Date::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.Date)
  // required uint64 uint64 = 1;
  if (has_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uint64(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.Date)
  return target;
}

int Date::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 uint64 = 1;
    if (has_uint64()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint64());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Date::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Date* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Date*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Date::MergeFrom(const Date& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uint64()) {
      set_uint64(from.uint64());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Date::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Date::CopyFrom(const Date& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Date::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Date::Swap(Date* other) {
  if (other != this) {
    std::swap(uint64_, other->uint64_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Date::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Date_descriptor_;
  metadata.reflection = Date_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int IntStatistic::kCurrentFieldNumber;
const int IntStatistic::kHistory10SecFieldNumber;
const int IntStatistic::kHistory1MinFieldNumber;
const int IntStatistic::kHistory10MinFieldNumber;
const int IntStatistic::kHistory1HourFieldNumber;
const int IntStatistic::kHistory1DayFieldNumber;
const int IntStatistic::kHistory1WeekFieldNumber;
const int IntStatistic::kHistory4WeeksFieldNumber;
#endif  // !_MSC_VER

IntStatistic::IntStatistic()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.IntStatistic)
}

void IntStatistic::InitAsDefaultInstance() {
}

IntStatistic::IntStatistic(const IntStatistic& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.IntStatistic)
}

void IntStatistic::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  current_ = GOOGLE_ULONGLONG(0);
  history10sec_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history1min_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history10min_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history1hour_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history1day_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history1week_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history4weeks_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IntStatistic::~IntStatistic() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.IntStatistic)
  SharedDtor();
}

void IntStatistic::SharedDtor() {
  if (history10sec_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history10sec_;
  }
  if (history1min_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history1min_;
  }
  if (history10min_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history10min_;
  }
  if (history1hour_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history1hour_;
  }
  if (history1day_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history1day_;
  }
  if (history1week_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history1week_;
  }
  if (history4weeks_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history4weeks_;
  }
  if (this != default_instance_) {
  }
}

void IntStatistic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IntStatistic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IntStatistic_descriptor_;
}

const IntStatistic& IntStatistic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

IntStatistic* IntStatistic::default_instance_ = NULL;

IntStatistic* IntStatistic::New() const {
  return new IntStatistic;
}

void IntStatistic::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 255) {
    current_ = GOOGLE_ULONGLONG(0);
    if (has_history10sec()) {
      if (history10sec_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history10sec_->clear();
      }
    }
    if (has_history1min()) {
      if (history1min_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history1min_->clear();
      }
    }
    if (has_history10min()) {
      if (history10min_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history10min_->clear();
      }
    }
    if (has_history1hour()) {
      if (history1hour_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history1hour_->clear();
      }
    }
    if (has_history1day()) {
      if (history1day_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history1day_->clear();
      }
    }
    if (has_history1week()) {
      if (history1week_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history1week_->clear();
      }
    }
    if (has_history4weeks()) {
      if (history4weeks_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history4weeks_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IntStatistic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.IntStatistic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 current = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &current_)));
          set_has_current();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_history10sec;
        break;
      }

      // optional string history10sec = 2;
      case 2: {
        if (tag == 18) {
         parse_history10sec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history10sec()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history10sec().data(), this->history10sec().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history10sec");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_history1min;
        break;
      }

      // optional string history1min = 3;
      case 3: {
        if (tag == 26) {
         parse_history1min:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history1min()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history1min().data(), this->history1min().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history1min");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_history10min;
        break;
      }

      // optional string history10min = 4;
      case 4: {
        if (tag == 34) {
         parse_history10min:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history10min()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history10min().data(), this->history10min().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history10min");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_history1hour;
        break;
      }

      // optional string history1hour = 5;
      case 5: {
        if (tag == 42) {
         parse_history1hour:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history1hour()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history1hour().data(), this->history1hour().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history1hour");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_history1day;
        break;
      }

      // optional string history1day = 6;
      case 6: {
        if (tag == 50) {
         parse_history1day:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history1day()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history1day().data(), this->history1day().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history1day");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_history1week;
        break;
      }

      // optional string history1week = 7;
      case 7: {
        if (tag == 58) {
         parse_history1week:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history1week()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history1week().data(), this->history1week().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history1week");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_history4weeks;
        break;
      }

      // optional string history4weeks = 8;
      case 8: {
        if (tag == 66) {
         parse_history4weeks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history4weeks()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history4weeks().data(), this->history4weeks().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history4weeks");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.IntStatistic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.IntStatistic)
  return false;
#undef DO_
}

void IntStatistic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.IntStatistic)
  // optional uint64 current = 1;
  if (has_current()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->current(), output);
  }

  // optional string history10sec = 2;
  if (has_history10sec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history10sec().data(), this->history10sec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history10sec");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->history10sec(), output);
  }

  // optional string history1min = 3;
  if (has_history1min()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1min().data(), this->history1min().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1min");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->history1min(), output);
  }

  // optional string history10min = 4;
  if (has_history10min()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history10min().data(), this->history10min().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history10min");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->history10min(), output);
  }

  // optional string history1hour = 5;
  if (has_history1hour()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1hour().data(), this->history1hour().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1hour");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->history1hour(), output);
  }

  // optional string history1day = 6;
  if (has_history1day()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1day().data(), this->history1day().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1day");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->history1day(), output);
  }

  // optional string history1week = 7;
  if (has_history1week()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1week().data(), this->history1week().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1week");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->history1week(), output);
  }

  // optional string history4weeks = 8;
  if (has_history4weeks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history4weeks().data(), this->history4weeks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history4weeks");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->history4weeks(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.IntStatistic)
}

::google::protobuf::uint8* IntStatistic::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.IntStatistic)
  // optional uint64 current = 1;
  if (has_current()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->current(), target);
  }

  // optional string history10sec = 2;
  if (has_history10sec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history10sec().data(), this->history10sec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history10sec");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->history10sec(), target);
  }

  // optional string history1min = 3;
  if (has_history1min()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1min().data(), this->history1min().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1min");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->history1min(), target);
  }

  // optional string history10min = 4;
  if (has_history10min()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history10min().data(), this->history10min().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history10min");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->history10min(), target);
  }

  // optional string history1hour = 5;
  if (has_history1hour()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1hour().data(), this->history1hour().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1hour");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->history1hour(), target);
  }

  // optional string history1day = 6;
  if (has_history1day()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1day().data(), this->history1day().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1day");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->history1day(), target);
  }

  // optional string history1week = 7;
  if (has_history1week()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1week().data(), this->history1week().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1week");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->history1week(), target);
  }

  // optional string history4weeks = 8;
  if (has_history4weeks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history4weeks().data(), this->history4weeks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history4weeks");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->history4weeks(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.IntStatistic)
  return target;
}

int IntStatistic::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 current = 1;
    if (has_current()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->current());
    }

    // optional string history10sec = 2;
    if (has_history10sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history10sec());
    }

    // optional string history1min = 3;
    if (has_history1min()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history1min());
    }

    // optional string history10min = 4;
    if (has_history10min()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history10min());
    }

    // optional string history1hour = 5;
    if (has_history1hour()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history1hour());
    }

    // optional string history1day = 6;
    if (has_history1day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history1day());
    }

    // optional string history1week = 7;
    if (has_history1week()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history1week());
    }

    // optional string history4weeks = 8;
    if (has_history4weeks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history4weeks());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IntStatistic::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IntStatistic* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IntStatistic*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IntStatistic::MergeFrom(const IntStatistic& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_current()) {
      set_current(from.current());
    }
    if (from.has_history10sec()) {
      set_history10sec(from.history10sec());
    }
    if (from.has_history1min()) {
      set_history1min(from.history1min());
    }
    if (from.has_history10min()) {
      set_history10min(from.history10min());
    }
    if (from.has_history1hour()) {
      set_history1hour(from.history1hour());
    }
    if (from.has_history1day()) {
      set_history1day(from.history1day());
    }
    if (from.has_history1week()) {
      set_history1week(from.history1week());
    }
    if (from.has_history4weeks()) {
      set_history4weeks(from.history4weeks());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IntStatistic::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntStatistic::CopyFrom(const IntStatistic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntStatistic::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void IntStatistic::Swap(IntStatistic* other) {
  if (other != this) {
    std::swap(current_, other->current_);
    std::swap(history10sec_, other->history10sec_);
    std::swap(history1min_, other->history1min_);
    std::swap(history10min_, other->history10min_);
    std::swap(history1hour_, other->history1hour_);
    std::swap(history1day_, other->history1day_);
    std::swap(history1week_, other->history1week_);
    std::swap(history4weeks_, other->history4weeks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata IntStatistic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IntStatistic_descriptor_;
  metadata.reflection = IntStatistic_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DecStatistic::kCurrentFieldNumber;
const int DecStatistic::kHistory10SecFieldNumber;
const int DecStatistic::kHistory1MinFieldNumber;
const int DecStatistic::kHistory10MinFieldNumber;
const int DecStatistic::kHistory1HourFieldNumber;
const int DecStatistic::kHistory1DayFieldNumber;
const int DecStatistic::kHistory1WeekFieldNumber;
const int DecStatistic::kHistory4WeeksFieldNumber;
#endif  // !_MSC_VER

DecStatistic::DecStatistic()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DecStatistic)
}

void DecStatistic::InitAsDefaultInstance() {
}

DecStatistic::DecStatistic(const DecStatistic& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DecStatistic)
}

void DecStatistic::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  current_ = GOOGLE_LONGLONG(0);
  history10sec_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history1min_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history10min_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history1hour_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history1day_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history1week_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  history4weeks_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DecStatistic::~DecStatistic() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DecStatistic)
  SharedDtor();
}

void DecStatistic::SharedDtor() {
  if (history10sec_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history10sec_;
  }
  if (history1min_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history1min_;
  }
  if (history10min_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history10min_;
  }
  if (history1hour_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history1hour_;
  }
  if (history1day_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history1day_;
  }
  if (history1week_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history1week_;
  }
  if (history4weeks_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete history4weeks_;
  }
  if (this != default_instance_) {
  }
}

void DecStatistic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DecStatistic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DecStatistic_descriptor_;
}

const DecStatistic& DecStatistic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DecStatistic* DecStatistic::default_instance_ = NULL;

DecStatistic* DecStatistic::New() const {
  return new DecStatistic;
}

void DecStatistic::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 255) {
    current_ = GOOGLE_LONGLONG(0);
    if (has_history10sec()) {
      if (history10sec_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history10sec_->clear();
      }
    }
    if (has_history1min()) {
      if (history1min_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history1min_->clear();
      }
    }
    if (has_history10min()) {
      if (history10min_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history10min_->clear();
      }
    }
    if (has_history1hour()) {
      if (history1hour_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history1hour_->clear();
      }
    }
    if (has_history1day()) {
      if (history1day_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history1day_->clear();
      }
    }
    if (has_history1week()) {
      if (history1week_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history1week_->clear();
      }
    }
    if (has_history4weeks()) {
      if (history4weeks_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        history4weeks_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DecStatistic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DecStatistic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sfixed64 current = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &current_)));
          set_has_current();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_history10sec;
        break;
      }

      // optional string history10sec = 2;
      case 2: {
        if (tag == 18) {
         parse_history10sec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history10sec()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history10sec().data(), this->history10sec().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history10sec");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_history1min;
        break;
      }

      // optional string history1min = 3;
      case 3: {
        if (tag == 26) {
         parse_history1min:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history1min()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history1min().data(), this->history1min().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history1min");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_history10min;
        break;
      }

      // optional string history10min = 4;
      case 4: {
        if (tag == 34) {
         parse_history10min:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history10min()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history10min().data(), this->history10min().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history10min");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_history1hour;
        break;
      }

      // optional string history1hour = 5;
      case 5: {
        if (tag == 42) {
         parse_history1hour:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history1hour()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history1hour().data(), this->history1hour().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history1hour");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_history1day;
        break;
      }

      // optional string history1day = 6;
      case 6: {
        if (tag == 50) {
         parse_history1day:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history1day()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history1day().data(), this->history1day().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history1day");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_history1week;
        break;
      }

      // optional string history1week = 7;
      case 7: {
        if (tag == 58) {
         parse_history1week:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history1week()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history1week().data(), this->history1week().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history1week");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_history4weeks;
        break;
      }

      // optional string history4weeks = 8;
      case 8: {
        if (tag == 66) {
         parse_history4weeks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_history4weeks()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->history4weeks().data(), this->history4weeks().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "history4weeks");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DecStatistic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DecStatistic)
  return false;
#undef DO_
}

void DecStatistic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DecStatistic)
  // optional sfixed64 current = 1;
  if (has_current()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(1, this->current(), output);
  }

  // optional string history10sec = 2;
  if (has_history10sec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history10sec().data(), this->history10sec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history10sec");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->history10sec(), output);
  }

  // optional string history1min = 3;
  if (has_history1min()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1min().data(), this->history1min().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1min");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->history1min(), output);
  }

  // optional string history10min = 4;
  if (has_history10min()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history10min().data(), this->history10min().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history10min");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->history10min(), output);
  }

  // optional string history1hour = 5;
  if (has_history1hour()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1hour().data(), this->history1hour().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1hour");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->history1hour(), output);
  }

  // optional string history1day = 6;
  if (has_history1day()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1day().data(), this->history1day().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1day");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->history1day(), output);
  }

  // optional string history1week = 7;
  if (has_history1week()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1week().data(), this->history1week().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1week");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->history1week(), output);
  }

  // optional string history4weeks = 8;
  if (has_history4weeks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history4weeks().data(), this->history4weeks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history4weeks");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->history4weeks(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DecStatistic)
}

::google::protobuf::uint8* DecStatistic::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DecStatistic)
  // optional sfixed64 current = 1;
  if (has_current()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(1, this->current(), target);
  }

  // optional string history10sec = 2;
  if (has_history10sec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history10sec().data(), this->history10sec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history10sec");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->history10sec(), target);
  }

  // optional string history1min = 3;
  if (has_history1min()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1min().data(), this->history1min().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1min");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->history1min(), target);
  }

  // optional string history10min = 4;
  if (has_history10min()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history10min().data(), this->history10min().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history10min");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->history10min(), target);
  }

  // optional string history1hour = 5;
  if (has_history1hour()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1hour().data(), this->history1hour().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1hour");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->history1hour(), target);
  }

  // optional string history1day = 6;
  if (has_history1day()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1day().data(), this->history1day().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1day");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->history1day(), target);
  }

  // optional string history1week = 7;
  if (has_history1week()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history1week().data(), this->history1week().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history1week");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->history1week(), target);
  }

  // optional string history4weeks = 8;
  if (has_history4weeks()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->history4weeks().data(), this->history4weeks().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "history4weeks");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->history4weeks(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DecStatistic)
  return target;
}

int DecStatistic::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sfixed64 current = 1;
    if (has_current()) {
      total_size += 1 + 8;
    }

    // optional string history10sec = 2;
    if (has_history10sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history10sec());
    }

    // optional string history1min = 3;
    if (has_history1min()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history1min());
    }

    // optional string history10min = 4;
    if (has_history10min()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history10min());
    }

    // optional string history1hour = 5;
    if (has_history1hour()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history1hour());
    }

    // optional string history1day = 6;
    if (has_history1day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history1day());
    }

    // optional string history1week = 7;
    if (has_history1week()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history1week());
    }

    // optional string history4weeks = 8;
    if (has_history4weeks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->history4weeks());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DecStatistic::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DecStatistic* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DecStatistic*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DecStatistic::MergeFrom(const DecStatistic& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_current()) {
      set_current(from.current());
    }
    if (from.has_history10sec()) {
      set_history10sec(from.history10sec());
    }
    if (from.has_history1min()) {
      set_history1min(from.history1min());
    }
    if (from.has_history10min()) {
      set_history10min(from.history10min());
    }
    if (from.has_history1hour()) {
      set_history1hour(from.history1hour());
    }
    if (from.has_history1day()) {
      set_history1day(from.history1day());
    }
    if (from.has_history1week()) {
      set_history1week(from.history1week());
    }
    if (from.has_history4weeks()) {
      set_history4weeks(from.history4weeks());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DecStatistic::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecStatistic::CopyFrom(const DecStatistic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecStatistic::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DecStatistic::Swap(DecStatistic* other) {
  if (other != this) {
    std::swap(current_, other->current_);
    std::swap(history10sec_, other->history10sec_);
    std::swap(history1min_, other->history1min_);
    std::swap(history10min_, other->history10min_);
    std::swap(history1hour_, other->history1hour_);
    std::swap(history1day_, other->history1day_);
    std::swap(history1week_, other->history1week_);
    std::swap(history4weeks_, other->history4weeks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DecStatistic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DecStatistic_descriptor_;
  metadata.reflection = DecStatistic_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Failures::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

Failures::Failures()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.Failures)
}

void Failures::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

Failures::Failures(const Failures& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.Failures)
}

void Failures::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Failures::~Failures() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.Failures)
  SharedDtor();
}

void Failures::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void Failures::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Failures::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Failures_descriptor_;
}

const Failures& Failures::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

Failures* Failures::default_instance_ = NULL;

Failures* Failures::New() const {
  return new Failures;
}

void Failures::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Failures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.Failures)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.Failures)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.Failures)
  return false;
#undef DO_
}

void Failures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.Failures)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.Failures)
}

::google::protobuf::uint8* Failures::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.Failures)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.Failures)
  return target;
}

int Failures::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Failures::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Failures* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Failures*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Failures::MergeFrom(const Failures& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Failures::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Failures::CopyFrom(const Failures& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Failures::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Failures::Swap(Failures* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Failures::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Failures_descriptor_;
  metadata.reflection = Failures_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CpuUtilization::kDecStatisticFieldNumber;
#endif  // !_MSC_VER

CpuUtilization::CpuUtilization()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CpuUtilization)
}

void CpuUtilization::InitAsDefaultInstance() {
  decstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::DecStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::DecStatistic::default_instance());
}

CpuUtilization::CpuUtilization(const CpuUtilization& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CpuUtilization)
}

void CpuUtilization::SharedCtor() {
  _cached_size_ = 0;
  decstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CpuUtilization::~CpuUtilization() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CpuUtilization)
  SharedDtor();
}

void CpuUtilization::SharedDtor() {
  if (this != default_instance_) {
    delete decstatistic_;
  }
}

void CpuUtilization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CpuUtilization::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CpuUtilization_descriptor_;
}

const CpuUtilization& CpuUtilization::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CpuUtilization* CpuUtilization::default_instance_ = NULL;

CpuUtilization* CpuUtilization::New() const {
  return new CpuUtilization;
}

void CpuUtilization::Clear() {
  _extensions_.Clear();
  if (has_decstatistic()) {
    if (decstatistic_ != NULL) decstatistic_->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CpuUtilization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CpuUtilization)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CpuUtilization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CpuUtilization)
  return false;
#undef DO_
}

void CpuUtilization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CpuUtilization)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CpuUtilization)
}

::google::protobuf::uint8* CpuUtilization::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CpuUtilization)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CpuUtilization)
  return target;
}

int CpuUtilization::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
    if (has_decstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CpuUtilization::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CpuUtilization* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CpuUtilization*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CpuUtilization::MergeFrom(const CpuUtilization& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_decstatistic()) {
      mutable_decstatistic()->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::MergeFrom(from.decstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CpuUtilization::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CpuUtilization::CopyFrom(const CpuUtilization& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CpuUtilization::IsInitialized() const {

  if (has_decstatistic()) {
    if (!this->decstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CpuUtilization::Swap(CpuUtilization* other) {
  if (other != this) {
    std::swap(decstatistic_, other->decstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CpuUtilization::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CpuUtilization_descriptor_;
  metadata.reflection = CpuUtilization_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MemUtilization::kDecStatisticFieldNumber;
#endif  // !_MSC_VER

MemUtilization::MemUtilization()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.MemUtilization)
}

void MemUtilization::InitAsDefaultInstance() {
  decstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::DecStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::DecStatistic::default_instance());
}

MemUtilization::MemUtilization(const MemUtilization& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.MemUtilization)
}

void MemUtilization::SharedCtor() {
  _cached_size_ = 0;
  decstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MemUtilization::~MemUtilization() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.MemUtilization)
  SharedDtor();
}

void MemUtilization::SharedDtor() {
  if (this != default_instance_) {
    delete decstatistic_;
  }
}

void MemUtilization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemUtilization::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MemUtilization_descriptor_;
}

const MemUtilization& MemUtilization::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

MemUtilization* MemUtilization::default_instance_ = NULL;

MemUtilization* MemUtilization::New() const {
  return new MemUtilization;
}

void MemUtilization::Clear() {
  _extensions_.Clear();
  if (has_decstatistic()) {
    if (decstatistic_ != NULL) decstatistic_->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MemUtilization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.MemUtilization)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.MemUtilization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.MemUtilization)
  return false;
#undef DO_
}

void MemUtilization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.MemUtilization)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.MemUtilization)
}

::google::protobuf::uint8* MemUtilization::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.MemUtilization)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.MemUtilization)
  return target;
}

int MemUtilization::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
    if (has_decstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemUtilization::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MemUtilization* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MemUtilization*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MemUtilization::MergeFrom(const MemUtilization& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_decstatistic()) {
      mutable_decstatistic()->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::MergeFrom(from.decstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MemUtilization::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemUtilization::CopyFrom(const MemUtilization& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemUtilization::IsInitialized() const {

  if (has_decstatistic()) {
    if (!this->decstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void MemUtilization::Swap(MemUtilization* other) {
  if (other != this) {
    std::swap(decstatistic_, other->decstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata MemUtilization::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MemUtilization_descriptor_;
  metadata.reflection = MemUtilization_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PageFaults::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

PageFaults::PageFaults()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.PageFaults)
}

void PageFaults::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

PageFaults::PageFaults(const PageFaults& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.PageFaults)
}

void PageFaults::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PageFaults::~PageFaults() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.PageFaults)
  SharedDtor();
}

void PageFaults::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void PageFaults::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PageFaults::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PageFaults_descriptor_;
}

const PageFaults& PageFaults::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

PageFaults* PageFaults::default_instance_ = NULL;

PageFaults* PageFaults::New() const {
  return new PageFaults;
}

void PageFaults::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PageFaults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.PageFaults)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.PageFaults)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.PageFaults)
  return false;
#undef DO_
}

void PageFaults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.PageFaults)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.PageFaults)
}

::google::protobuf::uint8* PageFaults::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.PageFaults)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.PageFaults)
  return target;
}

int PageFaults::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PageFaults::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PageFaults* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PageFaults*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PageFaults::MergeFrom(const PageFaults& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PageFaults::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PageFaults::CopyFrom(const PageFaults& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PageFaults::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void PageFaults::Swap(PageFaults* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata PageFaults::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PageFaults_descriptor_;
  metadata.reflection = PageFaults_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NumThreads::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

NumThreads::NumThreads()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NumThreads)
}

void NumThreads::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

NumThreads::NumThreads(const NumThreads& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NumThreads)
}

void NumThreads::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NumThreads::~NumThreads() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NumThreads)
  SharedDtor();
}

void NumThreads::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void NumThreads::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NumThreads::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NumThreads_descriptor_;
}

const NumThreads& NumThreads::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NumThreads* NumThreads::default_instance_ = NULL;

NumThreads* NumThreads::New() const {
  return new NumThreads;
}

void NumThreads::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NumThreads::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NumThreads)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NumThreads)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NumThreads)
  return false;
#undef DO_
}

void NumThreads::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NumThreads)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NumThreads)
}

::google::protobuf::uint8* NumThreads::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NumThreads)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NumThreads)
  return target;
}

int NumThreads::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NumThreads::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NumThreads* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NumThreads*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NumThreads::MergeFrom(const NumThreads& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NumThreads::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumThreads::CopyFrom(const NumThreads& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumThreads::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NumThreads::Swap(NumThreads* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NumThreads::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NumThreads_descriptor_;
  metadata.reflection = NumThreads_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResidentMem::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

ResidentMem::ResidentMem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ResidentMem)
}

void ResidentMem::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

ResidentMem::ResidentMem(const ResidentMem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ResidentMem)
}

void ResidentMem::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResidentMem::~ResidentMem() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ResidentMem)
  SharedDtor();
}

void ResidentMem::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void ResidentMem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResidentMem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResidentMem_descriptor_;
}

const ResidentMem& ResidentMem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ResidentMem* ResidentMem::default_instance_ = NULL;

ResidentMem* ResidentMem::New() const {
  return new ResidentMem;
}

void ResidentMem::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResidentMem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ResidentMem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ResidentMem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ResidentMem)
  return false;
#undef DO_
}

void ResidentMem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ResidentMem)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ResidentMem)
}

::google::protobuf::uint8* ResidentMem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ResidentMem)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ResidentMem)
  return target;
}

int ResidentMem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResidentMem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResidentMem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResidentMem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResidentMem::MergeFrom(const ResidentMem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResidentMem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResidentMem::CopyFrom(const ResidentMem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResidentMem::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ResidentMem::Swap(ResidentMem* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ResidentMem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResidentMem_descriptor_;
  metadata.reflection = ResidentMem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProcessStats::kFailuresFieldNumber;
const int ProcessStats::kCpuUtilizationFieldNumber;
const int ProcessStats::kMemUtilizationFieldNumber;
const int ProcessStats::kPageFaultsFieldNumber;
const int ProcessStats::kNumThreadsFieldNumber;
const int ProcessStats::kResidentMemFieldNumber;
const int ProcessStats::kProcessStateFieldNumber;
#endif  // !_MSC_VER

ProcessStats::ProcessStats()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ProcessStats)
}

void ProcessStats::InitAsDefaultInstance() {
  failures_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Failures*>(&::SAFplus::Rpc::amfMgmtRpc::Failures::default_instance());
  cpuutilization_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::CpuUtilization*>(&::SAFplus::Rpc::amfMgmtRpc::CpuUtilization::default_instance());
  memutilization_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::MemUtilization*>(&::SAFplus::Rpc::amfMgmtRpc::MemUtilization::default_instance());
  pagefaults_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::PageFaults*>(&::SAFplus::Rpc::amfMgmtRpc::PageFaults::default_instance());
  numthreads_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NumThreads*>(&::SAFplus::Rpc::amfMgmtRpc::NumThreads::default_instance());
  residentmem_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ResidentMem*>(&::SAFplus::Rpc::amfMgmtRpc::ResidentMem::default_instance());
}

ProcessStats::ProcessStats(const ProcessStats& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ProcessStats)
}

void ProcessStats::SharedCtor() {
  _cached_size_ = 0;
  failures_ = NULL;
  cpuutilization_ = NULL;
  memutilization_ = NULL;
  pagefaults_ = NULL;
  numthreads_ = NULL;
  residentmem_ = NULL;
  processstate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProcessStats::~ProcessStats() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ProcessStats)
  SharedDtor();
}

void ProcessStats::SharedDtor() {
  if (this != default_instance_) {
    delete failures_;
    delete cpuutilization_;
    delete memutilization_;
    delete pagefaults_;
    delete numthreads_;
    delete residentmem_;
  }
}

void ProcessStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProcessStats_descriptor_;
}

const ProcessStats& ProcessStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ProcessStats* ProcessStats::default_instance_ = NULL;

ProcessStats* ProcessStats::New() const {
  return new ProcessStats;
}

void ProcessStats::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 127) {
    if (has_failures()) {
      if (failures_ != NULL) failures_->::SAFplus::Rpc::amfMgmtRpc::Failures::Clear();
    }
    if (has_cpuutilization()) {
      if (cpuutilization_ != NULL) cpuutilization_->::SAFplus::Rpc::amfMgmtRpc::CpuUtilization::Clear();
    }
    if (has_memutilization()) {
      if (memutilization_ != NULL) memutilization_->::SAFplus::Rpc::amfMgmtRpc::MemUtilization::Clear();
    }
    if (has_pagefaults()) {
      if (pagefaults_ != NULL) pagefaults_->::SAFplus::Rpc::amfMgmtRpc::PageFaults::Clear();
    }
    if (has_numthreads()) {
      if (numthreads_ != NULL) numthreads_->::SAFplus::Rpc::amfMgmtRpc::NumThreads::Clear();
    }
    if (has_residentmem()) {
      if (residentmem_ != NULL) residentmem_->::SAFplus::Rpc::amfMgmtRpc::ResidentMem::Clear();
    }
    processstate_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProcessStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ProcessStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.Failures failures = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_failures()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cpuUtilization;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.CpuUtilization cpuUtilization = 2;
      case 2: {
        if (tag == 18) {
         parse_cpuUtilization:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cpuutilization()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_memUtilization;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.MemUtilization memUtilization = 3;
      case 3: {
        if (tag == 26) {
         parse_memUtilization:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_memutilization()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_pageFaults;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.PageFaults pageFaults = 4;
      case 4: {
        if (tag == 34) {
         parse_pageFaults:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pagefaults()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_numThreads;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.NumThreads numThreads = 5;
      case 5: {
        if (tag == 42) {
         parse_numThreads:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_numthreads()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_residentMem;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ResidentMem residentMem = 6;
      case 6: {
        if (tag == 50) {
         parse_residentMem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_residentmem()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_processState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ProcessState processState = 7;
      case 7: {
        if (tag == 56) {
         parse_processState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::ProcessState_IsValid(value)) {
            set_processstate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::ProcessState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ProcessStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ProcessStats)
  return false;
#undef DO_
}

void ProcessStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ProcessStats)
  // optional .SAFplus.Rpc.amfMgmtRpc.Failures failures = 1;
  if (has_failures()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->failures(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.CpuUtilization cpuUtilization = 2;
  if (has_cpuutilization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cpuutilization(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.MemUtilization memUtilization = 3;
  if (has_memutilization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->memutilization(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.PageFaults pageFaults = 4;
  if (has_pagefaults()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pagefaults(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumThreads numThreads = 5;
  if (has_numthreads()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->numthreads(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ResidentMem residentMem = 6;
  if (has_residentmem()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->residentmem(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ProcessState processState = 7;
  if (has_processstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->processstate(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ProcessStats)
}

::google::protobuf::uint8* ProcessStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ProcessStats)
  // optional .SAFplus.Rpc.amfMgmtRpc.Failures failures = 1;
  if (has_failures()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->failures(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.CpuUtilization cpuUtilization = 2;
  if (has_cpuutilization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->cpuutilization(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.MemUtilization memUtilization = 3;
  if (has_memutilization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->memutilization(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.PageFaults pageFaults = 4;
  if (has_pagefaults()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->pagefaults(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumThreads numThreads = 5;
  if (has_numthreads()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->numthreads(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ResidentMem residentMem = 6;
  if (has_residentmem()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->residentmem(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ProcessState processState = 7;
  if (has_processstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->processstate(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ProcessStats)
  return target;
}

int ProcessStats::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.Failures failures = 1;
    if (has_failures()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->failures());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.CpuUtilization cpuUtilization = 2;
    if (has_cpuutilization()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cpuutilization());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.MemUtilization memUtilization = 3;
    if (has_memutilization()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->memutilization());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.PageFaults pageFaults = 4;
    if (has_pagefaults()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pagefaults());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.NumThreads numThreads = 5;
    if (has_numthreads()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->numthreads());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.ResidentMem residentMem = 6;
    if (has_residentmem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->residentmem());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.ProcessState processState = 7;
    if (has_processstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->processstate());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessStats::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProcessStats* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProcessStats*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProcessStats::MergeFrom(const ProcessStats& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_failures()) {
      mutable_failures()->::SAFplus::Rpc::amfMgmtRpc::Failures::MergeFrom(from.failures());
    }
    if (from.has_cpuutilization()) {
      mutable_cpuutilization()->::SAFplus::Rpc::amfMgmtRpc::CpuUtilization::MergeFrom(from.cpuutilization());
    }
    if (from.has_memutilization()) {
      mutable_memutilization()->::SAFplus::Rpc::amfMgmtRpc::MemUtilization::MergeFrom(from.memutilization());
    }
    if (from.has_pagefaults()) {
      mutable_pagefaults()->::SAFplus::Rpc::amfMgmtRpc::PageFaults::MergeFrom(from.pagefaults());
    }
    if (from.has_numthreads()) {
      mutable_numthreads()->::SAFplus::Rpc::amfMgmtRpc::NumThreads::MergeFrom(from.numthreads());
    }
    if (from.has_residentmem()) {
      mutable_residentmem()->::SAFplus::Rpc::amfMgmtRpc::ResidentMem::MergeFrom(from.residentmem());
    }
    if (from.has_processstate()) {
      set_processstate(from.processstate());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProcessStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessStats::CopyFrom(const ProcessStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessStats::IsInitialized() const {

  if (has_failures()) {
    if (!this->failures().IsInitialized()) return false;
  }
  if (has_cpuutilization()) {
    if (!this->cpuutilization().IsInitialized()) return false;
  }
  if (has_memutilization()) {
    if (!this->memutilization().IsInitialized()) return false;
  }
  if (has_pagefaults()) {
    if (!this->pagefaults().IsInitialized()) return false;
  }
  if (has_numthreads()) {
    if (!this->numthreads().IsInitialized()) return false;
  }
  if (has_residentmem()) {
    if (!this->residentmem().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ProcessStats::Swap(ProcessStats* other) {
  if (other != this) {
    std::swap(failures_, other->failures_);
    std::swap(cpuutilization_, other->cpuutilization_);
    std::swap(memutilization_, other->memutilization_);
    std::swap(pagefaults_, other->pagefaults_);
    std::swap(numthreads_, other->numthreads_);
    std::swap(residentmem_, other->residentmem_);
    std::swap(processstate_, other->processstate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ProcessStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProcessStats_descriptor_;
  metadata.reflection = ProcessStats_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EscalationPolicy::kMaximumFieldNumber;
const int EscalationPolicy::kDurationFieldNumber;
#endif  // !_MSC_VER

EscalationPolicy::EscalationPolicy()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.EscalationPolicy)
}

void EscalationPolicy::InitAsDefaultInstance() {
  duration_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::SaTimeT*>(&::SAFplus::Rpc::amfMgmtRpc::SaTimeT::default_instance());
}

EscalationPolicy::EscalationPolicy(const EscalationPolicy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.EscalationPolicy)
}

void EscalationPolicy::SharedCtor() {
  _cached_size_ = 0;
  maximum_ = GOOGLE_ULONGLONG(0);
  duration_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EscalationPolicy::~EscalationPolicy() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.EscalationPolicy)
  SharedDtor();
}

void EscalationPolicy::SharedDtor() {
  if (this != default_instance_) {
    delete duration_;
  }
}

void EscalationPolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EscalationPolicy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EscalationPolicy_descriptor_;
}

const EscalationPolicy& EscalationPolicy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

EscalationPolicy* EscalationPolicy::default_instance_ = NULL;

EscalationPolicy* EscalationPolicy::New() const {
  return new EscalationPolicy;
}

void EscalationPolicy::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    maximum_ = GOOGLE_ULONGLONG(0);
    if (has_duration()) {
      if (duration_ != NULL) duration_->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EscalationPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.EscalationPolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 maximum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &maximum_)));
          set_has_maximum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_duration;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT duration = 2;
      case 2: {
        if (tag == 18) {
         parse_duration:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.EscalationPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.EscalationPolicy)
  return false;
#undef DO_
}

void EscalationPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.EscalationPolicy)
  // optional uint64 maximum = 1;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->maximum(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT duration = 2;
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->duration(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.EscalationPolicy)
}

::google::protobuf::uint8* EscalationPolicy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.EscalationPolicy)
  // optional uint64 maximum = 1;
  if (has_maximum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->maximum(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT duration = 2;
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->duration(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.EscalationPolicy)
  return target;
}

int EscalationPolicy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 maximum = 1;
    if (has_maximum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->maximum());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT duration = 2;
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->duration());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EscalationPolicy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EscalationPolicy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EscalationPolicy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EscalationPolicy::MergeFrom(const EscalationPolicy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maximum()) {
      set_maximum(from.maximum());
    }
    if (from.has_duration()) {
      mutable_duration()->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::MergeFrom(from.duration());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EscalationPolicy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EscalationPolicy::CopyFrom(const EscalationPolicy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EscalationPolicy::IsInitialized() const {

  if (has_duration()) {
    if (!this->duration().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void EscalationPolicy::Swap(EscalationPolicy* other) {
  if (other != this) {
    std::swap(maximum_, other->maximum_);
    std::swap(duration_, other->duration_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata EscalationPolicy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EscalationPolicy_descriptor_;
  metadata.reflection = EscalationPolicy_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Execution::kCommandFieldNumber;
const int Execution::kTimeoutFieldNumber;
#endif  // !_MSC_VER

Execution::Execution()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.Execution)
}

void Execution::InitAsDefaultInstance() {
}

Execution::Execution(const Execution& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.Execution)
}

void Execution::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  command_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Execution::~Execution() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.Execution)
  SharedDtor();
}

void Execution::SharedDtor() {
  if (command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete command_;
  }
  if (this != default_instance_) {
  }
}

void Execution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Execution::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Execution_descriptor_;
}

const Execution& Execution::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

Execution* Execution::default_instance_ = NULL;

Execution* Execution::New() const {
  return new Execution;
}

void Execution::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_command()) {
      if (command_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        command_->clear();
      }
    }
    timeout_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Execution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.Execution)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string command = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command().data(), this->command().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "command");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timeout;
        break;
      }

      // optional uint64 timeout = 2;
      case 2: {
        if (tag == 16) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.Execution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.Execution)
  return false;
#undef DO_
}

void Execution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.Execution)
  // optional string command = 1;
  if (has_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command(), output);
  }

  // optional uint64 timeout = 2;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timeout(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.Execution)
}

::google::protobuf::uint8* Execution::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.Execution)
  // optional string command = 1;
  if (has_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command(), target);
  }

  // optional uint64 timeout = 2;
  if (has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timeout(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.Execution)
  return target;
}

int Execution::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string command = 1;
    if (has_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->command());
    }

    // optional uint64 timeout = 2;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timeout());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Execution::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Execution* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Execution*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Execution::MergeFrom(const Execution& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_command()) {
      set_command(from.command());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Execution::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Execution::CopyFrom(const Execution& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Execution::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Execution::Swap(Execution* other) {
  if (other != this) {
    std::swap(command_, other->command_);
    std::swap(timeout_, other->timeout_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Execution::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Execution_descriptor_;
  metadata.reflection = Execution_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServiceUnitFailureEscalationPolicy::kEscalationPolicyFieldNumber;
#endif  // !_MSC_VER

ServiceUnitFailureEscalationPolicy::ServiceUnitFailureEscalationPolicy()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy)
}

void ServiceUnitFailureEscalationPolicy::InitAsDefaultInstance() {
  escalationpolicy_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy*>(&::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy::default_instance());
}

ServiceUnitFailureEscalationPolicy::ServiceUnitFailureEscalationPolicy(const ServiceUnitFailureEscalationPolicy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy)
}

void ServiceUnitFailureEscalationPolicy::SharedCtor() {
  _cached_size_ = 0;
  escalationpolicy_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceUnitFailureEscalationPolicy::~ServiceUnitFailureEscalationPolicy() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy)
  SharedDtor();
}

void ServiceUnitFailureEscalationPolicy::SharedDtor() {
  if (this != default_instance_) {
    delete escalationpolicy_;
  }
}

void ServiceUnitFailureEscalationPolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceUnitFailureEscalationPolicy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceUnitFailureEscalationPolicy_descriptor_;
}

const ServiceUnitFailureEscalationPolicy& ServiceUnitFailureEscalationPolicy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ServiceUnitFailureEscalationPolicy* ServiceUnitFailureEscalationPolicy::default_instance_ = NULL;

ServiceUnitFailureEscalationPolicy* ServiceUnitFailureEscalationPolicy::New() const {
  return new ServiceUnitFailureEscalationPolicy;
}

void ServiceUnitFailureEscalationPolicy::Clear() {
  _extensions_.Clear();
  if (has_escalationpolicy()) {
    if (escalationpolicy_ != NULL) escalationpolicy_->::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceUnitFailureEscalationPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_escalationpolicy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy)
  return false;
#undef DO_
}

void ServiceUnitFailureEscalationPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy)
  // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
  if (has_escalationpolicy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->escalationpolicy(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy)
}

::google::protobuf::uint8* ServiceUnitFailureEscalationPolicy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy)
  // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
  if (has_escalationpolicy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->escalationpolicy(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy)
  return target;
}

int ServiceUnitFailureEscalationPolicy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
    if (has_escalationpolicy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->escalationpolicy());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceUnitFailureEscalationPolicy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceUnitFailureEscalationPolicy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceUnitFailureEscalationPolicy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceUnitFailureEscalationPolicy::MergeFrom(const ServiceUnitFailureEscalationPolicy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_escalationpolicy()) {
      mutable_escalationpolicy()->::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy::MergeFrom(from.escalationpolicy());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceUnitFailureEscalationPolicy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceUnitFailureEscalationPolicy::CopyFrom(const ServiceUnitFailureEscalationPolicy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceUnitFailureEscalationPolicy::IsInitialized() const {

  if (has_escalationpolicy()) {
    if (!this->escalationpolicy().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ServiceUnitFailureEscalationPolicy::Swap(ServiceUnitFailureEscalationPolicy* other) {
  if (other != this) {
    std::swap(escalationpolicy_, other->escalationpolicy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ServiceUnitFailureEscalationPolicy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceUnitFailureEscalationPolicy_descriptor_;
  metadata.reflection = ServiceUnitFailureEscalationPolicy_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NodeConfig::kNameFieldNumber;
const int NodeConfig::kAdminStateFieldNumber;
const int NodeConfig::kServiceUnitFailureEscalationPolicyFieldNumber;
const int NodeConfig::kAutoRepairFieldNumber;
const int NodeConfig::kFailFastOnInstantiationFailureFieldNumber;
const int NodeConfig::kFailFastOnCleanupFailureFieldNumber;
const int NodeConfig::kServiceUnitsFieldNumber;
#endif  // !_MSC_VER

NodeConfig::NodeConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NodeConfig)
}

void NodeConfig::InitAsDefaultInstance() {
  serviceunitfailureescalationpolicy_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitFailureEscalationPolicy*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceUnitFailureEscalationPolicy::default_instance());
}

NodeConfig::NodeConfig(const NodeConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NodeConfig)
}

void NodeConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adminstate_ = 0;
  serviceunitfailureescalationpolicy_ = NULL;
  autorepair_ = false;
  failfastoninstantiationfailure_ = false;
  failfastoncleanupfailure_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeConfig::~NodeConfig() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NodeConfig)
  SharedDtor();
}

void NodeConfig::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete serviceunitfailureescalationpolicy_;
  }
}

void NodeConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeConfig_descriptor_;
}

const NodeConfig& NodeConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NodeConfig* NodeConfig::default_instance_ = NULL;

NodeConfig* NodeConfig::New() const {
  return new NodeConfig;
}

void NodeConfig::Clear() {
  _extensions_.Clear();
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NodeConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(adminstate_, failfastoncleanupfailure_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_serviceunitfailureescalationpolicy()) {
      if (serviceunitfailureescalationpolicy_ != NULL) serviceunitfailureescalationpolicy_->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitFailureEscalationPolicy::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  serviceunits_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NodeConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_adminState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
      case 2: {
        if (tag == 16) {
         parse_adminState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::AdministrativeState_IsValid(value)) {
            set_adminstate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::AdministrativeState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_serviceUnitFailureEscalationPolicy;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy serviceUnitFailureEscalationPolicy = 3;
      case 3: {
        if (tag == 26) {
         parse_serviceUnitFailureEscalationPolicy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serviceunitfailureescalationpolicy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_autoRepair;
        break;
      }

      // optional bool autoRepair = 4;
      case 4: {
        if (tag == 32) {
         parse_autoRepair:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autorepair_)));
          set_has_autorepair();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_failFastOnInstantiationFailure;
        break;
      }

      // optional bool failFastOnInstantiationFailure = 5;
      case 5: {
        if (tag == 40) {
         parse_failFastOnInstantiationFailure:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &failfastoninstantiationfailure_)));
          set_has_failfastoninstantiationfailure();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_failFastOnCleanupFailure;
        break;
      }

      // optional bool failFastOnCleanupFailure = 6;
      case 6: {
        if (tag == 48) {
         parse_failFastOnCleanupFailure:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &failfastoncleanupfailure_)));
          set_has_failfastoncleanupfailure();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_serviceUnits;
        break;
      }

      // repeated string serviceUnits = 7;
      case 7: {
        if (tag == 58) {
         parse_serviceUnits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_serviceunits()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serviceunits(this->serviceunits_size() - 1).data(),
            this->serviceunits(this->serviceunits_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serviceunits");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_serviceUnits;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NodeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NodeConfig)
  return false;
#undef DO_
}

void NodeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NodeConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
  if (has_adminstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->adminstate(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy serviceUnitFailureEscalationPolicy = 3;
  if (has_serviceunitfailureescalationpolicy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->serviceunitfailureescalationpolicy(), output);
  }

  // optional bool autoRepair = 4;
  if (has_autorepair()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->autorepair(), output);
  }

  // optional bool failFastOnInstantiationFailure = 5;
  if (has_failfastoninstantiationfailure()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->failfastoninstantiationfailure(), output);
  }

  // optional bool failFastOnCleanupFailure = 6;
  if (has_failfastoncleanupfailure()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->failfastoncleanupfailure(), output);
  }

  // repeated string serviceUnits = 7;
  for (int i = 0; i < this->serviceunits_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->serviceunits(i).data(), this->serviceunits(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "serviceunits");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->serviceunits(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NodeConfig)
}

::google::protobuf::uint8* NodeConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NodeConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
  if (has_adminstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->adminstate(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy serviceUnitFailureEscalationPolicy = 3;
  if (has_serviceunitfailureescalationpolicy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->serviceunitfailureescalationpolicy(), target);
  }

  // optional bool autoRepair = 4;
  if (has_autorepair()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->autorepair(), target);
  }

  // optional bool failFastOnInstantiationFailure = 5;
  if (has_failfastoninstantiationfailure()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->failfastoninstantiationfailure(), target);
  }

  // optional bool failFastOnCleanupFailure = 6;
  if (has_failfastoncleanupfailure()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->failfastoncleanupfailure(), target);
  }

  // repeated string serviceUnits = 7;
  for (int i = 0; i < this->serviceunits_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serviceunits(i).data(), this->serviceunits(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serviceunits");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->serviceunits(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NodeConfig)
  return target;
}

int NodeConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
    if (has_adminstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adminstate());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitFailureEscalationPolicy serviceUnitFailureEscalationPolicy = 3;
    if (has_serviceunitfailureescalationpolicy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serviceunitfailureescalationpolicy());
    }

    // optional bool autoRepair = 4;
    if (has_autorepair()) {
      total_size += 1 + 1;
    }

    // optional bool failFastOnInstantiationFailure = 5;
    if (has_failfastoninstantiationfailure()) {
      total_size += 1 + 1;
    }

    // optional bool failFastOnCleanupFailure = 6;
    if (has_failfastoncleanupfailure()) {
      total_size += 1 + 1;
    }

  }
  // repeated string serviceUnits = 7;
  total_size += 1 * this->serviceunits_size();
  for (int i = 0; i < this->serviceunits_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->serviceunits(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeConfig::MergeFrom(const NodeConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  serviceunits_.MergeFrom(from.serviceunits_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_adminstate()) {
      set_adminstate(from.adminstate());
    }
    if (from.has_serviceunitfailureescalationpolicy()) {
      mutable_serviceunitfailureescalationpolicy()->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitFailureEscalationPolicy::MergeFrom(from.serviceunitfailureescalationpolicy());
    }
    if (from.has_autorepair()) {
      set_autorepair(from.autorepair());
    }
    if (from.has_failfastoninstantiationfailure()) {
      set_failfastoninstantiationfailure(from.failfastoninstantiationfailure());
    }
    if (from.has_failfastoncleanupfailure()) {
      set_failfastoncleanupfailure(from.failfastoncleanupfailure());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeConfig::CopyFrom(const NodeConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeConfig::IsInitialized() const {

  if (has_serviceunitfailureescalationpolicy()) {
    if (!this->serviceunitfailureescalationpolicy().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NodeConfig::Swap(NodeConfig* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(adminstate_, other->adminstate_);
    std::swap(serviceunitfailureescalationpolicy_, other->serviceunitfailureescalationpolicy_);
    std::swap(autorepair_, other->autorepair_);
    std::swap(failfastoninstantiationfailure_, other->failfastoninstantiationfailure_);
    std::swap(failfastoncleanupfailure_, other->failfastoncleanupfailure_);
    serviceunits_.Swap(&other->serviceunits_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NodeConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeConfig_descriptor_;
  metadata.reflection = NodeConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentRestart::kEscalationPolicyFieldNumber;
#endif  // !_MSC_VER

ComponentRestart::ComponentRestart()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ComponentRestart)
}

void ComponentRestart::InitAsDefaultInstance() {
  escalationpolicy_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy*>(&::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy::default_instance());
}

ComponentRestart::ComponentRestart(const ComponentRestart& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ComponentRestart)
}

void ComponentRestart::SharedCtor() {
  _cached_size_ = 0;
  escalationpolicy_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentRestart::~ComponentRestart() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ComponentRestart)
  SharedDtor();
}

void ComponentRestart::SharedDtor() {
  if (this != default_instance_) {
    delete escalationpolicy_;
  }
}

void ComponentRestart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentRestart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentRestart_descriptor_;
}

const ComponentRestart& ComponentRestart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ComponentRestart* ComponentRestart::default_instance_ = NULL;

ComponentRestart* ComponentRestart::New() const {
  return new ComponentRestart;
}

void ComponentRestart::Clear() {
  _extensions_.Clear();
  if (has_escalationpolicy()) {
    if (escalationpolicy_ != NULL) escalationpolicy_->::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentRestart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ComponentRestart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_escalationpolicy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ComponentRestart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ComponentRestart)
  return false;
#undef DO_
}

void ComponentRestart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ComponentRestart)
  // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
  if (has_escalationpolicy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->escalationpolicy(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ComponentRestart)
}

::google::protobuf::uint8* ComponentRestart::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ComponentRestart)
  // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
  if (has_escalationpolicy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->escalationpolicy(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ComponentRestart)
  return target;
}

int ComponentRestart::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
    if (has_escalationpolicy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->escalationpolicy());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentRestart::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentRestart* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentRestart*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentRestart::MergeFrom(const ComponentRestart& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_escalationpolicy()) {
      mutable_escalationpolicy()->::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy::MergeFrom(from.escalationpolicy());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentRestart::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentRestart::CopyFrom(const ComponentRestart& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentRestart::IsInitialized() const {

  if (has_escalationpolicy()) {
    if (!this->escalationpolicy().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ComponentRestart::Swap(ComponentRestart* other) {
  if (other != this) {
    std::swap(escalationpolicy_, other->escalationpolicy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ComponentRestart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentRestart_descriptor_;
  metadata.reflection = ComponentRestart_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServiceUnitRestart::kEscalationPolicyFieldNumber;
#endif  // !_MSC_VER

ServiceUnitRestart::ServiceUnitRestart()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart)
}

void ServiceUnitRestart::InitAsDefaultInstance() {
  escalationpolicy_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy*>(&::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy::default_instance());
}

ServiceUnitRestart::ServiceUnitRestart(const ServiceUnitRestart& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart)
}

void ServiceUnitRestart::SharedCtor() {
  _cached_size_ = 0;
  escalationpolicy_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceUnitRestart::~ServiceUnitRestart() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart)
  SharedDtor();
}

void ServiceUnitRestart::SharedDtor() {
  if (this != default_instance_) {
    delete escalationpolicy_;
  }
}

void ServiceUnitRestart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceUnitRestart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceUnitRestart_descriptor_;
}

const ServiceUnitRestart& ServiceUnitRestart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ServiceUnitRestart* ServiceUnitRestart::default_instance_ = NULL;

ServiceUnitRestart* ServiceUnitRestart::New() const {
  return new ServiceUnitRestart;
}

void ServiceUnitRestart::Clear() {
  _extensions_.Clear();
  if (has_escalationpolicy()) {
    if (escalationpolicy_ != NULL) escalationpolicy_->::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceUnitRestart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_escalationpolicy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart)
  return false;
#undef DO_
}

void ServiceUnitRestart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart)
  // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
  if (has_escalationpolicy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->escalationpolicy(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart)
}

::google::protobuf::uint8* ServiceUnitRestart::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart)
  // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
  if (has_escalationpolicy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->escalationpolicy(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart)
  return target;
}

int ServiceUnitRestart::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.EscalationPolicy EscalationPolicy = 1;
    if (has_escalationpolicy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->escalationpolicy());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceUnitRestart::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceUnitRestart* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceUnitRestart*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceUnitRestart::MergeFrom(const ServiceUnitRestart& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_escalationpolicy()) {
      mutable_escalationpolicy()->::SAFplus::Rpc::amfMgmtRpc::EscalationPolicy::MergeFrom(from.escalationpolicy());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceUnitRestart::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceUnitRestart::CopyFrom(const ServiceUnitRestart& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceUnitRestart::IsInitialized() const {

  if (has_escalationpolicy()) {
    if (!this->escalationpolicy().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ServiceUnitRestart::Swap(ServiceUnitRestart* other) {
  if (other != this) {
    std::swap(escalationpolicy_, other->escalationpolicy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ServiceUnitRestart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceUnitRestart_descriptor_;
  metadata.reflection = ServiceUnitRestart_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServiceGroupConfig::kNameFieldNumber;
const int ServiceGroupConfig::kAdminStateFieldNumber;
const int ServiceGroupConfig::kAutoRepairFieldNumber;
const int ServiceGroupConfig::kAutoAdjustFieldNumber;
const int ServiceGroupConfig::kAutoAdjustIntervalFieldNumber;
const int ServiceGroupConfig::kPreferredNumActiveServiceUnitsFieldNumber;
const int ServiceGroupConfig::kPreferredNumStandbyServiceUnitsFieldNumber;
const int ServiceGroupConfig::kPreferredNumIdleServiceUnitsFieldNumber;
const int ServiceGroupConfig::kMaxActiveWorkAssignmentsFieldNumber;
const int ServiceGroupConfig::kMaxStandbyWorkAssignmentsFieldNumber;
const int ServiceGroupConfig::kComponentRestartFieldNumber;
const int ServiceGroupConfig::kServiceUnitRestartFieldNumber;
const int ServiceGroupConfig::kServiceUnitsFieldNumber;
const int ServiceGroupConfig::kServiceInstancesFieldNumber;
#endif  // !_MSC_VER

ServiceGroupConfig::ServiceGroupConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig)
}

void ServiceGroupConfig::InitAsDefaultInstance() {
  autoadjustinterval_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::SaTimeT*>(&::SAFplus::Rpc::amfMgmtRpc::SaTimeT::default_instance());
  componentrestart_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ComponentRestart*>(&::SAFplus::Rpc::amfMgmtRpc::ComponentRestart::default_instance());
  serviceunitrestart_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestart*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestart::default_instance());
}

ServiceGroupConfig::ServiceGroupConfig(const ServiceGroupConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig)
}

void ServiceGroupConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adminstate_ = 0;
  autorepair_ = false;
  autoadjust_ = false;
  autoadjustinterval_ = NULL;
  preferrednumactiveserviceunits_ = 0u;
  preferrednumstandbyserviceunits_ = 0u;
  preferrednumidleserviceunits_ = 0u;
  maxactiveworkassignments_ = 0u;
  maxstandbyworkassignments_ = 0u;
  componentrestart_ = NULL;
  serviceunitrestart_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceGroupConfig::~ServiceGroupConfig() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig)
  SharedDtor();
}

void ServiceGroupConfig::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete autoadjustinterval_;
    delete componentrestart_;
    delete serviceunitrestart_;
  }
}

void ServiceGroupConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceGroupConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceGroupConfig_descriptor_;
}

const ServiceGroupConfig& ServiceGroupConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ServiceGroupConfig* ServiceGroupConfig::default_instance_ = NULL;

ServiceGroupConfig* ServiceGroupConfig::New() const {
  return new ServiceGroupConfig;
}

void ServiceGroupConfig::Clear() {
  _extensions_.Clear();
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServiceGroupConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(adminstate_, autoadjust_);
    ZR_(preferrednumactiveserviceunits_, preferrednumidleserviceunits_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_autoadjustinterval()) {
      if (autoadjustinterval_ != NULL) autoadjustinterval_->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 3840) {
    maxactiveworkassignments_ = 0u;
    maxstandbyworkassignments_ = 0u;
    if (has_componentrestart()) {
      if (componentrestart_ != NULL) componentrestart_->::SAFplus::Rpc::amfMgmtRpc::ComponentRestart::Clear();
    }
    if (has_serviceunitrestart()) {
      if (serviceunitrestart_ != NULL) serviceunitrestart_->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestart::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  serviceunits_.Clear();
  serviceinstances_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceGroupConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_adminState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
      case 2: {
        if (tag == 16) {
         parse_adminState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::AdministrativeState_IsValid(value)) {
            set_adminstate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::AdministrativeState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_autoRepair;
        break;
      }

      // optional bool autoRepair = 3;
      case 3: {
        if (tag == 24) {
         parse_autoRepair:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autorepair_)));
          set_has_autorepair();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_autoAdjust;
        break;
      }

      // optional bool autoAdjust = 4;
      case 4: {
        if (tag == 32) {
         parse_autoAdjust:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autoadjust_)));
          set_has_autoadjust();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_autoAdjustInterval;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT autoAdjustInterval = 5;
      case 5: {
        if (tag == 42) {
         parse_autoAdjustInterval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_autoadjustinterval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_preferredNumActiveServiceUnits;
        break;
      }

      // optional fixed32 preferredNumActiveServiceUnits = 6;
      case 6: {
        if (tag == 53) {
         parse_preferredNumActiveServiceUnits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &preferrednumactiveserviceunits_)));
          set_has_preferrednumactiveserviceunits();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_preferredNumStandbyServiceUnits;
        break;
      }

      // optional fixed32 preferredNumStandbyServiceUnits = 7;
      case 7: {
        if (tag == 61) {
         parse_preferredNumStandbyServiceUnits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &preferrednumstandbyserviceunits_)));
          set_has_preferrednumstandbyserviceunits();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_preferredNumIdleServiceUnits;
        break;
      }

      // optional fixed32 preferredNumIdleServiceUnits = 8;
      case 8: {
        if (tag == 69) {
         parse_preferredNumIdleServiceUnits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &preferrednumidleserviceunits_)));
          set_has_preferrednumidleserviceunits();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_maxActiveWorkAssignments;
        break;
      }

      // optional fixed32 maxActiveWorkAssignments = 9;
      case 9: {
        if (tag == 77) {
         parse_maxActiveWorkAssignments:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &maxactiveworkassignments_)));
          set_has_maxactiveworkassignments();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_maxStandbyWorkAssignments;
        break;
      }

      // optional fixed32 maxStandbyWorkAssignments = 10;
      case 10: {
        if (tag == 85) {
         parse_maxStandbyWorkAssignments:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &maxstandbyworkassignments_)));
          set_has_maxstandbyworkassignments();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_componentRestart;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ComponentRestart componentRestart = 11;
      case 11: {
        if (tag == 90) {
         parse_componentRestart:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_componentrestart()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_serviceUnitRestart;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart serviceUnitRestart = 12;
      case 12: {
        if (tag == 98) {
         parse_serviceUnitRestart:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serviceunitrestart()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_serviceUnits;
        break;
      }

      // repeated string serviceUnits = 13;
      case 13: {
        if (tag == 106) {
         parse_serviceUnits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_serviceunits()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serviceunits(this->serviceunits_size() - 1).data(),
            this->serviceunits(this->serviceunits_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serviceunits");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_serviceUnits;
        if (input->ExpectTag(114)) goto parse_serviceInstances;
        break;
      }

      // repeated string serviceInstances = 14;
      case 14: {
        if (tag == 114) {
         parse_serviceInstances:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_serviceinstances()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serviceinstances(this->serviceinstances_size() - 1).data(),
            this->serviceinstances(this->serviceinstances_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serviceinstances");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_serviceInstances;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig)
  return false;
#undef DO_
}

void ServiceGroupConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
  if (has_adminstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->adminstate(), output);
  }

  // optional bool autoRepair = 3;
  if (has_autorepair()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->autorepair(), output);
  }

  // optional bool autoAdjust = 4;
  if (has_autoadjust()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->autoadjust(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT autoAdjustInterval = 5;
  if (has_autoadjustinterval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->autoadjustinterval(), output);
  }

  // optional fixed32 preferredNumActiveServiceUnits = 6;
  if (has_preferrednumactiveserviceunits()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(6, this->preferrednumactiveserviceunits(), output);
  }

  // optional fixed32 preferredNumStandbyServiceUnits = 7;
  if (has_preferrednumstandbyserviceunits()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->preferrednumstandbyserviceunits(), output);
  }

  // optional fixed32 preferredNumIdleServiceUnits = 8;
  if (has_preferrednumidleserviceunits()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(8, this->preferrednumidleserviceunits(), output);
  }

  // optional fixed32 maxActiveWorkAssignments = 9;
  if (has_maxactiveworkassignments()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(9, this->maxactiveworkassignments(), output);
  }

  // optional fixed32 maxStandbyWorkAssignments = 10;
  if (has_maxstandbyworkassignments()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(10, this->maxstandbyworkassignments(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentRestart componentRestart = 11;
  if (has_componentrestart()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->componentrestart(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart serviceUnitRestart = 12;
  if (has_serviceunitrestart()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->serviceunitrestart(), output);
  }

  // repeated string serviceUnits = 13;
  for (int i = 0; i < this->serviceunits_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->serviceunits(i).data(), this->serviceunits(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "serviceunits");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->serviceunits(i), output);
  }

  // repeated string serviceInstances = 14;
  for (int i = 0; i < this->serviceinstances_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->serviceinstances(i).data(), this->serviceinstances(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "serviceinstances");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->serviceinstances(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig)
}

::google::protobuf::uint8* ServiceGroupConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
  if (has_adminstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->adminstate(), target);
  }

  // optional bool autoRepair = 3;
  if (has_autorepair()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->autorepair(), target);
  }

  // optional bool autoAdjust = 4;
  if (has_autoadjust()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->autoadjust(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT autoAdjustInterval = 5;
  if (has_autoadjustinterval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->autoadjustinterval(), target);
  }

  // optional fixed32 preferredNumActiveServiceUnits = 6;
  if (has_preferrednumactiveserviceunits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(6, this->preferrednumactiveserviceunits(), target);
  }

  // optional fixed32 preferredNumStandbyServiceUnits = 7;
  if (has_preferrednumstandbyserviceunits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(7, this->preferrednumstandbyserviceunits(), target);
  }

  // optional fixed32 preferredNumIdleServiceUnits = 8;
  if (has_preferrednumidleserviceunits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(8, this->preferrednumidleserviceunits(), target);
  }

  // optional fixed32 maxActiveWorkAssignments = 9;
  if (has_maxactiveworkassignments()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(9, this->maxactiveworkassignments(), target);
  }

  // optional fixed32 maxStandbyWorkAssignments = 10;
  if (has_maxstandbyworkassignments()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(10, this->maxstandbyworkassignments(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentRestart componentRestart = 11;
  if (has_componentrestart()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->componentrestart(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart serviceUnitRestart = 12;
  if (has_serviceunitrestart()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->serviceunitrestart(), target);
  }

  // repeated string serviceUnits = 13;
  for (int i = 0; i < this->serviceunits_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serviceunits(i).data(), this->serviceunits(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serviceunits");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->serviceunits(i), target);
  }

  // repeated string serviceInstances = 14;
  for (int i = 0; i < this->serviceinstances_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serviceinstances(i).data(), this->serviceinstances(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serviceinstances");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->serviceinstances(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig)
  return target;
}

int ServiceGroupConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
    if (has_adminstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adminstate());
    }

    // optional bool autoRepair = 3;
    if (has_autorepair()) {
      total_size += 1 + 1;
    }

    // optional bool autoAdjust = 4;
    if (has_autoadjust()) {
      total_size += 1 + 1;
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT autoAdjustInterval = 5;
    if (has_autoadjustinterval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->autoadjustinterval());
    }

    // optional fixed32 preferredNumActiveServiceUnits = 6;
    if (has_preferrednumactiveserviceunits()) {
      total_size += 1 + 4;
    }

    // optional fixed32 preferredNumStandbyServiceUnits = 7;
    if (has_preferrednumstandbyserviceunits()) {
      total_size += 1 + 4;
    }

    // optional fixed32 preferredNumIdleServiceUnits = 8;
    if (has_preferrednumidleserviceunits()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional fixed32 maxActiveWorkAssignments = 9;
    if (has_maxactiveworkassignments()) {
      total_size += 1 + 4;
    }

    // optional fixed32 maxStandbyWorkAssignments = 10;
    if (has_maxstandbyworkassignments()) {
      total_size += 1 + 4;
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.ComponentRestart componentRestart = 11;
    if (has_componentrestart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->componentrestart());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestart serviceUnitRestart = 12;
    if (has_serviceunitrestart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serviceunitrestart());
    }

  }
  // repeated string serviceUnits = 13;
  total_size += 1 * this->serviceunits_size();
  for (int i = 0; i < this->serviceunits_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->serviceunits(i));
  }

  // repeated string serviceInstances = 14;
  total_size += 1 * this->serviceinstances_size();
  for (int i = 0; i < this->serviceinstances_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->serviceinstances(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceGroupConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceGroupConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceGroupConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceGroupConfig::MergeFrom(const ServiceGroupConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  serviceunits_.MergeFrom(from.serviceunits_);
  serviceinstances_.MergeFrom(from.serviceinstances_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_adminstate()) {
      set_adminstate(from.adminstate());
    }
    if (from.has_autorepair()) {
      set_autorepair(from.autorepair());
    }
    if (from.has_autoadjust()) {
      set_autoadjust(from.autoadjust());
    }
    if (from.has_autoadjustinterval()) {
      mutable_autoadjustinterval()->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::MergeFrom(from.autoadjustinterval());
    }
    if (from.has_preferrednumactiveserviceunits()) {
      set_preferrednumactiveserviceunits(from.preferrednumactiveserviceunits());
    }
    if (from.has_preferrednumstandbyserviceunits()) {
      set_preferrednumstandbyserviceunits(from.preferrednumstandbyserviceunits());
    }
    if (from.has_preferrednumidleserviceunits()) {
      set_preferrednumidleserviceunits(from.preferrednumidleserviceunits());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_maxactiveworkassignments()) {
      set_maxactiveworkassignments(from.maxactiveworkassignments());
    }
    if (from.has_maxstandbyworkassignments()) {
      set_maxstandbyworkassignments(from.maxstandbyworkassignments());
    }
    if (from.has_componentrestart()) {
      mutable_componentrestart()->::SAFplus::Rpc::amfMgmtRpc::ComponentRestart::MergeFrom(from.componentrestart());
    }
    if (from.has_serviceunitrestart()) {
      mutable_serviceunitrestart()->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestart::MergeFrom(from.serviceunitrestart());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceGroupConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceGroupConfig::CopyFrom(const ServiceGroupConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceGroupConfig::IsInitialized() const {

  if (has_autoadjustinterval()) {
    if (!this->autoadjustinterval().IsInitialized()) return false;
  }
  if (has_componentrestart()) {
    if (!this->componentrestart().IsInitialized()) return false;
  }
  if (has_serviceunitrestart()) {
    if (!this->serviceunitrestart().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ServiceGroupConfig::Swap(ServiceGroupConfig* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(adminstate_, other->adminstate_);
    std::swap(autorepair_, other->autorepair_);
    std::swap(autoadjust_, other->autoadjust_);
    std::swap(autoadjustinterval_, other->autoadjustinterval_);
    std::swap(preferrednumactiveserviceunits_, other->preferrednumactiveserviceunits_);
    std::swap(preferrednumstandbyserviceunits_, other->preferrednumstandbyserviceunits_);
    std::swap(preferrednumidleserviceunits_, other->preferrednumidleserviceunits_);
    std::swap(maxactiveworkassignments_, other->maxactiveworkassignments_);
    std::swap(maxstandbyworkassignments_, other->maxstandbyworkassignments_);
    std::swap(componentrestart_, other->componentrestart_);
    std::swap(serviceunitrestart_, other->serviceunitrestart_);
    serviceunits_.Swap(&other->serviceunits_);
    serviceinstances_.Swap(&other->serviceinstances_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ServiceGroupConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceGroupConfig_descriptor_;
  metadata.reflection = ServiceGroupConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Instantiate::kExecutionFieldNumber;
#endif  // !_MSC_VER

Instantiate::Instantiate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.Instantiate)
}

void Instantiate::InitAsDefaultInstance() {
  execution_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Execution*>(&::SAFplus::Rpc::amfMgmtRpc::Execution::default_instance());
}

Instantiate::Instantiate(const Instantiate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.Instantiate)
}

void Instantiate::SharedCtor() {
  _cached_size_ = 0;
  execution_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Instantiate::~Instantiate() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.Instantiate)
  SharedDtor();
}

void Instantiate::SharedDtor() {
  if (this != default_instance_) {
    delete execution_;
  }
}

void Instantiate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Instantiate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Instantiate_descriptor_;
}

const Instantiate& Instantiate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

Instantiate* Instantiate::default_instance_ = NULL;

Instantiate* Instantiate::New() const {
  return new Instantiate;
}

void Instantiate::Clear() {
  _extensions_.Clear();
  if (has_execution()) {
    if (execution_ != NULL) execution_->::SAFplus::Rpc::amfMgmtRpc::Execution::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Instantiate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.Instantiate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_execution()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.Instantiate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.Instantiate)
  return false;
#undef DO_
}

void Instantiate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.Instantiate)
  // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
  if (has_execution()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->execution(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.Instantiate)
}

::google::protobuf::uint8* Instantiate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.Instantiate)
  // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
  if (has_execution()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->execution(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.Instantiate)
  return target;
}

int Instantiate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
    if (has_execution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->execution());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Instantiate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Instantiate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Instantiate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Instantiate::MergeFrom(const Instantiate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_execution()) {
      mutable_execution()->::SAFplus::Rpc::amfMgmtRpc::Execution::MergeFrom(from.execution());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Instantiate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Instantiate::CopyFrom(const Instantiate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Instantiate::IsInitialized() const {

  if (has_execution()) {
    if (!this->execution().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Instantiate::Swap(Instantiate* other) {
  if (other != this) {
    std::swap(execution_, other->execution_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Instantiate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Instantiate_descriptor_;
  metadata.reflection = Instantiate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Terminate::kExecutionFieldNumber;
#endif  // !_MSC_VER

Terminate::Terminate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.Terminate)
}

void Terminate::InitAsDefaultInstance() {
  execution_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Execution*>(&::SAFplus::Rpc::amfMgmtRpc::Execution::default_instance());
}

Terminate::Terminate(const Terminate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.Terminate)
}

void Terminate::SharedCtor() {
  _cached_size_ = 0;
  execution_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Terminate::~Terminate() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.Terminate)
  SharedDtor();
}

void Terminate::SharedDtor() {
  if (this != default_instance_) {
    delete execution_;
  }
}

void Terminate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Terminate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Terminate_descriptor_;
}

const Terminate& Terminate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

Terminate* Terminate::default_instance_ = NULL;

Terminate* Terminate::New() const {
  return new Terminate;
}

void Terminate::Clear() {
  _extensions_.Clear();
  if (has_execution()) {
    if (execution_ != NULL) execution_->::SAFplus::Rpc::amfMgmtRpc::Execution::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Terminate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.Terminate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_execution()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.Terminate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.Terminate)
  return false;
#undef DO_
}

void Terminate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.Terminate)
  // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
  if (has_execution()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->execution(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.Terminate)
}

::google::protobuf::uint8* Terminate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.Terminate)
  // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
  if (has_execution()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->execution(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.Terminate)
  return target;
}

int Terminate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
    if (has_execution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->execution());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Terminate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Terminate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Terminate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Terminate::MergeFrom(const Terminate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_execution()) {
      mutable_execution()->::SAFplus::Rpc::amfMgmtRpc::Execution::MergeFrom(from.execution());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Terminate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Terminate::CopyFrom(const Terminate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Terminate::IsInitialized() const {

  if (has_execution()) {
    if (!this->execution().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Terminate::Swap(Terminate* other) {
  if (other != this) {
    std::swap(execution_, other->execution_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Terminate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Terminate_descriptor_;
  metadata.reflection = Terminate_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Cleanup::kExecutionFieldNumber;
#endif  // !_MSC_VER

Cleanup::Cleanup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.Cleanup)
}

void Cleanup::InitAsDefaultInstance() {
  execution_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Execution*>(&::SAFplus::Rpc::amfMgmtRpc::Execution::default_instance());
}

Cleanup::Cleanup(const Cleanup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.Cleanup)
}

void Cleanup::SharedCtor() {
  _cached_size_ = 0;
  execution_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Cleanup::~Cleanup() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.Cleanup)
  SharedDtor();
}

void Cleanup::SharedDtor() {
  if (this != default_instance_) {
    delete execution_;
  }
}

void Cleanup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cleanup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cleanup_descriptor_;
}

const Cleanup& Cleanup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

Cleanup* Cleanup::default_instance_ = NULL;

Cleanup* Cleanup::New() const {
  return new Cleanup;
}

void Cleanup::Clear() {
  _extensions_.Clear();
  if (has_execution()) {
    if (execution_ != NULL) execution_->::SAFplus::Rpc::amfMgmtRpc::Execution::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Cleanup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.Cleanup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_execution()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.Cleanup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.Cleanup)
  return false;
#undef DO_
}

void Cleanup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.Cleanup)
  // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
  if (has_execution()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->execution(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.Cleanup)
}

::google::protobuf::uint8* Cleanup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.Cleanup)
  // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
  if (has_execution()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->execution(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.Cleanup)
  return target;
}

int Cleanup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.Execution Execution = 1;
    if (has_execution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->execution());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cleanup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Cleanup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Cleanup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Cleanup::MergeFrom(const Cleanup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_execution()) {
      mutable_execution()->::SAFplus::Rpc::amfMgmtRpc::Execution::MergeFrom(from.execution());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Cleanup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cleanup::CopyFrom(const Cleanup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cleanup::IsInitialized() const {

  if (has_execution()) {
    if (!this->execution().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Cleanup::Swap(Cleanup* other) {
  if (other != this) {
    std::swap(execution_, other->execution_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Cleanup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cleanup_descriptor_;
  metadata.reflection = Cleanup_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Timeouts::kTerminateFieldNumber;
const int Timeouts::kQuiescingCompleteFieldNumber;
const int Timeouts::kWorkRemovalFieldNumber;
const int Timeouts::kWorkAssignmentFieldNumber;
#endif  // !_MSC_VER

Timeouts::Timeouts()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.Timeouts)
}

void Timeouts::InitAsDefaultInstance() {
  terminate_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::SaTimeT*>(&::SAFplus::Rpc::amfMgmtRpc::SaTimeT::default_instance());
  quiescingcomplete_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::SaTimeT*>(&::SAFplus::Rpc::amfMgmtRpc::SaTimeT::default_instance());
  workremoval_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::SaTimeT*>(&::SAFplus::Rpc::amfMgmtRpc::SaTimeT::default_instance());
  workassignment_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::SaTimeT*>(&::SAFplus::Rpc::amfMgmtRpc::SaTimeT::default_instance());
}

Timeouts::Timeouts(const Timeouts& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.Timeouts)
}

void Timeouts::SharedCtor() {
  _cached_size_ = 0;
  terminate_ = NULL;
  quiescingcomplete_ = NULL;
  workremoval_ = NULL;
  workassignment_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Timeouts::~Timeouts() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.Timeouts)
  SharedDtor();
}

void Timeouts::SharedDtor() {
  if (this != default_instance_) {
    delete terminate_;
    delete quiescingcomplete_;
    delete workremoval_;
    delete workassignment_;
  }
}

void Timeouts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Timeouts::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Timeouts_descriptor_;
}

const Timeouts& Timeouts::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

Timeouts* Timeouts::default_instance_ = NULL;

Timeouts* Timeouts::New() const {
  return new Timeouts;
}

void Timeouts::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 15) {
    if (has_terminate()) {
      if (terminate_ != NULL) terminate_->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::Clear();
    }
    if (has_quiescingcomplete()) {
      if (quiescingcomplete_ != NULL) quiescingcomplete_->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::Clear();
    }
    if (has_workremoval()) {
      if (workremoval_ != NULL) workremoval_->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::Clear();
    }
    if (has_workassignment()) {
      if (workassignment_ != NULL) workassignment_->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Timeouts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.Timeouts)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT terminate = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_terminate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_quiescingComplete;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT quiescingComplete = 2;
      case 2: {
        if (tag == 18) {
         parse_quiescingComplete:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_quiescingcomplete()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_workRemoval;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT workRemoval = 3;
      case 3: {
        if (tag == 26) {
         parse_workRemoval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_workremoval()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_workAssignment;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT workAssignment = 4;
      case 4: {
        if (tag == 34) {
         parse_workAssignment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_workassignment()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.Timeouts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.Timeouts)
  return false;
#undef DO_
}

void Timeouts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.Timeouts)
  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT terminate = 1;
  if (has_terminate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->terminate(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT quiescingComplete = 2;
  if (has_quiescingcomplete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->quiescingcomplete(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT workRemoval = 3;
  if (has_workremoval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->workremoval(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT workAssignment = 4;
  if (has_workassignment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->workassignment(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.Timeouts)
}

::google::protobuf::uint8* Timeouts::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.Timeouts)
  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT terminate = 1;
  if (has_terminate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->terminate(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT quiescingComplete = 2;
  if (has_quiescingcomplete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->quiescingcomplete(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT workRemoval = 3;
  if (has_workremoval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->workremoval(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT workAssignment = 4;
  if (has_workassignment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->workassignment(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.Timeouts)
  return target;
}

int Timeouts::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT terminate = 1;
    if (has_terminate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->terminate());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT quiescingComplete = 2;
    if (has_quiescingcomplete()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->quiescingcomplete());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT workRemoval = 3;
    if (has_workremoval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workremoval());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.SaTimeT workAssignment = 4;
    if (has_workassignment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workassignment());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Timeouts::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Timeouts* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Timeouts*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Timeouts::MergeFrom(const Timeouts& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_terminate()) {
      mutable_terminate()->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::MergeFrom(from.terminate());
    }
    if (from.has_quiescingcomplete()) {
      mutable_quiescingcomplete()->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::MergeFrom(from.quiescingcomplete());
    }
    if (from.has_workremoval()) {
      mutable_workremoval()->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::MergeFrom(from.workremoval());
    }
    if (from.has_workassignment()) {
      mutable_workassignment()->::SAFplus::Rpc::amfMgmtRpc::SaTimeT::MergeFrom(from.workassignment());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Timeouts::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timeouts::CopyFrom(const Timeouts& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timeouts::IsInitialized() const {

  if (has_terminate()) {
    if (!this->terminate().IsInitialized()) return false;
  }
  if (has_quiescingcomplete()) {
    if (!this->quiescingcomplete().IsInitialized()) return false;
  }
  if (has_workremoval()) {
    if (!this->workremoval().IsInitialized()) return false;
  }
  if (has_workassignment()) {
    if (!this->workassignment().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Timeouts::Swap(Timeouts* other) {
  if (other != this) {
    std::swap(terminate_, other->terminate_);
    std::swap(quiescingcomplete_, other->quiescingcomplete_);
    std::swap(workremoval_, other->workremoval_);
    std::swap(workassignment_, other->workassignment_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Timeouts::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Timeouts_descriptor_;
  metadata.reflection = Timeouts_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentConfig::kNameFieldNumber;
const int ComponentConfig::kCapabilityModelFieldNumber;
const int ComponentConfig::kMaxActiveAssignmentsFieldNumber;
const int ComponentConfig::kMaxStandbyAssignmentsFieldNumber;
const int ComponentConfig::kCommandEnvironmentFieldNumber;
const int ComponentConfig::kInstantiateFieldNumber;
const int ComponentConfig::kTerminateFieldNumber;
const int ComponentConfig::kCleanupFieldNumber;
const int ComponentConfig::kMaxInstantInstantiationsFieldNumber;
const int ComponentConfig::kMaxDelayedInstantiationsFieldNumber;
const int ComponentConfig::kInstantiationSuccessDurationFieldNumber;
const int ComponentConfig::kDelayBetweenInstantiationFieldNumber;
const int ComponentConfig::kTimeoutsFieldNumber;
const int ComponentConfig::kServiceUnitFieldNumber;
const int ComponentConfig::kRecoveryFieldNumber;
const int ComponentConfig::kRestartableFieldNumber;
#endif  // !_MSC_VER

ComponentConfig::ComponentConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ComponentConfig)
}

void ComponentConfig::InitAsDefaultInstance() {
  instantiate_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Instantiate*>(&::SAFplus::Rpc::amfMgmtRpc::Instantiate::default_instance());
  terminate_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Terminate*>(&::SAFplus::Rpc::amfMgmtRpc::Terminate::default_instance());
  cleanup_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Cleanup*>(&::SAFplus::Rpc::amfMgmtRpc::Cleanup::default_instance());
  timeouts_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Timeouts*>(&::SAFplus::Rpc::amfMgmtRpc::Timeouts::default_instance());
}

ComponentConfig::ComponentConfig(const ComponentConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ComponentConfig)
}

void ComponentConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  capabilitymodel_ = 0;
  maxactiveassignments_ = 0u;
  maxstandbyassignments_ = 0u;
  instantiate_ = NULL;
  terminate_ = NULL;
  cleanup_ = NULL;
  maxinstantinstantiations_ = 0u;
  maxdelayedinstantiations_ = 0u;
  instantiationsuccessduration_ = 0u;
  delaybetweeninstantiation_ = 0u;
  timeouts_ = NULL;
  serviceunit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recovery_ = 1;
  restartable_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentConfig::~ComponentConfig() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ComponentConfig)
  SharedDtor();
}

void ComponentConfig::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (serviceunit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serviceunit_;
  }
  if (this != default_instance_) {
    delete instantiate_;
    delete terminate_;
    delete cleanup_;
    delete timeouts_;
  }
}

void ComponentConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentConfig_descriptor_;
}

const ComponentConfig& ComponentConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ComponentConfig* ComponentConfig::default_instance_ = NULL;

ComponentConfig* ComponentConfig::New() const {
  return new ComponentConfig;
}

void ComponentConfig::Clear() {
  _extensions_.Clear();
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ComponentConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 239) {
    ZR_(capabilitymodel_, maxactiveassignments_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    maxstandbyassignments_ = 0u;
    if (has_instantiate()) {
      if (instantiate_ != NULL) instantiate_->::SAFplus::Rpc::amfMgmtRpc::Instantiate::Clear();
    }
    if (has_terminate()) {
      if (terminate_ != NULL) terminate_->::SAFplus::Rpc::amfMgmtRpc::Terminate::Clear();
    }
    if (has_cleanup()) {
      if (cleanup_ != NULL) cleanup_->::SAFplus::Rpc::amfMgmtRpc::Cleanup::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    ZR_(maxdelayedinstantiations_, instantiationsuccessduration_);
    maxinstantinstantiations_ = 0u;
    delaybetweeninstantiation_ = 0u;
    if (has_timeouts()) {
      if (timeouts_ != NULL) timeouts_->::SAFplus::Rpc::amfMgmtRpc::Timeouts::Clear();
    }
    if (has_serviceunit()) {
      if (serviceunit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        serviceunit_->clear();
      }
    }
    recovery_ = 1;
    restartable_ = false;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  commandenvironment_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ComponentConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_capabilityModel;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.CapabilityModel capabilityModel = 2;
      case 2: {
        if (tag == 16) {
         parse_capabilityModel:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::CapabilityModel_IsValid(value)) {
            set_capabilitymodel(static_cast< ::SAFplus::Rpc::amfMgmtRpc::CapabilityModel >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_maxActiveAssignments;
        break;
      }

      // optional fixed32 maxActiveAssignments = 3;
      case 3: {
        if (tag == 29) {
         parse_maxActiveAssignments:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &maxactiveassignments_)));
          set_has_maxactiveassignments();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_maxStandbyAssignments;
        break;
      }

      // optional fixed32 maxStandbyAssignments = 4;
      case 4: {
        if (tag == 37) {
         parse_maxStandbyAssignments:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &maxstandbyassignments_)));
          set_has_maxstandbyassignments();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_commandEnvironment;
        break;
      }

      // repeated string commandEnvironment = 5;
      case 5: {
        if (tag == 42) {
         parse_commandEnvironment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_commandenvironment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->commandenvironment(this->commandenvironment_size() - 1).data(),
            this->commandenvironment(this->commandenvironment_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "commandenvironment");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_commandEnvironment;
        if (input->ExpectTag(50)) goto parse_instantiate;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.Instantiate instantiate = 6;
      case 6: {
        if (tag == 50) {
         parse_instantiate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_instantiate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_terminate;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.Terminate terminate = 7;
      case 7: {
        if (tag == 58) {
         parse_terminate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_terminate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_cleanup;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.Cleanup cleanup = 8;
      case 8: {
        if (tag == 66) {
         parse_cleanup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cleanup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_maxInstantInstantiations;
        break;
      }

      // optional fixed32 maxInstantInstantiations = 9;
      case 9: {
        if (tag == 77) {
         parse_maxInstantInstantiations:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &maxinstantinstantiations_)));
          set_has_maxinstantinstantiations();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_maxDelayedInstantiations;
        break;
      }

      // optional fixed32 maxDelayedInstantiations = 10;
      case 10: {
        if (tag == 85) {
         parse_maxDelayedInstantiations:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &maxdelayedinstantiations_)));
          set_has_maxdelayedinstantiations();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_instantiationSuccessDuration;
        break;
      }

      // optional fixed32 instantiationSuccessDuration = 11;
      case 11: {
        if (tag == 93) {
         parse_instantiationSuccessDuration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &instantiationsuccessduration_)));
          set_has_instantiationsuccessduration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(101)) goto parse_delayBetweenInstantiation;
        break;
      }

      // optional fixed32 delayBetweenInstantiation = 12;
      case 12: {
        if (tag == 101) {
         parse_delayBetweenInstantiation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &delaybetweeninstantiation_)));
          set_has_delaybetweeninstantiation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_timeouts;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.Timeouts timeouts = 13;
      case 13: {
        if (tag == 106) {
         parse_timeouts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timeouts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_serviceUnit;
        break;
      }

      // optional string serviceUnit = 14;
      case 14: {
        if (tag == 114) {
         parse_serviceUnit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serviceunit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serviceunit().data(), this->serviceunit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serviceunit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_recovery;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.Recovery recovery = 15;
      case 15: {
        if (tag == 120) {
         parse_recovery:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::Recovery_IsValid(value)) {
            set_recovery(static_cast< ::SAFplus::Rpc::amfMgmtRpc::Recovery >(value));
          } else {
            mutable_unknown_fields()->AddVarint(15, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_restartable;
        break;
      }

      // optional bool restartable = 16;
      case 16: {
        if (tag == 128) {
         parse_restartable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &restartable_)));
          set_has_restartable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ComponentConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ComponentConfig)
  return false;
#undef DO_
}

void ComponentConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ComponentConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.CapabilityModel capabilityModel = 2;
  if (has_capabilitymodel()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->capabilitymodel(), output);
  }

  // optional fixed32 maxActiveAssignments = 3;
  if (has_maxactiveassignments()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->maxactiveassignments(), output);
  }

  // optional fixed32 maxStandbyAssignments = 4;
  if (has_maxstandbyassignments()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->maxstandbyassignments(), output);
  }

  // repeated string commandEnvironment = 5;
  for (int i = 0; i < this->commandenvironment_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->commandenvironment(i).data(), this->commandenvironment(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "commandenvironment");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->commandenvironment(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Instantiate instantiate = 6;
  if (has_instantiate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->instantiate(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Terminate terminate = 7;
  if (has_terminate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->terminate(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Cleanup cleanup = 8;
  if (has_cleanup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->cleanup(), output);
  }

  // optional fixed32 maxInstantInstantiations = 9;
  if (has_maxinstantinstantiations()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(9, this->maxinstantinstantiations(), output);
  }

  // optional fixed32 maxDelayedInstantiations = 10;
  if (has_maxdelayedinstantiations()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(10, this->maxdelayedinstantiations(), output);
  }

  // optional fixed32 instantiationSuccessDuration = 11;
  if (has_instantiationsuccessduration()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(11, this->instantiationsuccessduration(), output);
  }

  // optional fixed32 delayBetweenInstantiation = 12;
  if (has_delaybetweeninstantiation()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(12, this->delaybetweeninstantiation(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Timeouts timeouts = 13;
  if (has_timeouts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->timeouts(), output);
  }

  // optional string serviceUnit = 14;
  if (has_serviceunit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serviceunit().data(), this->serviceunit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serviceunit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->serviceunit(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Recovery recovery = 15;
  if (has_recovery()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->recovery(), output);
  }

  // optional bool restartable = 16;
  if (has_restartable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->restartable(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ComponentConfig)
}

::google::protobuf::uint8* ComponentConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ComponentConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.CapabilityModel capabilityModel = 2;
  if (has_capabilitymodel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->capabilitymodel(), target);
  }

  // optional fixed32 maxActiveAssignments = 3;
  if (has_maxactiveassignments()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->maxactiveassignments(), target);
  }

  // optional fixed32 maxStandbyAssignments = 4;
  if (has_maxstandbyassignments()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->maxstandbyassignments(), target);
  }

  // repeated string commandEnvironment = 5;
  for (int i = 0; i < this->commandenvironment_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commandenvironment(i).data(), this->commandenvironment(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "commandenvironment");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->commandenvironment(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Instantiate instantiate = 6;
  if (has_instantiate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->instantiate(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Terminate terminate = 7;
  if (has_terminate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->terminate(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Cleanup cleanup = 8;
  if (has_cleanup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->cleanup(), target);
  }

  // optional fixed32 maxInstantInstantiations = 9;
  if (has_maxinstantinstantiations()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(9, this->maxinstantinstantiations(), target);
  }

  // optional fixed32 maxDelayedInstantiations = 10;
  if (has_maxdelayedinstantiations()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(10, this->maxdelayedinstantiations(), target);
  }

  // optional fixed32 instantiationSuccessDuration = 11;
  if (has_instantiationsuccessduration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(11, this->instantiationsuccessduration(), target);
  }

  // optional fixed32 delayBetweenInstantiation = 12;
  if (has_delaybetweeninstantiation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(12, this->delaybetweeninstantiation(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Timeouts timeouts = 13;
  if (has_timeouts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->timeouts(), target);
  }

  // optional string serviceUnit = 14;
  if (has_serviceunit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serviceunit().data(), this->serviceunit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serviceunit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->serviceunit(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Recovery recovery = 15;
  if (has_recovery()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->recovery(), target);
  }

  // optional bool restartable = 16;
  if (has_restartable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->restartable(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ComponentConfig)
  return target;
}

int ComponentConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.CapabilityModel capabilityModel = 2;
    if (has_capabilitymodel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->capabilitymodel());
    }

    // optional fixed32 maxActiveAssignments = 3;
    if (has_maxactiveassignments()) {
      total_size += 1 + 4;
    }

    // optional fixed32 maxStandbyAssignments = 4;
    if (has_maxstandbyassignments()) {
      total_size += 1 + 4;
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.Instantiate instantiate = 6;
    if (has_instantiate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->instantiate());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.Terminate terminate = 7;
    if (has_terminate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->terminate());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.Cleanup cleanup = 8;
    if (has_cleanup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cleanup());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional fixed32 maxInstantInstantiations = 9;
    if (has_maxinstantinstantiations()) {
      total_size += 1 + 4;
    }

    // optional fixed32 maxDelayedInstantiations = 10;
    if (has_maxdelayedinstantiations()) {
      total_size += 1 + 4;
    }

    // optional fixed32 instantiationSuccessDuration = 11;
    if (has_instantiationsuccessduration()) {
      total_size += 1 + 4;
    }

    // optional fixed32 delayBetweenInstantiation = 12;
    if (has_delaybetweeninstantiation()) {
      total_size += 1 + 4;
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.Timeouts timeouts = 13;
    if (has_timeouts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->timeouts());
    }

    // optional string serviceUnit = 14;
    if (has_serviceunit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serviceunit());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.Recovery recovery = 15;
    if (has_recovery()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->recovery());
    }

    // optional bool restartable = 16;
    if (has_restartable()) {
      total_size += 2 + 1;
    }

  }
  // repeated string commandEnvironment = 5;
  total_size += 1 * this->commandenvironment_size();
  for (int i = 0; i < this->commandenvironment_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->commandenvironment(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentConfig::MergeFrom(const ComponentConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  commandenvironment_.MergeFrom(from.commandenvironment_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_capabilitymodel()) {
      set_capabilitymodel(from.capabilitymodel());
    }
    if (from.has_maxactiveassignments()) {
      set_maxactiveassignments(from.maxactiveassignments());
    }
    if (from.has_maxstandbyassignments()) {
      set_maxstandbyassignments(from.maxstandbyassignments());
    }
    if (from.has_instantiate()) {
      mutable_instantiate()->::SAFplus::Rpc::amfMgmtRpc::Instantiate::MergeFrom(from.instantiate());
    }
    if (from.has_terminate()) {
      mutable_terminate()->::SAFplus::Rpc::amfMgmtRpc::Terminate::MergeFrom(from.terminate());
    }
    if (from.has_cleanup()) {
      mutable_cleanup()->::SAFplus::Rpc::amfMgmtRpc::Cleanup::MergeFrom(from.cleanup());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_maxinstantinstantiations()) {
      set_maxinstantinstantiations(from.maxinstantinstantiations());
    }
    if (from.has_maxdelayedinstantiations()) {
      set_maxdelayedinstantiations(from.maxdelayedinstantiations());
    }
    if (from.has_instantiationsuccessduration()) {
      set_instantiationsuccessduration(from.instantiationsuccessduration());
    }
    if (from.has_delaybetweeninstantiation()) {
      set_delaybetweeninstantiation(from.delaybetweeninstantiation());
    }
    if (from.has_timeouts()) {
      mutable_timeouts()->::SAFplus::Rpc::amfMgmtRpc::Timeouts::MergeFrom(from.timeouts());
    }
    if (from.has_serviceunit()) {
      set_serviceunit(from.serviceunit());
    }
    if (from.has_recovery()) {
      set_recovery(from.recovery());
    }
    if (from.has_restartable()) {
      set_restartable(from.restartable());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentConfig::CopyFrom(const ComponentConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentConfig::IsInitialized() const {

  if (has_instantiate()) {
    if (!this->instantiate().IsInitialized()) return false;
  }
  if (has_terminate()) {
    if (!this->terminate().IsInitialized()) return false;
  }
  if (has_cleanup()) {
    if (!this->cleanup().IsInitialized()) return false;
  }
  if (has_timeouts()) {
    if (!this->timeouts().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ComponentConfig::Swap(ComponentConfig* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(capabilitymodel_, other->capabilitymodel_);
    std::swap(maxactiveassignments_, other->maxactiveassignments_);
    std::swap(maxstandbyassignments_, other->maxstandbyassignments_);
    commandenvironment_.Swap(&other->commandenvironment_);
    std::swap(instantiate_, other->instantiate_);
    std::swap(terminate_, other->terminate_);
    std::swap(cleanup_, other->cleanup_);
    std::swap(maxinstantinstantiations_, other->maxinstantinstantiations_);
    std::swap(maxdelayedinstantiations_, other->maxdelayedinstantiations_);
    std::swap(instantiationsuccessduration_, other->instantiationsuccessduration_);
    std::swap(delaybetweeninstantiation_, other->delaybetweeninstantiation_);
    std::swap(timeouts_, other->timeouts_);
    std::swap(serviceunit_, other->serviceunit_);
    std::swap(recovery_, other->recovery_);
    std::swap(restartable_, other->restartable_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ComponentConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentConfig_descriptor_;
  metadata.reflection = ComponentConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Data::kNameFieldNumber;
const int Data::kValFieldNumber;
#endif  // !_MSC_VER

Data::Data()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.Data)
}

void Data::InitAsDefaultInstance() {
}

Data::Data(const Data& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.Data)
}

void Data::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.Data)
  SharedDtor();
}

void Data::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (val_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete val_;
  }
  if (this != default_instance_) {
  }
}

void Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Data_descriptor_;
}

const Data& Data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

Data* Data::default_instance_ = NULL;

Data* Data::New() const {
  return new Data;
}

void Data::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_val()) {
      if (val_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        val_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_val;
        break;
      }

      // optional string val = 2;
      case 2: {
        if (tag == 18) {
         parse_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->val().data(), this->val().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "val");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.Data)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string val = 2;
  if (has_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->val(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.Data)
}

::google::protobuf::uint8* Data::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.Data)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string val = 2;
  if (has_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val().data(), this->val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->val(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.Data)
  return target;
}

int Data::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string val = 2;
    if (has_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->val());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Data* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Data*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_val()) {
      set_val(from.val());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Data::Swap(Data* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(val_, other->val_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Data_descriptor_;
  metadata.reflection = Data_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentServiceInstanceConfig::kNameFieldNumber;
const int ComponentServiceInstanceConfig::kDependenciesFieldNumber;
const int ComponentServiceInstanceConfig::kDataFieldNumber;
const int ComponentServiceInstanceConfig::kServiceInstanceFieldNumber;
#endif  // !_MSC_VER

ComponentServiceInstanceConfig::ComponentServiceInstanceConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig)
}

void ComponentServiceInstanceConfig::InitAsDefaultInstance() {
}

ComponentServiceInstanceConfig::ComponentServiceInstanceConfig(const ComponentServiceInstanceConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig)
}

void ComponentServiceInstanceConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serviceinstance_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentServiceInstanceConfig::~ComponentServiceInstanceConfig() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig)
  SharedDtor();
}

void ComponentServiceInstanceConfig::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (serviceinstance_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serviceinstance_;
  }
  if (this != default_instance_) {
  }
}

void ComponentServiceInstanceConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentServiceInstanceConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentServiceInstanceConfig_descriptor_;
}

const ComponentServiceInstanceConfig& ComponentServiceInstanceConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ComponentServiceInstanceConfig* ComponentServiceInstanceConfig::default_instance_ = NULL;

ComponentServiceInstanceConfig* ComponentServiceInstanceConfig::New() const {
  return new ComponentServiceInstanceConfig;
}

void ComponentServiceInstanceConfig::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 9) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_serviceinstance()) {
      if (serviceinstance_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        serviceinstance_->clear();
      }
    }
  }
  dependencies_.Clear();
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentServiceInstanceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dependencies;
        break;
      }

      // repeated string dependencies = 2;
      case 2: {
        if (tag == 18) {
         parse_dependencies:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_dependencies()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dependencies(this->dependencies_size() - 1).data(),
            this->dependencies(this->dependencies_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dependencies");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dependencies;
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .SAFplus.Rpc.amfMgmtRpc.Data data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectTag(34)) goto parse_serviceInstance;
        break;
      }

      // optional string serviceInstance = 4;
      case 4: {
        if (tag == 34) {
         parse_serviceInstance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serviceinstance()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serviceinstance().data(), this->serviceinstance().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serviceinstance");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig)
  return false;
#undef DO_
}

void ComponentServiceInstanceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string dependencies = 2;
  for (int i = 0; i < this->dependencies_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->dependencies(i).data(), this->dependencies(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "dependencies");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->dependencies(i), output);
  }

  // repeated .SAFplus.Rpc.amfMgmtRpc.Data data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  // optional string serviceInstance = 4;
  if (has_serviceinstance()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serviceinstance().data(), this->serviceinstance().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serviceinstance");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->serviceinstance(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig)
}

::google::protobuf::uint8* ComponentServiceInstanceConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string dependencies = 2;
  for (int i = 0; i < this->dependencies_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dependencies(i).data(), this->dependencies(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dependencies");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->dependencies(i), target);
  }

  // repeated .SAFplus.Rpc.amfMgmtRpc.Data data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  // optional string serviceInstance = 4;
  if (has_serviceinstance()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serviceinstance().data(), this->serviceinstance().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serviceinstance");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->serviceinstance(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig)
  return target;
}

int ComponentServiceInstanceConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string serviceInstance = 4;
    if (has_serviceinstance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serviceinstance());
    }

  }
  // repeated string dependencies = 2;
  total_size += 1 * this->dependencies_size();
  for (int i = 0; i < this->dependencies_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->dependencies(i));
  }

  // repeated .SAFplus.Rpc.amfMgmtRpc.Data data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentServiceInstanceConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentServiceInstanceConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentServiceInstanceConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentServiceInstanceConfig::MergeFrom(const ComponentServiceInstanceConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  dependencies_.MergeFrom(from.dependencies_);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_serviceinstance()) {
      set_serviceinstance(from.serviceinstance());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentServiceInstanceConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentServiceInstanceConfig::CopyFrom(const ComponentServiceInstanceConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentServiceInstanceConfig::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ComponentServiceInstanceConfig::Swap(ComponentServiceInstanceConfig* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    dependencies_.Swap(&other->dependencies_);
    data_.Swap(&other->data_);
    std::swap(serviceinstance_, other->serviceinstance_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ComponentServiceInstanceConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentServiceInstanceConfig_descriptor_;
  metadata.reflection = ComponentServiceInstanceConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServiceInstanceConfig::kNameFieldNumber;
const int ServiceInstanceConfig::kAdminStateFieldNumber;
const int ServiceInstanceConfig::kPreferredActiveAssignmentsFieldNumber;
const int ServiceInstanceConfig::kPreferredStandbyAssignmentsFieldNumber;
const int ServiceInstanceConfig::kRankFieldNumber;
const int ServiceInstanceConfig::kComponentServiceInstancesFieldNumber;
const int ServiceInstanceConfig::kServiceGroupFieldNumber;
#endif  // !_MSC_VER

ServiceInstanceConfig::ServiceInstanceConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig)
}

void ServiceInstanceConfig::InitAsDefaultInstance() {
}

ServiceInstanceConfig::ServiceInstanceConfig(const ServiceInstanceConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig)
}

void ServiceInstanceConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adminstate_ = 0;
  preferredactiveassignments_ = 0u;
  preferredstandbyassignments_ = 0u;
  rank_ = 0u;
  servicegroup_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceInstanceConfig::~ServiceInstanceConfig() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig)
  SharedDtor();
}

void ServiceInstanceConfig::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (servicegroup_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete servicegroup_;
  }
  if (this != default_instance_) {
  }
}

void ServiceInstanceConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceInstanceConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceInstanceConfig_descriptor_;
}

const ServiceInstanceConfig& ServiceInstanceConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ServiceInstanceConfig* ServiceInstanceConfig::default_instance_ = NULL;

ServiceInstanceConfig* ServiceInstanceConfig::New() const {
  return new ServiceInstanceConfig;
}

void ServiceInstanceConfig::Clear() {
  _extensions_.Clear();
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServiceInstanceConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 95) {
    ZR_(adminstate_, rank_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_servicegroup()) {
      if (servicegroup_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        servicegroup_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  componentserviceinstances_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceInstanceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_adminState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
      case 2: {
        if (tag == 16) {
         parse_adminState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::AdministrativeState_IsValid(value)) {
            set_adminstate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::AdministrativeState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_preferredActiveAssignments;
        break;
      }

      // optional fixed32 preferredActiveAssignments = 3;
      case 3: {
        if (tag == 29) {
         parse_preferredActiveAssignments:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &preferredactiveassignments_)));
          set_has_preferredactiveassignments();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_preferredStandbyAssignments;
        break;
      }

      // optional fixed32 preferredStandbyAssignments = 4;
      case 4: {
        if (tag == 37) {
         parse_preferredStandbyAssignments:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &preferredstandbyassignments_)));
          set_has_preferredstandbyassignments();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_rank;
        break;
      }

      // optional fixed32 rank = 5;
      case 5: {
        if (tag == 45) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_componentServiceInstances;
        break;
      }

      // repeated string componentServiceInstances = 6;
      case 6: {
        if (tag == 50) {
         parse_componentServiceInstances:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_componentserviceinstances()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->componentserviceinstances(this->componentserviceinstances_size() - 1).data(),
            this->componentserviceinstances(this->componentserviceinstances_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "componentserviceinstances");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_componentServiceInstances;
        if (input->ExpectTag(58)) goto parse_serviceGroup;
        break;
      }

      // optional string serviceGroup = 7;
      case 7: {
        if (tag == 58) {
         parse_serviceGroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicegroup()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->servicegroup().data(), this->servicegroup().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "servicegroup");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig)
  return false;
#undef DO_
}

void ServiceInstanceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
  if (has_adminstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->adminstate(), output);
  }

  // optional fixed32 preferredActiveAssignments = 3;
  if (has_preferredactiveassignments()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->preferredactiveassignments(), output);
  }

  // optional fixed32 preferredStandbyAssignments = 4;
  if (has_preferredstandbyassignments()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->preferredstandbyassignments(), output);
  }

  // optional fixed32 rank = 5;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->rank(), output);
  }

  // repeated string componentServiceInstances = 6;
  for (int i = 0; i < this->componentserviceinstances_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->componentserviceinstances(i).data(), this->componentserviceinstances(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "componentserviceinstances");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->componentserviceinstances(i), output);
  }

  // optional string serviceGroup = 7;
  if (has_servicegroup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicegroup().data(), this->servicegroup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "servicegroup");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->servicegroup(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig)
}

::google::protobuf::uint8* ServiceInstanceConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
  if (has_adminstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->adminstate(), target);
  }

  // optional fixed32 preferredActiveAssignments = 3;
  if (has_preferredactiveassignments()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->preferredactiveassignments(), target);
  }

  // optional fixed32 preferredStandbyAssignments = 4;
  if (has_preferredstandbyassignments()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->preferredstandbyassignments(), target);
  }

  // optional fixed32 rank = 5;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->rank(), target);
  }

  // repeated string componentServiceInstances = 6;
  for (int i = 0; i < this->componentserviceinstances_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->componentserviceinstances(i).data(), this->componentserviceinstances(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "componentserviceinstances");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->componentserviceinstances(i), target);
  }

  // optional string serviceGroup = 7;
  if (has_servicegroup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicegroup().data(), this->servicegroup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "servicegroup");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->servicegroup(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig)
  return target;
}

int ServiceInstanceConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
    if (has_adminstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adminstate());
    }

    // optional fixed32 preferredActiveAssignments = 3;
    if (has_preferredactiveassignments()) {
      total_size += 1 + 4;
    }

    // optional fixed32 preferredStandbyAssignments = 4;
    if (has_preferredstandbyassignments()) {
      total_size += 1 + 4;
    }

    // optional fixed32 rank = 5;
    if (has_rank()) {
      total_size += 1 + 4;
    }

    // optional string serviceGroup = 7;
    if (has_servicegroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->servicegroup());
    }

  }
  // repeated string componentServiceInstances = 6;
  total_size += 1 * this->componentserviceinstances_size();
  for (int i = 0; i < this->componentserviceinstances_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->componentserviceinstances(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceInstanceConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceInstanceConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceInstanceConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceInstanceConfig::MergeFrom(const ServiceInstanceConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  componentserviceinstances_.MergeFrom(from.componentserviceinstances_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_adminstate()) {
      set_adminstate(from.adminstate());
    }
    if (from.has_preferredactiveassignments()) {
      set_preferredactiveassignments(from.preferredactiveassignments());
    }
    if (from.has_preferredstandbyassignments()) {
      set_preferredstandbyassignments(from.preferredstandbyassignments());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_servicegroup()) {
      set_servicegroup(from.servicegroup());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceInstanceConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceInstanceConfig::CopyFrom(const ServiceInstanceConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceInstanceConfig::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ServiceInstanceConfig::Swap(ServiceInstanceConfig* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(adminstate_, other->adminstate_);
    std::swap(preferredactiveassignments_, other->preferredactiveassignments_);
    std::swap(preferredstandbyassignments_, other->preferredstandbyassignments_);
    std::swap(rank_, other->rank_);
    componentserviceinstances_.Swap(&other->componentserviceinstances_);
    std::swap(servicegroup_, other->servicegroup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ServiceInstanceConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceInstanceConfig_descriptor_;
  metadata.reflection = ServiceInstanceConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServiceUnitConfig::kNameFieldNumber;
const int ServiceUnitConfig::kAdminStateFieldNumber;
const int ServiceUnitConfig::kRankFieldNumber;
const int ServiceUnitConfig::kFailoverFieldNumber;
const int ServiceUnitConfig::kComponentsFieldNumber;
const int ServiceUnitConfig::kNodeFieldNumber;
const int ServiceUnitConfig::kServiceGroupFieldNumber;
const int ServiceUnitConfig::kProbationTimeFieldNumber;
#endif  // !_MSC_VER

ServiceUnitConfig::ServiceUnitConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig)
}

void ServiceUnitConfig::InitAsDefaultInstance() {
}

ServiceUnitConfig::ServiceUnitConfig(const ServiceUnitConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig)
}

void ServiceUnitConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  adminstate_ = 0;
  rank_ = 0u;
  failover_ = false;
  node_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servicegroup_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  probationtime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceUnitConfig::~ServiceUnitConfig() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig)
  SharedDtor();
}

void ServiceUnitConfig::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (node_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete node_;
  }
  if (servicegroup_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete servicegroup_;
  }
  if (this != default_instance_) {
  }
}

void ServiceUnitConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceUnitConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceUnitConfig_descriptor_;
}

const ServiceUnitConfig& ServiceUnitConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ServiceUnitConfig* ServiceUnitConfig::default_instance_ = NULL;

ServiceUnitConfig* ServiceUnitConfig::New() const {
  return new ServiceUnitConfig;
}

void ServiceUnitConfig::Clear() {
  _extensions_.Clear();
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServiceUnitConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 239) {
    ZR_(adminstate_, rank_);
    ZR_(failover_, probationtime_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_node()) {
      if (node_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        node_->clear();
      }
    }
    if (has_servicegroup()) {
      if (servicegroup_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        servicegroup_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  components_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceUnitConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_adminState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
      case 2: {
        if (tag == 16) {
         parse_adminState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::AdministrativeState_IsValid(value)) {
            set_adminstate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::AdministrativeState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_rank;
        break;
      }

      // optional fixed32 rank = 3;
      case 3: {
        if (tag == 29) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_failover;
        break;
      }

      // optional bool failover = 4;
      case 4: {
        if (tag == 32) {
         parse_failover:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &failover_)));
          set_has_failover();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_components;
        break;
      }

      // repeated string components = 5;
      case 5: {
        if (tag == 42) {
         parse_components:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_components()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->components(this->components_size() - 1).data(),
            this->components(this->components_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "components");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_components;
        if (input->ExpectTag(50)) goto parse_node;
        break;
      }

      // optional string node = 6;
      case 6: {
        if (tag == 50) {
         parse_node:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->node().data(), this->node().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "node");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_serviceGroup;
        break;
      }

      // optional string serviceGroup = 7;
      case 7: {
        if (tag == 58) {
         parse_serviceGroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicegroup()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->servicegroup().data(), this->servicegroup().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "servicegroup");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_probationTime;
        break;
      }

      // optional fixed32 probationTime = 8;
      case 8: {
        if (tag == 69) {
         parse_probationTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &probationtime_)));
          set_has_probationtime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig)
  return false;
#undef DO_
}

void ServiceUnitConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
  if (has_adminstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->adminstate(), output);
  }

  // optional fixed32 rank = 3;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->rank(), output);
  }

  // optional bool failover = 4;
  if (has_failover()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->failover(), output);
  }

  // repeated string components = 5;
  for (int i = 0; i < this->components_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->components(i).data(), this->components(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "components");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->components(i), output);
  }

  // optional string node = 6;
  if (has_node()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node().data(), this->node().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "node");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->node(), output);
  }

  // optional string serviceGroup = 7;
  if (has_servicegroup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicegroup().data(), this->servicegroup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "servicegroup");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->servicegroup(), output);
  }

  // optional fixed32 probationTime = 8;
  if (has_probationtime()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(8, this->probationtime(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig)
}

::google::protobuf::uint8* ServiceUnitConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
  if (has_adminstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->adminstate(), target);
  }

  // optional fixed32 rank = 3;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->rank(), target);
  }

  // optional bool failover = 4;
  if (has_failover()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->failover(), target);
  }

  // repeated string components = 5;
  for (int i = 0; i < this->components_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->components(i).data(), this->components(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "components");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->components(i), target);
  }

  // optional string node = 6;
  if (has_node()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->node().data(), this->node().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "node");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->node(), target);
  }

  // optional string serviceGroup = 7;
  if (has_servicegroup()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicegroup().data(), this->servicegroup().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "servicegroup");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->servicegroup(), target);
  }

  // optional fixed32 probationTime = 8;
  if (has_probationtime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(8, this->probationtime(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig)
  return target;
}

int ServiceUnitConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.AdministrativeState adminState = 2;
    if (has_adminstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adminstate());
    }

    // optional fixed32 rank = 3;
    if (has_rank()) {
      total_size += 1 + 4;
    }

    // optional bool failover = 4;
    if (has_failover()) {
      total_size += 1 + 1;
    }

    // optional string node = 6;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->node());
    }

    // optional string serviceGroup = 7;
    if (has_servicegroup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->servicegroup());
    }

    // optional fixed32 probationTime = 8;
    if (has_probationtime()) {
      total_size += 1 + 4;
    }

  }
  // repeated string components = 5;
  total_size += 1 * this->components_size();
  for (int i = 0; i < this->components_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->components(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceUnitConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceUnitConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceUnitConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceUnitConfig::MergeFrom(const ServiceUnitConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  components_.MergeFrom(from.components_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_adminstate()) {
      set_adminstate(from.adminstate());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_failover()) {
      set_failover(from.failover());
    }
    if (from.has_node()) {
      set_node(from.node());
    }
    if (from.has_servicegroup()) {
      set_servicegroup(from.servicegroup());
    }
    if (from.has_probationtime()) {
      set_probationtime(from.probationtime());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceUnitConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceUnitConfig::CopyFrom(const ServiceUnitConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceUnitConfig::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ServiceUnitConfig::Swap(ServiceUnitConfig* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(adminstate_, other->adminstate_);
    std::swap(rank_, other->rank_);
    std::swap(failover_, other->failover_);
    components_.Swap(&other->components_);
    std::swap(node_, other->node_);
    std::swap(servicegroup_, other->servicegroup_);
    std::swap(probationtime_, other->probationtime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ServiceUnitConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceUnitConfig_descriptor_;
  metadata.reflection = ServiceUnitConfig_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int User::kDecStatisticFieldNumber;
#endif  // !_MSC_VER

User::User()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.User)
}

void User::InitAsDefaultInstance() {
  decstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::DecStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::DecStatistic::default_instance());
}

User::User(const User& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.User)
}

void User::SharedCtor() {
  _cached_size_ = 0;
  decstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

User::~User() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.User)
  SharedDtor();
}

void User::SharedDtor() {
  if (this != default_instance_) {
    delete decstatistic_;
  }
}

void User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return User_descriptor_;
}

const User& User::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

User* User::default_instance_ = NULL;

User* User::New() const {
  return new User;
}

void User::Clear() {
  _extensions_.Clear();
  if (has_decstatistic()) {
    if (decstatistic_ != NULL) decstatistic_->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.User)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.User)
}

::google::protobuf::uint8* User::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.User)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.User)
  return target;
}

int User::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
    if (has_decstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const User* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const User*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_decstatistic()) {
      mutable_decstatistic()->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::MergeFrom(from.decstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {

  if (has_decstatistic()) {
    if (!this->decstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void User::Swap(User* other) {
  if (other != this) {
    std::swap(decstatistic_, other->decstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = User_descriptor_;
  metadata.reflection = User_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LowPriorityUser::kDecStatisticFieldNumber;
#endif  // !_MSC_VER

LowPriorityUser::LowPriorityUser()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LowPriorityUser)
}

void LowPriorityUser::InitAsDefaultInstance() {
  decstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::DecStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::DecStatistic::default_instance());
}

LowPriorityUser::LowPriorityUser(const LowPriorityUser& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LowPriorityUser)
}

void LowPriorityUser::SharedCtor() {
  _cached_size_ = 0;
  decstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LowPriorityUser::~LowPriorityUser() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LowPriorityUser)
  SharedDtor();
}

void LowPriorityUser::SharedDtor() {
  if (this != default_instance_) {
    delete decstatistic_;
  }
}

void LowPriorityUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LowPriorityUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LowPriorityUser_descriptor_;
}

const LowPriorityUser& LowPriorityUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LowPriorityUser* LowPriorityUser::default_instance_ = NULL;

LowPriorityUser* LowPriorityUser::New() const {
  return new LowPriorityUser;
}

void LowPriorityUser::Clear() {
  _extensions_.Clear();
  if (has_decstatistic()) {
    if (decstatistic_ != NULL) decstatistic_->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LowPriorityUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LowPriorityUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LowPriorityUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LowPriorityUser)
  return false;
#undef DO_
}

void LowPriorityUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LowPriorityUser)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LowPriorityUser)
}

::google::protobuf::uint8* LowPriorityUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LowPriorityUser)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LowPriorityUser)
  return target;
}

int LowPriorityUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
    if (has_decstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LowPriorityUser::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LowPriorityUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LowPriorityUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LowPriorityUser::MergeFrom(const LowPriorityUser& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_decstatistic()) {
      mutable_decstatistic()->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::MergeFrom(from.decstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LowPriorityUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LowPriorityUser::CopyFrom(const LowPriorityUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LowPriorityUser::IsInitialized() const {

  if (has_decstatistic()) {
    if (!this->decstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LowPriorityUser::Swap(LowPriorityUser* other) {
  if (other != this) {
    std::swap(decstatistic_, other->decstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LowPriorityUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LowPriorityUser_descriptor_;
  metadata.reflection = LowPriorityUser_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int IoWait::kDecStatisticFieldNumber;
#endif  // !_MSC_VER

IoWait::IoWait()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.IoWait)
}

void IoWait::InitAsDefaultInstance() {
  decstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::DecStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::DecStatistic::default_instance());
}

IoWait::IoWait(const IoWait& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.IoWait)
}

void IoWait::SharedCtor() {
  _cached_size_ = 0;
  decstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IoWait::~IoWait() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.IoWait)
  SharedDtor();
}

void IoWait::SharedDtor() {
  if (this != default_instance_) {
    delete decstatistic_;
  }
}

void IoWait::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IoWait::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IoWait_descriptor_;
}

const IoWait& IoWait::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

IoWait* IoWait::default_instance_ = NULL;

IoWait* IoWait::New() const {
  return new IoWait;
}

void IoWait::Clear() {
  _extensions_.Clear();
  if (has_decstatistic()) {
    if (decstatistic_ != NULL) decstatistic_->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IoWait::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.IoWait)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.IoWait)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.IoWait)
  return false;
#undef DO_
}

void IoWait::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.IoWait)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.IoWait)
}

::google::protobuf::uint8* IoWait::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.IoWait)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.IoWait)
  return target;
}

int IoWait::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
    if (has_decstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IoWait::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IoWait* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IoWait*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IoWait::MergeFrom(const IoWait& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_decstatistic()) {
      mutable_decstatistic()->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::MergeFrom(from.decstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IoWait::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IoWait::CopyFrom(const IoWait& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IoWait::IsInitialized() const {

  if (has_decstatistic()) {
    if (!this->decstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void IoWait::Swap(IoWait* other) {
  if (other != this) {
    std::swap(decstatistic_, other->decstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata IoWait::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IoWait_descriptor_;
  metadata.reflection = IoWait_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SysTime::kDecStatisticFieldNumber;
#endif  // !_MSC_VER

SysTime::SysTime()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.SysTime)
}

void SysTime::InitAsDefaultInstance() {
  decstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::DecStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::DecStatistic::default_instance());
}

SysTime::SysTime(const SysTime& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.SysTime)
}

void SysTime::SharedCtor() {
  _cached_size_ = 0;
  decstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SysTime::~SysTime() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.SysTime)
  SharedDtor();
}

void SysTime::SharedDtor() {
  if (this != default_instance_) {
    delete decstatistic_;
  }
}

void SysTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SysTime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SysTime_descriptor_;
}

const SysTime& SysTime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

SysTime* SysTime::default_instance_ = NULL;

SysTime* SysTime::New() const {
  return new SysTime;
}

void SysTime::Clear() {
  _extensions_.Clear();
  if (has_decstatistic()) {
    if (decstatistic_ != NULL) decstatistic_->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SysTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.SysTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.SysTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.SysTime)
  return false;
#undef DO_
}

void SysTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.SysTime)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.SysTime)
}

::google::protobuf::uint8* SysTime::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.SysTime)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.SysTime)
  return target;
}

int SysTime::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
    if (has_decstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SysTime::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SysTime* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SysTime*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SysTime::MergeFrom(const SysTime& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_decstatistic()) {
      mutable_decstatistic()->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::MergeFrom(from.decstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SysTime::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SysTime::CopyFrom(const SysTime& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SysTime::IsInitialized() const {

  if (has_decstatistic()) {
    if (!this->decstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void SysTime::Swap(SysTime* other) {
  if (other != this) {
    std::swap(decstatistic_, other->decstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata SysTime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SysTime_descriptor_;
  metadata.reflection = SysTime_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int IntTime::kDecStatisticFieldNumber;
#endif  // !_MSC_VER

IntTime::IntTime()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.IntTime)
}

void IntTime::InitAsDefaultInstance() {
  decstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::DecStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::DecStatistic::default_instance());
}

IntTime::IntTime(const IntTime& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.IntTime)
}

void IntTime::SharedCtor() {
  _cached_size_ = 0;
  decstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IntTime::~IntTime() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.IntTime)
  SharedDtor();
}

void IntTime::SharedDtor() {
  if (this != default_instance_) {
    delete decstatistic_;
  }
}

void IntTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IntTime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IntTime_descriptor_;
}

const IntTime& IntTime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

IntTime* IntTime::default_instance_ = NULL;

IntTime* IntTime::New() const {
  return new IntTime;
}

void IntTime::Clear() {
  _extensions_.Clear();
  if (has_decstatistic()) {
    if (decstatistic_ != NULL) decstatistic_->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IntTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.IntTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.IntTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.IntTime)
  return false;
#undef DO_
}

void IntTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.IntTime)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.IntTime)
}

::google::protobuf::uint8* IntTime::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.IntTime)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.IntTime)
  return target;
}

int IntTime::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
    if (has_decstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IntTime::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IntTime* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IntTime*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IntTime::MergeFrom(const IntTime& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_decstatistic()) {
      mutable_decstatistic()->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::MergeFrom(from.decstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IntTime::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntTime::CopyFrom(const IntTime& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntTime::IsInitialized() const {

  if (has_decstatistic()) {
    if (!this->decstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void IntTime::Swap(IntTime* other) {
  if (other != this) {
    std::swap(decstatistic_, other->decstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata IntTime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IntTime_descriptor_;
  metadata.reflection = IntTime_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SoftIrqs::kDecStatisticFieldNumber;
#endif  // !_MSC_VER

SoftIrqs::SoftIrqs()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.SoftIrqs)
}

void SoftIrqs::InitAsDefaultInstance() {
  decstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::DecStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::DecStatistic::default_instance());
}

SoftIrqs::SoftIrqs(const SoftIrqs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.SoftIrqs)
}

void SoftIrqs::SharedCtor() {
  _cached_size_ = 0;
  decstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SoftIrqs::~SoftIrqs() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.SoftIrqs)
  SharedDtor();
}

void SoftIrqs::SharedDtor() {
  if (this != default_instance_) {
    delete decstatistic_;
  }
}

void SoftIrqs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SoftIrqs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SoftIrqs_descriptor_;
}

const SoftIrqs& SoftIrqs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

SoftIrqs* SoftIrqs::default_instance_ = NULL;

SoftIrqs* SoftIrqs::New() const {
  return new SoftIrqs;
}

void SoftIrqs::Clear() {
  _extensions_.Clear();
  if (has_decstatistic()) {
    if (decstatistic_ != NULL) decstatistic_->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SoftIrqs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.SoftIrqs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.SoftIrqs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.SoftIrqs)
  return false;
#undef DO_
}

void SoftIrqs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.SoftIrqs)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.SoftIrqs)
}

::google::protobuf::uint8* SoftIrqs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.SoftIrqs)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.SoftIrqs)
  return target;
}

int SoftIrqs::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
    if (has_decstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SoftIrqs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SoftIrqs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SoftIrqs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SoftIrqs::MergeFrom(const SoftIrqs& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_decstatistic()) {
      mutable_decstatistic()->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::MergeFrom(from.decstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SoftIrqs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoftIrqs::CopyFrom(const SoftIrqs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoftIrqs::IsInitialized() const {

  if (has_decstatistic()) {
    if (!this->decstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void SoftIrqs::Swap(SoftIrqs* other) {
  if (other != this) {
    std::swap(decstatistic_, other->decstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata SoftIrqs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SoftIrqs_descriptor_;
  metadata.reflection = SoftIrqs_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Idle::kDecStatisticFieldNumber;
#endif  // !_MSC_VER

Idle::Idle()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.Idle)
}

void Idle::InitAsDefaultInstance() {
  decstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::DecStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::DecStatistic::default_instance());
}

Idle::Idle(const Idle& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.Idle)
}

void Idle::SharedCtor() {
  _cached_size_ = 0;
  decstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Idle::~Idle() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.Idle)
  SharedDtor();
}

void Idle::SharedDtor() {
  if (this != default_instance_) {
    delete decstatistic_;
  }
}

void Idle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Idle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Idle_descriptor_;
}

const Idle& Idle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

Idle* Idle::default_instance_ = NULL;

Idle* Idle::New() const {
  return new Idle;
}

void Idle::Clear() {
  _extensions_.Clear();
  if (has_decstatistic()) {
    if (decstatistic_ != NULL) decstatistic_->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Idle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.Idle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.Idle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.Idle)
  return false;
#undef DO_
}

void Idle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.Idle)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->decstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.Idle)
}

::google::protobuf::uint8* Idle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.Idle)
  // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
  if (has_decstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->decstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.Idle)
  return target;
}

int Idle::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.DecStatistic DecStatistic = 1;
    if (has_decstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->decstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Idle::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Idle* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Idle*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Idle::MergeFrom(const Idle& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_decstatistic()) {
      mutable_decstatistic()->::SAFplus::Rpc::amfMgmtRpc::DecStatistic::MergeFrom(from.decstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Idle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Idle::CopyFrom(const Idle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Idle::IsInitialized() const {

  if (has_decstatistic()) {
    if (!this->decstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Idle::Swap(Idle* other) {
  if (other != this) {
    std::swap(decstatistic_, other->decstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Idle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Idle_descriptor_;
  metadata.reflection = Idle_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ContextSwitches::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

ContextSwitches::ContextSwitches()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ContextSwitches)
}

void ContextSwitches::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

ContextSwitches::ContextSwitches(const ContextSwitches& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ContextSwitches)
}

void ContextSwitches::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContextSwitches::~ContextSwitches() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ContextSwitches)
  SharedDtor();
}

void ContextSwitches::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void ContextSwitches::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContextSwitches::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ContextSwitches_descriptor_;
}

const ContextSwitches& ContextSwitches::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ContextSwitches* ContextSwitches::default_instance_ = NULL;

ContextSwitches* ContextSwitches::New() const {
  return new ContextSwitches;
}

void ContextSwitches::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ContextSwitches::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ContextSwitches)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ContextSwitches)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ContextSwitches)
  return false;
#undef DO_
}

void ContextSwitches::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ContextSwitches)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ContextSwitches)
}

::google::protobuf::uint8* ContextSwitches::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ContextSwitches)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ContextSwitches)
  return target;
}

int ContextSwitches::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContextSwitches::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ContextSwitches* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ContextSwitches*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ContextSwitches::MergeFrom(const ContextSwitches& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ContextSwitches::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContextSwitches::CopyFrom(const ContextSwitches& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContextSwitches::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ContextSwitches::Swap(ContextSwitches* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ContextSwitches::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ContextSwitches_descriptor_;
  metadata.reflection = ContextSwitches_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProcessCount::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

ProcessCount::ProcessCount()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ProcessCount)
}

void ProcessCount::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

ProcessCount::ProcessCount(const ProcessCount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ProcessCount)
}

void ProcessCount::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProcessCount::~ProcessCount() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ProcessCount)
  SharedDtor();
}

void ProcessCount::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void ProcessCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProcessCount_descriptor_;
}

const ProcessCount& ProcessCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ProcessCount* ProcessCount::default_instance_ = NULL;

ProcessCount* ProcessCount::New() const {
  return new ProcessCount;
}

void ProcessCount::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProcessCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ProcessCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ProcessCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ProcessCount)
  return false;
#undef DO_
}

void ProcessCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ProcessCount)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ProcessCount)
}

::google::protobuf::uint8* ProcessCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ProcessCount)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ProcessCount)
  return target;
}

int ProcessCount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProcessCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProcessCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProcessCount::MergeFrom(const ProcessCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProcessCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessCount::CopyFrom(const ProcessCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessCount::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ProcessCount::Swap(ProcessCount* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ProcessCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProcessCount_descriptor_;
  metadata.reflection = ProcessCount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProcessStarts::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

ProcessStarts::ProcessStarts()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ProcessStarts)
}

void ProcessStarts::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

ProcessStarts::ProcessStarts(const ProcessStarts& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ProcessStarts)
}

void ProcessStarts::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProcessStarts::~ProcessStarts() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ProcessStarts)
  SharedDtor();
}

void ProcessStarts::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void ProcessStarts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcessStarts::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProcessStarts_descriptor_;
}

const ProcessStarts& ProcessStarts::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ProcessStarts* ProcessStarts::default_instance_ = NULL;

ProcessStarts* ProcessStarts::New() const {
  return new ProcessStarts;
}

void ProcessStarts::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProcessStarts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ProcessStarts)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ProcessStarts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ProcessStarts)
  return false;
#undef DO_
}

void ProcessStarts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ProcessStarts)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ProcessStarts)
}

::google::protobuf::uint8* ProcessStarts::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ProcessStarts)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ProcessStarts)
  return target;
}

int ProcessStarts::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcessStarts::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProcessStarts* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProcessStarts*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProcessStarts::MergeFrom(const ProcessStarts& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProcessStarts::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessStarts::CopyFrom(const ProcessStarts& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessStarts::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ProcessStarts::Swap(ProcessStarts* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ProcessStarts::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProcessStarts_descriptor_;
  metadata.reflection = ProcessStarts_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Load::kUserFieldNumber;
const int Load::kLowPriorityUserFieldNumber;
const int Load::kIoWaitFieldNumber;
const int Load::kSysTimeFieldNumber;
const int Load::kIntTimeFieldNumber;
const int Load::kSoftIrqsFieldNumber;
const int Load::kIdleFieldNumber;
const int Load::kContextSwitchesFieldNumber;
const int Load::kProcessCountFieldNumber;
const int Load::kProcessStartsFieldNumber;
#endif  // !_MSC_VER

Load::Load()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.Load)
}

void Load::InitAsDefaultInstance() {
  user_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::User*>(&::SAFplus::Rpc::amfMgmtRpc::User::default_instance());
  lowpriorityuser_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::LowPriorityUser*>(&::SAFplus::Rpc::amfMgmtRpc::LowPriorityUser::default_instance());
  iowait_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IoWait*>(&::SAFplus::Rpc::amfMgmtRpc::IoWait::default_instance());
  systime_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::SysTime*>(&::SAFplus::Rpc::amfMgmtRpc::SysTime::default_instance());
  inttime_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntTime*>(&::SAFplus::Rpc::amfMgmtRpc::IntTime::default_instance());
  softirqs_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::SoftIrqs*>(&::SAFplus::Rpc::amfMgmtRpc::SoftIrqs::default_instance());
  idle_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Idle*>(&::SAFplus::Rpc::amfMgmtRpc::Idle::default_instance());
  contextswitches_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ContextSwitches*>(&::SAFplus::Rpc::amfMgmtRpc::ContextSwitches::default_instance());
  processcount_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ProcessCount*>(&::SAFplus::Rpc::amfMgmtRpc::ProcessCount::default_instance());
  processstarts_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ProcessStarts*>(&::SAFplus::Rpc::amfMgmtRpc::ProcessStarts::default_instance());
}

Load::Load(const Load& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.Load)
}

void Load::SharedCtor() {
  _cached_size_ = 0;
  user_ = NULL;
  lowpriorityuser_ = NULL;
  iowait_ = NULL;
  systime_ = NULL;
  inttime_ = NULL;
  softirqs_ = NULL;
  idle_ = NULL;
  contextswitches_ = NULL;
  processcount_ = NULL;
  processstarts_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Load::~Load() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.Load)
  SharedDtor();
}

void Load::SharedDtor() {
  if (this != default_instance_) {
    delete user_;
    delete lowpriorityuser_;
    delete iowait_;
    delete systime_;
    delete inttime_;
    delete softirqs_;
    delete idle_;
    delete contextswitches_;
    delete processcount_;
    delete processstarts_;
  }
}

void Load::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Load::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Load_descriptor_;
}

const Load& Load::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

Load* Load::default_instance_ = NULL;

Load* Load::New() const {
  return new Load;
}

void Load::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 255) {
    if (has_user()) {
      if (user_ != NULL) user_->::SAFplus::Rpc::amfMgmtRpc::User::Clear();
    }
    if (has_lowpriorityuser()) {
      if (lowpriorityuser_ != NULL) lowpriorityuser_->::SAFplus::Rpc::amfMgmtRpc::LowPriorityUser::Clear();
    }
    if (has_iowait()) {
      if (iowait_ != NULL) iowait_->::SAFplus::Rpc::amfMgmtRpc::IoWait::Clear();
    }
    if (has_systime()) {
      if (systime_ != NULL) systime_->::SAFplus::Rpc::amfMgmtRpc::SysTime::Clear();
    }
    if (has_inttime()) {
      if (inttime_ != NULL) inttime_->::SAFplus::Rpc::amfMgmtRpc::IntTime::Clear();
    }
    if (has_softirqs()) {
      if (softirqs_ != NULL) softirqs_->::SAFplus::Rpc::amfMgmtRpc::SoftIrqs::Clear();
    }
    if (has_idle()) {
      if (idle_ != NULL) idle_->::SAFplus::Rpc::amfMgmtRpc::Idle::Clear();
    }
    if (has_contextswitches()) {
      if (contextswitches_ != NULL) contextswitches_->::SAFplus::Rpc::amfMgmtRpc::ContextSwitches::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    if (has_processcount()) {
      if (processcount_ != NULL) processcount_->::SAFplus::Rpc::amfMgmtRpc::ProcessCount::Clear();
    }
    if (has_processstarts()) {
      if (processstarts_ != NULL) processstarts_->::SAFplus::Rpc::amfMgmtRpc::ProcessStarts::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Load::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.Load)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.User user = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_lowPriorityUser;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.LowPriorityUser lowPriorityUser = 2;
      case 2: {
        if (tag == 18) {
         parse_lowPriorityUser:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lowpriorityuser()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ioWait;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.IoWait ioWait = 3;
      case 3: {
        if (tag == 26) {
         parse_ioWait:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_iowait()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sysTime;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.SysTime sysTime = 4;
      case 4: {
        if (tag == 34) {
         parse_sysTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_systime()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_intTime;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.IntTime intTime = 5;
      case 5: {
        if (tag == 42) {
         parse_intTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inttime()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_softIrqs;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.SoftIrqs softIrqs = 6;
      case 6: {
        if (tag == 50) {
         parse_softIrqs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_softirqs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_idle;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.Idle idle = 7;
      case 7: {
        if (tag == 58) {
         parse_idle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_idle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_contextSwitches;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ContextSwitches contextSwitches = 8;
      case 8: {
        if (tag == 66) {
         parse_contextSwitches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_contextswitches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_processCount;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ProcessCount processCount = 9;
      case 9: {
        if (tag == 74) {
         parse_processCount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_processcount()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_processStarts;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ProcessStarts processStarts = 10;
      case 10: {
        if (tag == 82) {
         parse_processStarts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_processstarts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.Load)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.Load)
  return false;
#undef DO_
}

void Load::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.Load)
  // optional .SAFplus.Rpc.amfMgmtRpc.User user = 1;
  if (has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->user(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.LowPriorityUser lowPriorityUser = 2;
  if (has_lowpriorityuser()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->lowpriorityuser(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.IoWait ioWait = 3;
  if (has_iowait()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->iowait(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SysTime sysTime = 4;
  if (has_systime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->systime(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.IntTime intTime = 5;
  if (has_inttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->inttime(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SoftIrqs softIrqs = 6;
  if (has_softirqs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->softirqs(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Idle idle = 7;
  if (has_idle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->idle(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ContextSwitches contextSwitches = 8;
  if (has_contextswitches()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->contextswitches(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ProcessCount processCount = 9;
  if (has_processcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->processcount(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ProcessStarts processStarts = 10;
  if (has_processstarts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->processstarts(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.Load)
}

::google::protobuf::uint8* Load::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.Load)
  // optional .SAFplus.Rpc.amfMgmtRpc.User user = 1;
  if (has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->user(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.LowPriorityUser lowPriorityUser = 2;
  if (has_lowpriorityuser()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->lowpriorityuser(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.IoWait ioWait = 3;
  if (has_iowait()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->iowait(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SysTime sysTime = 4;
  if (has_systime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->systime(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.IntTime intTime = 5;
  if (has_inttime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->inttime(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.SoftIrqs softIrqs = 6;
  if (has_softirqs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->softirqs(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Idle idle = 7;
  if (has_idle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->idle(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ContextSwitches contextSwitches = 8;
  if (has_contextswitches()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->contextswitches(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ProcessCount processCount = 9;
  if (has_processcount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->processcount(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ProcessStarts processStarts = 10;
  if (has_processstarts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->processstarts(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.Load)
  return target;
}

int Load::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.User user = 1;
    if (has_user()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.LowPriorityUser lowPriorityUser = 2;
    if (has_lowpriorityuser()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lowpriorityuser());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.IoWait ioWait = 3;
    if (has_iowait()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->iowait());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.SysTime sysTime = 4;
    if (has_systime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->systime());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.IntTime intTime = 5;
    if (has_inttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inttime());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.SoftIrqs softIrqs = 6;
    if (has_softirqs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->softirqs());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.Idle idle = 7;
    if (has_idle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->idle());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.ContextSwitches contextSwitches = 8;
    if (has_contextswitches()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->contextswitches());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ProcessCount processCount = 9;
    if (has_processcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->processcount());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.ProcessStarts processStarts = 10;
    if (has_processstarts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->processstarts());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Load::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Load* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Load*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Load::MergeFrom(const Load& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user()) {
      mutable_user()->::SAFplus::Rpc::amfMgmtRpc::User::MergeFrom(from.user());
    }
    if (from.has_lowpriorityuser()) {
      mutable_lowpriorityuser()->::SAFplus::Rpc::amfMgmtRpc::LowPriorityUser::MergeFrom(from.lowpriorityuser());
    }
    if (from.has_iowait()) {
      mutable_iowait()->::SAFplus::Rpc::amfMgmtRpc::IoWait::MergeFrom(from.iowait());
    }
    if (from.has_systime()) {
      mutable_systime()->::SAFplus::Rpc::amfMgmtRpc::SysTime::MergeFrom(from.systime());
    }
    if (from.has_inttime()) {
      mutable_inttime()->::SAFplus::Rpc::amfMgmtRpc::IntTime::MergeFrom(from.inttime());
    }
    if (from.has_softirqs()) {
      mutable_softirqs()->::SAFplus::Rpc::amfMgmtRpc::SoftIrqs::MergeFrom(from.softirqs());
    }
    if (from.has_idle()) {
      mutable_idle()->::SAFplus::Rpc::amfMgmtRpc::Idle::MergeFrom(from.idle());
    }
    if (from.has_contextswitches()) {
      mutable_contextswitches()->::SAFplus::Rpc::amfMgmtRpc::ContextSwitches::MergeFrom(from.contextswitches());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_processcount()) {
      mutable_processcount()->::SAFplus::Rpc::amfMgmtRpc::ProcessCount::MergeFrom(from.processcount());
    }
    if (from.has_processstarts()) {
      mutable_processstarts()->::SAFplus::Rpc::amfMgmtRpc::ProcessStarts::MergeFrom(from.processstarts());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Load::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Load::CopyFrom(const Load& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Load::IsInitialized() const {

  if (has_user()) {
    if (!this->user().IsInitialized()) return false;
  }
  if (has_lowpriorityuser()) {
    if (!this->lowpriorityuser().IsInitialized()) return false;
  }
  if (has_iowait()) {
    if (!this->iowait().IsInitialized()) return false;
  }
  if (has_systime()) {
    if (!this->systime().IsInitialized()) return false;
  }
  if (has_inttime()) {
    if (!this->inttime().IsInitialized()) return false;
  }
  if (has_softirqs()) {
    if (!this->softirqs().IsInitialized()) return false;
  }
  if (has_idle()) {
    if (!this->idle().IsInitialized()) return false;
  }
  if (has_contextswitches()) {
    if (!this->contextswitches().IsInitialized()) return false;
  }
  if (has_processcount()) {
    if (!this->processcount().IsInitialized()) return false;
  }
  if (has_processstarts()) {
    if (!this->processstarts().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Load::Swap(Load* other) {
  if (other != this) {
    std::swap(user_, other->user_);
    std::swap(lowpriorityuser_, other->lowpriorityuser_);
    std::swap(iowait_, other->iowait_);
    std::swap(systime_, other->systime_);
    std::swap(inttime_, other->inttime_);
    std::swap(softirqs_, other->softirqs_);
    std::swap(idle_, other->idle_);
    std::swap(contextswitches_, other->contextswitches_);
    std::swap(processcount_, other->processcount_);
    std::swap(processstarts_, other->processstarts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Load::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Load_descriptor_;
  metadata.reflection = Load_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Stats::kLoadFieldNumber;
const int Stats::kUpTimeFieldNumber;
const int Stats::kBootTimeFieldNumber;
#endif  // !_MSC_VER

Stats::Stats()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.Stats)
}

void Stats::InitAsDefaultInstance() {
  load_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Load*>(&::SAFplus::Rpc::amfMgmtRpc::Load::default_instance());
}

Stats::Stats(const Stats& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.Stats)
}

void Stats::SharedCtor() {
  _cached_size_ = 0;
  load_ = NULL;
  uptime_ = GOOGLE_ULONGLONG(0);
  boottime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Stats::~Stats() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.Stats)
  SharedDtor();
}

void Stats::SharedDtor() {
  if (this != default_instance_) {
    delete load_;
  }
}

void Stats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Stats_descriptor_;
}

const Stats& Stats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

Stats* Stats::default_instance_ = NULL;

Stats* Stats::New() const {
  return new Stats;
}

void Stats::Clear() {
  _extensions_.Clear();
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Stats*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(uptime_, boottime_);
    if (has_load()) {
      if (load_ != NULL) load_->::SAFplus::Rpc::amfMgmtRpc::Load::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Stats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.Stats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.Load load = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_load()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_upTime;
        break;
      }

      // optional uint64 upTime = 2;
      case 2: {
        if (tag == 16) {
         parse_upTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uptime_)));
          set_has_uptime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bootTime;
        break;
      }

      // optional uint64 bootTime = 3;
      case 3: {
        if (tag == 24) {
         parse_bootTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &boottime_)));
          set_has_boottime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.Stats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.Stats)
  return false;
#undef DO_
}

void Stats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.Stats)
  // optional .SAFplus.Rpc.amfMgmtRpc.Load load = 1;
  if (has_load()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->load(), output);
  }

  // optional uint64 upTime = 2;
  if (has_uptime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uptime(), output);
  }

  // optional uint64 bootTime = 3;
  if (has_boottime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->boottime(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.Stats)
}

::google::protobuf::uint8* Stats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.Stats)
  // optional .SAFplus.Rpc.amfMgmtRpc.Load load = 1;
  if (has_load()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->load(), target);
  }

  // optional uint64 upTime = 2;
  if (has_uptime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uptime(), target);
  }

  // optional uint64 bootTime = 3;
  if (has_boottime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->boottime(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.Stats)
  return target;
}

int Stats::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.Load load = 1;
    if (has_load()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->load());
    }

    // optional uint64 upTime = 2;
    if (has_uptime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uptime());
    }

    // optional uint64 bootTime = 3;
    if (has_boottime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->boottime());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stats::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Stats* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Stats*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Stats::MergeFrom(const Stats& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_load()) {
      mutable_load()->::SAFplus::Rpc::amfMgmtRpc::Load::MergeFrom(from.load());
    }
    if (from.has_uptime()) {
      set_uptime(from.uptime());
    }
    if (from.has_boottime()) {
      set_boottime(from.boottime());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Stats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stats::CopyFrom(const Stats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stats::IsInitialized() const {

  if (has_load()) {
    if (!this->load().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Stats::Swap(Stats* other) {
  if (other != this) {
    std::swap(load_, other->load_);
    std::swap(uptime_, other->uptime_);
    std::swap(boottime_, other->boottime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Stats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Stats_descriptor_;
  metadata.reflection = Stats_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NodeStatus::kNameFieldNumber;
const int NodeStatus::kStatsFieldNumber;
const int NodeStatus::kPresenceStateFieldNumber;
const int NodeStatus::kOperStateFieldNumber;
#endif  // !_MSC_VER

NodeStatus::NodeStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NodeStatus)
}

void NodeStatus::InitAsDefaultInstance() {
  stats_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Stats*>(&::SAFplus::Rpc::amfMgmtRpc::Stats::default_instance());
}

NodeStatus::NodeStatus(const NodeStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NodeStatus)
}

void NodeStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stats_ = NULL;
  presencestate_ = 0;
  operstate_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeStatus::~NodeStatus() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NodeStatus)
  SharedDtor();
}

void NodeStatus::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete stats_;
  }
}

void NodeStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeStatus_descriptor_;
}

const NodeStatus& NodeStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NodeStatus* NodeStatus::default_instance_ = NULL;

NodeStatus* NodeStatus::New() const {
  return new NodeStatus;
}

void NodeStatus::Clear() {
  _extensions_.Clear();
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NodeStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(presencestate_, operstate_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_stats()) {
      if (stats_ != NULL) stats_->::SAFplus::Rpc::amfMgmtRpc::Stats::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NodeStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_stats;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.Stats stats = 2;
      case 2: {
        if (tag == 18) {
         parse_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_presenceState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
      case 3: {
        if (tag == 24) {
         parse_presenceState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::PresenceState_IsValid(value)) {
            set_presencestate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::PresenceState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_operState;
        break;
      }

      // optional bool operState = 4;
      case 4: {
        if (tag == 32) {
         parse_operState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &operstate_)));
          set_has_operstate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NodeStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NodeStatus)
  return false;
#undef DO_
}

void NodeStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NodeStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Stats stats = 2;
  if (has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->stats(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
  if (has_presencestate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->presencestate(), output);
  }

  // optional bool operState = 4;
  if (has_operstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->operstate(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NodeStatus)
}

::google::protobuf::uint8* NodeStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NodeStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Stats stats = 2;
  if (has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->stats(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
  if (has_presencestate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->presencestate(), target);
  }

  // optional bool operState = 4;
  if (has_operstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->operstate(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NodeStatus)
  return target;
}

int NodeStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.Stats stats = 2;
    if (has_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stats());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
    if (has_presencestate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->presencestate());
    }

    // optional bool operState = 4;
    if (has_operstate()) {
      total_size += 1 + 1;
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeStatus::MergeFrom(const NodeStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_stats()) {
      mutable_stats()->::SAFplus::Rpc::amfMgmtRpc::Stats::MergeFrom(from.stats());
    }
    if (from.has_presencestate()) {
      set_presencestate(from.presencestate());
    }
    if (from.has_operstate()) {
      set_operstate(from.operstate());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeStatus::CopyFrom(const NodeStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeStatus::IsInitialized() const {

  if (has_stats()) {
    if (!this->stats().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NodeStatus::Swap(NodeStatus* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(stats_, other->stats_);
    std::swap(presencestate_, other->presencestate_);
    std::swap(operstate_, other->operstate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NodeStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeStatus_descriptor_;
  metadata.reflection = NodeStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NumAssignedServiceUnits::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

NumAssignedServiceUnits::NumAssignedServiceUnits()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits)
}

void NumAssignedServiceUnits::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

NumAssignedServiceUnits::NumAssignedServiceUnits(const NumAssignedServiceUnits& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits)
}

void NumAssignedServiceUnits::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NumAssignedServiceUnits::~NumAssignedServiceUnits() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits)
  SharedDtor();
}

void NumAssignedServiceUnits::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void NumAssignedServiceUnits::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NumAssignedServiceUnits::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NumAssignedServiceUnits_descriptor_;
}

const NumAssignedServiceUnits& NumAssignedServiceUnits::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NumAssignedServiceUnits* NumAssignedServiceUnits::default_instance_ = NULL;

NumAssignedServiceUnits* NumAssignedServiceUnits::New() const {
  return new NumAssignedServiceUnits;
}

void NumAssignedServiceUnits::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NumAssignedServiceUnits::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits)
  return false;
#undef DO_
}

void NumAssignedServiceUnits::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits)
}

::google::protobuf::uint8* NumAssignedServiceUnits::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits)
  return target;
}

int NumAssignedServiceUnits::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NumAssignedServiceUnits::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NumAssignedServiceUnits* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NumAssignedServiceUnits*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NumAssignedServiceUnits::MergeFrom(const NumAssignedServiceUnits& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NumAssignedServiceUnits::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumAssignedServiceUnits::CopyFrom(const NumAssignedServiceUnits& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumAssignedServiceUnits::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NumAssignedServiceUnits::Swap(NumAssignedServiceUnits* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NumAssignedServiceUnits::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NumAssignedServiceUnits_descriptor_;
  metadata.reflection = NumAssignedServiceUnits_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NumIdleServiceUnits::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

NumIdleServiceUnits::NumIdleServiceUnits()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits)
}

void NumIdleServiceUnits::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

NumIdleServiceUnits::NumIdleServiceUnits(const NumIdleServiceUnits& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits)
}

void NumIdleServiceUnits::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NumIdleServiceUnits::~NumIdleServiceUnits() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits)
  SharedDtor();
}

void NumIdleServiceUnits::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void NumIdleServiceUnits::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NumIdleServiceUnits::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NumIdleServiceUnits_descriptor_;
}

const NumIdleServiceUnits& NumIdleServiceUnits::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NumIdleServiceUnits* NumIdleServiceUnits::default_instance_ = NULL;

NumIdleServiceUnits* NumIdleServiceUnits::New() const {
  return new NumIdleServiceUnits;
}

void NumIdleServiceUnits::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NumIdleServiceUnits::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits)
  return false;
#undef DO_
}

void NumIdleServiceUnits::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits)
}

::google::protobuf::uint8* NumIdleServiceUnits::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits)
  return target;
}

int NumIdleServiceUnits::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NumIdleServiceUnits::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NumIdleServiceUnits* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NumIdleServiceUnits*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NumIdleServiceUnits::MergeFrom(const NumIdleServiceUnits& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NumIdleServiceUnits::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumIdleServiceUnits::CopyFrom(const NumIdleServiceUnits& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumIdleServiceUnits::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NumIdleServiceUnits::Swap(NumIdleServiceUnits* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NumIdleServiceUnits::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NumIdleServiceUnits_descriptor_;
  metadata.reflection = NumIdleServiceUnits_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NumSpareServiceUnits::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

NumSpareServiceUnits::NumSpareServiceUnits()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits)
}

void NumSpareServiceUnits::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

NumSpareServiceUnits::NumSpareServiceUnits(const NumSpareServiceUnits& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits)
}

void NumSpareServiceUnits::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NumSpareServiceUnits::~NumSpareServiceUnits() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits)
  SharedDtor();
}

void NumSpareServiceUnits::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void NumSpareServiceUnits::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NumSpareServiceUnits::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NumSpareServiceUnits_descriptor_;
}

const NumSpareServiceUnits& NumSpareServiceUnits::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NumSpareServiceUnits* NumSpareServiceUnits::default_instance_ = NULL;

NumSpareServiceUnits* NumSpareServiceUnits::New() const {
  return new NumSpareServiceUnits;
}

void NumSpareServiceUnits::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NumSpareServiceUnits::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits)
  return false;
#undef DO_
}

void NumSpareServiceUnits::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits)
}

::google::protobuf::uint8* NumSpareServiceUnits::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits)
  return target;
}

int NumSpareServiceUnits::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NumSpareServiceUnits::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NumSpareServiceUnits* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NumSpareServiceUnits*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NumSpareServiceUnits::MergeFrom(const NumSpareServiceUnits& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NumSpareServiceUnits::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumSpareServiceUnits::CopyFrom(const NumSpareServiceUnits& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumSpareServiceUnits::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NumSpareServiceUnits::Swap(NumSpareServiceUnits* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NumSpareServiceUnits::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NumSpareServiceUnits_descriptor_;
  metadata.reflection = NumSpareServiceUnits_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServiceGroupStatus::kNameFieldNumber;
const int ServiceGroupStatus::kNumAssignedServiceUnitsFieldNumber;
const int ServiceGroupStatus::kNumIdleServiceUnitsFieldNumber;
const int ServiceGroupStatus::kNumSpareServiceUnitsFieldNumber;
#endif  // !_MSC_VER

ServiceGroupStatus::ServiceGroupStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus)
}

void ServiceGroupStatus::InitAsDefaultInstance() {
  numassignedserviceunits_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NumAssignedServiceUnits*>(&::SAFplus::Rpc::amfMgmtRpc::NumAssignedServiceUnits::default_instance());
  numidleserviceunits_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NumIdleServiceUnits*>(&::SAFplus::Rpc::amfMgmtRpc::NumIdleServiceUnits::default_instance());
  numspareserviceunits_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NumSpareServiceUnits*>(&::SAFplus::Rpc::amfMgmtRpc::NumSpareServiceUnits::default_instance());
}

ServiceGroupStatus::ServiceGroupStatus(const ServiceGroupStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus)
}

void ServiceGroupStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  numassignedserviceunits_ = NULL;
  numidleserviceunits_ = NULL;
  numspareserviceunits_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceGroupStatus::~ServiceGroupStatus() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus)
  SharedDtor();
}

void ServiceGroupStatus::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete numassignedserviceunits_;
    delete numidleserviceunits_;
    delete numspareserviceunits_;
  }
}

void ServiceGroupStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceGroupStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceGroupStatus_descriptor_;
}

const ServiceGroupStatus& ServiceGroupStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ServiceGroupStatus* ServiceGroupStatus::default_instance_ = NULL;

ServiceGroupStatus* ServiceGroupStatus::New() const {
  return new ServiceGroupStatus;
}

void ServiceGroupStatus::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 15) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_numassignedserviceunits()) {
      if (numassignedserviceunits_ != NULL) numassignedserviceunits_->::SAFplus::Rpc::amfMgmtRpc::NumAssignedServiceUnits::Clear();
    }
    if (has_numidleserviceunits()) {
      if (numidleserviceunits_ != NULL) numidleserviceunits_->::SAFplus::Rpc::amfMgmtRpc::NumIdleServiceUnits::Clear();
    }
    if (has_numspareserviceunits()) {
      if (numspareserviceunits_ != NULL) numspareserviceunits_->::SAFplus::Rpc::amfMgmtRpc::NumSpareServiceUnits::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceGroupStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_numAssignedServiceUnits;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits numAssignedServiceUnits = 2;
      case 2: {
        if (tag == 18) {
         parse_numAssignedServiceUnits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_numassignedserviceunits()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_numIdleServiceUnits;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits numIdleServiceUnits = 3;
      case 3: {
        if (tag == 26) {
         parse_numIdleServiceUnits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_numidleserviceunits()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_numSpareServiceUnits;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits numSpareServiceUnits = 4;
      case 4: {
        if (tag == 34) {
         parse_numSpareServiceUnits:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_numspareserviceunits()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus)
  return false;
#undef DO_
}

void ServiceGroupStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits numAssignedServiceUnits = 2;
  if (has_numassignedserviceunits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->numassignedserviceunits(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits numIdleServiceUnits = 3;
  if (has_numidleserviceunits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->numidleserviceunits(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits numSpareServiceUnits = 4;
  if (has_numspareserviceunits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->numspareserviceunits(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus)
}

::google::protobuf::uint8* ServiceGroupStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits numAssignedServiceUnits = 2;
  if (has_numassignedserviceunits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->numassignedserviceunits(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits numIdleServiceUnits = 3;
  if (has_numidleserviceunits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->numidleserviceunits(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits numSpareServiceUnits = 4;
  if (has_numspareserviceunits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->numspareserviceunits(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus)
  return target;
}

int ServiceGroupStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.NumAssignedServiceUnits numAssignedServiceUnits = 2;
    if (has_numassignedserviceunits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->numassignedserviceunits());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.NumIdleServiceUnits numIdleServiceUnits = 3;
    if (has_numidleserviceunits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->numidleserviceunits());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.NumSpareServiceUnits numSpareServiceUnits = 4;
    if (has_numspareserviceunits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->numspareserviceunits());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceGroupStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceGroupStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceGroupStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceGroupStatus::MergeFrom(const ServiceGroupStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_numassignedserviceunits()) {
      mutable_numassignedserviceunits()->::SAFplus::Rpc::amfMgmtRpc::NumAssignedServiceUnits::MergeFrom(from.numassignedserviceunits());
    }
    if (from.has_numidleserviceunits()) {
      mutable_numidleserviceunits()->::SAFplus::Rpc::amfMgmtRpc::NumIdleServiceUnits::MergeFrom(from.numidleserviceunits());
    }
    if (from.has_numspareserviceunits()) {
      mutable_numspareserviceunits()->::SAFplus::Rpc::amfMgmtRpc::NumSpareServiceUnits::MergeFrom(from.numspareserviceunits());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceGroupStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceGroupStatus::CopyFrom(const ServiceGroupStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceGroupStatus::IsInitialized() const {

  if (has_numassignedserviceunits()) {
    if (!this->numassignedserviceunits().IsInitialized()) return false;
  }
  if (has_numidleserviceunits()) {
    if (!this->numidleserviceunits().IsInitialized()) return false;
  }
  if (has_numspareserviceunits()) {
    if (!this->numspareserviceunits().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ServiceGroupStatus::Swap(ServiceGroupStatus* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(numassignedserviceunits_, other->numassignedserviceunits_);
    std::swap(numidleserviceunits_, other->numidleserviceunits_);
    std::swap(numspareserviceunits_, other->numspareserviceunits_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ServiceGroupStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceGroupStatus_descriptor_;
  metadata.reflection = ServiceGroupStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProcStats::kProcessStatsFieldNumber;
#endif  // !_MSC_VER

ProcStats::ProcStats()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ProcStats)
}

void ProcStats::InitAsDefaultInstance() {
  processstats_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ProcessStats*>(&::SAFplus::Rpc::amfMgmtRpc::ProcessStats::default_instance());
}

ProcStats::ProcStats(const ProcStats& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ProcStats)
}

void ProcStats::SharedCtor() {
  _cached_size_ = 0;
  processstats_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProcStats::~ProcStats() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ProcStats)
  SharedDtor();
}

void ProcStats::SharedDtor() {
  if (this != default_instance_) {
    delete processstats_;
  }
}

void ProcStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProcStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProcStats_descriptor_;
}

const ProcStats& ProcStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ProcStats* ProcStats::default_instance_ = NULL;

ProcStats* ProcStats::New() const {
  return new ProcStats;
}

void ProcStats::Clear() {
  _extensions_.Clear();
  if (has_processstats()) {
    if (processstats_ != NULL) processstats_->::SAFplus::Rpc::amfMgmtRpc::ProcessStats::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProcStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ProcStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.ProcessStats ProcessStats = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_processstats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ProcStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ProcStats)
  return false;
#undef DO_
}

void ProcStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ProcStats)
  // optional .SAFplus.Rpc.amfMgmtRpc.ProcessStats ProcessStats = 1;
  if (has_processstats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->processstats(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ProcStats)
}

::google::protobuf::uint8* ProcStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ProcStats)
  // optional .SAFplus.Rpc.amfMgmtRpc.ProcessStats ProcessStats = 1;
  if (has_processstats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->processstats(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ProcStats)
  return target;
}

int ProcStats::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ProcessStats ProcessStats = 1;
    if (has_processstats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->processstats());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProcStats::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProcStats* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProcStats*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProcStats::MergeFrom(const ProcStats& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_processstats()) {
      mutable_processstats()->::SAFplus::Rpc::amfMgmtRpc::ProcessStats::MergeFrom(from.processstats());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProcStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcStats::CopyFrom(const ProcStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcStats::IsInitialized() const {

  if (has_processstats()) {
    if (!this->processstats().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ProcStats::Swap(ProcStats* other) {
  if (other != this) {
    std::swap(processstats_, other->processstats_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ProcStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProcStats_descriptor_;
  metadata.reflection = ProcStats_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActiveAssignments::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

ActiveAssignments::ActiveAssignments()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ActiveAssignments)
}

void ActiveAssignments::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

ActiveAssignments::ActiveAssignments(const ActiveAssignments& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ActiveAssignments)
}

void ActiveAssignments::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActiveAssignments::~ActiveAssignments() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ActiveAssignments)
  SharedDtor();
}

void ActiveAssignments::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void ActiveAssignments::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActiveAssignments::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActiveAssignments_descriptor_;
}

const ActiveAssignments& ActiveAssignments::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ActiveAssignments* ActiveAssignments::default_instance_ = NULL;

ActiveAssignments* ActiveAssignments::New() const {
  return new ActiveAssignments;
}

void ActiveAssignments::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActiveAssignments::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ActiveAssignments)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ActiveAssignments)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ActiveAssignments)
  return false;
#undef DO_
}

void ActiveAssignments::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ActiveAssignments)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ActiveAssignments)
}

::google::protobuf::uint8* ActiveAssignments::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ActiveAssignments)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ActiveAssignments)
  return target;
}

int ActiveAssignments::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActiveAssignments::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActiveAssignments* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActiveAssignments*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActiveAssignments::MergeFrom(const ActiveAssignments& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActiveAssignments::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveAssignments::CopyFrom(const ActiveAssignments& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActiveAssignments::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ActiveAssignments::Swap(ActiveAssignments* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ActiveAssignments::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActiveAssignments_descriptor_;
  metadata.reflection = ActiveAssignments_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StandbyAssignments::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

StandbyAssignments::StandbyAssignments()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.StandbyAssignments)
}

void StandbyAssignments::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

StandbyAssignments::StandbyAssignments(const StandbyAssignments& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.StandbyAssignments)
}

void StandbyAssignments::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StandbyAssignments::~StandbyAssignments() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.StandbyAssignments)
  SharedDtor();
}

void StandbyAssignments::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void StandbyAssignments::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StandbyAssignments::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StandbyAssignments_descriptor_;
}

const StandbyAssignments& StandbyAssignments::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

StandbyAssignments* StandbyAssignments::default_instance_ = NULL;

StandbyAssignments* StandbyAssignments::New() const {
  return new StandbyAssignments;
}

void StandbyAssignments::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StandbyAssignments::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.StandbyAssignments)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.StandbyAssignments)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.StandbyAssignments)
  return false;
#undef DO_
}

void StandbyAssignments::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.StandbyAssignments)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.StandbyAssignments)
}

::google::protobuf::uint8* StandbyAssignments::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.StandbyAssignments)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.StandbyAssignments)
  return target;
}

int StandbyAssignments::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StandbyAssignments::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StandbyAssignments* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StandbyAssignments*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StandbyAssignments::MergeFrom(const StandbyAssignments& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StandbyAssignments::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StandbyAssignments::CopyFrom(const StandbyAssignments& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StandbyAssignments::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void StandbyAssignments::Swap(StandbyAssignments* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata StandbyAssignments::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StandbyAssignments_descriptor_;
  metadata.reflection = StandbyAssignments_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RestartCount::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

RestartCount::RestartCount()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.RestartCount)
}

void RestartCount::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

RestartCount::RestartCount(const RestartCount& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.RestartCount)
}

void RestartCount::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RestartCount::~RestartCount() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.RestartCount)
  SharedDtor();
}

void RestartCount::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void RestartCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RestartCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RestartCount_descriptor_;
}

const RestartCount& RestartCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

RestartCount* RestartCount::default_instance_ = NULL;

RestartCount* RestartCount::New() const {
  return new RestartCount;
}

void RestartCount::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RestartCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.RestartCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.RestartCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.RestartCount)
  return false;
#undef DO_
}

void RestartCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.RestartCount)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.RestartCount)
}

::google::protobuf::uint8* RestartCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.RestartCount)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.RestartCount)
  return target;
}

int RestartCount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RestartCount::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RestartCount* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RestartCount*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RestartCount::MergeFrom(const RestartCount& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RestartCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RestartCount::CopyFrom(const RestartCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RestartCount::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void RestartCount::Swap(RestartCount* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata RestartCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RestartCount_descriptor_;
  metadata.reflection = RestartCount_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentStatus::kNameFieldNumber;
const int ComponentStatus::kProcStatsFieldNumber;
const int ComponentStatus::kPresenceStateFieldNumber;
const int ComponentStatus::kActiveAssignmentsFieldNumber;
const int ComponentStatus::kStandbyAssignmentsFieldNumber;
const int ComponentStatus::kAssignedWorkFieldNumber;
const int ComponentStatus::kOperStateFieldNumber;
const int ComponentStatus::kReadinessStateFieldNumber;
const int ComponentStatus::kHaReadinessStateFieldNumber;
const int ComponentStatus::kHaStateFieldNumber;
const int ComponentStatus::kSafVersionFieldNumber;
const int ComponentStatus::kCompCategoryFieldNumber;
const int ComponentStatus::kSwBundleFieldNumber;
const int ComponentStatus::kNumInstantiationAttemptsFieldNumber;
const int ComponentStatus::kLastInstantiationFieldNumber;
const int ComponentStatus::kRestartCountFieldNumber;
const int ComponentStatus::kProcessIdFieldNumber;
const int ComponentStatus::kLastErrorFieldNumber;
const int ComponentStatus::kPendingOperationFieldNumber;
const int ComponentStatus::kPendingOperationExpirationFieldNumber;
#endif  // !_MSC_VER

ComponentStatus::ComponentStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ComponentStatus)
}

void ComponentStatus::InitAsDefaultInstance() {
  procstats_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ProcStats*>(&::SAFplus::Rpc::amfMgmtRpc::ProcStats::default_instance());
  activeassignments_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ActiveAssignments*>(&::SAFplus::Rpc::amfMgmtRpc::ActiveAssignments::default_instance());
  standbyassignments_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::StandbyAssignments*>(&::SAFplus::Rpc::amfMgmtRpc::StandbyAssignments::default_instance());
  lastinstantiation_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Date*>(&::SAFplus::Rpc::amfMgmtRpc::Date::default_instance());
  restartcount_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::RestartCount*>(&::SAFplus::Rpc::amfMgmtRpc::RestartCount::default_instance());
  pendingoperationexpiration_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::Date*>(&::SAFplus::Rpc::amfMgmtRpc::Date::default_instance());
}

ComponentStatus::ComponentStatus(const ComponentStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ComponentStatus)
}

void ComponentStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  procstats_ = NULL;
  presencestate_ = 0;
  activeassignments_ = NULL;
  standbyassignments_ = NULL;
  operstate_ = false;
  readinessstate_ = 0;
  hareadinessstate_ = 0;
  hastate_ = 1;
  safversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compcategory_ = 0u;
  swbundle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  numinstantiationattempts_ = 0u;
  lastinstantiation_ = NULL;
  restartcount_ = NULL;
  processid_ = 0;
  lasterror_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pendingoperation_ = 0;
  pendingoperationexpiration_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentStatus::~ComponentStatus() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ComponentStatus)
  SharedDtor();
}

void ComponentStatus::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (safversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete safversion_;
  }
  if (swbundle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete swbundle_;
  }
  if (lasterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lasterror_;
  }
  if (this != default_instance_) {
    delete procstats_;
    delete activeassignments_;
    delete standbyassignments_;
    delete lastinstantiation_;
    delete restartcount_;
    delete pendingoperationexpiration_;
  }
}

void ComponentStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentStatus_descriptor_;
}

const ComponentStatus& ComponentStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ComponentStatus* ComponentStatus::default_instance_ = NULL;

ComponentStatus* ComponentStatus::New() const {
  return new ComponentStatus;
}

void ComponentStatus::Clear() {
  _extensions_.Clear();
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ComponentStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 223) {
    ZR_(presencestate_, operstate_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_procstats()) {
      if (procstats_ != NULL) procstats_->::SAFplus::Rpc::amfMgmtRpc::ProcStats::Clear();
    }
    if (has_activeassignments()) {
      if (activeassignments_ != NULL) activeassignments_->::SAFplus::Rpc::amfMgmtRpc::ActiveAssignments::Clear();
    }
    if (has_standbyassignments()) {
      if (standbyassignments_ != NULL) standbyassignments_->::SAFplus::Rpc::amfMgmtRpc::StandbyAssignments::Clear();
    }
    readinessstate_ = 0;
  }
  if (_has_bits_[8 / 32] & 65280) {
    hareadinessstate_ = 0;
    hastate_ = 1;
    if (has_safversion()) {
      if (safversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        safversion_->clear();
      }
    }
    compcategory_ = 0u;
    if (has_swbundle()) {
      if (swbundle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        swbundle_->clear();
      }
    }
    numinstantiationattempts_ = 0u;
    if (has_lastinstantiation()) {
      if (lastinstantiation_ != NULL) lastinstantiation_->::SAFplus::Rpc::amfMgmtRpc::Date::Clear();
    }
    if (has_restartcount()) {
      if (restartcount_ != NULL) restartcount_->::SAFplus::Rpc::amfMgmtRpc::RestartCount::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 983040) {
    processid_ = 0;
    if (has_lasterror()) {
      if (lasterror_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        lasterror_->clear();
      }
    }
    pendingoperation_ = 0;
    if (has_pendingoperationexpiration()) {
      if (pendingoperationexpiration_ != NULL) pendingoperationexpiration_->::SAFplus::Rpc::amfMgmtRpc::Date::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  assignedwork_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ComponentStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_procStats;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ProcStats procStats = 2;
      case 2: {
        if (tag == 18) {
         parse_procStats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_procstats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_presenceState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
      case 3: {
        if (tag == 24) {
         parse_presenceState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::PresenceState_IsValid(value)) {
            set_presencestate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::PresenceState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_activeAssignments;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ActiveAssignments activeAssignments = 4;
      case 4: {
        if (tag == 34) {
         parse_activeAssignments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activeassignments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_standbyAssignments;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.StandbyAssignments standbyAssignments = 5;
      case 5: {
        if (tag == 42) {
         parse_standbyAssignments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_standbyassignments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_assignedWork;
        break;
      }

      // repeated string assignedWork = 6;
      case 6: {
        if (tag == 50) {
         parse_assignedWork:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_assignedwork()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->assignedwork(this->assignedwork_size() - 1).data(),
            this->assignedwork(this->assignedwork_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "assignedwork");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_assignedWork;
        if (input->ExpectTag(56)) goto parse_operState;
        break;
      }

      // optional bool operState = 7;
      case 7: {
        if (tag == 56) {
         parse_operState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &operstate_)));
          set_has_operstate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_readinessState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ReadinessState readinessState = 8;
      case 8: {
        if (tag == 64) {
         parse_readinessState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::ReadinessState_IsValid(value)) {
            set_readinessstate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::ReadinessState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_haReadinessState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityReadinessState haReadinessState = 9;
      case 9: {
        if (tag == 72) {
         parse_haReadinessState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::HighAvailabilityReadinessState_IsValid(value)) {
            set_hareadinessstate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::HighAvailabilityReadinessState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_haState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityState haState = 10;
      case 10: {
        if (tag == 80) {
         parse_haState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::HighAvailabilityState_IsValid(value)) {
            set_hastate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::HighAvailabilityState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_safVersion;
        break;
      }

      // optional string safVersion = 11;
      case 11: {
        if (tag == 90) {
         parse_safVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_safversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->safversion().data(), this->safversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "safversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(101)) goto parse_compCategory;
        break;
      }

      // optional fixed32 compCategory = 12;
      case 12: {
        if (tag == 101) {
         parse_compCategory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &compcategory_)));
          set_has_compcategory();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_swBundle;
        break;
      }

      // optional string swBundle = 13;
      case 13: {
        if (tag == 106) {
         parse_swBundle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_swbundle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->swbundle().data(), this->swbundle().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "swbundle");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(117)) goto parse_numInstantiationAttempts;
        break;
      }

      // optional fixed32 numInstantiationAttempts = 14;
      case 14: {
        if (tag == 117) {
         parse_numInstantiationAttempts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &numinstantiationattempts_)));
          set_has_numinstantiationattempts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_lastInstantiation;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.Date lastInstantiation = 15;
      case 15: {
        if (tag == 122) {
         parse_lastInstantiation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lastinstantiation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_restartCount;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.RestartCount restartCount = 16;
      case 16: {
        if (tag == 130) {
         parse_restartCount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_restartcount()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_processId;
        break;
      }

      // optional sint32 processId = 17;
      case 17: {
        if (tag == 136) {
         parse_processId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &processid_)));
          set_has_processid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_lastError;
        break;
      }

      // optional string lastError = 18;
      case 18: {
        if (tag == 146) {
         parse_lastError:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lasterror()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lasterror().data(), this->lasterror().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "lasterror");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_pendingOperation;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.PendingOperation pendingOperation = 19;
      case 19: {
        if (tag == 152) {
         parse_pendingOperation:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::PendingOperation_IsValid(value)) {
            set_pendingoperation(static_cast< ::SAFplus::Rpc::amfMgmtRpc::PendingOperation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(19, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_pendingOperationExpiration;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.Date pendingOperationExpiration = 20;
      case 20: {
        if (tag == 162) {
         parse_pendingOperationExpiration:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pendingoperationexpiration()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ComponentStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ComponentStatus)
  return false;
#undef DO_
}

void ComponentStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ComponentStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ProcStats procStats = 2;
  if (has_procstats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->procstats(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
  if (has_presencestate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->presencestate(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ActiveAssignments activeAssignments = 4;
  if (has_activeassignments()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->activeassignments(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.StandbyAssignments standbyAssignments = 5;
  if (has_standbyassignments()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->standbyassignments(), output);
  }

  // repeated string assignedWork = 6;
  for (int i = 0; i < this->assignedwork_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->assignedwork(i).data(), this->assignedwork(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "assignedwork");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->assignedwork(i), output);
  }

  // optional bool operState = 7;
  if (has_operstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->operstate(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ReadinessState readinessState = 8;
  if (has_readinessstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->readinessstate(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityReadinessState haReadinessState = 9;
  if (has_hareadinessstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->hareadinessstate(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityState haState = 10;
  if (has_hastate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->hastate(), output);
  }

  // optional string safVersion = 11;
  if (has_safversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->safversion().data(), this->safversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "safversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->safversion(), output);
  }

  // optional fixed32 compCategory = 12;
  if (has_compcategory()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(12, this->compcategory(), output);
  }

  // optional string swBundle = 13;
  if (has_swbundle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->swbundle().data(), this->swbundle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "swbundle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->swbundle(), output);
  }

  // optional fixed32 numInstantiationAttempts = 14;
  if (has_numinstantiationattempts()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(14, this->numinstantiationattempts(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Date lastInstantiation = 15;
  if (has_lastinstantiation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->lastinstantiation(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.RestartCount restartCount = 16;
  if (has_restartcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->restartcount(), output);
  }

  // optional sint32 processId = 17;
  if (has_processid()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(17, this->processid(), output);
  }

  // optional string lastError = 18;
  if (has_lasterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lasterror().data(), this->lasterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lasterror");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->lasterror(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.PendingOperation pendingOperation = 19;
  if (has_pendingoperation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      19, this->pendingoperation(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Date pendingOperationExpiration = 20;
  if (has_pendingoperationexpiration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->pendingoperationexpiration(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ComponentStatus)
}

::google::protobuf::uint8* ComponentStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ComponentStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ProcStats procStats = 2;
  if (has_procstats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->procstats(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
  if (has_presencestate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->presencestate(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ActiveAssignments activeAssignments = 4;
  if (has_activeassignments()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->activeassignments(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.StandbyAssignments standbyAssignments = 5;
  if (has_standbyassignments()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->standbyassignments(), target);
  }

  // repeated string assignedWork = 6;
  for (int i = 0; i < this->assignedwork_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->assignedwork(i).data(), this->assignedwork(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "assignedwork");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->assignedwork(i), target);
  }

  // optional bool operState = 7;
  if (has_operstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->operstate(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ReadinessState readinessState = 8;
  if (has_readinessstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->readinessstate(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityReadinessState haReadinessState = 9;
  if (has_hareadinessstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->hareadinessstate(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityState haState = 10;
  if (has_hastate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->hastate(), target);
  }

  // optional string safVersion = 11;
  if (has_safversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->safversion().data(), this->safversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "safversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->safversion(), target);
  }

  // optional fixed32 compCategory = 12;
  if (has_compcategory()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(12, this->compcategory(), target);
  }

  // optional string swBundle = 13;
  if (has_swbundle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->swbundle().data(), this->swbundle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "swbundle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->swbundle(), target);
  }

  // optional fixed32 numInstantiationAttempts = 14;
  if (has_numinstantiationattempts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(14, this->numinstantiationattempts(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Date lastInstantiation = 15;
  if (has_lastinstantiation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->lastinstantiation(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.RestartCount restartCount = 16;
  if (has_restartcount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->restartcount(), target);
  }

  // optional sint32 processId = 17;
  if (has_processid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(17, this->processid(), target);
  }

  // optional string lastError = 18;
  if (has_lasterror()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lasterror().data(), this->lasterror().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "lasterror");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->lasterror(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.PendingOperation pendingOperation = 19;
  if (has_pendingoperation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      19, this->pendingoperation(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Date pendingOperationExpiration = 20;
  if (has_pendingoperationexpiration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->pendingoperationexpiration(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ComponentStatus)
  return target;
}

int ComponentStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.ProcStats procStats = 2;
    if (has_procstats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->procstats());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
    if (has_presencestate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->presencestate());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.ActiveAssignments activeAssignments = 4;
    if (has_activeassignments()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activeassignments());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.StandbyAssignments standbyAssignments = 5;
    if (has_standbyassignments()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->standbyassignments());
    }

    // optional bool operState = 7;
    if (has_operstate()) {
      total_size += 1 + 1;
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.ReadinessState readinessState = 8;
    if (has_readinessstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->readinessstate());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityReadinessState haReadinessState = 9;
    if (has_hareadinessstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->hareadinessstate());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityState haState = 10;
    if (has_hastate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->hastate());
    }

    // optional string safVersion = 11;
    if (has_safversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->safversion());
    }

    // optional fixed32 compCategory = 12;
    if (has_compcategory()) {
      total_size += 1 + 4;
    }

    // optional string swBundle = 13;
    if (has_swbundle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->swbundle());
    }

    // optional fixed32 numInstantiationAttempts = 14;
    if (has_numinstantiationattempts()) {
      total_size += 1 + 4;
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.Date lastInstantiation = 15;
    if (has_lastinstantiation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lastinstantiation());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.RestartCount restartCount = 16;
    if (has_restartcount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->restartcount());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional sint32 processId = 17;
    if (has_processid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->processid());
    }

    // optional string lastError = 18;
    if (has_lasterror()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lasterror());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.PendingOperation pendingOperation = 19;
    if (has_pendingoperation()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pendingoperation());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.Date pendingOperationExpiration = 20;
    if (has_pendingoperationexpiration()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pendingoperationexpiration());
    }

  }
  // repeated string assignedWork = 6;
  total_size += 1 * this->assignedwork_size();
  for (int i = 0; i < this->assignedwork_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->assignedwork(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentStatus::MergeFrom(const ComponentStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  assignedwork_.MergeFrom(from.assignedwork_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_procstats()) {
      mutable_procstats()->::SAFplus::Rpc::amfMgmtRpc::ProcStats::MergeFrom(from.procstats());
    }
    if (from.has_presencestate()) {
      set_presencestate(from.presencestate());
    }
    if (from.has_activeassignments()) {
      mutable_activeassignments()->::SAFplus::Rpc::amfMgmtRpc::ActiveAssignments::MergeFrom(from.activeassignments());
    }
    if (from.has_standbyassignments()) {
      mutable_standbyassignments()->::SAFplus::Rpc::amfMgmtRpc::StandbyAssignments::MergeFrom(from.standbyassignments());
    }
    if (from.has_operstate()) {
      set_operstate(from.operstate());
    }
    if (from.has_readinessstate()) {
      set_readinessstate(from.readinessstate());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_hareadinessstate()) {
      set_hareadinessstate(from.hareadinessstate());
    }
    if (from.has_hastate()) {
      set_hastate(from.hastate());
    }
    if (from.has_safversion()) {
      set_safversion(from.safversion());
    }
    if (from.has_compcategory()) {
      set_compcategory(from.compcategory());
    }
    if (from.has_swbundle()) {
      set_swbundle(from.swbundle());
    }
    if (from.has_numinstantiationattempts()) {
      set_numinstantiationattempts(from.numinstantiationattempts());
    }
    if (from.has_lastinstantiation()) {
      mutable_lastinstantiation()->::SAFplus::Rpc::amfMgmtRpc::Date::MergeFrom(from.lastinstantiation());
    }
    if (from.has_restartcount()) {
      mutable_restartcount()->::SAFplus::Rpc::amfMgmtRpc::RestartCount::MergeFrom(from.restartcount());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_processid()) {
      set_processid(from.processid());
    }
    if (from.has_lasterror()) {
      set_lasterror(from.lasterror());
    }
    if (from.has_pendingoperation()) {
      set_pendingoperation(from.pendingoperation());
    }
    if (from.has_pendingoperationexpiration()) {
      mutable_pendingoperationexpiration()->::SAFplus::Rpc::amfMgmtRpc::Date::MergeFrom(from.pendingoperationexpiration());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentStatus::CopyFrom(const ComponentStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentStatus::IsInitialized() const {

  if (has_procstats()) {
    if (!this->procstats().IsInitialized()) return false;
  }
  if (has_activeassignments()) {
    if (!this->activeassignments().IsInitialized()) return false;
  }
  if (has_standbyassignments()) {
    if (!this->standbyassignments().IsInitialized()) return false;
  }
  if (has_lastinstantiation()) {
    if (!this->lastinstantiation().IsInitialized()) return false;
  }
  if (has_restartcount()) {
    if (!this->restartcount().IsInitialized()) return false;
  }
  if (has_pendingoperationexpiration()) {
    if (!this->pendingoperationexpiration().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ComponentStatus::Swap(ComponentStatus* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(procstats_, other->procstats_);
    std::swap(presencestate_, other->presencestate_);
    std::swap(activeassignments_, other->activeassignments_);
    std::swap(standbyassignments_, other->standbyassignments_);
    assignedwork_.Swap(&other->assignedwork_);
    std::swap(operstate_, other->operstate_);
    std::swap(readinessstate_, other->readinessstate_);
    std::swap(hareadinessstate_, other->hareadinessstate_);
    std::swap(hastate_, other->hastate_);
    std::swap(safversion_, other->safversion_);
    std::swap(compcategory_, other->compcategory_);
    std::swap(swbundle_, other->swbundle_);
    std::swap(numinstantiationattempts_, other->numinstantiationattempts_);
    std::swap(lastinstantiation_, other->lastinstantiation_);
    std::swap(restartcount_, other->restartcount_);
    std::swap(processid_, other->processid_);
    std::swap(lasterror_, other->lasterror_);
    std::swap(pendingoperation_, other->pendingoperation_);
    std::swap(pendingoperationexpiration_, other->pendingoperationexpiration_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ComponentStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentStatus_descriptor_;
  metadata.reflection = ComponentStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentServiceInstanceStatus::kNameFieldNumber;
const int ComponentServiceInstanceStatus::kStandbyComponentsFieldNumber;
const int ComponentServiceInstanceStatus::kActiveComponentsFieldNumber;
#endif  // !_MSC_VER

ComponentServiceInstanceStatus::ComponentServiceInstanceStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus)
}

void ComponentServiceInstanceStatus::InitAsDefaultInstance() {
}

ComponentServiceInstanceStatus::ComponentServiceInstanceStatus(const ComponentServiceInstanceStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus)
}

void ComponentServiceInstanceStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentServiceInstanceStatus::~ComponentServiceInstanceStatus() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus)
  SharedDtor();
}

void ComponentServiceInstanceStatus::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ComponentServiceInstanceStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentServiceInstanceStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentServiceInstanceStatus_descriptor_;
}

const ComponentServiceInstanceStatus& ComponentServiceInstanceStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ComponentServiceInstanceStatus* ComponentServiceInstanceStatus::default_instance_ = NULL;

ComponentServiceInstanceStatus* ComponentServiceInstanceStatus::New() const {
  return new ComponentServiceInstanceStatus;
}

void ComponentServiceInstanceStatus::Clear() {
  _extensions_.Clear();
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  standbycomponents_.Clear();
  activecomponents_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentServiceInstanceStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_standbyComponents;
        break;
      }

      // repeated string standbyComponents = 2;
      case 2: {
        if (tag == 18) {
         parse_standbyComponents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_standbycomponents()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->standbycomponents(this->standbycomponents_size() - 1).data(),
            this->standbycomponents(this->standbycomponents_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "standbycomponents");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_standbyComponents;
        if (input->ExpectTag(26)) goto parse_activeComponents;
        break;
      }

      // repeated string activeComponents = 3;
      case 3: {
        if (tag == 26) {
         parse_activeComponents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_activecomponents()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activecomponents(this->activecomponents_size() - 1).data(),
            this->activecomponents(this->activecomponents_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "activecomponents");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_activeComponents;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus)
  return false;
#undef DO_
}

void ComponentServiceInstanceStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string standbyComponents = 2;
  for (int i = 0; i < this->standbycomponents_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->standbycomponents(i).data(), this->standbycomponents(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "standbycomponents");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->standbycomponents(i), output);
  }

  // repeated string activeComponents = 3;
  for (int i = 0; i < this->activecomponents_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->activecomponents(i).data(), this->activecomponents(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "activecomponents");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->activecomponents(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus)
}

::google::protobuf::uint8* ComponentServiceInstanceStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string standbyComponents = 2;
  for (int i = 0; i < this->standbycomponents_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->standbycomponents(i).data(), this->standbycomponents(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "standbycomponents");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->standbycomponents(i), target);
  }

  // repeated string activeComponents = 3;
  for (int i = 0; i < this->activecomponents_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activecomponents(i).data(), this->activecomponents(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "activecomponents");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->activecomponents(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus)
  return target;
}

int ComponentServiceInstanceStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated string standbyComponents = 2;
  total_size += 1 * this->standbycomponents_size();
  for (int i = 0; i < this->standbycomponents_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->standbycomponents(i));
  }

  // repeated string activeComponents = 3;
  total_size += 1 * this->activecomponents_size();
  for (int i = 0; i < this->activecomponents_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->activecomponents(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentServiceInstanceStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentServiceInstanceStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentServiceInstanceStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentServiceInstanceStatus::MergeFrom(const ComponentServiceInstanceStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  standbycomponents_.MergeFrom(from.standbycomponents_);
  activecomponents_.MergeFrom(from.activecomponents_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentServiceInstanceStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentServiceInstanceStatus::CopyFrom(const ComponentServiceInstanceStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentServiceInstanceStatus::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ComponentServiceInstanceStatus::Swap(ComponentServiceInstanceStatus* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    standbycomponents_.Swap(&other->standbycomponents_);
    activecomponents_.Swap(&other->activecomponents_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ComponentServiceInstanceStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentServiceInstanceStatus_descriptor_;
  metadata.reflection = ComponentServiceInstanceStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NumActiveAssignments::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

NumActiveAssignments::NumActiveAssignments()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments)
}

void NumActiveAssignments::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

NumActiveAssignments::NumActiveAssignments(const NumActiveAssignments& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments)
}

void NumActiveAssignments::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NumActiveAssignments::~NumActiveAssignments() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments)
  SharedDtor();
}

void NumActiveAssignments::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void NumActiveAssignments::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NumActiveAssignments::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NumActiveAssignments_descriptor_;
}

const NumActiveAssignments& NumActiveAssignments::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NumActiveAssignments* NumActiveAssignments::default_instance_ = NULL;

NumActiveAssignments* NumActiveAssignments::New() const {
  return new NumActiveAssignments;
}

void NumActiveAssignments::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NumActiveAssignments::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments)
  return false;
#undef DO_
}

void NumActiveAssignments::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments)
}

::google::protobuf::uint8* NumActiveAssignments::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments)
  return target;
}

int NumActiveAssignments::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NumActiveAssignments::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NumActiveAssignments* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NumActiveAssignments*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NumActiveAssignments::MergeFrom(const NumActiveAssignments& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NumActiveAssignments::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumActiveAssignments::CopyFrom(const NumActiveAssignments& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumActiveAssignments::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NumActiveAssignments::Swap(NumActiveAssignments* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NumActiveAssignments::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NumActiveAssignments_descriptor_;
  metadata.reflection = NumActiveAssignments_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NumStandbyAssignments::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

NumStandbyAssignments::NumStandbyAssignments()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments)
}

void NumStandbyAssignments::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

NumStandbyAssignments::NumStandbyAssignments(const NumStandbyAssignments& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments)
}

void NumStandbyAssignments::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NumStandbyAssignments::~NumStandbyAssignments() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments)
  SharedDtor();
}

void NumStandbyAssignments::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void NumStandbyAssignments::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NumStandbyAssignments::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NumStandbyAssignments_descriptor_;
}

const NumStandbyAssignments& NumStandbyAssignments::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NumStandbyAssignments* NumStandbyAssignments::default_instance_ = NULL;

NumStandbyAssignments* NumStandbyAssignments::New() const {
  return new NumStandbyAssignments;
}

void NumStandbyAssignments::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NumStandbyAssignments::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments)
  return false;
#undef DO_
}

void NumStandbyAssignments::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments)
}

::google::protobuf::uint8* NumStandbyAssignments::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments)
  return target;
}

int NumStandbyAssignments::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NumStandbyAssignments::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NumStandbyAssignments* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NumStandbyAssignments*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NumStandbyAssignments::MergeFrom(const NumStandbyAssignments& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NumStandbyAssignments::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumStandbyAssignments::CopyFrom(const NumStandbyAssignments& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumStandbyAssignments::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NumStandbyAssignments::Swap(NumStandbyAssignments* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NumStandbyAssignments::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NumStandbyAssignments_descriptor_;
  metadata.reflection = NumStandbyAssignments_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServiceInstanceStatus::kNameFieldNumber;
const int ServiceInstanceStatus::kAssignmentStateFieldNumber;
const int ServiceInstanceStatus::kActiveAssignmentsFieldNumber;
const int ServiceInstanceStatus::kStandbyAssignmentsFieldNumber;
const int ServiceInstanceStatus::kNumActiveAssignmentsFieldNumber;
const int ServiceInstanceStatus::kNumStandbyAssignmentsFieldNumber;
#endif  // !_MSC_VER

ServiceInstanceStatus::ServiceInstanceStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus)
}

void ServiceInstanceStatus::InitAsDefaultInstance() {
  numactiveassignments_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NumActiveAssignments*>(&::SAFplus::Rpc::amfMgmtRpc::NumActiveAssignments::default_instance());
  numstandbyassignments_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NumStandbyAssignments*>(&::SAFplus::Rpc::amfMgmtRpc::NumStandbyAssignments::default_instance());
}

ServiceInstanceStatus::ServiceInstanceStatus(const ServiceInstanceStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus)
}

void ServiceInstanceStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  assignmentstate_ = 0;
  numactiveassignments_ = NULL;
  numstandbyassignments_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceInstanceStatus::~ServiceInstanceStatus() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus)
  SharedDtor();
}

void ServiceInstanceStatus::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete numactiveassignments_;
    delete numstandbyassignments_;
  }
}

void ServiceInstanceStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceInstanceStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceInstanceStatus_descriptor_;
}

const ServiceInstanceStatus& ServiceInstanceStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ServiceInstanceStatus* ServiceInstanceStatus::default_instance_ = NULL;

ServiceInstanceStatus* ServiceInstanceStatus::New() const {
  return new ServiceInstanceStatus;
}

void ServiceInstanceStatus::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 51) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    assignmentstate_ = 0;
    if (has_numactiveassignments()) {
      if (numactiveassignments_ != NULL) numactiveassignments_->::SAFplus::Rpc::amfMgmtRpc::NumActiveAssignments::Clear();
    }
    if (has_numstandbyassignments()) {
      if (numstandbyassignments_ != NULL) numstandbyassignments_->::SAFplus::Rpc::amfMgmtRpc::NumStandbyAssignments::Clear();
    }
  }
  activeassignments_.Clear();
  standbyassignments_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceInstanceStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_assignmentState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.AssignmentState assignmentState = 2;
      case 2: {
        if (tag == 16) {
         parse_assignmentState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::AssignmentState_IsValid(value)) {
            set_assignmentstate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::AssignmentState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_activeAssignments;
        break;
      }

      // repeated string activeAssignments = 3;
      case 3: {
        if (tag == 26) {
         parse_activeAssignments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_activeassignments()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activeassignments(this->activeassignments_size() - 1).data(),
            this->activeassignments(this->activeassignments_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "activeassignments");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_activeAssignments;
        if (input->ExpectTag(34)) goto parse_standbyAssignments;
        break;
      }

      // repeated string standbyAssignments = 4;
      case 4: {
        if (tag == 34) {
         parse_standbyAssignments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_standbyassignments()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->standbyassignments(this->standbyassignments_size() - 1).data(),
            this->standbyassignments(this->standbyassignments_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "standbyassignments");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_standbyAssignments;
        if (input->ExpectTag(42)) goto parse_numActiveAssignments;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments numActiveAssignments = 5;
      case 5: {
        if (tag == 42) {
         parse_numActiveAssignments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_numactiveassignments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_numStandbyAssignments;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments numStandbyAssignments = 6;
      case 6: {
        if (tag == 50) {
         parse_numStandbyAssignments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_numstandbyassignments()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus)
  return false;
#undef DO_
}

void ServiceInstanceStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.AssignmentState assignmentState = 2;
  if (has_assignmentstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->assignmentstate(), output);
  }

  // repeated string activeAssignments = 3;
  for (int i = 0; i < this->activeassignments_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->activeassignments(i).data(), this->activeassignments(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "activeassignments");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->activeassignments(i), output);
  }

  // repeated string standbyAssignments = 4;
  for (int i = 0; i < this->standbyassignments_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->standbyassignments(i).data(), this->standbyassignments(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "standbyassignments");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->standbyassignments(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments numActiveAssignments = 5;
  if (has_numactiveassignments()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->numactiveassignments(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments numStandbyAssignments = 6;
  if (has_numstandbyassignments()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->numstandbyassignments(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus)
}

::google::protobuf::uint8* ServiceInstanceStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.AssignmentState assignmentState = 2;
  if (has_assignmentstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->assignmentstate(), target);
  }

  // repeated string activeAssignments = 3;
  for (int i = 0; i < this->activeassignments_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activeassignments(i).data(), this->activeassignments(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "activeassignments");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->activeassignments(i), target);
  }

  // repeated string standbyAssignments = 4;
  for (int i = 0; i < this->standbyassignments_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->standbyassignments(i).data(), this->standbyassignments(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "standbyassignments");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->standbyassignments(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments numActiveAssignments = 5;
  if (has_numactiveassignments()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->numactiveassignments(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments numStandbyAssignments = 6;
  if (has_numstandbyassignments()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->numstandbyassignments(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus)
  return target;
}

int ServiceInstanceStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.AssignmentState assignmentState = 2;
    if (has_assignmentstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->assignmentstate());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.NumActiveAssignments numActiveAssignments = 5;
    if (has_numactiveassignments()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->numactiveassignments());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.NumStandbyAssignments numStandbyAssignments = 6;
    if (has_numstandbyassignments()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->numstandbyassignments());
    }

  }
  // repeated string activeAssignments = 3;
  total_size += 1 * this->activeassignments_size();
  for (int i = 0; i < this->activeassignments_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->activeassignments(i));
  }

  // repeated string standbyAssignments = 4;
  total_size += 1 * this->standbyassignments_size();
  for (int i = 0; i < this->standbyassignments_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->standbyassignments(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceInstanceStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceInstanceStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceInstanceStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceInstanceStatus::MergeFrom(const ServiceInstanceStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  activeassignments_.MergeFrom(from.activeassignments_);
  standbyassignments_.MergeFrom(from.standbyassignments_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_assignmentstate()) {
      set_assignmentstate(from.assignmentstate());
    }
    if (from.has_numactiveassignments()) {
      mutable_numactiveassignments()->::SAFplus::Rpc::amfMgmtRpc::NumActiveAssignments::MergeFrom(from.numactiveassignments());
    }
    if (from.has_numstandbyassignments()) {
      mutable_numstandbyassignments()->::SAFplus::Rpc::amfMgmtRpc::NumStandbyAssignments::MergeFrom(from.numstandbyassignments());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceInstanceStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceInstanceStatus::CopyFrom(const ServiceInstanceStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceInstanceStatus::IsInitialized() const {

  if (has_numactiveassignments()) {
    if (!this->numactiveassignments().IsInitialized()) return false;
  }
  if (has_numstandbyassignments()) {
    if (!this->numstandbyassignments().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ServiceInstanceStatus::Swap(ServiceInstanceStatus* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(assignmentstate_, other->assignmentstate_);
    activeassignments_.Swap(&other->activeassignments_);
    standbyassignments_.Swap(&other->standbyassignments_);
    std::swap(numactiveassignments_, other->numactiveassignments_);
    std::swap(numstandbyassignments_, other->numstandbyassignments_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ServiceInstanceStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceInstanceStatus_descriptor_;
  metadata.reflection = ServiceInstanceStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NumActiveServiceInstances::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

NumActiveServiceInstances::NumActiveServiceInstances()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances)
}

void NumActiveServiceInstances::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

NumActiveServiceInstances::NumActiveServiceInstances(const NumActiveServiceInstances& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances)
}

void NumActiveServiceInstances::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NumActiveServiceInstances::~NumActiveServiceInstances() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances)
  SharedDtor();
}

void NumActiveServiceInstances::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void NumActiveServiceInstances::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NumActiveServiceInstances::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NumActiveServiceInstances_descriptor_;
}

const NumActiveServiceInstances& NumActiveServiceInstances::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NumActiveServiceInstances* NumActiveServiceInstances::default_instance_ = NULL;

NumActiveServiceInstances* NumActiveServiceInstances::New() const {
  return new NumActiveServiceInstances;
}

void NumActiveServiceInstances::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NumActiveServiceInstances::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances)
  return false;
#undef DO_
}

void NumActiveServiceInstances::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances)
}

::google::protobuf::uint8* NumActiveServiceInstances::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances)
  return target;
}

int NumActiveServiceInstances::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NumActiveServiceInstances::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NumActiveServiceInstances* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NumActiveServiceInstances*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NumActiveServiceInstances::MergeFrom(const NumActiveServiceInstances& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NumActiveServiceInstances::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumActiveServiceInstances::CopyFrom(const NumActiveServiceInstances& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumActiveServiceInstances::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NumActiveServiceInstances::Swap(NumActiveServiceInstances* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NumActiveServiceInstances::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NumActiveServiceInstances_descriptor_;
  metadata.reflection = NumActiveServiceInstances_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NumStandbyServiceInstances::kIntStatisticFieldNumber;
#endif  // !_MSC_VER

NumStandbyServiceInstances::NumStandbyServiceInstances()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances)
}

void NumStandbyServiceInstances::InitAsDefaultInstance() {
  intstatistic_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::IntStatistic*>(&::SAFplus::Rpc::amfMgmtRpc::IntStatistic::default_instance());
}

NumStandbyServiceInstances::NumStandbyServiceInstances(const NumStandbyServiceInstances& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances)
}

void NumStandbyServiceInstances::SharedCtor() {
  _cached_size_ = 0;
  intstatistic_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NumStandbyServiceInstances::~NumStandbyServiceInstances() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances)
  SharedDtor();
}

void NumStandbyServiceInstances::SharedDtor() {
  if (this != default_instance_) {
    delete intstatistic_;
  }
}

void NumStandbyServiceInstances::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NumStandbyServiceInstances::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NumStandbyServiceInstances_descriptor_;
}

const NumStandbyServiceInstances& NumStandbyServiceInstances::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NumStandbyServiceInstances* NumStandbyServiceInstances::default_instance_ = NULL;

NumStandbyServiceInstances* NumStandbyServiceInstances::New() const {
  return new NumStandbyServiceInstances;
}

void NumStandbyServiceInstances::Clear() {
  _extensions_.Clear();
  if (has_intstatistic()) {
    if (intstatistic_ != NULL) intstatistic_->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NumStandbyServiceInstances::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_intstatistic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances)
  return false;
#undef DO_
}

void NumStandbyServiceInstances::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->intstatistic(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances)
}

::google::protobuf::uint8* NumStandbyServiceInstances::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances)
  // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
  if (has_intstatistic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->intstatistic(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances)
  return target;
}

int NumStandbyServiceInstances::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.IntStatistic IntStatistic = 1;
    if (has_intstatistic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->intstatistic());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NumStandbyServiceInstances::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NumStandbyServiceInstances* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NumStandbyServiceInstances*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NumStandbyServiceInstances::MergeFrom(const NumStandbyServiceInstances& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intstatistic()) {
      mutable_intstatistic()->::SAFplus::Rpc::amfMgmtRpc::IntStatistic::MergeFrom(from.intstatistic());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NumStandbyServiceInstances::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumStandbyServiceInstances::CopyFrom(const NumStandbyServiceInstances& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumStandbyServiceInstances::IsInitialized() const {

  if (has_intstatistic()) {
    if (!this->intstatistic().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NumStandbyServiceInstances::Swap(NumStandbyServiceInstances* other) {
  if (other != this) {
    std::swap(intstatistic_, other->intstatistic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NumStandbyServiceInstances::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NumStandbyServiceInstances_descriptor_;
  metadata.reflection = NumStandbyServiceInstances_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServiceUnitStatus::kNameFieldNumber;
const int ServiceUnitStatus::kPreinstantiableFieldNumber;
const int ServiceUnitStatus::kPresenceStateFieldNumber;
const int ServiceUnitStatus::kReadinessStateFieldNumber;
const int ServiceUnitStatus::kHaReadinessStateFieldNumber;
const int ServiceUnitStatus::kHaStateFieldNumber;
const int ServiceUnitStatus::kOperStateFieldNumber;
const int ServiceUnitStatus::kAssignedServiceInstancesFieldNumber;
const int ServiceUnitStatus::kNumActiveServiceInstancesFieldNumber;
const int ServiceUnitStatus::kNumStandbyServiceInstancesFieldNumber;
const int ServiceUnitStatus::kRestartCountFieldNumber;
#endif  // !_MSC_VER

ServiceUnitStatus::ServiceUnitStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus)
}

void ServiceUnitStatus::InitAsDefaultInstance() {
  numactiveserviceinstances_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NumActiveServiceInstances*>(&::SAFplus::Rpc::amfMgmtRpc::NumActiveServiceInstances::default_instance());
  numstandbyserviceinstances_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NumStandbyServiceInstances*>(&::SAFplus::Rpc::amfMgmtRpc::NumStandbyServiceInstances::default_instance());
  restartcount_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::RestartCount*>(&::SAFplus::Rpc::amfMgmtRpc::RestartCount::default_instance());
}

ServiceUnitStatus::ServiceUnitStatus(const ServiceUnitStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus)
}

void ServiceUnitStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preinstantiable_ = false;
  presencestate_ = 0;
  readinessstate_ = 0;
  hareadinessstate_ = 0;
  hastate_ = 1;
  operstate_ = false;
  numactiveserviceinstances_ = NULL;
  numstandbyserviceinstances_ = NULL;
  restartcount_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceUnitStatus::~ServiceUnitStatus() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus)
  SharedDtor();
}

void ServiceUnitStatus::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete numactiveserviceinstances_;
    delete numstandbyserviceinstances_;
    delete restartcount_;
  }
}

void ServiceUnitStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceUnitStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceUnitStatus_descriptor_;
}

const ServiceUnitStatus& ServiceUnitStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ServiceUnitStatus* ServiceUnitStatus::default_instance_ = NULL;

ServiceUnitStatus* ServiceUnitStatus::New() const {
  return new ServiceUnitStatus;
}

void ServiceUnitStatus::Clear() {
  _extensions_.Clear();
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ServiceUnitStatus*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(presencestate_, hareadinessstate_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    hastate_ = 1;
  }
  if (_has_bits_[8 / 32] & 1792) {
    if (has_numactiveserviceinstances()) {
      if (numactiveserviceinstances_ != NULL) numactiveserviceinstances_->::SAFplus::Rpc::amfMgmtRpc::NumActiveServiceInstances::Clear();
    }
    if (has_numstandbyserviceinstances()) {
      if (numstandbyserviceinstances_ != NULL) numstandbyserviceinstances_->::SAFplus::Rpc::amfMgmtRpc::NumStandbyServiceInstances::Clear();
    }
    if (has_restartcount()) {
      if (restartcount_ != NULL) restartcount_->::SAFplus::Rpc::amfMgmtRpc::RestartCount::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  assignedserviceinstances_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceUnitStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_preinstantiable;
        break;
      }

      // optional bool preinstantiable = 2;
      case 2: {
        if (tag == 16) {
         parse_preinstantiable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &preinstantiable_)));
          set_has_preinstantiable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_presenceState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
      case 3: {
        if (tag == 24) {
         parse_presenceState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::PresenceState_IsValid(value)) {
            set_presencestate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::PresenceState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_readinessState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ReadinessState readinessState = 4;
      case 4: {
        if (tag == 32) {
         parse_readinessState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::ReadinessState_IsValid(value)) {
            set_readinessstate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::ReadinessState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_haReadinessState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityReadinessState haReadinessState = 5;
      case 5: {
        if (tag == 40) {
         parse_haReadinessState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::HighAvailabilityReadinessState_IsValid(value)) {
            set_hareadinessstate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::HighAvailabilityReadinessState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_haState;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityState haState = 6;
      case 6: {
        if (tag == 48) {
         parse_haState:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::HighAvailabilityState_IsValid(value)) {
            set_hastate(static_cast< ::SAFplus::Rpc::amfMgmtRpc::HighAvailabilityState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_operState;
        break;
      }

      // optional bool operState = 7;
      case 7: {
        if (tag == 56) {
         parse_operState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &operstate_)));
          set_has_operstate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_assignedServiceInstances;
        break;
      }

      // repeated string assignedServiceInstances = 8;
      case 8: {
        if (tag == 66) {
         parse_assignedServiceInstances:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_assignedserviceinstances()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->assignedserviceinstances(this->assignedserviceinstances_size() - 1).data(),
            this->assignedserviceinstances(this->assignedserviceinstances_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "assignedserviceinstances");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_assignedServiceInstances;
        if (input->ExpectTag(74)) goto parse_numActiveServiceInstances;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances numActiveServiceInstances = 9;
      case 9: {
        if (tag == 74) {
         parse_numActiveServiceInstances:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_numactiveserviceinstances()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_numStandbyServiceInstances;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances numStandbyServiceInstances = 10;
      case 10: {
        if (tag == 82) {
         parse_numStandbyServiceInstances:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_numstandbyserviceinstances()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_restartCount;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.RestartCount restartCount = 11;
      case 11: {
        if (tag == 90) {
         parse_restartCount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_restartcount()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus)
  return false;
#undef DO_
}

void ServiceUnitStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bool preinstantiable = 2;
  if (has_preinstantiable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->preinstantiable(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
  if (has_presencestate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->presencestate(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ReadinessState readinessState = 4;
  if (has_readinessstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->readinessstate(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityReadinessState haReadinessState = 5;
  if (has_hareadinessstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->hareadinessstate(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityState haState = 6;
  if (has_hastate()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->hastate(), output);
  }

  // optional bool operState = 7;
  if (has_operstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->operstate(), output);
  }

  // repeated string assignedServiceInstances = 8;
  for (int i = 0; i < this->assignedserviceinstances_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->assignedserviceinstances(i).data(), this->assignedserviceinstances(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "assignedserviceinstances");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->assignedserviceinstances(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances numActiveServiceInstances = 9;
  if (has_numactiveserviceinstances()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->numactiveserviceinstances(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances numStandbyServiceInstances = 10;
  if (has_numstandbyserviceinstances()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->numstandbyserviceinstances(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.RestartCount restartCount = 11;
  if (has_restartcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->restartcount(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus)
}

::google::protobuf::uint8* ServiceUnitStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bool preinstantiable = 2;
  if (has_preinstantiable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->preinstantiable(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
  if (has_presencestate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->presencestate(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ReadinessState readinessState = 4;
  if (has_readinessstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->readinessstate(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityReadinessState haReadinessState = 5;
  if (has_hareadinessstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->hareadinessstate(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityState haState = 6;
  if (has_hastate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->hastate(), target);
  }

  // optional bool operState = 7;
  if (has_operstate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->operstate(), target);
  }

  // repeated string assignedServiceInstances = 8;
  for (int i = 0; i < this->assignedserviceinstances_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->assignedserviceinstances(i).data(), this->assignedserviceinstances(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "assignedserviceinstances");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->assignedserviceinstances(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances numActiveServiceInstances = 9;
  if (has_numactiveserviceinstances()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->numactiveserviceinstances(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances numStandbyServiceInstances = 10;
  if (has_numstandbyserviceinstances()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->numstandbyserviceinstances(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.RestartCount restartCount = 11;
  if (has_restartcount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->restartcount(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus)
  return target;
}

int ServiceUnitStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bool preinstantiable = 2;
    if (has_preinstantiable()) {
      total_size += 1 + 1;
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.PresenceState presenceState = 3;
    if (has_presencestate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->presencestate());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.ReadinessState readinessState = 4;
    if (has_readinessstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->readinessstate());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityReadinessState haReadinessState = 5;
    if (has_hareadinessstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->hareadinessstate());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.HighAvailabilityState haState = 6;
    if (has_hastate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->hastate());
    }

    // optional bool operState = 7;
    if (has_operstate()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.NumActiveServiceInstances numActiveServiceInstances = 9;
    if (has_numactiveserviceinstances()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->numactiveserviceinstances());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.NumStandbyServiceInstances numStandbyServiceInstances = 10;
    if (has_numstandbyserviceinstances()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->numstandbyserviceinstances());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.RestartCount restartCount = 11;
    if (has_restartcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->restartcount());
    }

  }
  // repeated string assignedServiceInstances = 8;
  total_size += 1 * this->assignedserviceinstances_size();
  for (int i = 0; i < this->assignedserviceinstances_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->assignedserviceinstances(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceUnitStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceUnitStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceUnitStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceUnitStatus::MergeFrom(const ServiceUnitStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  assignedserviceinstances_.MergeFrom(from.assignedserviceinstances_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_preinstantiable()) {
      set_preinstantiable(from.preinstantiable());
    }
    if (from.has_presencestate()) {
      set_presencestate(from.presencestate());
    }
    if (from.has_readinessstate()) {
      set_readinessstate(from.readinessstate());
    }
    if (from.has_hareadinessstate()) {
      set_hareadinessstate(from.hareadinessstate());
    }
    if (from.has_hastate()) {
      set_hastate(from.hastate());
    }
    if (from.has_operstate()) {
      set_operstate(from.operstate());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_numactiveserviceinstances()) {
      mutable_numactiveserviceinstances()->::SAFplus::Rpc::amfMgmtRpc::NumActiveServiceInstances::MergeFrom(from.numactiveserviceinstances());
    }
    if (from.has_numstandbyserviceinstances()) {
      mutable_numstandbyserviceinstances()->::SAFplus::Rpc::amfMgmtRpc::NumStandbyServiceInstances::MergeFrom(from.numstandbyserviceinstances());
    }
    if (from.has_restartcount()) {
      mutable_restartcount()->::SAFplus::Rpc::amfMgmtRpc::RestartCount::MergeFrom(from.restartcount());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceUnitStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceUnitStatus::CopyFrom(const ServiceUnitStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceUnitStatus::IsInitialized() const {

  if (has_numactiveserviceinstances()) {
    if (!this->numactiveserviceinstances().IsInitialized()) return false;
  }
  if (has_numstandbyserviceinstances()) {
    if (!this->numstandbyserviceinstances().IsInitialized()) return false;
  }
  if (has_restartcount()) {
    if (!this->restartcount().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ServiceUnitStatus::Swap(ServiceUnitStatus* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(preinstantiable_, other->preinstantiable_);
    std::swap(presencestate_, other->presencestate_);
    std::swap(readinessstate_, other->readinessstate_);
    std::swap(hareadinessstate_, other->hareadinessstate_);
    std::swap(hastate_, other->hastate_);
    std::swap(operstate_, other->operstate_);
    assignedserviceinstances_.Swap(&other->assignedserviceinstances_);
    std::swap(numactiveserviceinstances_, other->numactiveserviceinstances_);
    std::swap(numstandbyserviceinstances_, other->numstandbyserviceinstances_);
    std::swap(restartcount_, other->restartcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ServiceUnitStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceUnitStatus_descriptor_;
  metadata.reflection = ServiceUnitStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InitializeRequest::kAmfMgmtHandleFieldNumber;
#endif  // !_MSC_VER

InitializeRequest::InitializeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.InitializeRequest)
}

void InitializeRequest::InitAsDefaultInstance() {
}

InitializeRequest::InitializeRequest(const InitializeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.InitializeRequest)
}

void InitializeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InitializeRequest::~InitializeRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.InitializeRequest)
  SharedDtor();
}

void InitializeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InitializeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitializeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InitializeRequest_descriptor_;
}

const InitializeRequest& InitializeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

InitializeRequest* InitializeRequest::default_instance_ = NULL;

InitializeRequest* InitializeRequest::New() const {
  return new InitializeRequest;
}

void InitializeRequest::Clear() {
  _extensions_.Clear();
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InitializeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.InitializeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.InitializeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.InitializeRequest)
  return false;
#undef DO_
}

void InitializeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.InitializeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.InitializeRequest)
}

::google::protobuf::uint8* InitializeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.InitializeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.InitializeRequest)
  return target;
}

int InitializeRequest::ByteSize() const {
  int total_size = 0;

  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitializeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InitializeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InitializeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InitializeRequest::MergeFrom(const InitializeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InitializeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitializeRequest::CopyFrom(const InitializeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitializeRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void InitializeRequest::Swap(InitializeRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata InitializeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InitializeRequest_descriptor_;
  metadata.reflection = InitializeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InitializeResponse::kErrFieldNumber;
#endif  // !_MSC_VER

InitializeResponse::InitializeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.InitializeResponse)
}

void InitializeResponse::InitAsDefaultInstance() {
}

InitializeResponse::InitializeResponse(const InitializeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.InitializeResponse)
}

void InitializeResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InitializeResponse::~InitializeResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.InitializeResponse)
  SharedDtor();
}

void InitializeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InitializeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitializeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InitializeResponse_descriptor_;
}

const InitializeResponse& InitializeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

InitializeResponse* InitializeResponse::default_instance_ = NULL;

InitializeResponse* InitializeResponse::New() const {
  return new InitializeResponse;
}

void InitializeResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InitializeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.InitializeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.InitializeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.InitializeResponse)
  return false;
#undef DO_
}

void InitializeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.InitializeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.InitializeResponse)
}

::google::protobuf::uint8* InitializeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.InitializeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.InitializeResponse)
  return target;
}

int InitializeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitializeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InitializeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InitializeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InitializeResponse::MergeFrom(const InitializeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InitializeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitializeResponse::CopyFrom(const InitializeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitializeResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void InitializeResponse::Swap(InitializeResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata InitializeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InitializeResponse_descriptor_;
  metadata.reflection = InitializeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FinalizeRequest::kAmfMgmtHandleFieldNumber;
#endif  // !_MSC_VER

FinalizeRequest::FinalizeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.FinalizeRequest)
}

void FinalizeRequest::InitAsDefaultInstance() {
}

FinalizeRequest::FinalizeRequest(const FinalizeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.FinalizeRequest)
}

void FinalizeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FinalizeRequest::~FinalizeRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.FinalizeRequest)
  SharedDtor();
}

void FinalizeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FinalizeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinalizeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FinalizeRequest_descriptor_;
}

const FinalizeRequest& FinalizeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

FinalizeRequest* FinalizeRequest::default_instance_ = NULL;

FinalizeRequest* FinalizeRequest::New() const {
  return new FinalizeRequest;
}

void FinalizeRequest::Clear() {
  _extensions_.Clear();
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FinalizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.FinalizeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.FinalizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.FinalizeRequest)
  return false;
#undef DO_
}

void FinalizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.FinalizeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.FinalizeRequest)
}

::google::protobuf::uint8* FinalizeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.FinalizeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.FinalizeRequest)
  return target;
}

int FinalizeRequest::ByteSize() const {
  int total_size = 0;

  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinalizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FinalizeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FinalizeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FinalizeRequest::MergeFrom(const FinalizeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FinalizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinalizeRequest::CopyFrom(const FinalizeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinalizeRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void FinalizeRequest::Swap(FinalizeRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata FinalizeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FinalizeRequest_descriptor_;
  metadata.reflection = FinalizeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FinalizeResponse::kErrFieldNumber;
#endif  // !_MSC_VER

FinalizeResponse::FinalizeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.FinalizeResponse)
}

void FinalizeResponse::InitAsDefaultInstance() {
}

FinalizeResponse::FinalizeResponse(const FinalizeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.FinalizeResponse)
}

void FinalizeResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FinalizeResponse::~FinalizeResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.FinalizeResponse)
  SharedDtor();
}

void FinalizeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FinalizeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinalizeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FinalizeResponse_descriptor_;
}

const FinalizeResponse& FinalizeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

FinalizeResponse* FinalizeResponse::default_instance_ = NULL;

FinalizeResponse* FinalizeResponse::New() const {
  return new FinalizeResponse;
}

void FinalizeResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FinalizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.FinalizeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.FinalizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.FinalizeResponse)
  return false;
#undef DO_
}

void FinalizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.FinalizeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.FinalizeResponse)
}

::google::protobuf::uint8* FinalizeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.FinalizeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.FinalizeResponse)
  return target;
}

int FinalizeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinalizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FinalizeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FinalizeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FinalizeResponse::MergeFrom(const FinalizeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FinalizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinalizeResponse::CopyFrom(const FinalizeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinalizeResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void FinalizeResponse::Swap(FinalizeResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata FinalizeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FinalizeResponse_descriptor_;
  metadata.reflection = FinalizeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CommitRequest::kAmfMgmtHandleFieldNumber;
#endif  // !_MSC_VER

CommitRequest::CommitRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CommitRequest)
}

void CommitRequest::InitAsDefaultInstance() {
}

CommitRequest::CommitRequest(const CommitRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CommitRequest)
}

void CommitRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CommitRequest::~CommitRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CommitRequest)
  SharedDtor();
}

void CommitRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CommitRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommitRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommitRequest_descriptor_;
}

const CommitRequest& CommitRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CommitRequest* CommitRequest::default_instance_ = NULL;

CommitRequest* CommitRequest::New() const {
  return new CommitRequest;
}

void CommitRequest::Clear() {
  _extensions_.Clear();
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CommitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CommitRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CommitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CommitRequest)
  return false;
#undef DO_
}

void CommitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CommitRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CommitRequest)
}

::google::protobuf::uint8* CommitRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CommitRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CommitRequest)
  return target;
}

int CommitRequest::ByteSize() const {
  int total_size = 0;

  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommitRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CommitRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CommitRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CommitRequest::MergeFrom(const CommitRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CommitRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitRequest::CopyFrom(const CommitRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CommitRequest::Swap(CommitRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CommitRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommitRequest_descriptor_;
  metadata.reflection = CommitRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CommitResponse::kErrFieldNumber;
#endif  // !_MSC_VER

CommitResponse::CommitResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CommitResponse)
}

void CommitResponse::InitAsDefaultInstance() {
}

CommitResponse::CommitResponse(const CommitResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CommitResponse)
}

void CommitResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CommitResponse::~CommitResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CommitResponse)
  SharedDtor();
}

void CommitResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CommitResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommitResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommitResponse_descriptor_;
}

const CommitResponse& CommitResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CommitResponse* CommitResponse::default_instance_ = NULL;

CommitResponse* CommitResponse::New() const {
  return new CommitResponse;
}

void CommitResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CommitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CommitResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CommitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CommitResponse)
  return false;
#undef DO_
}

void CommitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CommitResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CommitResponse)
}

::google::protobuf::uint8* CommitResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CommitResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CommitResponse)
  return target;
}

int CommitResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommitResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CommitResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CommitResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CommitResponse::MergeFrom(const CommitResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CommitResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitResponse::CopyFrom(const CommitResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CommitResponse::Swap(CommitResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CommitResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommitResponse_descriptor_;
  metadata.reflection = CommitResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateComponentRequest::kAmfMgmtHandleFieldNumber;
const int CreateComponentRequest::kComponentConfigFieldNumber;
#endif  // !_MSC_VER

CreateComponentRequest::CreateComponentRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateComponentRequest)
}

void CreateComponentRequest::InitAsDefaultInstance() {
  componentconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ComponentConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ComponentConfig::default_instance());
}

CreateComponentRequest::CreateComponentRequest(const CreateComponentRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateComponentRequest)
}

void CreateComponentRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  componentconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateComponentRequest::~CreateComponentRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateComponentRequest)
  SharedDtor();
}

void CreateComponentRequest::SharedDtor() {
  if (this != default_instance_) {
    delete componentconfig_;
  }
}

void CreateComponentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateComponentRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateComponentRequest_descriptor_;
}

const CreateComponentRequest& CreateComponentRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateComponentRequest* CreateComponentRequest::default_instance_ = NULL;

CreateComponentRequest* CreateComponentRequest::New() const {
  return new CreateComponentRequest;
}

void CreateComponentRequest::Clear() {
  _extensions_.Clear();
  if (has_componentconfig()) {
    if (componentconfig_ != NULL) componentconfig_->::SAFplus::Rpc::amfMgmtRpc::ComponentConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateComponentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateComponentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_ComponentConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_ComponentConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_componentconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateComponentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateComponentRequest)
  return false;
#undef DO_
}

void CreateComponentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateComponentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 2;
  if (has_componentconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->componentconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateComponentRequest)
}

::google::protobuf::uint8* CreateComponentRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateComponentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 2;
  if (has_componentconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->componentconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateComponentRequest)
  return target;
}

int CreateComponentRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 2;
    if (has_componentconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->componentconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateComponentRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateComponentRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateComponentRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateComponentRequest::MergeFrom(const CreateComponentRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_componentconfig()) {
      mutable_componentconfig()->::SAFplus::Rpc::amfMgmtRpc::ComponentConfig::MergeFrom(from.componentconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateComponentRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateComponentRequest::CopyFrom(const CreateComponentRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateComponentRequest::IsInitialized() const {

  if (has_componentconfig()) {
    if (!this->componentconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateComponentRequest::Swap(CreateComponentRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(componentconfig_, other->componentconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateComponentRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateComponentRequest_descriptor_;
  metadata.reflection = CreateComponentRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateComponentResponse::kErrFieldNumber;
#endif  // !_MSC_VER

CreateComponentResponse::CreateComponentResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateComponentResponse)
}

void CreateComponentResponse::InitAsDefaultInstance() {
}

CreateComponentResponse::CreateComponentResponse(const CreateComponentResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateComponentResponse)
}

void CreateComponentResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateComponentResponse::~CreateComponentResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateComponentResponse)
  SharedDtor();
}

void CreateComponentResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateComponentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateComponentResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateComponentResponse_descriptor_;
}

const CreateComponentResponse& CreateComponentResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateComponentResponse* CreateComponentResponse::default_instance_ = NULL;

CreateComponentResponse* CreateComponentResponse::New() const {
  return new CreateComponentResponse;
}

void CreateComponentResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateComponentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateComponentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateComponentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateComponentResponse)
  return false;
#undef DO_
}

void CreateComponentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateComponentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateComponentResponse)
}

::google::protobuf::uint8* CreateComponentResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateComponentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateComponentResponse)
  return target;
}

int CreateComponentResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateComponentResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateComponentResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateComponentResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateComponentResponse::MergeFrom(const CreateComponentResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateComponentResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateComponentResponse::CopyFrom(const CreateComponentResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateComponentResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateComponentResponse::Swap(CreateComponentResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateComponentResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateComponentResponse_descriptor_;
  metadata.reflection = CreateComponentResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateComponentRequest::kAmfMgmtHandleFieldNumber;
const int UpdateComponentRequest::kComponentConfigFieldNumber;
#endif  // !_MSC_VER

UpdateComponentRequest::UpdateComponentRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateComponentRequest)
}

void UpdateComponentRequest::InitAsDefaultInstance() {
  componentconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ComponentConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ComponentConfig::default_instance());
}

UpdateComponentRequest::UpdateComponentRequest(const UpdateComponentRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateComponentRequest)
}

void UpdateComponentRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  componentconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateComponentRequest::~UpdateComponentRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateComponentRequest)
  SharedDtor();
}

void UpdateComponentRequest::SharedDtor() {
  if (this != default_instance_) {
    delete componentconfig_;
  }
}

void UpdateComponentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateComponentRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateComponentRequest_descriptor_;
}

const UpdateComponentRequest& UpdateComponentRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateComponentRequest* UpdateComponentRequest::default_instance_ = NULL;

UpdateComponentRequest* UpdateComponentRequest::New() const {
  return new UpdateComponentRequest;
}

void UpdateComponentRequest::Clear() {
  _extensions_.Clear();
  if (has_componentconfig()) {
    if (componentconfig_ != NULL) componentconfig_->::SAFplus::Rpc::amfMgmtRpc::ComponentConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateComponentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateComponentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_ComponentConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_ComponentConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_componentconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateComponentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateComponentRequest)
  return false;
#undef DO_
}

void UpdateComponentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateComponentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 2;
  if (has_componentconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->componentconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateComponentRequest)
}

::google::protobuf::uint8* UpdateComponentRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateComponentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 2;
  if (has_componentconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->componentconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateComponentRequest)
  return target;
}

int UpdateComponentRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 2;
    if (has_componentconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->componentconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateComponentRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateComponentRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateComponentRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateComponentRequest::MergeFrom(const UpdateComponentRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_componentconfig()) {
      mutable_componentconfig()->::SAFplus::Rpc::amfMgmtRpc::ComponentConfig::MergeFrom(from.componentconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateComponentRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateComponentRequest::CopyFrom(const UpdateComponentRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateComponentRequest::IsInitialized() const {

  if (has_componentconfig()) {
    if (!this->componentconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateComponentRequest::Swap(UpdateComponentRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(componentconfig_, other->componentconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateComponentRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateComponentRequest_descriptor_;
  metadata.reflection = UpdateComponentRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateComponentResponse::kErrFieldNumber;
#endif  // !_MSC_VER

UpdateComponentResponse::UpdateComponentResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateComponentResponse)
}

void UpdateComponentResponse::InitAsDefaultInstance() {
}

UpdateComponentResponse::UpdateComponentResponse(const UpdateComponentResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateComponentResponse)
}

void UpdateComponentResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateComponentResponse::~UpdateComponentResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateComponentResponse)
  SharedDtor();
}

void UpdateComponentResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateComponentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateComponentResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateComponentResponse_descriptor_;
}

const UpdateComponentResponse& UpdateComponentResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateComponentResponse* UpdateComponentResponse::default_instance_ = NULL;

UpdateComponentResponse* UpdateComponentResponse::New() const {
  return new UpdateComponentResponse;
}

void UpdateComponentResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateComponentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateComponentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateComponentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateComponentResponse)
  return false;
#undef DO_
}

void UpdateComponentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateComponentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateComponentResponse)
}

::google::protobuf::uint8* UpdateComponentResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateComponentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateComponentResponse)
  return target;
}

int UpdateComponentResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateComponentResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateComponentResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateComponentResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateComponentResponse::MergeFrom(const UpdateComponentResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateComponentResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateComponentResponse::CopyFrom(const UpdateComponentResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateComponentResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateComponentResponse::Swap(UpdateComponentResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateComponentResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateComponentResponse_descriptor_;
  metadata.reflection = UpdateComponentResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteComponentRequest::kAmfMgmtHandleFieldNumber;
const int DeleteComponentRequest::kNameFieldNumber;
#endif  // !_MSC_VER

DeleteComponentRequest::DeleteComponentRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteComponentRequest)
}

void DeleteComponentRequest::InitAsDefaultInstance() {
}

DeleteComponentRequest::DeleteComponentRequest(const DeleteComponentRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteComponentRequest)
}

void DeleteComponentRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteComponentRequest::~DeleteComponentRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteComponentRequest)
  SharedDtor();
}

void DeleteComponentRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void DeleteComponentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteComponentRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteComponentRequest_descriptor_;
}

const DeleteComponentRequest& DeleteComponentRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteComponentRequest* DeleteComponentRequest::default_instance_ = NULL;

DeleteComponentRequest* DeleteComponentRequest::New() const {
  return new DeleteComponentRequest;
}

void DeleteComponentRequest::Clear() {
  _extensions_.Clear();
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteComponentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteComponentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteComponentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteComponentRequest)
  return false;
#undef DO_
}

void DeleteComponentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteComponentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteComponentRequest)
}

::google::protobuf::uint8* DeleteComponentRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteComponentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteComponentRequest)
  return target;
}

int DeleteComponentRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteComponentRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteComponentRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteComponentRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteComponentRequest::MergeFrom(const DeleteComponentRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteComponentRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteComponentRequest::CopyFrom(const DeleteComponentRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteComponentRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteComponentRequest::Swap(DeleteComponentRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteComponentRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteComponentRequest_descriptor_;
  metadata.reflection = DeleteComponentRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteComponentResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteComponentResponse::DeleteComponentResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteComponentResponse)
}

void DeleteComponentResponse::InitAsDefaultInstance() {
}

DeleteComponentResponse::DeleteComponentResponse(const DeleteComponentResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteComponentResponse)
}

void DeleteComponentResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteComponentResponse::~DeleteComponentResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteComponentResponse)
  SharedDtor();
}

void DeleteComponentResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteComponentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteComponentResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteComponentResponse_descriptor_;
}

const DeleteComponentResponse& DeleteComponentResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteComponentResponse* DeleteComponentResponse::default_instance_ = NULL;

DeleteComponentResponse* DeleteComponentResponse::New() const {
  return new DeleteComponentResponse;
}

void DeleteComponentResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteComponentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteComponentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteComponentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteComponentResponse)
  return false;
#undef DO_
}

void DeleteComponentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteComponentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteComponentResponse)
}

::google::protobuf::uint8* DeleteComponentResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteComponentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteComponentResponse)
  return target;
}

int DeleteComponentResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteComponentResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteComponentResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteComponentResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteComponentResponse::MergeFrom(const DeleteComponentResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteComponentResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteComponentResponse::CopyFrom(const DeleteComponentResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteComponentResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteComponentResponse::Swap(DeleteComponentResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteComponentResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteComponentResponse_descriptor_;
  metadata.reflection = DeleteComponentResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateSGRequest::kAmfMgmtHandleFieldNumber;
const int CreateSGRequest::kServiceGroupConfigFieldNumber;
#endif  // !_MSC_VER

CreateSGRequest::CreateSGRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateSGRequest)
}

void CreateSGRequest::InitAsDefaultInstance() {
  servicegroupconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig::default_instance());
}

CreateSGRequest::CreateSGRequest(const CreateSGRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateSGRequest)
}

void CreateSGRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  servicegroupconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateSGRequest::~CreateSGRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateSGRequest)
  SharedDtor();
}

void CreateSGRequest::SharedDtor() {
  if (this != default_instance_) {
    delete servicegroupconfig_;
  }
}

void CreateSGRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateSGRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateSGRequest_descriptor_;
}

const CreateSGRequest& CreateSGRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateSGRequest* CreateSGRequest::default_instance_ = NULL;

CreateSGRequest* CreateSGRequest::New() const {
  return new CreateSGRequest;
}

void CreateSGRequest::Clear() {
  _extensions_.Clear();
  if (has_servicegroupconfig()) {
    if (servicegroupconfig_ != NULL) servicegroupconfig_->::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateSGRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateSGRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_ServiceGroupConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_ServiceGroupConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_servicegroupconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateSGRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateSGRequest)
  return false;
#undef DO_
}

void CreateSGRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateSGRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 2;
  if (has_servicegroupconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->servicegroupconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateSGRequest)
}

::google::protobuf::uint8* CreateSGRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateSGRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 2;
  if (has_servicegroupconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->servicegroupconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateSGRequest)
  return target;
}

int CreateSGRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 2;
    if (has_servicegroupconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->servicegroupconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateSGRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateSGRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateSGRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateSGRequest::MergeFrom(const CreateSGRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_servicegroupconfig()) {
      mutable_servicegroupconfig()->::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig::MergeFrom(from.servicegroupconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateSGRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSGRequest::CopyFrom(const CreateSGRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSGRequest::IsInitialized() const {

  if (has_servicegroupconfig()) {
    if (!this->servicegroupconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateSGRequest::Swap(CreateSGRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(servicegroupconfig_, other->servicegroupconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateSGRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateSGRequest_descriptor_;
  metadata.reflection = CreateSGRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateSGResponse::kErrFieldNumber;
#endif  // !_MSC_VER

CreateSGResponse::CreateSGResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateSGResponse)
}

void CreateSGResponse::InitAsDefaultInstance() {
}

CreateSGResponse::CreateSGResponse(const CreateSGResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateSGResponse)
}

void CreateSGResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateSGResponse::~CreateSGResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateSGResponse)
  SharedDtor();
}

void CreateSGResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateSGResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateSGResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateSGResponse_descriptor_;
}

const CreateSGResponse& CreateSGResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateSGResponse* CreateSGResponse::default_instance_ = NULL;

CreateSGResponse* CreateSGResponse::New() const {
  return new CreateSGResponse;
}

void CreateSGResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateSGResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateSGResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateSGResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateSGResponse)
  return false;
#undef DO_
}

void CreateSGResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateSGResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateSGResponse)
}

::google::protobuf::uint8* CreateSGResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateSGResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateSGResponse)
  return target;
}

int CreateSGResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateSGResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateSGResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateSGResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateSGResponse::MergeFrom(const CreateSGResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateSGResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSGResponse::CopyFrom(const CreateSGResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSGResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateSGResponse::Swap(CreateSGResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateSGResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateSGResponse_descriptor_;
  metadata.reflection = CreateSGResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateSGRequest::kAmfMgmtHandleFieldNumber;
const int UpdateSGRequest::kServiceGroupConfigFieldNumber;
#endif  // !_MSC_VER

UpdateSGRequest::UpdateSGRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSGRequest)
}

void UpdateSGRequest::InitAsDefaultInstance() {
  servicegroupconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig::default_instance());
}

UpdateSGRequest::UpdateSGRequest(const UpdateSGRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSGRequest)
}

void UpdateSGRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  servicegroupconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateSGRequest::~UpdateSGRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateSGRequest)
  SharedDtor();
}

void UpdateSGRequest::SharedDtor() {
  if (this != default_instance_) {
    delete servicegroupconfig_;
  }
}

void UpdateSGRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSGRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSGRequest_descriptor_;
}

const UpdateSGRequest& UpdateSGRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateSGRequest* UpdateSGRequest::default_instance_ = NULL;

UpdateSGRequest* UpdateSGRequest::New() const {
  return new UpdateSGRequest;
}

void UpdateSGRequest::Clear() {
  _extensions_.Clear();
  if (has_servicegroupconfig()) {
    if (servicegroupconfig_ != NULL) servicegroupconfig_->::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateSGRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateSGRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_ServiceGroupConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_ServiceGroupConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_servicegroupconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateSGRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateSGRequest)
  return false;
#undef DO_
}

void UpdateSGRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateSGRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 2;
  if (has_servicegroupconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->servicegroupconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateSGRequest)
}

::google::protobuf::uint8* UpdateSGRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateSGRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 2;
  if (has_servicegroupconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->servicegroupconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateSGRequest)
  return target;
}

int UpdateSGRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 2;
    if (has_servicegroupconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->servicegroupconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSGRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateSGRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateSGRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateSGRequest::MergeFrom(const UpdateSGRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_servicegroupconfig()) {
      mutable_servicegroupconfig()->::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig::MergeFrom(from.servicegroupconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateSGRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSGRequest::CopyFrom(const UpdateSGRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSGRequest::IsInitialized() const {

  if (has_servicegroupconfig()) {
    if (!this->servicegroupconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateSGRequest::Swap(UpdateSGRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(servicegroupconfig_, other->servicegroupconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateSGRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSGRequest_descriptor_;
  metadata.reflection = UpdateSGRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateSGResponse::kErrFieldNumber;
#endif  // !_MSC_VER

UpdateSGResponse::UpdateSGResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSGResponse)
}

void UpdateSGResponse::InitAsDefaultInstance() {
}

UpdateSGResponse::UpdateSGResponse(const UpdateSGResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSGResponse)
}

void UpdateSGResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateSGResponse::~UpdateSGResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateSGResponse)
  SharedDtor();
}

void UpdateSGResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateSGResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSGResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSGResponse_descriptor_;
}

const UpdateSGResponse& UpdateSGResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateSGResponse* UpdateSGResponse::default_instance_ = NULL;

UpdateSGResponse* UpdateSGResponse::New() const {
  return new UpdateSGResponse;
}

void UpdateSGResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateSGResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateSGResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateSGResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateSGResponse)
  return false;
#undef DO_
}

void UpdateSGResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateSGResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateSGResponse)
}

::google::protobuf::uint8* UpdateSGResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateSGResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateSGResponse)
  return target;
}

int UpdateSGResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSGResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateSGResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateSGResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateSGResponse::MergeFrom(const UpdateSGResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateSGResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSGResponse::CopyFrom(const UpdateSGResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSGResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateSGResponse::Swap(UpdateSGResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateSGResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSGResponse_descriptor_;
  metadata.reflection = UpdateSGResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSGRequest::kAmfMgmtHandleFieldNumber;
const int DeleteSGRequest::kNameFieldNumber;
#endif  // !_MSC_VER

DeleteSGRequest::DeleteSGRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGRequest)
}

void DeleteSGRequest::InitAsDefaultInstance() {
}

DeleteSGRequest::DeleteSGRequest(const DeleteSGRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGRequest)
}

void DeleteSGRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSGRequest::~DeleteSGRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGRequest)
  SharedDtor();
}

void DeleteSGRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void DeleteSGRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSGRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSGRequest_descriptor_;
}

const DeleteSGRequest& DeleteSGRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSGRequest* DeleteSGRequest::default_instance_ = NULL;

DeleteSGRequest* DeleteSGRequest::New() const {
  return new DeleteSGRequest;
}

void DeleteSGRequest::Clear() {
  _extensions_.Clear();
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSGRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSGRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSGRequest)
  return false;
#undef DO_
}

void DeleteSGRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGRequest)
}

::google::protobuf::uint8* DeleteSGRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGRequest)
  return target;
}

int DeleteSGRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSGRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSGRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSGRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSGRequest::MergeFrom(const DeleteSGRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSGRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSGRequest::CopyFrom(const DeleteSGRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSGRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSGRequest::Swap(DeleteSGRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSGRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSGRequest_descriptor_;
  metadata.reflection = DeleteSGRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSGResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteSGResponse::DeleteSGResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGResponse)
}

void DeleteSGResponse::InitAsDefaultInstance() {
}

DeleteSGResponse::DeleteSGResponse(const DeleteSGResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGResponse)
}

void DeleteSGResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSGResponse::~DeleteSGResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGResponse)
  SharedDtor();
}

void DeleteSGResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteSGResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSGResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSGResponse_descriptor_;
}

const DeleteSGResponse& DeleteSGResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSGResponse* DeleteSGResponse::default_instance_ = NULL;

DeleteSGResponse* DeleteSGResponse::New() const {
  return new DeleteSGResponse;
}

void DeleteSGResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSGResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSGResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSGResponse)
  return false;
#undef DO_
}

void DeleteSGResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGResponse)
}

::google::protobuf::uint8* DeleteSGResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGResponse)
  return target;
}

int DeleteSGResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSGResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSGResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSGResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSGResponse::MergeFrom(const DeleteSGResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSGResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSGResponse::CopyFrom(const DeleteSGResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSGResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSGResponse::Swap(DeleteSGResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSGResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSGResponse_descriptor_;
  metadata.reflection = DeleteSGResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateNodeRequest::kAmfMgmtHandleFieldNumber;
const int CreateNodeRequest::kNodeConfigFieldNumber;
#endif  // !_MSC_VER

CreateNodeRequest::CreateNodeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateNodeRequest)
}

void CreateNodeRequest::InitAsDefaultInstance() {
  nodeconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NodeConfig*>(&::SAFplus::Rpc::amfMgmtRpc::NodeConfig::default_instance());
}

CreateNodeRequest::CreateNodeRequest(const CreateNodeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateNodeRequest)
}

void CreateNodeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodeconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateNodeRequest::~CreateNodeRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateNodeRequest)
  SharedDtor();
}

void CreateNodeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete nodeconfig_;
  }
}

void CreateNodeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNodeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateNodeRequest_descriptor_;
}

const CreateNodeRequest& CreateNodeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateNodeRequest* CreateNodeRequest::default_instance_ = NULL;

CreateNodeRequest* CreateNodeRequest::New() const {
  return new CreateNodeRequest;
}

void CreateNodeRequest::Clear() {
  _extensions_.Clear();
  if (has_nodeconfig()) {
    if (nodeconfig_ != NULL) nodeconfig_->::SAFplus::Rpc::amfMgmtRpc::NodeConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateNodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateNodeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_NodeConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_NodeConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nodeconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateNodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateNodeRequest)
  return false;
#undef DO_
}

void CreateNodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateNodeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 2;
  if (has_nodeconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->nodeconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateNodeRequest)
}

::google::protobuf::uint8* CreateNodeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateNodeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 2;
  if (has_nodeconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->nodeconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateNodeRequest)
  return target;
}

int CreateNodeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 2;
    if (has_nodeconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodeconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateNodeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateNodeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateNodeRequest::MergeFrom(const CreateNodeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodeconfig()) {
      mutable_nodeconfig()->::SAFplus::Rpc::amfMgmtRpc::NodeConfig::MergeFrom(from.nodeconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateNodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNodeRequest::CopyFrom(const CreateNodeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNodeRequest::IsInitialized() const {

  if (has_nodeconfig()) {
    if (!this->nodeconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateNodeRequest::Swap(CreateNodeRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(nodeconfig_, other->nodeconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateNodeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateNodeRequest_descriptor_;
  metadata.reflection = CreateNodeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateNodeResponse::kErrFieldNumber;
#endif  // !_MSC_VER

CreateNodeResponse::CreateNodeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateNodeResponse)
}

void CreateNodeResponse::InitAsDefaultInstance() {
}

CreateNodeResponse::CreateNodeResponse(const CreateNodeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateNodeResponse)
}

void CreateNodeResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateNodeResponse::~CreateNodeResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateNodeResponse)
  SharedDtor();
}

void CreateNodeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateNodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateNodeResponse_descriptor_;
}

const CreateNodeResponse& CreateNodeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateNodeResponse* CreateNodeResponse::default_instance_ = NULL;

CreateNodeResponse* CreateNodeResponse::New() const {
  return new CreateNodeResponse;
}

void CreateNodeResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateNodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateNodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateNodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateNodeResponse)
  return false;
#undef DO_
}

void CreateNodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateNodeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateNodeResponse)
}

::google::protobuf::uint8* CreateNodeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateNodeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateNodeResponse)
  return target;
}

int CreateNodeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateNodeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateNodeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateNodeResponse::MergeFrom(const CreateNodeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateNodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNodeResponse::CopyFrom(const CreateNodeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNodeResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateNodeResponse::Swap(CreateNodeResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateNodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateNodeResponse_descriptor_;
  metadata.reflection = CreateNodeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateNodeRequest::kAmfMgmtHandleFieldNumber;
const int UpdateNodeRequest::kNodeConfigFieldNumber;
#endif  // !_MSC_VER

UpdateNodeRequest::UpdateNodeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateNodeRequest)
}

void UpdateNodeRequest::InitAsDefaultInstance() {
  nodeconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NodeConfig*>(&::SAFplus::Rpc::amfMgmtRpc::NodeConfig::default_instance());
}

UpdateNodeRequest::UpdateNodeRequest(const UpdateNodeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateNodeRequest)
}

void UpdateNodeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodeconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateNodeRequest::~UpdateNodeRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateNodeRequest)
  SharedDtor();
}

void UpdateNodeRequest::SharedDtor() {
  if (this != default_instance_) {
    delete nodeconfig_;
  }
}

void UpdateNodeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateNodeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateNodeRequest_descriptor_;
}

const UpdateNodeRequest& UpdateNodeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateNodeRequest* UpdateNodeRequest::default_instance_ = NULL;

UpdateNodeRequest* UpdateNodeRequest::New() const {
  return new UpdateNodeRequest;
}

void UpdateNodeRequest::Clear() {
  _extensions_.Clear();
  if (has_nodeconfig()) {
    if (nodeconfig_ != NULL) nodeconfig_->::SAFplus::Rpc::amfMgmtRpc::NodeConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateNodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateNodeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_NodeConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_NodeConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nodeconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateNodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateNodeRequest)
  return false;
#undef DO_
}

void UpdateNodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateNodeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 2;
  if (has_nodeconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->nodeconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateNodeRequest)
}

::google::protobuf::uint8* UpdateNodeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateNodeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 2;
  if (has_nodeconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->nodeconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateNodeRequest)
  return target;
}

int UpdateNodeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 2;
    if (has_nodeconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodeconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateNodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateNodeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateNodeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateNodeRequest::MergeFrom(const UpdateNodeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodeconfig()) {
      mutable_nodeconfig()->::SAFplus::Rpc::amfMgmtRpc::NodeConfig::MergeFrom(from.nodeconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateNodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateNodeRequest::CopyFrom(const UpdateNodeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNodeRequest::IsInitialized() const {

  if (has_nodeconfig()) {
    if (!this->nodeconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateNodeRequest::Swap(UpdateNodeRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(nodeconfig_, other->nodeconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateNodeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateNodeRequest_descriptor_;
  metadata.reflection = UpdateNodeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateNodeResponse::kErrFieldNumber;
#endif  // !_MSC_VER

UpdateNodeResponse::UpdateNodeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateNodeResponse)
}

void UpdateNodeResponse::InitAsDefaultInstance() {
}

UpdateNodeResponse::UpdateNodeResponse(const UpdateNodeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateNodeResponse)
}

void UpdateNodeResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateNodeResponse::~UpdateNodeResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateNodeResponse)
  SharedDtor();
}

void UpdateNodeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateNodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateNodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateNodeResponse_descriptor_;
}

const UpdateNodeResponse& UpdateNodeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateNodeResponse* UpdateNodeResponse::default_instance_ = NULL;

UpdateNodeResponse* UpdateNodeResponse::New() const {
  return new UpdateNodeResponse;
}

void UpdateNodeResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateNodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateNodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateNodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateNodeResponse)
  return false;
#undef DO_
}

void UpdateNodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateNodeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateNodeResponse)
}

::google::protobuf::uint8* UpdateNodeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateNodeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateNodeResponse)
  return target;
}

int UpdateNodeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateNodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateNodeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateNodeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateNodeResponse::MergeFrom(const UpdateNodeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateNodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateNodeResponse::CopyFrom(const UpdateNodeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateNodeResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateNodeResponse::Swap(UpdateNodeResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateNodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateNodeResponse_descriptor_;
  metadata.reflection = UpdateNodeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteNodeRequest::kAmfMgmtHandleFieldNumber;
const int DeleteNodeRequest::kNameFieldNumber;
#endif  // !_MSC_VER

DeleteNodeRequest::DeleteNodeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeRequest)
}

void DeleteNodeRequest::InitAsDefaultInstance() {
}

DeleteNodeRequest::DeleteNodeRequest(const DeleteNodeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeRequest)
}

void DeleteNodeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteNodeRequest::~DeleteNodeRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeRequest)
  SharedDtor();
}

void DeleteNodeRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void DeleteNodeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteNodeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteNodeRequest_descriptor_;
}

const DeleteNodeRequest& DeleteNodeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteNodeRequest* DeleteNodeRequest::default_instance_ = NULL;

DeleteNodeRequest* DeleteNodeRequest::New() const {
  return new DeleteNodeRequest;
}

void DeleteNodeRequest::Clear() {
  _extensions_.Clear();
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteNodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteNodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteNodeRequest)
  return false;
#undef DO_
}

void DeleteNodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteNodeRequest)
}

::google::protobuf::uint8* DeleteNodeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteNodeRequest)
  return target;
}

int DeleteNodeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteNodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteNodeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteNodeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteNodeRequest::MergeFrom(const DeleteNodeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteNodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNodeRequest::CopyFrom(const DeleteNodeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNodeRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteNodeRequest::Swap(DeleteNodeRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteNodeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteNodeRequest_descriptor_;
  metadata.reflection = DeleteNodeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteNodeResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteNodeResponse::DeleteNodeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeResponse)
}

void DeleteNodeResponse::InitAsDefaultInstance() {
}

DeleteNodeResponse::DeleteNodeResponse(const DeleteNodeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeResponse)
}

void DeleteNodeResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteNodeResponse::~DeleteNodeResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeResponse)
  SharedDtor();
}

void DeleteNodeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteNodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteNodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteNodeResponse_descriptor_;
}

const DeleteNodeResponse& DeleteNodeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteNodeResponse* DeleteNodeResponse::default_instance_ = NULL;

DeleteNodeResponse* DeleteNodeResponse::New() const {
  return new DeleteNodeResponse;
}

void DeleteNodeResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteNodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteNodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteNodeResponse)
  return false;
#undef DO_
}

void DeleteNodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteNodeResponse)
}

::google::protobuf::uint8* DeleteNodeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteNodeResponse)
  return target;
}

int DeleteNodeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteNodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteNodeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteNodeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteNodeResponse::MergeFrom(const DeleteNodeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteNodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNodeResponse::CopyFrom(const DeleteNodeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNodeResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteNodeResponse::Swap(DeleteNodeResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteNodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteNodeResponse_descriptor_;
  metadata.reflection = DeleteNodeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateSURequest::kAmfMgmtHandleFieldNumber;
const int CreateSURequest::kServiceUnitConfigFieldNumber;
#endif  // !_MSC_VER

CreateSURequest::CreateSURequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateSURequest)
}

void CreateSURequest::InitAsDefaultInstance() {
  serviceunitconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig::default_instance());
}

CreateSURequest::CreateSURequest(const CreateSURequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateSURequest)
}

void CreateSURequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  serviceunitconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateSURequest::~CreateSURequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateSURequest)
  SharedDtor();
}

void CreateSURequest::SharedDtor() {
  if (this != default_instance_) {
    delete serviceunitconfig_;
  }
}

void CreateSURequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateSURequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateSURequest_descriptor_;
}

const CreateSURequest& CreateSURequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateSURequest* CreateSURequest::default_instance_ = NULL;

CreateSURequest* CreateSURequest::New() const {
  return new CreateSURequest;
}

void CreateSURequest::Clear() {
  _extensions_.Clear();
  if (has_serviceunitconfig()) {
    if (serviceunitconfig_ != NULL) serviceunitconfig_->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateSURequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateSURequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_ServiceUnitConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_ServiceUnitConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serviceunitconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateSURequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateSURequest)
  return false;
#undef DO_
}

void CreateSURequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateSURequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 2;
  if (has_serviceunitconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serviceunitconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateSURequest)
}

::google::protobuf::uint8* CreateSURequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateSURequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 2;
  if (has_serviceunitconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serviceunitconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateSURequest)
  return target;
}

int CreateSURequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 2;
    if (has_serviceunitconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serviceunitconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateSURequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateSURequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateSURequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateSURequest::MergeFrom(const CreateSURequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_serviceunitconfig()) {
      mutable_serviceunitconfig()->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig::MergeFrom(from.serviceunitconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateSURequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSURequest::CopyFrom(const CreateSURequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSURequest::IsInitialized() const {

  if (has_serviceunitconfig()) {
    if (!this->serviceunitconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateSURequest::Swap(CreateSURequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(serviceunitconfig_, other->serviceunitconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateSURequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateSURequest_descriptor_;
  metadata.reflection = CreateSURequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateSUResponse::kErrFieldNumber;
#endif  // !_MSC_VER

CreateSUResponse::CreateSUResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateSUResponse)
}

void CreateSUResponse::InitAsDefaultInstance() {
}

CreateSUResponse::CreateSUResponse(const CreateSUResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateSUResponse)
}

void CreateSUResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateSUResponse::~CreateSUResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateSUResponse)
  SharedDtor();
}

void CreateSUResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateSUResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateSUResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateSUResponse_descriptor_;
}

const CreateSUResponse& CreateSUResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateSUResponse* CreateSUResponse::default_instance_ = NULL;

CreateSUResponse* CreateSUResponse::New() const {
  return new CreateSUResponse;
}

void CreateSUResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateSUResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateSUResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateSUResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateSUResponse)
  return false;
#undef DO_
}

void CreateSUResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateSUResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateSUResponse)
}

::google::protobuf::uint8* CreateSUResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateSUResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateSUResponse)
  return target;
}

int CreateSUResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateSUResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateSUResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateSUResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateSUResponse::MergeFrom(const CreateSUResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateSUResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSUResponse::CopyFrom(const CreateSUResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSUResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateSUResponse::Swap(CreateSUResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateSUResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateSUResponse_descriptor_;
  metadata.reflection = CreateSUResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateSURequest::kAmfMgmtHandleFieldNumber;
const int UpdateSURequest::kServiceUnitConfigFieldNumber;
#endif  // !_MSC_VER

UpdateSURequest::UpdateSURequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSURequest)
}

void UpdateSURequest::InitAsDefaultInstance() {
  serviceunitconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig::default_instance());
}

UpdateSURequest::UpdateSURequest(const UpdateSURequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSURequest)
}

void UpdateSURequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  serviceunitconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateSURequest::~UpdateSURequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateSURequest)
  SharedDtor();
}

void UpdateSURequest::SharedDtor() {
  if (this != default_instance_) {
    delete serviceunitconfig_;
  }
}

void UpdateSURequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSURequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSURequest_descriptor_;
}

const UpdateSURequest& UpdateSURequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateSURequest* UpdateSURequest::default_instance_ = NULL;

UpdateSURequest* UpdateSURequest::New() const {
  return new UpdateSURequest;
}

void UpdateSURequest::Clear() {
  _extensions_.Clear();
  if (has_serviceunitconfig()) {
    if (serviceunitconfig_ != NULL) serviceunitconfig_->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateSURequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateSURequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_ServiceUnitConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_ServiceUnitConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serviceunitconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateSURequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateSURequest)
  return false;
#undef DO_
}

void UpdateSURequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateSURequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 2;
  if (has_serviceunitconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serviceunitconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateSURequest)
}

::google::protobuf::uint8* UpdateSURequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateSURequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 2;
  if (has_serviceunitconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serviceunitconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateSURequest)
  return target;
}

int UpdateSURequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 2;
    if (has_serviceunitconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serviceunitconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSURequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateSURequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateSURequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateSURequest::MergeFrom(const UpdateSURequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_serviceunitconfig()) {
      mutable_serviceunitconfig()->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig::MergeFrom(from.serviceunitconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateSURequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSURequest::CopyFrom(const UpdateSURequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSURequest::IsInitialized() const {

  if (has_serviceunitconfig()) {
    if (!this->serviceunitconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateSURequest::Swap(UpdateSURequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(serviceunitconfig_, other->serviceunitconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateSURequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSURequest_descriptor_;
  metadata.reflection = UpdateSURequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateSUResponse::kErrFieldNumber;
#endif  // !_MSC_VER

UpdateSUResponse::UpdateSUResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSUResponse)
}

void UpdateSUResponse::InitAsDefaultInstance() {
}

UpdateSUResponse::UpdateSUResponse(const UpdateSUResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSUResponse)
}

void UpdateSUResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateSUResponse::~UpdateSUResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateSUResponse)
  SharedDtor();
}

void UpdateSUResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateSUResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSUResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSUResponse_descriptor_;
}

const UpdateSUResponse& UpdateSUResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateSUResponse* UpdateSUResponse::default_instance_ = NULL;

UpdateSUResponse* UpdateSUResponse::New() const {
  return new UpdateSUResponse;
}

void UpdateSUResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateSUResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateSUResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateSUResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateSUResponse)
  return false;
#undef DO_
}

void UpdateSUResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateSUResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateSUResponse)
}

::google::protobuf::uint8* UpdateSUResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateSUResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateSUResponse)
  return target;
}

int UpdateSUResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSUResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateSUResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateSUResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateSUResponse::MergeFrom(const UpdateSUResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateSUResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSUResponse::CopyFrom(const UpdateSUResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSUResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateSUResponse::Swap(UpdateSUResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateSUResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSUResponse_descriptor_;
  metadata.reflection = UpdateSUResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSURequest::kAmfMgmtHandleFieldNumber;
const int DeleteSURequest::kNameFieldNumber;
#endif  // !_MSC_VER

DeleteSURequest::DeleteSURequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSURequest)
}

void DeleteSURequest::InitAsDefaultInstance() {
}

DeleteSURequest::DeleteSURequest(const DeleteSURequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSURequest)
}

void DeleteSURequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSURequest::~DeleteSURequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSURequest)
  SharedDtor();
}

void DeleteSURequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void DeleteSURequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSURequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSURequest_descriptor_;
}

const DeleteSURequest& DeleteSURequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSURequest* DeleteSURequest::default_instance_ = NULL;

DeleteSURequest* DeleteSURequest::New() const {
  return new DeleteSURequest;
}

void DeleteSURequest::Clear() {
  _extensions_.Clear();
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSURequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSURequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSURequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSURequest)
  return false;
#undef DO_
}

void DeleteSURequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSURequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSURequest)
}

::google::protobuf::uint8* DeleteSURequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSURequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSURequest)
  return target;
}

int DeleteSURequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSURequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSURequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSURequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSURequest::MergeFrom(const DeleteSURequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSURequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSURequest::CopyFrom(const DeleteSURequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSURequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSURequest::Swap(DeleteSURequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSURequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSURequest_descriptor_;
  metadata.reflection = DeleteSURequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSUResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteSUResponse::DeleteSUResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSUResponse)
}

void DeleteSUResponse::InitAsDefaultInstance() {
}

DeleteSUResponse::DeleteSUResponse(const DeleteSUResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSUResponse)
}

void DeleteSUResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSUResponse::~DeleteSUResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSUResponse)
  SharedDtor();
}

void DeleteSUResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteSUResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSUResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSUResponse_descriptor_;
}

const DeleteSUResponse& DeleteSUResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSUResponse* DeleteSUResponse::default_instance_ = NULL;

DeleteSUResponse* DeleteSUResponse::New() const {
  return new DeleteSUResponse;
}

void DeleteSUResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSUResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSUResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSUResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSUResponse)
  return false;
#undef DO_
}

void DeleteSUResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSUResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSUResponse)
}

::google::protobuf::uint8* DeleteSUResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSUResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSUResponse)
  return target;
}

int DeleteSUResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSUResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSUResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSUResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSUResponse::MergeFrom(const DeleteSUResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSUResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSUResponse::CopyFrom(const DeleteSUResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSUResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSUResponse::Swap(DeleteSUResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSUResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSUResponse_descriptor_;
  metadata.reflection = DeleteSUResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateSIRequest::kAmfMgmtHandleFieldNumber;
const int CreateSIRequest::kServiceInstanceConfigFieldNumber;
#endif  // !_MSC_VER

CreateSIRequest::CreateSIRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateSIRequest)
}

void CreateSIRequest::InitAsDefaultInstance() {
  serviceinstanceconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig::default_instance());
}

CreateSIRequest::CreateSIRequest(const CreateSIRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateSIRequest)
}

void CreateSIRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  serviceinstanceconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateSIRequest::~CreateSIRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateSIRequest)
  SharedDtor();
}

void CreateSIRequest::SharedDtor() {
  if (this != default_instance_) {
    delete serviceinstanceconfig_;
  }
}

void CreateSIRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateSIRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateSIRequest_descriptor_;
}

const CreateSIRequest& CreateSIRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateSIRequest* CreateSIRequest::default_instance_ = NULL;

CreateSIRequest* CreateSIRequest::New() const {
  return new CreateSIRequest;
}

void CreateSIRequest::Clear() {
  _extensions_.Clear();
  if (has_serviceinstanceconfig()) {
    if (serviceinstanceconfig_ != NULL) serviceinstanceconfig_->::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateSIRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateSIRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_ServiceInstanceConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_ServiceInstanceConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serviceinstanceconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateSIRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateSIRequest)
  return false;
#undef DO_
}

void CreateSIRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 2;
  if (has_serviceinstanceconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serviceinstanceconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateSIRequest)
}

::google::protobuf::uint8* CreateSIRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 2;
  if (has_serviceinstanceconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serviceinstanceconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateSIRequest)
  return target;
}

int CreateSIRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 2;
    if (has_serviceinstanceconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serviceinstanceconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateSIRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateSIRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateSIRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateSIRequest::MergeFrom(const CreateSIRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_serviceinstanceconfig()) {
      mutable_serviceinstanceconfig()->::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig::MergeFrom(from.serviceinstanceconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateSIRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSIRequest::CopyFrom(const CreateSIRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSIRequest::IsInitialized() const {

  if (has_serviceinstanceconfig()) {
    if (!this->serviceinstanceconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateSIRequest::Swap(CreateSIRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(serviceinstanceconfig_, other->serviceinstanceconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateSIRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateSIRequest_descriptor_;
  metadata.reflection = CreateSIRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateSIResponse::kErrFieldNumber;
#endif  // !_MSC_VER

CreateSIResponse::CreateSIResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateSIResponse)
}

void CreateSIResponse::InitAsDefaultInstance() {
}

CreateSIResponse::CreateSIResponse(const CreateSIResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateSIResponse)
}

void CreateSIResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateSIResponse::~CreateSIResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateSIResponse)
  SharedDtor();
}

void CreateSIResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateSIResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateSIResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateSIResponse_descriptor_;
}

const CreateSIResponse& CreateSIResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateSIResponse* CreateSIResponse::default_instance_ = NULL;

CreateSIResponse* CreateSIResponse::New() const {
  return new CreateSIResponse;
}

void CreateSIResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateSIResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateSIResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateSIResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateSIResponse)
  return false;
#undef DO_
}

void CreateSIResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateSIResponse)
}

::google::protobuf::uint8* CreateSIResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateSIResponse)
  return target;
}

int CreateSIResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateSIResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateSIResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateSIResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateSIResponse::MergeFrom(const CreateSIResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateSIResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSIResponse::CopyFrom(const CreateSIResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSIResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateSIResponse::Swap(CreateSIResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateSIResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateSIResponse_descriptor_;
  metadata.reflection = CreateSIResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateSIRequest::kAmfMgmtHandleFieldNumber;
const int UpdateSIRequest::kServiceInstanceConfigFieldNumber;
#endif  // !_MSC_VER

UpdateSIRequest::UpdateSIRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSIRequest)
}

void UpdateSIRequest::InitAsDefaultInstance() {
  serviceinstanceconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig::default_instance());
}

UpdateSIRequest::UpdateSIRequest(const UpdateSIRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSIRequest)
}

void UpdateSIRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  serviceinstanceconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateSIRequest::~UpdateSIRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateSIRequest)
  SharedDtor();
}

void UpdateSIRequest::SharedDtor() {
  if (this != default_instance_) {
    delete serviceinstanceconfig_;
  }
}

void UpdateSIRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSIRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSIRequest_descriptor_;
}

const UpdateSIRequest& UpdateSIRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateSIRequest* UpdateSIRequest::default_instance_ = NULL;

UpdateSIRequest* UpdateSIRequest::New() const {
  return new UpdateSIRequest;
}

void UpdateSIRequest::Clear() {
  _extensions_.Clear();
  if (has_serviceinstanceconfig()) {
    if (serviceinstanceconfig_ != NULL) serviceinstanceconfig_->::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateSIRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateSIRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_ServiceInstanceConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_ServiceInstanceConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serviceinstanceconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateSIRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateSIRequest)
  return false;
#undef DO_
}

void UpdateSIRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 2;
  if (has_serviceinstanceconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serviceinstanceconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateSIRequest)
}

::google::protobuf::uint8* UpdateSIRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 2;
  if (has_serviceinstanceconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serviceinstanceconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateSIRequest)
  return target;
}

int UpdateSIRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 2;
    if (has_serviceinstanceconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serviceinstanceconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSIRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateSIRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateSIRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateSIRequest::MergeFrom(const UpdateSIRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_serviceinstanceconfig()) {
      mutable_serviceinstanceconfig()->::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig::MergeFrom(from.serviceinstanceconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateSIRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSIRequest::CopyFrom(const UpdateSIRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSIRequest::IsInitialized() const {

  if (has_serviceinstanceconfig()) {
    if (!this->serviceinstanceconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateSIRequest::Swap(UpdateSIRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(serviceinstanceconfig_, other->serviceinstanceconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateSIRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSIRequest_descriptor_;
  metadata.reflection = UpdateSIRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateSIResponse::kErrFieldNumber;
#endif  // !_MSC_VER

UpdateSIResponse::UpdateSIResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSIResponse)
}

void UpdateSIResponse::InitAsDefaultInstance() {
}

UpdateSIResponse::UpdateSIResponse(const UpdateSIResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateSIResponse)
}

void UpdateSIResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateSIResponse::~UpdateSIResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateSIResponse)
  SharedDtor();
}

void UpdateSIResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateSIResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSIResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSIResponse_descriptor_;
}

const UpdateSIResponse& UpdateSIResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateSIResponse* UpdateSIResponse::default_instance_ = NULL;

UpdateSIResponse* UpdateSIResponse::New() const {
  return new UpdateSIResponse;
}

void UpdateSIResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateSIResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateSIResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateSIResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateSIResponse)
  return false;
#undef DO_
}

void UpdateSIResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateSIResponse)
}

::google::protobuf::uint8* UpdateSIResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateSIResponse)
  return target;
}

int UpdateSIResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSIResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateSIResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateSIResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateSIResponse::MergeFrom(const UpdateSIResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateSIResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSIResponse::CopyFrom(const UpdateSIResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSIResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateSIResponse::Swap(UpdateSIResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateSIResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSIResponse_descriptor_;
  metadata.reflection = UpdateSIResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSIRequest::kAmfMgmtHandleFieldNumber;
const int DeleteSIRequest::kNameFieldNumber;
#endif  // !_MSC_VER

DeleteSIRequest::DeleteSIRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSIRequest)
}

void DeleteSIRequest::InitAsDefaultInstance() {
}

DeleteSIRequest::DeleteSIRequest(const DeleteSIRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSIRequest)
}

void DeleteSIRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSIRequest::~DeleteSIRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSIRequest)
  SharedDtor();
}

void DeleteSIRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void DeleteSIRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSIRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSIRequest_descriptor_;
}

const DeleteSIRequest& DeleteSIRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSIRequest* DeleteSIRequest::default_instance_ = NULL;

DeleteSIRequest* DeleteSIRequest::New() const {
  return new DeleteSIRequest;
}

void DeleteSIRequest::Clear() {
  _extensions_.Clear();
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSIRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSIRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSIRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSIRequest)
  return false;
#undef DO_
}

void DeleteSIRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSIRequest)
}

::google::protobuf::uint8* DeleteSIRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSIRequest)
  return target;
}

int DeleteSIRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSIRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSIRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSIRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSIRequest::MergeFrom(const DeleteSIRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSIRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSIRequest::CopyFrom(const DeleteSIRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSIRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSIRequest::Swap(DeleteSIRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSIRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSIRequest_descriptor_;
  metadata.reflection = DeleteSIRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSIResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteSIResponse::DeleteSIResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSIResponse)
}

void DeleteSIResponse::InitAsDefaultInstance() {
}

DeleteSIResponse::DeleteSIResponse(const DeleteSIResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSIResponse)
}

void DeleteSIResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSIResponse::~DeleteSIResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSIResponse)
  SharedDtor();
}

void DeleteSIResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteSIResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSIResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSIResponse_descriptor_;
}

const DeleteSIResponse& DeleteSIResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSIResponse* DeleteSIResponse::default_instance_ = NULL;

DeleteSIResponse* DeleteSIResponse::New() const {
  return new DeleteSIResponse;
}

void DeleteSIResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSIResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSIResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSIResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSIResponse)
  return false;
#undef DO_
}

void DeleteSIResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSIResponse)
}

::google::protobuf::uint8* DeleteSIResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSIResponse)
  return target;
}

int DeleteSIResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSIResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSIResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSIResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSIResponse::MergeFrom(const DeleteSIResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSIResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSIResponse::CopyFrom(const DeleteSIResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSIResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSIResponse::Swap(DeleteSIResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSIResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSIResponse_descriptor_;
  metadata.reflection = DeleteSIResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateCSIRequest::kAmfMgmtHandleFieldNumber;
const int CreateCSIRequest::kComponentServiceInstanceConfigFieldNumber;
#endif  // !_MSC_VER

CreateCSIRequest::CreateCSIRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateCSIRequest)
}

void CreateCSIRequest::InitAsDefaultInstance() {
  componentserviceinstanceconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig::default_instance());
}

CreateCSIRequest::CreateCSIRequest(const CreateCSIRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateCSIRequest)
}

void CreateCSIRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  componentserviceinstanceconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateCSIRequest::~CreateCSIRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateCSIRequest)
  SharedDtor();
}

void CreateCSIRequest::SharedDtor() {
  if (this != default_instance_) {
    delete componentserviceinstanceconfig_;
  }
}

void CreateCSIRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateCSIRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateCSIRequest_descriptor_;
}

const CreateCSIRequest& CreateCSIRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateCSIRequest* CreateCSIRequest::default_instance_ = NULL;

CreateCSIRequest* CreateCSIRequest::New() const {
  return new CreateCSIRequest;
}

void CreateCSIRequest::Clear() {
  _extensions_.Clear();
  if (has_componentserviceinstanceconfig()) {
    if (componentserviceinstanceconfig_ != NULL) componentserviceinstanceconfig_->::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateCSIRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateCSIRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_ComponentServiceInstanceConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_ComponentServiceInstanceConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_componentserviceinstanceconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateCSIRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateCSIRequest)
  return false;
#undef DO_
}

void CreateCSIRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateCSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 2;
  if (has_componentserviceinstanceconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->componentserviceinstanceconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateCSIRequest)
}

::google::protobuf::uint8* CreateCSIRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateCSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 2;
  if (has_componentserviceinstanceconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->componentserviceinstanceconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateCSIRequest)
  return target;
}

int CreateCSIRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 2;
    if (has_componentserviceinstanceconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->componentserviceinstanceconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateCSIRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateCSIRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateCSIRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateCSIRequest::MergeFrom(const CreateCSIRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_componentserviceinstanceconfig()) {
      mutable_componentserviceinstanceconfig()->::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig::MergeFrom(from.componentserviceinstanceconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateCSIRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCSIRequest::CopyFrom(const CreateCSIRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCSIRequest::IsInitialized() const {

  if (has_componentserviceinstanceconfig()) {
    if (!this->componentserviceinstanceconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateCSIRequest::Swap(CreateCSIRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(componentserviceinstanceconfig_, other->componentserviceinstanceconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateCSIRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateCSIRequest_descriptor_;
  metadata.reflection = CreateCSIRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreateCSIResponse::kErrFieldNumber;
#endif  // !_MSC_VER

CreateCSIResponse::CreateCSIResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CreateCSIResponse)
}

void CreateCSIResponse::InitAsDefaultInstance() {
}

CreateCSIResponse::CreateCSIResponse(const CreateCSIResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CreateCSIResponse)
}

void CreateCSIResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreateCSIResponse::~CreateCSIResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CreateCSIResponse)
  SharedDtor();
}

void CreateCSIResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateCSIResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateCSIResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateCSIResponse_descriptor_;
}

const CreateCSIResponse& CreateCSIResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CreateCSIResponse* CreateCSIResponse::default_instance_ = NULL;

CreateCSIResponse* CreateCSIResponse::New() const {
  return new CreateCSIResponse;
}

void CreateCSIResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreateCSIResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CreateCSIResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CreateCSIResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CreateCSIResponse)
  return false;
#undef DO_
}

void CreateCSIResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CreateCSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CreateCSIResponse)
}

::google::protobuf::uint8* CreateCSIResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CreateCSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CreateCSIResponse)
  return target;
}

int CreateCSIResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateCSIResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreateCSIResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreateCSIResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreateCSIResponse::MergeFrom(const CreateCSIResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreateCSIResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCSIResponse::CopyFrom(const CreateCSIResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCSIResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CreateCSIResponse::Swap(CreateCSIResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CreateCSIResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateCSIResponse_descriptor_;
  metadata.reflection = CreateCSIResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateCSIRequest::kAmfMgmtHandleFieldNumber;
const int UpdateCSIRequest::kComponentServiceInstanceConfigFieldNumber;
#endif  // !_MSC_VER

UpdateCSIRequest::UpdateCSIRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateCSIRequest)
}

void UpdateCSIRequest::InitAsDefaultInstance() {
  componentserviceinstanceconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig::default_instance());
}

UpdateCSIRequest::UpdateCSIRequest(const UpdateCSIRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateCSIRequest)
}

void UpdateCSIRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  componentserviceinstanceconfig_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateCSIRequest::~UpdateCSIRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateCSIRequest)
  SharedDtor();
}

void UpdateCSIRequest::SharedDtor() {
  if (this != default_instance_) {
    delete componentserviceinstanceconfig_;
  }
}

void UpdateCSIRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateCSIRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateCSIRequest_descriptor_;
}

const UpdateCSIRequest& UpdateCSIRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateCSIRequest* UpdateCSIRequest::default_instance_ = NULL;

UpdateCSIRequest* UpdateCSIRequest::New() const {
  return new UpdateCSIRequest;
}

void UpdateCSIRequest::Clear() {
  _extensions_.Clear();
  if (has_componentserviceinstanceconfig()) {
    if (componentserviceinstanceconfig_ != NULL) componentserviceinstanceconfig_->::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig::Clear();
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateCSIRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateCSIRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_ComponentServiceInstanceConfig;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 2;
      case 2: {
        if (tag == 18) {
         parse_ComponentServiceInstanceConfig:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_componentserviceinstanceconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateCSIRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateCSIRequest)
  return false;
#undef DO_
}

void UpdateCSIRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateCSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 2;
  if (has_componentserviceinstanceconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->componentserviceinstanceconfig(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateCSIRequest)
}

::google::protobuf::uint8* UpdateCSIRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateCSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 2;
  if (has_componentserviceinstanceconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->componentserviceinstanceconfig(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateCSIRequest)
  return target;
}

int UpdateCSIRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 2;
    if (has_componentserviceinstanceconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->componentserviceinstanceconfig());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateCSIRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateCSIRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateCSIRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateCSIRequest::MergeFrom(const UpdateCSIRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_componentserviceinstanceconfig()) {
      mutable_componentserviceinstanceconfig()->::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig::MergeFrom(from.componentserviceinstanceconfig());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateCSIRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCSIRequest::CopyFrom(const UpdateCSIRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCSIRequest::IsInitialized() const {

  if (has_componentserviceinstanceconfig()) {
    if (!this->componentserviceinstanceconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateCSIRequest::Swap(UpdateCSIRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(componentserviceinstanceconfig_, other->componentserviceinstanceconfig_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateCSIRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateCSIRequest_descriptor_;
  metadata.reflection = UpdateCSIRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateCSIResponse::kErrFieldNumber;
#endif  // !_MSC_VER

UpdateCSIResponse::UpdateCSIResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UpdateCSIResponse)
}

void UpdateCSIResponse::InitAsDefaultInstance() {
}

UpdateCSIResponse::UpdateCSIResponse(const UpdateCSIResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UpdateCSIResponse)
}

void UpdateCSIResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateCSIResponse::~UpdateCSIResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UpdateCSIResponse)
  SharedDtor();
}

void UpdateCSIResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateCSIResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateCSIResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateCSIResponse_descriptor_;
}

const UpdateCSIResponse& UpdateCSIResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UpdateCSIResponse* UpdateCSIResponse::default_instance_ = NULL;

UpdateCSIResponse* UpdateCSIResponse::New() const {
  return new UpdateCSIResponse;
}

void UpdateCSIResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateCSIResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UpdateCSIResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UpdateCSIResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UpdateCSIResponse)
  return false;
#undef DO_
}

void UpdateCSIResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UpdateCSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UpdateCSIResponse)
}

::google::protobuf::uint8* UpdateCSIResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UpdateCSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UpdateCSIResponse)
  return target;
}

int UpdateCSIResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateCSIResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateCSIResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateCSIResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateCSIResponse::MergeFrom(const UpdateCSIResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateCSIResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCSIResponse::CopyFrom(const UpdateCSIResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCSIResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UpdateCSIResponse::Swap(UpdateCSIResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UpdateCSIResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateCSIResponse_descriptor_;
  metadata.reflection = UpdateCSIResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteCSIRequest::kAmfMgmtHandleFieldNumber;
const int DeleteCSIRequest::kNameFieldNumber;
#endif  // !_MSC_VER

DeleteCSIRequest::DeleteCSIRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSIRequest)
}

void DeleteCSIRequest::InitAsDefaultInstance() {
}

DeleteCSIRequest::DeleteCSIRequest(const DeleteCSIRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSIRequest)
}

void DeleteCSIRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteCSIRequest::~DeleteCSIRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSIRequest)
  SharedDtor();
}

void DeleteCSIRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void DeleteCSIRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteCSIRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteCSIRequest_descriptor_;
}

const DeleteCSIRequest& DeleteCSIRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteCSIRequest* DeleteCSIRequest::default_instance_ = NULL;

DeleteCSIRequest* DeleteCSIRequest::New() const {
  return new DeleteCSIRequest;
}

void DeleteCSIRequest::Clear() {
  _extensions_.Clear();
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteCSIRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSIRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteCSIRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteCSIRequest)
  return false;
#undef DO_
}

void DeleteCSIRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteCSIRequest)
}

::google::protobuf::uint8* DeleteCSIRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteCSIRequest)
  return target;
}

int DeleteCSIRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteCSIRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteCSIRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteCSIRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteCSIRequest::MergeFrom(const DeleteCSIRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteCSIRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCSIRequest::CopyFrom(const DeleteCSIRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCSIRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteCSIRequest::Swap(DeleteCSIRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteCSIRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteCSIRequest_descriptor_;
  metadata.reflection = DeleteCSIRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteCSIResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteCSIResponse::DeleteCSIResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSIResponse)
}

void DeleteCSIResponse::InitAsDefaultInstance() {
}

DeleteCSIResponse::DeleteCSIResponse(const DeleteCSIResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSIResponse)
}

void DeleteCSIResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteCSIResponse::~DeleteCSIResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSIResponse)
  SharedDtor();
}

void DeleteCSIResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteCSIResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteCSIResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteCSIResponse_descriptor_;
}

const DeleteCSIResponse& DeleteCSIResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteCSIResponse* DeleteCSIResponse::default_instance_ = NULL;

DeleteCSIResponse* DeleteCSIResponse::New() const {
  return new DeleteCSIResponse;
}

void DeleteCSIResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteCSIResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSIResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteCSIResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteCSIResponse)
  return false;
#undef DO_
}

void DeleteCSIResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteCSIResponse)
}

::google::protobuf::uint8* DeleteCSIResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteCSIResponse)
  return target;
}

int DeleteCSIResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteCSIResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteCSIResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteCSIResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteCSIResponse::MergeFrom(const DeleteCSIResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteCSIResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCSIResponse::CopyFrom(const DeleteCSIResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCSIResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteCSIResponse::Swap(DeleteCSIResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteCSIResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteCSIResponse_descriptor_;
  metadata.reflection = DeleteCSIResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteCSINVPRequest::kAmfMgmtHandleFieldNumber;
const int DeleteCSINVPRequest::kNameFieldNumber;
const int DeleteCSINVPRequest::kDataFieldNumber;
#endif  // !_MSC_VER

DeleteCSINVPRequest::DeleteCSINVPRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPRequest)
}

void DeleteCSINVPRequest::InitAsDefaultInstance() {
}

DeleteCSINVPRequest::DeleteCSINVPRequest(const DeleteCSINVPRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPRequest)
}

void DeleteCSINVPRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteCSINVPRequest::~DeleteCSINVPRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPRequest)
  SharedDtor();
}

void DeleteCSINVPRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void DeleteCSINVPRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteCSINVPRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteCSINVPRequest_descriptor_;
}

const DeleteCSINVPRequest& DeleteCSINVPRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteCSINVPRequest* DeleteCSINVPRequest::default_instance_ = NULL;

DeleteCSINVPRequest* DeleteCSINVPRequest::New() const {
  return new DeleteCSINVPRequest;
}

void DeleteCSINVPRequest::Clear() {
  _extensions_.Clear();
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  amfmgmthandle_.Clear();
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteCSINVPRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .SAFplus.Rpc.amfMgmtRpc.Data data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPRequest)
  return false;
#undef DO_
}

void DeleteCSINVPRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .SAFplus.Rpc.amfMgmtRpc.Data data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPRequest)
}

::google::protobuf::uint8* DeleteCSINVPRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .SAFplus.Rpc.amfMgmtRpc.Data data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPRequest)
  return target;
}

int DeleteCSINVPRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  // repeated .SAFplus.Rpc.amfMgmtRpc.Data data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteCSINVPRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteCSINVPRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteCSINVPRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteCSINVPRequest::MergeFrom(const DeleteCSINVPRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteCSINVPRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCSINVPRequest::CopyFrom(const DeleteCSINVPRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCSINVPRequest::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteCSINVPRequest::Swap(DeleteCSINVPRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(name_, other->name_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteCSINVPRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteCSINVPRequest_descriptor_;
  metadata.reflection = DeleteCSINVPRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteCSINVPResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteCSINVPResponse::DeleteCSINVPResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPResponse)
}

void DeleteCSINVPResponse::InitAsDefaultInstance() {
}

DeleteCSINVPResponse::DeleteCSINVPResponse(const DeleteCSINVPResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPResponse)
}

void DeleteCSINVPResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteCSINVPResponse::~DeleteCSINVPResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPResponse)
  SharedDtor();
}

void DeleteCSINVPResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteCSINVPResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteCSINVPResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteCSINVPResponse_descriptor_;
}

const DeleteCSINVPResponse& DeleteCSINVPResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteCSINVPResponse* DeleteCSINVPResponse::default_instance_ = NULL;

DeleteCSINVPResponse* DeleteCSINVPResponse::New() const {
  return new DeleteCSINVPResponse;
}

void DeleteCSINVPResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteCSINVPResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPResponse)
  return false;
#undef DO_
}

void DeleteCSINVPResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPResponse)
}

::google::protobuf::uint8* DeleteCSINVPResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteCSINVPResponse)
  return target;
}

int DeleteCSINVPResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteCSINVPResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteCSINVPResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteCSINVPResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteCSINVPResponse::MergeFrom(const DeleteCSINVPResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteCSINVPResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCSINVPResponse::CopyFrom(const DeleteCSINVPResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCSINVPResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteCSINVPResponse::Swap(DeleteCSINVPResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteCSINVPResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteCSINVPResponse_descriptor_;
  metadata.reflection = DeleteCSINVPResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteNodeSUListRequest::kAmfMgmtHandleFieldNumber;
const int DeleteNodeSUListRequest::kNodeNameFieldNumber;
const int DeleteNodeSUListRequest::kSuListFieldNumber;
#endif  // !_MSC_VER

DeleteNodeSUListRequest::DeleteNodeSUListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListRequest)
}

void DeleteNodeSUListRequest::InitAsDefaultInstance() {
}

DeleteNodeSUListRequest::DeleteNodeSUListRequest(const DeleteNodeSUListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListRequest)
}

void DeleteNodeSUListRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteNodeSUListRequest::~DeleteNodeSUListRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListRequest)
  SharedDtor();
}

void DeleteNodeSUListRequest::SharedDtor() {
  if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nodename_;
  }
  if (this != default_instance_) {
  }
}

void DeleteNodeSUListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteNodeSUListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteNodeSUListRequest_descriptor_;
}

const DeleteNodeSUListRequest& DeleteNodeSUListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteNodeSUListRequest* DeleteNodeSUListRequest::default_instance_ = NULL;

DeleteNodeSUListRequest* DeleteNodeSUListRequest::New() const {
  return new DeleteNodeSUListRequest;
}

void DeleteNodeSUListRequest::Clear() {
  _extensions_.Clear();
  if (has_nodename()) {
    if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      nodename_->clear();
    }
  }
  amfmgmthandle_.Clear();
  sulist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteNodeSUListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_nodeName;
        break;
      }

      // optional string nodeName = 2;
      case 2: {
        if (tag == 18) {
         parse_nodeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nodename().data(), this->nodename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nodename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_suList;
        break;
      }

      // repeated string suList = 3;
      case 3: {
        if (tag == 26) {
         parse_suList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_sulist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sulist(this->sulist_size() - 1).data(),
            this->sulist(this->sulist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sulist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_suList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListRequest)
  return false;
#undef DO_
}

void DeleteNodeSUListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  // repeated string suList = 3;
  for (int i = 0; i < this->sulist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->sulist(i).data(), this->sulist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "sulist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sulist(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListRequest)
}

::google::protobuf::uint8* DeleteNodeSUListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  // repeated string suList = 3;
  for (int i = 0; i < this->sulist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sulist(i).data(), this->sulist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sulist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->sulist(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListRequest)
  return target;
}

int DeleteNodeSUListRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string nodeName = 2;
    if (has_nodename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nodename());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  // repeated string suList = 3;
  total_size += 1 * this->sulist_size();
  for (int i = 0; i < this->sulist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->sulist(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteNodeSUListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteNodeSUListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteNodeSUListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteNodeSUListRequest::MergeFrom(const DeleteNodeSUListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  sulist_.MergeFrom(from.sulist_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodename()) {
      set_nodename(from.nodename());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteNodeSUListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNodeSUListRequest::CopyFrom(const DeleteNodeSUListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNodeSUListRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteNodeSUListRequest::Swap(DeleteNodeSUListRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(nodename_, other->nodename_);
    sulist_.Swap(&other->sulist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteNodeSUListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteNodeSUListRequest_descriptor_;
  metadata.reflection = DeleteNodeSUListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteNodeSUListResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteNodeSUListResponse::DeleteNodeSUListResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListResponse)
}

void DeleteNodeSUListResponse::InitAsDefaultInstance() {
}

DeleteNodeSUListResponse::DeleteNodeSUListResponse(const DeleteNodeSUListResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListResponse)
}

void DeleteNodeSUListResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteNodeSUListResponse::~DeleteNodeSUListResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListResponse)
  SharedDtor();
}

void DeleteNodeSUListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteNodeSUListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteNodeSUListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteNodeSUListResponse_descriptor_;
}

const DeleteNodeSUListResponse& DeleteNodeSUListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteNodeSUListResponse* DeleteNodeSUListResponse::default_instance_ = NULL;

DeleteNodeSUListResponse* DeleteNodeSUListResponse::New() const {
  return new DeleteNodeSUListResponse;
}

void DeleteNodeSUListResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteNodeSUListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListResponse)
  return false;
#undef DO_
}

void DeleteNodeSUListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListResponse)
}

::google::protobuf::uint8* DeleteNodeSUListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteNodeSUListResponse)
  return target;
}

int DeleteNodeSUListResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteNodeSUListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteNodeSUListResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteNodeSUListResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteNodeSUListResponse::MergeFrom(const DeleteNodeSUListResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteNodeSUListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteNodeSUListResponse::CopyFrom(const DeleteNodeSUListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteNodeSUListResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteNodeSUListResponse::Swap(DeleteNodeSUListResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteNodeSUListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteNodeSUListResponse_descriptor_;
  metadata.reflection = DeleteNodeSUListResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSGSUListRequest::kAmfMgmtHandleFieldNumber;
const int DeleteSGSUListRequest::kSgNameFieldNumber;
const int DeleteSGSUListRequest::kSuListFieldNumber;
#endif  // !_MSC_VER

DeleteSGSUListRequest::DeleteSGSUListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListRequest)
}

void DeleteSGSUListRequest::InitAsDefaultInstance() {
}

DeleteSGSUListRequest::DeleteSGSUListRequest(const DeleteSGSUListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListRequest)
}

void DeleteSGSUListRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sgname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSGSUListRequest::~DeleteSGSUListRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListRequest)
  SharedDtor();
}

void DeleteSGSUListRequest::SharedDtor() {
  if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sgname_;
  }
  if (this != default_instance_) {
  }
}

void DeleteSGSUListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSGSUListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSGSUListRequest_descriptor_;
}

const DeleteSGSUListRequest& DeleteSGSUListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSGSUListRequest* DeleteSGSUListRequest::default_instance_ = NULL;

DeleteSGSUListRequest* DeleteSGSUListRequest::New() const {
  return new DeleteSGSUListRequest;
}

void DeleteSGSUListRequest::Clear() {
  _extensions_.Clear();
  if (has_sgname()) {
    if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      sgname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  sulist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSGSUListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_sgName;
        break;
      }

      // optional string sgName = 2;
      case 2: {
        if (tag == 18) {
         parse_sgName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sgname().data(), this->sgname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sgname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_suList;
        break;
      }

      // repeated string suList = 3;
      case 3: {
        if (tag == 26) {
         parse_suList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_sulist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sulist(this->sulist_size() - 1).data(),
            this->sulist(this->sulist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sulist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_suList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListRequest)
  return false;
#undef DO_
}

void DeleteSGSUListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgname(), output);
  }

  // repeated string suList = 3;
  for (int i = 0; i < this->sulist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->sulist(i).data(), this->sulist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "sulist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sulist(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListRequest)
}

::google::protobuf::uint8* DeleteSGSUListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sgname(), target);
  }

  // repeated string suList = 3;
  for (int i = 0; i < this->sulist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sulist(i).data(), this->sulist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sulist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->sulist(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListRequest)
  return target;
}

int DeleteSGSUListRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string sgName = 2;
    if (has_sgname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sgname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  // repeated string suList = 3;
  total_size += 1 * this->sulist_size();
  for (int i = 0; i < this->sulist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->sulist(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSGSUListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSGSUListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSGSUListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSGSUListRequest::MergeFrom(const DeleteSGSUListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  sulist_.MergeFrom(from.sulist_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_sgname()) {
      set_sgname(from.sgname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSGSUListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSGSUListRequest::CopyFrom(const DeleteSGSUListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSGSUListRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSGSUListRequest::Swap(DeleteSGSUListRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(sgname_, other->sgname_);
    sulist_.Swap(&other->sulist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSGSUListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSGSUListRequest_descriptor_;
  metadata.reflection = DeleteSGSUListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSGSUListResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteSGSUListResponse::DeleteSGSUListResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListResponse)
}

void DeleteSGSUListResponse::InitAsDefaultInstance() {
}

DeleteSGSUListResponse::DeleteSGSUListResponse(const DeleteSGSUListResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListResponse)
}

void DeleteSGSUListResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSGSUListResponse::~DeleteSGSUListResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListResponse)
  SharedDtor();
}

void DeleteSGSUListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteSGSUListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSGSUListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSGSUListResponse_descriptor_;
}

const DeleteSGSUListResponse& DeleteSGSUListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSGSUListResponse* DeleteSGSUListResponse::default_instance_ = NULL;

DeleteSGSUListResponse* DeleteSGSUListResponse::New() const {
  return new DeleteSGSUListResponse;
}

void DeleteSGSUListResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSGSUListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListResponse)
  return false;
#undef DO_
}

void DeleteSGSUListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListResponse)
}

::google::protobuf::uint8* DeleteSGSUListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGSUListResponse)
  return target;
}

int DeleteSGSUListResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSGSUListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSGSUListResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSGSUListResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSGSUListResponse::MergeFrom(const DeleteSGSUListResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSGSUListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSGSUListResponse::CopyFrom(const DeleteSGSUListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSGSUListResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSGSUListResponse::Swap(DeleteSGSUListResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSGSUListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSGSUListResponse_descriptor_;
  metadata.reflection = DeleteSGSUListResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSGSIListRequest::kAmfMgmtHandleFieldNumber;
const int DeleteSGSIListRequest::kSgNameFieldNumber;
const int DeleteSGSIListRequest::kSiListFieldNumber;
#endif  // !_MSC_VER

DeleteSGSIListRequest::DeleteSGSIListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListRequest)
}

void DeleteSGSIListRequest::InitAsDefaultInstance() {
}

DeleteSGSIListRequest::DeleteSGSIListRequest(const DeleteSGSIListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListRequest)
}

void DeleteSGSIListRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sgname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSGSIListRequest::~DeleteSGSIListRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListRequest)
  SharedDtor();
}

void DeleteSGSIListRequest::SharedDtor() {
  if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sgname_;
  }
  if (this != default_instance_) {
  }
}

void DeleteSGSIListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSGSIListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSGSIListRequest_descriptor_;
}

const DeleteSGSIListRequest& DeleteSGSIListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSGSIListRequest* DeleteSGSIListRequest::default_instance_ = NULL;

DeleteSGSIListRequest* DeleteSGSIListRequest::New() const {
  return new DeleteSGSIListRequest;
}

void DeleteSGSIListRequest::Clear() {
  _extensions_.Clear();
  if (has_sgname()) {
    if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      sgname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  silist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSGSIListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_sgName;
        break;
      }

      // optional string sgName = 2;
      case 2: {
        if (tag == 18) {
         parse_sgName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sgname().data(), this->sgname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sgname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_siList;
        break;
      }

      // repeated string siList = 3;
      case 3: {
        if (tag == 26) {
         parse_siList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_silist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->silist(this->silist_size() - 1).data(),
            this->silist(this->silist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "silist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_siList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListRequest)
  return false;
#undef DO_
}

void DeleteSGSIListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgname(), output);
  }

  // repeated string siList = 3;
  for (int i = 0; i < this->silist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->silist(i).data(), this->silist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "silist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->silist(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListRequest)
}

::google::protobuf::uint8* DeleteSGSIListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sgname(), target);
  }

  // repeated string siList = 3;
  for (int i = 0; i < this->silist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->silist(i).data(), this->silist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "silist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->silist(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListRequest)
  return target;
}

int DeleteSGSIListRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string sgName = 2;
    if (has_sgname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sgname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  // repeated string siList = 3;
  total_size += 1 * this->silist_size();
  for (int i = 0; i < this->silist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->silist(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSGSIListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSGSIListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSGSIListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSGSIListRequest::MergeFrom(const DeleteSGSIListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  silist_.MergeFrom(from.silist_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_sgname()) {
      set_sgname(from.sgname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSGSIListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSGSIListRequest::CopyFrom(const DeleteSGSIListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSGSIListRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSGSIListRequest::Swap(DeleteSGSIListRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(sgname_, other->sgname_);
    silist_.Swap(&other->silist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSGSIListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSGSIListRequest_descriptor_;
  metadata.reflection = DeleteSGSIListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSGSIListResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteSGSIListResponse::DeleteSGSIListResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListResponse)
}

void DeleteSGSIListResponse::InitAsDefaultInstance() {
}

DeleteSGSIListResponse::DeleteSGSIListResponse(const DeleteSGSIListResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListResponse)
}

void DeleteSGSIListResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSGSIListResponse::~DeleteSGSIListResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListResponse)
  SharedDtor();
}

void DeleteSGSIListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteSGSIListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSGSIListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSGSIListResponse_descriptor_;
}

const DeleteSGSIListResponse& DeleteSGSIListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSGSIListResponse* DeleteSGSIListResponse::default_instance_ = NULL;

DeleteSGSIListResponse* DeleteSGSIListResponse::New() const {
  return new DeleteSGSIListResponse;
}

void DeleteSGSIListResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSGSIListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListResponse)
  return false;
#undef DO_
}

void DeleteSGSIListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListResponse)
}

::google::protobuf::uint8* DeleteSGSIListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSGSIListResponse)
  return target;
}

int DeleteSGSIListResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSGSIListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSGSIListResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSGSIListResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSGSIListResponse::MergeFrom(const DeleteSGSIListResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSGSIListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSGSIListResponse::CopyFrom(const DeleteSGSIListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSGSIListResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSGSIListResponse::Swap(DeleteSGSIListResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSGSIListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSGSIListResponse_descriptor_;
  metadata.reflection = DeleteSGSIListResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSUCompListRequest::kAmfMgmtHandleFieldNumber;
const int DeleteSUCompListRequest::kSuNameFieldNumber;
const int DeleteSUCompListRequest::kCompListFieldNumber;
#endif  // !_MSC_VER

DeleteSUCompListRequest::DeleteSUCompListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListRequest)
}

void DeleteSUCompListRequest::InitAsDefaultInstance() {
}

DeleteSUCompListRequest::DeleteSUCompListRequest(const DeleteSUCompListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListRequest)
}

void DeleteSUCompListRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSUCompListRequest::~DeleteSUCompListRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListRequest)
  SharedDtor();
}

void DeleteSUCompListRequest::SharedDtor() {
  if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suname_;
  }
  if (this != default_instance_) {
  }
}

void DeleteSUCompListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSUCompListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSUCompListRequest_descriptor_;
}

const DeleteSUCompListRequest& DeleteSUCompListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSUCompListRequest* DeleteSUCompListRequest::default_instance_ = NULL;

DeleteSUCompListRequest* DeleteSUCompListRequest::New() const {
  return new DeleteSUCompListRequest;
}

void DeleteSUCompListRequest::Clear() {
  _extensions_.Clear();
  if (has_suname()) {
    if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      suname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  complist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSUCompListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_suName;
        break;
      }

      // optional string suName = 2;
      case 2: {
        if (tag == 18) {
         parse_suName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suname().data(), this->suname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_compList;
        break;
      }

      // repeated string compList = 3;
      case 3: {
        if (tag == 26) {
         parse_compList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_complist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->complist(this->complist_size() - 1).data(),
            this->complist(this->complist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "complist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_compList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListRequest)
  return false;
#undef DO_
}

void DeleteSUCompListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suname(), output);
  }

  // repeated string compList = 3;
  for (int i = 0; i < this->complist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->complist(i).data(), this->complist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "complist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->complist(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListRequest)
}

::google::protobuf::uint8* DeleteSUCompListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->suname(), target);
  }

  // repeated string compList = 3;
  for (int i = 0; i < this->complist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->complist(i).data(), this->complist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "complist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->complist(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListRequest)
  return target;
}

int DeleteSUCompListRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string suName = 2;
    if (has_suname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  // repeated string compList = 3;
  total_size += 1 * this->complist_size();
  for (int i = 0; i < this->complist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->complist(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSUCompListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSUCompListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSUCompListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSUCompListRequest::MergeFrom(const DeleteSUCompListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  complist_.MergeFrom(from.complist_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_suname()) {
      set_suname(from.suname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSUCompListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSUCompListRequest::CopyFrom(const DeleteSUCompListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSUCompListRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSUCompListRequest::Swap(DeleteSUCompListRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(suname_, other->suname_);
    complist_.Swap(&other->complist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSUCompListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSUCompListRequest_descriptor_;
  metadata.reflection = DeleteSUCompListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSUCompListResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteSUCompListResponse::DeleteSUCompListResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListResponse)
}

void DeleteSUCompListResponse::InitAsDefaultInstance() {
}

DeleteSUCompListResponse::DeleteSUCompListResponse(const DeleteSUCompListResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListResponse)
}

void DeleteSUCompListResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSUCompListResponse::~DeleteSUCompListResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListResponse)
  SharedDtor();
}

void DeleteSUCompListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteSUCompListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSUCompListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSUCompListResponse_descriptor_;
}

const DeleteSUCompListResponse& DeleteSUCompListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSUCompListResponse* DeleteSUCompListResponse::default_instance_ = NULL;

DeleteSUCompListResponse* DeleteSUCompListResponse::New() const {
  return new DeleteSUCompListResponse;
}

void DeleteSUCompListResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSUCompListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListResponse)
  return false;
#undef DO_
}

void DeleteSUCompListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListResponse)
}

::google::protobuf::uint8* DeleteSUCompListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSUCompListResponse)
  return target;
}

int DeleteSUCompListResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSUCompListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSUCompListResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSUCompListResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSUCompListResponse::MergeFrom(const DeleteSUCompListResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSUCompListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSUCompListResponse::CopyFrom(const DeleteSUCompListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSUCompListResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSUCompListResponse::Swap(DeleteSUCompListResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSUCompListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSUCompListResponse_descriptor_;
  metadata.reflection = DeleteSUCompListResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSICSIListRequest::kAmfMgmtHandleFieldNumber;
const int DeleteSICSIListRequest::kSiNameFieldNumber;
const int DeleteSICSIListRequest::kCsiListFieldNumber;
#endif  // !_MSC_VER

DeleteSICSIListRequest::DeleteSICSIListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListRequest)
}

void DeleteSICSIListRequest::InitAsDefaultInstance() {
}

DeleteSICSIListRequest::DeleteSICSIListRequest(const DeleteSICSIListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListRequest)
}

void DeleteSICSIListRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  siname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSICSIListRequest::~DeleteSICSIListRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListRequest)
  SharedDtor();
}

void DeleteSICSIListRequest::SharedDtor() {
  if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete siname_;
  }
  if (this != default_instance_) {
  }
}

void DeleteSICSIListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSICSIListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSICSIListRequest_descriptor_;
}

const DeleteSICSIListRequest& DeleteSICSIListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSICSIListRequest* DeleteSICSIListRequest::default_instance_ = NULL;

DeleteSICSIListRequest* DeleteSICSIListRequest::New() const {
  return new DeleteSICSIListRequest;
}

void DeleteSICSIListRequest::Clear() {
  _extensions_.Clear();
  if (has_siname()) {
    if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      siname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  csilist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSICSIListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_siName;
        break;
      }

      // optional string siName = 2;
      case 2: {
        if (tag == 18) {
         parse_siName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_siname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->siname().data(), this->siname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "siname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_csiList;
        break;
      }

      // repeated string csiList = 3;
      case 3: {
        if (tag == 26) {
         parse_csiList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_csilist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->csilist(this->csilist_size() - 1).data(),
            this->csilist(this->csilist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "csilist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_csiList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListRequest)
  return false;
#undef DO_
}

void DeleteSICSIListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->siname(), output);
  }

  // repeated string csiList = 3;
  for (int i = 0; i < this->csilist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->csilist(i).data(), this->csilist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "csilist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->csilist(i), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListRequest)
}

::google::protobuf::uint8* DeleteSICSIListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->siname(), target);
  }

  // repeated string csiList = 3;
  for (int i = 0; i < this->csilist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csilist(i).data(), this->csilist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csilist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->csilist(i), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListRequest)
  return target;
}

int DeleteSICSIListRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string siName = 2;
    if (has_siname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->siname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  // repeated string csiList = 3;
  total_size += 1 * this->csilist_size();
  for (int i = 0; i < this->csilist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->csilist(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSICSIListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSICSIListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSICSIListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSICSIListRequest::MergeFrom(const DeleteSICSIListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  csilist_.MergeFrom(from.csilist_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_siname()) {
      set_siname(from.siname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSICSIListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSICSIListRequest::CopyFrom(const DeleteSICSIListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSICSIListRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSICSIListRequest::Swap(DeleteSICSIListRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(siname_, other->siname_);
    csilist_.Swap(&other->csilist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSICSIListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSICSIListRequest_descriptor_;
  metadata.reflection = DeleteSICSIListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteSICSIListResponse::kErrFieldNumber;
#endif  // !_MSC_VER

DeleteSICSIListResponse::DeleteSICSIListResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListResponse)
}

void DeleteSICSIListResponse::InitAsDefaultInstance() {
}

DeleteSICSIListResponse::DeleteSICSIListResponse(const DeleteSICSIListResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListResponse)
}

void DeleteSICSIListResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteSICSIListResponse::~DeleteSICSIListResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListResponse)
  SharedDtor();
}

void DeleteSICSIListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteSICSIListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteSICSIListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteSICSIListResponse_descriptor_;
}

const DeleteSICSIListResponse& DeleteSICSIListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

DeleteSICSIListResponse* DeleteSICSIListResponse::default_instance_ = NULL;

DeleteSICSIListResponse* DeleteSICSIListResponse::New() const {
  return new DeleteSICSIListResponse;
}

void DeleteSICSIListResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteSICSIListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListResponse)
  return false;
#undef DO_
}

void DeleteSICSIListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListResponse)
}

::google::protobuf::uint8* DeleteSICSIListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.DeleteSICSIListResponse)
  return target;
}

int DeleteSICSIListResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteSICSIListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteSICSIListResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteSICSIListResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteSICSIListResponse::MergeFrom(const DeleteSICSIListResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteSICSIListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSICSIListResponse::CopyFrom(const DeleteSICSIListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSICSIListResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void DeleteSICSIListResponse::Swap(DeleteSICSIListResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata DeleteSICSIListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteSICSIListResponse_descriptor_;
  metadata.reflection = DeleteSICSIListResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockNodeAssignmentRequest::kAmfMgmtHandleFieldNumber;
const int LockNodeAssignmentRequest::kNodeNameFieldNumber;
#endif  // !_MSC_VER

LockNodeAssignmentRequest::LockNodeAssignmentRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentRequest)
}

void LockNodeAssignmentRequest::InitAsDefaultInstance() {
}

LockNodeAssignmentRequest::LockNodeAssignmentRequest(const LockNodeAssignmentRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentRequest)
}

void LockNodeAssignmentRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockNodeAssignmentRequest::~LockNodeAssignmentRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentRequest)
  SharedDtor();
}

void LockNodeAssignmentRequest::SharedDtor() {
  if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nodename_;
  }
  if (this != default_instance_) {
  }
}

void LockNodeAssignmentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockNodeAssignmentRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockNodeAssignmentRequest_descriptor_;
}

const LockNodeAssignmentRequest& LockNodeAssignmentRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockNodeAssignmentRequest* LockNodeAssignmentRequest::default_instance_ = NULL;

LockNodeAssignmentRequest* LockNodeAssignmentRequest::New() const {
  return new LockNodeAssignmentRequest;
}

void LockNodeAssignmentRequest::Clear() {
  _extensions_.Clear();
  if (has_nodename()) {
    if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      nodename_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockNodeAssignmentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_nodeName;
        break;
      }

      // optional string nodeName = 2;
      case 2: {
        if (tag == 18) {
         parse_nodeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nodename().data(), this->nodename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nodename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentRequest)
  return false;
#undef DO_
}

void LockNodeAssignmentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentRequest)
}

::google::protobuf::uint8* LockNodeAssignmentRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentRequest)
  return target;
}

int LockNodeAssignmentRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string nodeName = 2;
    if (has_nodename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nodename());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockNodeAssignmentRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockNodeAssignmentRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockNodeAssignmentRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockNodeAssignmentRequest::MergeFrom(const LockNodeAssignmentRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodename()) {
      set_nodename(from.nodename());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockNodeAssignmentRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockNodeAssignmentRequest::CopyFrom(const LockNodeAssignmentRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockNodeAssignmentRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockNodeAssignmentRequest::Swap(LockNodeAssignmentRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(nodename_, other->nodename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockNodeAssignmentRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockNodeAssignmentRequest_descriptor_;
  metadata.reflection = LockNodeAssignmentRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockNodeAssignmentResponse::kErrFieldNumber;
#endif  // !_MSC_VER

LockNodeAssignmentResponse::LockNodeAssignmentResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentResponse)
}

void LockNodeAssignmentResponse::InitAsDefaultInstance() {
}

LockNodeAssignmentResponse::LockNodeAssignmentResponse(const LockNodeAssignmentResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentResponse)
}

void LockNodeAssignmentResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockNodeAssignmentResponse::~LockNodeAssignmentResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentResponse)
  SharedDtor();
}

void LockNodeAssignmentResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LockNodeAssignmentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockNodeAssignmentResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockNodeAssignmentResponse_descriptor_;
}

const LockNodeAssignmentResponse& LockNodeAssignmentResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockNodeAssignmentResponse* LockNodeAssignmentResponse::default_instance_ = NULL;

LockNodeAssignmentResponse* LockNodeAssignmentResponse::New() const {
  return new LockNodeAssignmentResponse;
}

void LockNodeAssignmentResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockNodeAssignmentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentResponse)
  return false;
#undef DO_
}

void LockNodeAssignmentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentResponse)
}

::google::protobuf::uint8* LockNodeAssignmentResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockNodeAssignmentResponse)
  return target;
}

int LockNodeAssignmentResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockNodeAssignmentResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockNodeAssignmentResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockNodeAssignmentResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockNodeAssignmentResponse::MergeFrom(const LockNodeAssignmentResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockNodeAssignmentResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockNodeAssignmentResponse::CopyFrom(const LockNodeAssignmentResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockNodeAssignmentResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockNodeAssignmentResponse::Swap(LockNodeAssignmentResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockNodeAssignmentResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockNodeAssignmentResponse_descriptor_;
  metadata.reflection = LockNodeAssignmentResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockSGAssignmentRequest::kAmfMgmtHandleFieldNumber;
const int LockSGAssignmentRequest::kSgNameFieldNumber;
#endif  // !_MSC_VER

LockSGAssignmentRequest::LockSGAssignmentRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentRequest)
}

void LockSGAssignmentRequest::InitAsDefaultInstance() {
}

LockSGAssignmentRequest::LockSGAssignmentRequest(const LockSGAssignmentRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentRequest)
}

void LockSGAssignmentRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sgname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockSGAssignmentRequest::~LockSGAssignmentRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentRequest)
  SharedDtor();
}

void LockSGAssignmentRequest::SharedDtor() {
  if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sgname_;
  }
  if (this != default_instance_) {
  }
}

void LockSGAssignmentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockSGAssignmentRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockSGAssignmentRequest_descriptor_;
}

const LockSGAssignmentRequest& LockSGAssignmentRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockSGAssignmentRequest* LockSGAssignmentRequest::default_instance_ = NULL;

LockSGAssignmentRequest* LockSGAssignmentRequest::New() const {
  return new LockSGAssignmentRequest;
}

void LockSGAssignmentRequest::Clear() {
  _extensions_.Clear();
  if (has_sgname()) {
    if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      sgname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockSGAssignmentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_sgName;
        break;
      }

      // optional string sgName = 2;
      case 2: {
        if (tag == 18) {
         parse_sgName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sgname().data(), this->sgname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sgname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentRequest)
  return false;
#undef DO_
}

void LockSGAssignmentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentRequest)
}

::google::protobuf::uint8* LockSGAssignmentRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sgname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentRequest)
  return target;
}

int LockSGAssignmentRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string sgName = 2;
    if (has_sgname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sgname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockSGAssignmentRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockSGAssignmentRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockSGAssignmentRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockSGAssignmentRequest::MergeFrom(const LockSGAssignmentRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_sgname()) {
      set_sgname(from.sgname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockSGAssignmentRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockSGAssignmentRequest::CopyFrom(const LockSGAssignmentRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockSGAssignmentRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockSGAssignmentRequest::Swap(LockSGAssignmentRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(sgname_, other->sgname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockSGAssignmentRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockSGAssignmentRequest_descriptor_;
  metadata.reflection = LockSGAssignmentRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockSGAssignmentResponse::kErrFieldNumber;
#endif  // !_MSC_VER

LockSGAssignmentResponse::LockSGAssignmentResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentResponse)
}

void LockSGAssignmentResponse::InitAsDefaultInstance() {
}

LockSGAssignmentResponse::LockSGAssignmentResponse(const LockSGAssignmentResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentResponse)
}

void LockSGAssignmentResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockSGAssignmentResponse::~LockSGAssignmentResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentResponse)
  SharedDtor();
}

void LockSGAssignmentResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LockSGAssignmentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockSGAssignmentResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockSGAssignmentResponse_descriptor_;
}

const LockSGAssignmentResponse& LockSGAssignmentResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockSGAssignmentResponse* LockSGAssignmentResponse::default_instance_ = NULL;

LockSGAssignmentResponse* LockSGAssignmentResponse::New() const {
  return new LockSGAssignmentResponse;
}

void LockSGAssignmentResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockSGAssignmentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentResponse)
  return false;
#undef DO_
}

void LockSGAssignmentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentResponse)
}

::google::protobuf::uint8* LockSGAssignmentResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockSGAssignmentResponse)
  return target;
}

int LockSGAssignmentResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockSGAssignmentResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockSGAssignmentResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockSGAssignmentResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockSGAssignmentResponse::MergeFrom(const LockSGAssignmentResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockSGAssignmentResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockSGAssignmentResponse::CopyFrom(const LockSGAssignmentResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockSGAssignmentResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockSGAssignmentResponse::Swap(LockSGAssignmentResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockSGAssignmentResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockSGAssignmentResponse_descriptor_;
  metadata.reflection = LockSGAssignmentResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockSUAssignmentRequest::kAmfMgmtHandleFieldNumber;
const int LockSUAssignmentRequest::kSuNameFieldNumber;
#endif  // !_MSC_VER

LockSUAssignmentRequest::LockSUAssignmentRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentRequest)
}

void LockSUAssignmentRequest::InitAsDefaultInstance() {
}

LockSUAssignmentRequest::LockSUAssignmentRequest(const LockSUAssignmentRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentRequest)
}

void LockSUAssignmentRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockSUAssignmentRequest::~LockSUAssignmentRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentRequest)
  SharedDtor();
}

void LockSUAssignmentRequest::SharedDtor() {
  if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suname_;
  }
  if (this != default_instance_) {
  }
}

void LockSUAssignmentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockSUAssignmentRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockSUAssignmentRequest_descriptor_;
}

const LockSUAssignmentRequest& LockSUAssignmentRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockSUAssignmentRequest* LockSUAssignmentRequest::default_instance_ = NULL;

LockSUAssignmentRequest* LockSUAssignmentRequest::New() const {
  return new LockSUAssignmentRequest;
}

void LockSUAssignmentRequest::Clear() {
  _extensions_.Clear();
  if (has_suname()) {
    if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      suname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockSUAssignmentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_suName;
        break;
      }

      // optional string suName = 2;
      case 2: {
        if (tag == 18) {
         parse_suName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suname().data(), this->suname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentRequest)
  return false;
#undef DO_
}

void LockSUAssignmentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentRequest)
}

::google::protobuf::uint8* LockSUAssignmentRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->suname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentRequest)
  return target;
}

int LockSUAssignmentRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string suName = 2;
    if (has_suname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockSUAssignmentRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockSUAssignmentRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockSUAssignmentRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockSUAssignmentRequest::MergeFrom(const LockSUAssignmentRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_suname()) {
      set_suname(from.suname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockSUAssignmentRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockSUAssignmentRequest::CopyFrom(const LockSUAssignmentRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockSUAssignmentRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockSUAssignmentRequest::Swap(LockSUAssignmentRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(suname_, other->suname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockSUAssignmentRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockSUAssignmentRequest_descriptor_;
  metadata.reflection = LockSUAssignmentRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockSUAssignmentResponse::kErrFieldNumber;
#endif  // !_MSC_VER

LockSUAssignmentResponse::LockSUAssignmentResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentResponse)
}

void LockSUAssignmentResponse::InitAsDefaultInstance() {
}

LockSUAssignmentResponse::LockSUAssignmentResponse(const LockSUAssignmentResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentResponse)
}

void LockSUAssignmentResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockSUAssignmentResponse::~LockSUAssignmentResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentResponse)
  SharedDtor();
}

void LockSUAssignmentResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LockSUAssignmentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockSUAssignmentResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockSUAssignmentResponse_descriptor_;
}

const LockSUAssignmentResponse& LockSUAssignmentResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockSUAssignmentResponse* LockSUAssignmentResponse::default_instance_ = NULL;

LockSUAssignmentResponse* LockSUAssignmentResponse::New() const {
  return new LockSUAssignmentResponse;
}

void LockSUAssignmentResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockSUAssignmentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentResponse)
  return false;
#undef DO_
}

void LockSUAssignmentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentResponse)
}

::google::protobuf::uint8* LockSUAssignmentResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockSUAssignmentResponse)
  return target;
}

int LockSUAssignmentResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockSUAssignmentResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockSUAssignmentResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockSUAssignmentResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockSUAssignmentResponse::MergeFrom(const LockSUAssignmentResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockSUAssignmentResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockSUAssignmentResponse::CopyFrom(const LockSUAssignmentResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockSUAssignmentResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockSUAssignmentResponse::Swap(LockSUAssignmentResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockSUAssignmentResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockSUAssignmentResponse_descriptor_;
  metadata.reflection = LockSUAssignmentResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockSIAssignmentRequest::kAmfMgmtHandleFieldNumber;
const int LockSIAssignmentRequest::kSiNameFieldNumber;
#endif  // !_MSC_VER

LockSIAssignmentRequest::LockSIAssignmentRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentRequest)
}

void LockSIAssignmentRequest::InitAsDefaultInstance() {
}

LockSIAssignmentRequest::LockSIAssignmentRequest(const LockSIAssignmentRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentRequest)
}

void LockSIAssignmentRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  siname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockSIAssignmentRequest::~LockSIAssignmentRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentRequest)
  SharedDtor();
}

void LockSIAssignmentRequest::SharedDtor() {
  if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete siname_;
  }
  if (this != default_instance_) {
  }
}

void LockSIAssignmentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockSIAssignmentRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockSIAssignmentRequest_descriptor_;
}

const LockSIAssignmentRequest& LockSIAssignmentRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockSIAssignmentRequest* LockSIAssignmentRequest::default_instance_ = NULL;

LockSIAssignmentRequest* LockSIAssignmentRequest::New() const {
  return new LockSIAssignmentRequest;
}

void LockSIAssignmentRequest::Clear() {
  _extensions_.Clear();
  if (has_siname()) {
    if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      siname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockSIAssignmentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_siName;
        break;
      }

      // optional string siName = 2;
      case 2: {
        if (tag == 18) {
         parse_siName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_siname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->siname().data(), this->siname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "siname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentRequest)
  return false;
#undef DO_
}

void LockSIAssignmentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->siname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentRequest)
}

::google::protobuf::uint8* LockSIAssignmentRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->siname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentRequest)
  return target;
}

int LockSIAssignmentRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string siName = 2;
    if (has_siname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->siname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockSIAssignmentRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockSIAssignmentRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockSIAssignmentRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockSIAssignmentRequest::MergeFrom(const LockSIAssignmentRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_siname()) {
      set_siname(from.siname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockSIAssignmentRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockSIAssignmentRequest::CopyFrom(const LockSIAssignmentRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockSIAssignmentRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockSIAssignmentRequest::Swap(LockSIAssignmentRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(siname_, other->siname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockSIAssignmentRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockSIAssignmentRequest_descriptor_;
  metadata.reflection = LockSIAssignmentRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockSIAssignmentResponse::kErrFieldNumber;
#endif  // !_MSC_VER

LockSIAssignmentResponse::LockSIAssignmentResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentResponse)
}

void LockSIAssignmentResponse::InitAsDefaultInstance() {
}

LockSIAssignmentResponse::LockSIAssignmentResponse(const LockSIAssignmentResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentResponse)
}

void LockSIAssignmentResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockSIAssignmentResponse::~LockSIAssignmentResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentResponse)
  SharedDtor();
}

void LockSIAssignmentResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LockSIAssignmentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockSIAssignmentResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockSIAssignmentResponse_descriptor_;
}

const LockSIAssignmentResponse& LockSIAssignmentResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockSIAssignmentResponse* LockSIAssignmentResponse::default_instance_ = NULL;

LockSIAssignmentResponse* LockSIAssignmentResponse::New() const {
  return new LockSIAssignmentResponse;
}

void LockSIAssignmentResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockSIAssignmentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentResponse)
  return false;
#undef DO_
}

void LockSIAssignmentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentResponse)
}

::google::protobuf::uint8* LockSIAssignmentResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockSIAssignmentResponse)
  return target;
}

int LockSIAssignmentResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockSIAssignmentResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockSIAssignmentResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockSIAssignmentResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockSIAssignmentResponse::MergeFrom(const LockSIAssignmentResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockSIAssignmentResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockSIAssignmentResponse::CopyFrom(const LockSIAssignmentResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockSIAssignmentResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockSIAssignmentResponse::Swap(LockSIAssignmentResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockSIAssignmentResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockSIAssignmentResponse_descriptor_;
  metadata.reflection = LockSIAssignmentResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockNodeInstantiationRequest::kAmfMgmtHandleFieldNumber;
const int LockNodeInstantiationRequest::kNodeNameFieldNumber;
#endif  // !_MSC_VER

LockNodeInstantiationRequest::LockNodeInstantiationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationRequest)
}

void LockNodeInstantiationRequest::InitAsDefaultInstance() {
}

LockNodeInstantiationRequest::LockNodeInstantiationRequest(const LockNodeInstantiationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationRequest)
}

void LockNodeInstantiationRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockNodeInstantiationRequest::~LockNodeInstantiationRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationRequest)
  SharedDtor();
}

void LockNodeInstantiationRequest::SharedDtor() {
  if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nodename_;
  }
  if (this != default_instance_) {
  }
}

void LockNodeInstantiationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockNodeInstantiationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockNodeInstantiationRequest_descriptor_;
}

const LockNodeInstantiationRequest& LockNodeInstantiationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockNodeInstantiationRequest* LockNodeInstantiationRequest::default_instance_ = NULL;

LockNodeInstantiationRequest* LockNodeInstantiationRequest::New() const {
  return new LockNodeInstantiationRequest;
}

void LockNodeInstantiationRequest::Clear() {
  _extensions_.Clear();
  if (has_nodename()) {
    if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      nodename_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockNodeInstantiationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_nodeName;
        break;
      }

      // optional string nodeName = 2;
      case 2: {
        if (tag == 18) {
         parse_nodeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nodename().data(), this->nodename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nodename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationRequest)
  return false;
#undef DO_
}

void LockNodeInstantiationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationRequest)
}

::google::protobuf::uint8* LockNodeInstantiationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationRequest)
  return target;
}

int LockNodeInstantiationRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string nodeName = 2;
    if (has_nodename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nodename());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockNodeInstantiationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockNodeInstantiationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockNodeInstantiationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockNodeInstantiationRequest::MergeFrom(const LockNodeInstantiationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodename()) {
      set_nodename(from.nodename());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockNodeInstantiationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockNodeInstantiationRequest::CopyFrom(const LockNodeInstantiationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockNodeInstantiationRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockNodeInstantiationRequest::Swap(LockNodeInstantiationRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(nodename_, other->nodename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockNodeInstantiationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockNodeInstantiationRequest_descriptor_;
  metadata.reflection = LockNodeInstantiationRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockNodeInstantiationResponse::kErrFieldNumber;
#endif  // !_MSC_VER

LockNodeInstantiationResponse::LockNodeInstantiationResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationResponse)
}

void LockNodeInstantiationResponse::InitAsDefaultInstance() {
}

LockNodeInstantiationResponse::LockNodeInstantiationResponse(const LockNodeInstantiationResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationResponse)
}

void LockNodeInstantiationResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockNodeInstantiationResponse::~LockNodeInstantiationResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationResponse)
  SharedDtor();
}

void LockNodeInstantiationResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LockNodeInstantiationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockNodeInstantiationResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockNodeInstantiationResponse_descriptor_;
}

const LockNodeInstantiationResponse& LockNodeInstantiationResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockNodeInstantiationResponse* LockNodeInstantiationResponse::default_instance_ = NULL;

LockNodeInstantiationResponse* LockNodeInstantiationResponse::New() const {
  return new LockNodeInstantiationResponse;
}

void LockNodeInstantiationResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockNodeInstantiationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationResponse)
  return false;
#undef DO_
}

void LockNodeInstantiationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationResponse)
}

::google::protobuf::uint8* LockNodeInstantiationResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockNodeInstantiationResponse)
  return target;
}

int LockNodeInstantiationResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockNodeInstantiationResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockNodeInstantiationResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockNodeInstantiationResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockNodeInstantiationResponse::MergeFrom(const LockNodeInstantiationResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockNodeInstantiationResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockNodeInstantiationResponse::CopyFrom(const LockNodeInstantiationResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockNodeInstantiationResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockNodeInstantiationResponse::Swap(LockNodeInstantiationResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockNodeInstantiationResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockNodeInstantiationResponse_descriptor_;
  metadata.reflection = LockNodeInstantiationResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockSGInstantiationRequest::kAmfMgmtHandleFieldNumber;
const int LockSGInstantiationRequest::kSgNameFieldNumber;
#endif  // !_MSC_VER

LockSGInstantiationRequest::LockSGInstantiationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationRequest)
}

void LockSGInstantiationRequest::InitAsDefaultInstance() {
}

LockSGInstantiationRequest::LockSGInstantiationRequest(const LockSGInstantiationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationRequest)
}

void LockSGInstantiationRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sgname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockSGInstantiationRequest::~LockSGInstantiationRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationRequest)
  SharedDtor();
}

void LockSGInstantiationRequest::SharedDtor() {
  if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sgname_;
  }
  if (this != default_instance_) {
  }
}

void LockSGInstantiationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockSGInstantiationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockSGInstantiationRequest_descriptor_;
}

const LockSGInstantiationRequest& LockSGInstantiationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockSGInstantiationRequest* LockSGInstantiationRequest::default_instance_ = NULL;

LockSGInstantiationRequest* LockSGInstantiationRequest::New() const {
  return new LockSGInstantiationRequest;
}

void LockSGInstantiationRequest::Clear() {
  _extensions_.Clear();
  if (has_sgname()) {
    if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      sgname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockSGInstantiationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_sgName;
        break;
      }

      // optional string sgName = 2;
      case 2: {
        if (tag == 18) {
         parse_sgName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sgname().data(), this->sgname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sgname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationRequest)
  return false;
#undef DO_
}

void LockSGInstantiationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationRequest)
}

::google::protobuf::uint8* LockSGInstantiationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sgname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationRequest)
  return target;
}

int LockSGInstantiationRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string sgName = 2;
    if (has_sgname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sgname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockSGInstantiationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockSGInstantiationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockSGInstantiationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockSGInstantiationRequest::MergeFrom(const LockSGInstantiationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_sgname()) {
      set_sgname(from.sgname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockSGInstantiationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockSGInstantiationRequest::CopyFrom(const LockSGInstantiationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockSGInstantiationRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockSGInstantiationRequest::Swap(LockSGInstantiationRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(sgname_, other->sgname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockSGInstantiationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockSGInstantiationRequest_descriptor_;
  metadata.reflection = LockSGInstantiationRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockSGInstantiationResponse::kErrFieldNumber;
#endif  // !_MSC_VER

LockSGInstantiationResponse::LockSGInstantiationResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationResponse)
}

void LockSGInstantiationResponse::InitAsDefaultInstance() {
}

LockSGInstantiationResponse::LockSGInstantiationResponse(const LockSGInstantiationResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationResponse)
}

void LockSGInstantiationResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockSGInstantiationResponse::~LockSGInstantiationResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationResponse)
  SharedDtor();
}

void LockSGInstantiationResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LockSGInstantiationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockSGInstantiationResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockSGInstantiationResponse_descriptor_;
}

const LockSGInstantiationResponse& LockSGInstantiationResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockSGInstantiationResponse* LockSGInstantiationResponse::default_instance_ = NULL;

LockSGInstantiationResponse* LockSGInstantiationResponse::New() const {
  return new LockSGInstantiationResponse;
}

void LockSGInstantiationResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockSGInstantiationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationResponse)
  return false;
#undef DO_
}

void LockSGInstantiationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationResponse)
}

::google::protobuf::uint8* LockSGInstantiationResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockSGInstantiationResponse)
  return target;
}

int LockSGInstantiationResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockSGInstantiationResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockSGInstantiationResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockSGInstantiationResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockSGInstantiationResponse::MergeFrom(const LockSGInstantiationResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockSGInstantiationResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockSGInstantiationResponse::CopyFrom(const LockSGInstantiationResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockSGInstantiationResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockSGInstantiationResponse::Swap(LockSGInstantiationResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockSGInstantiationResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockSGInstantiationResponse_descriptor_;
  metadata.reflection = LockSGInstantiationResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockSUInstantiationRequest::kAmfMgmtHandleFieldNumber;
const int LockSUInstantiationRequest::kSuNameFieldNumber;
#endif  // !_MSC_VER

LockSUInstantiationRequest::LockSUInstantiationRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationRequest)
}

void LockSUInstantiationRequest::InitAsDefaultInstance() {
}

LockSUInstantiationRequest::LockSUInstantiationRequest(const LockSUInstantiationRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationRequest)
}

void LockSUInstantiationRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockSUInstantiationRequest::~LockSUInstantiationRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationRequest)
  SharedDtor();
}

void LockSUInstantiationRequest::SharedDtor() {
  if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suname_;
  }
  if (this != default_instance_) {
  }
}

void LockSUInstantiationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockSUInstantiationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockSUInstantiationRequest_descriptor_;
}

const LockSUInstantiationRequest& LockSUInstantiationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockSUInstantiationRequest* LockSUInstantiationRequest::default_instance_ = NULL;

LockSUInstantiationRequest* LockSUInstantiationRequest::New() const {
  return new LockSUInstantiationRequest;
}

void LockSUInstantiationRequest::Clear() {
  _extensions_.Clear();
  if (has_suname()) {
    if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      suname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockSUInstantiationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_suName;
        break;
      }

      // optional string suName = 2;
      case 2: {
        if (tag == 18) {
         parse_suName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suname().data(), this->suname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationRequest)
  return false;
#undef DO_
}

void LockSUInstantiationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationRequest)
}

::google::protobuf::uint8* LockSUInstantiationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->suname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationRequest)
  return target;
}

int LockSUInstantiationRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string suName = 2;
    if (has_suname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockSUInstantiationRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockSUInstantiationRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockSUInstantiationRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockSUInstantiationRequest::MergeFrom(const LockSUInstantiationRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_suname()) {
      set_suname(from.suname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockSUInstantiationRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockSUInstantiationRequest::CopyFrom(const LockSUInstantiationRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockSUInstantiationRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockSUInstantiationRequest::Swap(LockSUInstantiationRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(suname_, other->suname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockSUInstantiationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockSUInstantiationRequest_descriptor_;
  metadata.reflection = LockSUInstantiationRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LockSUInstantiationResponse::kErrFieldNumber;
#endif  // !_MSC_VER

LockSUInstantiationResponse::LockSUInstantiationResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationResponse)
}

void LockSUInstantiationResponse::InitAsDefaultInstance() {
}

LockSUInstantiationResponse::LockSUInstantiationResponse(const LockSUInstantiationResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationResponse)
}

void LockSUInstantiationResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LockSUInstantiationResponse::~LockSUInstantiationResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationResponse)
  SharedDtor();
}

void LockSUInstantiationResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LockSUInstantiationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockSUInstantiationResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LockSUInstantiationResponse_descriptor_;
}

const LockSUInstantiationResponse& LockSUInstantiationResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

LockSUInstantiationResponse* LockSUInstantiationResponse::default_instance_ = NULL;

LockSUInstantiationResponse* LockSUInstantiationResponse::New() const {
  return new LockSUInstantiationResponse;
}

void LockSUInstantiationResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LockSUInstantiationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationResponse)
  return false;
#undef DO_
}

void LockSUInstantiationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationResponse)
}

::google::protobuf::uint8* LockSUInstantiationResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.LockSUInstantiationResponse)
  return target;
}

int LockSUInstantiationResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockSUInstantiationResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LockSUInstantiationResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LockSUInstantiationResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LockSUInstantiationResponse::MergeFrom(const LockSUInstantiationResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LockSUInstantiationResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockSUInstantiationResponse::CopyFrom(const LockSUInstantiationResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockSUInstantiationResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void LockSUInstantiationResponse::Swap(LockSUInstantiationResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata LockSUInstantiationResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LockSUInstantiationResponse_descriptor_;
  metadata.reflection = LockSUInstantiationResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnlockNodeRequest::kAmfMgmtHandleFieldNumber;
const int UnlockNodeRequest::kNodeNameFieldNumber;
#endif  // !_MSC_VER

UnlockNodeRequest::UnlockNodeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UnlockNodeRequest)
}

void UnlockNodeRequest::InitAsDefaultInstance() {
}

UnlockNodeRequest::UnlockNodeRequest(const UnlockNodeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UnlockNodeRequest)
}

void UnlockNodeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnlockNodeRequest::~UnlockNodeRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UnlockNodeRequest)
  SharedDtor();
}

void UnlockNodeRequest::SharedDtor() {
  if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nodename_;
  }
  if (this != default_instance_) {
  }
}

void UnlockNodeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockNodeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnlockNodeRequest_descriptor_;
}

const UnlockNodeRequest& UnlockNodeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UnlockNodeRequest* UnlockNodeRequest::default_instance_ = NULL;

UnlockNodeRequest* UnlockNodeRequest::New() const {
  return new UnlockNodeRequest;
}

void UnlockNodeRequest::Clear() {
  _extensions_.Clear();
  if (has_nodename()) {
    if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      nodename_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnlockNodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UnlockNodeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_nodeName;
        break;
      }

      // optional string nodeName = 2;
      case 2: {
        if (tag == 18) {
         parse_nodeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nodename().data(), this->nodename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nodename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UnlockNodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UnlockNodeRequest)
  return false;
#undef DO_
}

void UnlockNodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UnlockNodeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UnlockNodeRequest)
}

::google::protobuf::uint8* UnlockNodeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UnlockNodeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UnlockNodeRequest)
  return target;
}

int UnlockNodeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string nodeName = 2;
    if (has_nodename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nodename());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockNodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnlockNodeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnlockNodeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnlockNodeRequest::MergeFrom(const UnlockNodeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodename()) {
      set_nodename(from.nodename());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnlockNodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockNodeRequest::CopyFrom(const UnlockNodeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockNodeRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UnlockNodeRequest::Swap(UnlockNodeRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(nodename_, other->nodename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UnlockNodeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnlockNodeRequest_descriptor_;
  metadata.reflection = UnlockNodeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnlockNodeResponse::kErrFieldNumber;
#endif  // !_MSC_VER

UnlockNodeResponse::UnlockNodeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UnlockNodeResponse)
}

void UnlockNodeResponse::InitAsDefaultInstance() {
}

UnlockNodeResponse::UnlockNodeResponse(const UnlockNodeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UnlockNodeResponse)
}

void UnlockNodeResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnlockNodeResponse::~UnlockNodeResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UnlockNodeResponse)
  SharedDtor();
}

void UnlockNodeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnlockNodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockNodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnlockNodeResponse_descriptor_;
}

const UnlockNodeResponse& UnlockNodeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UnlockNodeResponse* UnlockNodeResponse::default_instance_ = NULL;

UnlockNodeResponse* UnlockNodeResponse::New() const {
  return new UnlockNodeResponse;
}

void UnlockNodeResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnlockNodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UnlockNodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UnlockNodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UnlockNodeResponse)
  return false;
#undef DO_
}

void UnlockNodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UnlockNodeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UnlockNodeResponse)
}

::google::protobuf::uint8* UnlockNodeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UnlockNodeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UnlockNodeResponse)
  return target;
}

int UnlockNodeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockNodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnlockNodeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnlockNodeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnlockNodeResponse::MergeFrom(const UnlockNodeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnlockNodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockNodeResponse::CopyFrom(const UnlockNodeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockNodeResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UnlockNodeResponse::Swap(UnlockNodeResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UnlockNodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnlockNodeResponse_descriptor_;
  metadata.reflection = UnlockNodeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnlockSGRequest::kAmfMgmtHandleFieldNumber;
const int UnlockSGRequest::kSgNameFieldNumber;
#endif  // !_MSC_VER

UnlockSGRequest::UnlockSGRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSGRequest)
}

void UnlockSGRequest::InitAsDefaultInstance() {
}

UnlockSGRequest::UnlockSGRequest(const UnlockSGRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSGRequest)
}

void UnlockSGRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sgname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnlockSGRequest::~UnlockSGRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UnlockSGRequest)
  SharedDtor();
}

void UnlockSGRequest::SharedDtor() {
  if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sgname_;
  }
  if (this != default_instance_) {
  }
}

void UnlockSGRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockSGRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnlockSGRequest_descriptor_;
}

const UnlockSGRequest& UnlockSGRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UnlockSGRequest* UnlockSGRequest::default_instance_ = NULL;

UnlockSGRequest* UnlockSGRequest::New() const {
  return new UnlockSGRequest;
}

void UnlockSGRequest::Clear() {
  _extensions_.Clear();
  if (has_sgname()) {
    if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      sgname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnlockSGRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UnlockSGRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_sgName;
        break;
      }

      // optional string sgName = 2;
      case 2: {
        if (tag == 18) {
         parse_sgName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sgname().data(), this->sgname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sgname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UnlockSGRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UnlockSGRequest)
  return false;
#undef DO_
}

void UnlockSGRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UnlockSGRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UnlockSGRequest)
}

::google::protobuf::uint8* UnlockSGRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UnlockSGRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sgname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UnlockSGRequest)
  return target;
}

int UnlockSGRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string sgName = 2;
    if (has_sgname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sgname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockSGRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnlockSGRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnlockSGRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnlockSGRequest::MergeFrom(const UnlockSGRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_sgname()) {
      set_sgname(from.sgname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnlockSGRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockSGRequest::CopyFrom(const UnlockSGRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockSGRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UnlockSGRequest::Swap(UnlockSGRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(sgname_, other->sgname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UnlockSGRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnlockSGRequest_descriptor_;
  metadata.reflection = UnlockSGRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnlockSGResponse::kErrFieldNumber;
#endif  // !_MSC_VER

UnlockSGResponse::UnlockSGResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSGResponse)
}

void UnlockSGResponse::InitAsDefaultInstance() {
}

UnlockSGResponse::UnlockSGResponse(const UnlockSGResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSGResponse)
}

void UnlockSGResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnlockSGResponse::~UnlockSGResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UnlockSGResponse)
  SharedDtor();
}

void UnlockSGResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnlockSGResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockSGResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnlockSGResponse_descriptor_;
}

const UnlockSGResponse& UnlockSGResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UnlockSGResponse* UnlockSGResponse::default_instance_ = NULL;

UnlockSGResponse* UnlockSGResponse::New() const {
  return new UnlockSGResponse;
}

void UnlockSGResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnlockSGResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UnlockSGResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UnlockSGResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UnlockSGResponse)
  return false;
#undef DO_
}

void UnlockSGResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UnlockSGResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UnlockSGResponse)
}

::google::protobuf::uint8* UnlockSGResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UnlockSGResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UnlockSGResponse)
  return target;
}

int UnlockSGResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockSGResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnlockSGResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnlockSGResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnlockSGResponse::MergeFrom(const UnlockSGResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnlockSGResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockSGResponse::CopyFrom(const UnlockSGResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockSGResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UnlockSGResponse::Swap(UnlockSGResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UnlockSGResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnlockSGResponse_descriptor_;
  metadata.reflection = UnlockSGResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnlockSURequest::kAmfMgmtHandleFieldNumber;
const int UnlockSURequest::kSuNameFieldNumber;
#endif  // !_MSC_VER

UnlockSURequest::UnlockSURequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSURequest)
}

void UnlockSURequest::InitAsDefaultInstance() {
}

UnlockSURequest::UnlockSURequest(const UnlockSURequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSURequest)
}

void UnlockSURequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnlockSURequest::~UnlockSURequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UnlockSURequest)
  SharedDtor();
}

void UnlockSURequest::SharedDtor() {
  if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suname_;
  }
  if (this != default_instance_) {
  }
}

void UnlockSURequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockSURequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnlockSURequest_descriptor_;
}

const UnlockSURequest& UnlockSURequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UnlockSURequest* UnlockSURequest::default_instance_ = NULL;

UnlockSURequest* UnlockSURequest::New() const {
  return new UnlockSURequest;
}

void UnlockSURequest::Clear() {
  _extensions_.Clear();
  if (has_suname()) {
    if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      suname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnlockSURequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UnlockSURequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_suName;
        break;
      }

      // optional string suName = 2;
      case 2: {
        if (tag == 18) {
         parse_suName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suname().data(), this->suname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UnlockSURequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UnlockSURequest)
  return false;
#undef DO_
}

void UnlockSURequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UnlockSURequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UnlockSURequest)
}

::google::protobuf::uint8* UnlockSURequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UnlockSURequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->suname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UnlockSURequest)
  return target;
}

int UnlockSURequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string suName = 2;
    if (has_suname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockSURequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnlockSURequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnlockSURequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnlockSURequest::MergeFrom(const UnlockSURequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_suname()) {
      set_suname(from.suname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnlockSURequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockSURequest::CopyFrom(const UnlockSURequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockSURequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UnlockSURequest::Swap(UnlockSURequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(suname_, other->suname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UnlockSURequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnlockSURequest_descriptor_;
  metadata.reflection = UnlockSURequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnlockSUResponse::kErrFieldNumber;
#endif  // !_MSC_VER

UnlockSUResponse::UnlockSUResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSUResponse)
}

void UnlockSUResponse::InitAsDefaultInstance() {
}

UnlockSUResponse::UnlockSUResponse(const UnlockSUResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSUResponse)
}

void UnlockSUResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnlockSUResponse::~UnlockSUResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UnlockSUResponse)
  SharedDtor();
}

void UnlockSUResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnlockSUResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockSUResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnlockSUResponse_descriptor_;
}

const UnlockSUResponse& UnlockSUResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UnlockSUResponse* UnlockSUResponse::default_instance_ = NULL;

UnlockSUResponse* UnlockSUResponse::New() const {
  return new UnlockSUResponse;
}

void UnlockSUResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnlockSUResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UnlockSUResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UnlockSUResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UnlockSUResponse)
  return false;
#undef DO_
}

void UnlockSUResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UnlockSUResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UnlockSUResponse)
}

::google::protobuf::uint8* UnlockSUResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UnlockSUResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UnlockSUResponse)
  return target;
}

int UnlockSUResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockSUResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnlockSUResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnlockSUResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnlockSUResponse::MergeFrom(const UnlockSUResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnlockSUResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockSUResponse::CopyFrom(const UnlockSUResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockSUResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UnlockSUResponse::Swap(UnlockSUResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UnlockSUResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnlockSUResponse_descriptor_;
  metadata.reflection = UnlockSUResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnlockSIRequest::kAmfMgmtHandleFieldNumber;
const int UnlockSIRequest::kSiNameFieldNumber;
#endif  // !_MSC_VER

UnlockSIRequest::UnlockSIRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSIRequest)
}

void UnlockSIRequest::InitAsDefaultInstance() {
}

UnlockSIRequest::UnlockSIRequest(const UnlockSIRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSIRequest)
}

void UnlockSIRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  siname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnlockSIRequest::~UnlockSIRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UnlockSIRequest)
  SharedDtor();
}

void UnlockSIRequest::SharedDtor() {
  if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete siname_;
  }
  if (this != default_instance_) {
  }
}

void UnlockSIRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockSIRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnlockSIRequest_descriptor_;
}

const UnlockSIRequest& UnlockSIRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UnlockSIRequest* UnlockSIRequest::default_instance_ = NULL;

UnlockSIRequest* UnlockSIRequest::New() const {
  return new UnlockSIRequest;
}

void UnlockSIRequest::Clear() {
  _extensions_.Clear();
  if (has_siname()) {
    if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      siname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnlockSIRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UnlockSIRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_siName;
        break;
      }

      // optional string siName = 2;
      case 2: {
        if (tag == 18) {
         parse_siName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_siname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->siname().data(), this->siname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "siname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UnlockSIRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UnlockSIRequest)
  return false;
#undef DO_
}

void UnlockSIRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UnlockSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->siname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UnlockSIRequest)
}

::google::protobuf::uint8* UnlockSIRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UnlockSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->siname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UnlockSIRequest)
  return target;
}

int UnlockSIRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string siName = 2;
    if (has_siname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->siname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockSIRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnlockSIRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnlockSIRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnlockSIRequest::MergeFrom(const UnlockSIRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_siname()) {
      set_siname(from.siname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnlockSIRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockSIRequest::CopyFrom(const UnlockSIRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockSIRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UnlockSIRequest::Swap(UnlockSIRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(siname_, other->siname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UnlockSIRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnlockSIRequest_descriptor_;
  metadata.reflection = UnlockSIRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnlockSIResponse::kErrFieldNumber;
#endif  // !_MSC_VER

UnlockSIResponse::UnlockSIResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSIResponse)
}

void UnlockSIResponse::InitAsDefaultInstance() {
}

UnlockSIResponse::UnlockSIResponse(const UnlockSIResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.UnlockSIResponse)
}

void UnlockSIResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnlockSIResponse::~UnlockSIResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.UnlockSIResponse)
  SharedDtor();
}

void UnlockSIResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnlockSIResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockSIResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnlockSIResponse_descriptor_;
}

const UnlockSIResponse& UnlockSIResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

UnlockSIResponse* UnlockSIResponse::default_instance_ = NULL;

UnlockSIResponse* UnlockSIResponse::New() const {
  return new UnlockSIResponse;
}

void UnlockSIResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnlockSIResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.UnlockSIResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.UnlockSIResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.UnlockSIResponse)
  return false;
#undef DO_
}

void UnlockSIResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.UnlockSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.UnlockSIResponse)
}

::google::protobuf::uint8* UnlockSIResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.UnlockSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.UnlockSIResponse)
  return target;
}

int UnlockSIResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockSIResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnlockSIResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnlockSIResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnlockSIResponse::MergeFrom(const UnlockSIResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnlockSIResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockSIResponse::CopyFrom(const UnlockSIResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockSIResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void UnlockSIResponse::Swap(UnlockSIResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata UnlockSIResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnlockSIResponse_descriptor_;
  metadata.reflection = UnlockSIResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RepairNodeRequest::kAmfMgmtHandleFieldNumber;
const int RepairNodeRequest::kNodeNameFieldNumber;
#endif  // !_MSC_VER

RepairNodeRequest::RepairNodeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.RepairNodeRequest)
}

void RepairNodeRequest::InitAsDefaultInstance() {
}

RepairNodeRequest::RepairNodeRequest(const RepairNodeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.RepairNodeRequest)
}

void RepairNodeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RepairNodeRequest::~RepairNodeRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.RepairNodeRequest)
  SharedDtor();
}

void RepairNodeRequest::SharedDtor() {
  if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nodename_;
  }
  if (this != default_instance_) {
  }
}

void RepairNodeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepairNodeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RepairNodeRequest_descriptor_;
}

const RepairNodeRequest& RepairNodeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

RepairNodeRequest* RepairNodeRequest::default_instance_ = NULL;

RepairNodeRequest* RepairNodeRequest::New() const {
  return new RepairNodeRequest;
}

void RepairNodeRequest::Clear() {
  _extensions_.Clear();
  if (has_nodename()) {
    if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      nodename_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RepairNodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.RepairNodeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_nodeName;
        break;
      }

      // optional string nodeName = 2;
      case 2: {
        if (tag == 18) {
         parse_nodeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nodename().data(), this->nodename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nodename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.RepairNodeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.RepairNodeRequest)
  return false;
#undef DO_
}

void RepairNodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.RepairNodeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.RepairNodeRequest)
}

::google::protobuf::uint8* RepairNodeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.RepairNodeRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.RepairNodeRequest)
  return target;
}

int RepairNodeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string nodeName = 2;
    if (has_nodename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nodename());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepairNodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RepairNodeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RepairNodeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RepairNodeRequest::MergeFrom(const RepairNodeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodename()) {
      set_nodename(from.nodename());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RepairNodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepairNodeRequest::CopyFrom(const RepairNodeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepairNodeRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void RepairNodeRequest::Swap(RepairNodeRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(nodename_, other->nodename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata RepairNodeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RepairNodeRequest_descriptor_;
  metadata.reflection = RepairNodeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RepairNodeResponse::kErrFieldNumber;
#endif  // !_MSC_VER

RepairNodeResponse::RepairNodeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.RepairNodeResponse)
}

void RepairNodeResponse::InitAsDefaultInstance() {
}

RepairNodeResponse::RepairNodeResponse(const RepairNodeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.RepairNodeResponse)
}

void RepairNodeResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RepairNodeResponse::~RepairNodeResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.RepairNodeResponse)
  SharedDtor();
}

void RepairNodeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RepairNodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepairNodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RepairNodeResponse_descriptor_;
}

const RepairNodeResponse& RepairNodeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

RepairNodeResponse* RepairNodeResponse::default_instance_ = NULL;

RepairNodeResponse* RepairNodeResponse::New() const {
  return new RepairNodeResponse;
}

void RepairNodeResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RepairNodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.RepairNodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.RepairNodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.RepairNodeResponse)
  return false;
#undef DO_
}

void RepairNodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.RepairNodeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.RepairNodeResponse)
}

::google::protobuf::uint8* RepairNodeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.RepairNodeResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.RepairNodeResponse)
  return target;
}

int RepairNodeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepairNodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RepairNodeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RepairNodeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RepairNodeResponse::MergeFrom(const RepairNodeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RepairNodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepairNodeResponse::CopyFrom(const RepairNodeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepairNodeResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void RepairNodeResponse::Swap(RepairNodeResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata RepairNodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RepairNodeResponse_descriptor_;
  metadata.reflection = RepairNodeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RepairComponentRequest::kAmfMgmtHandleFieldNumber;
const int RepairComponentRequest::kCompNameFieldNumber;
#endif  // !_MSC_VER

RepairComponentRequest::RepairComponentRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.RepairComponentRequest)
}

void RepairComponentRequest::InitAsDefaultInstance() {
}

RepairComponentRequest::RepairComponentRequest(const RepairComponentRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.RepairComponentRequest)
}

void RepairComponentRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  compname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RepairComponentRequest::~RepairComponentRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.RepairComponentRequest)
  SharedDtor();
}

void RepairComponentRequest::SharedDtor() {
  if (compname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete compname_;
  }
  if (this != default_instance_) {
  }
}

void RepairComponentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepairComponentRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RepairComponentRequest_descriptor_;
}

const RepairComponentRequest& RepairComponentRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

RepairComponentRequest* RepairComponentRequest::default_instance_ = NULL;

RepairComponentRequest* RepairComponentRequest::New() const {
  return new RepairComponentRequest;
}

void RepairComponentRequest::Clear() {
  _extensions_.Clear();
  if (has_compname()) {
    if (compname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      compname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RepairComponentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.RepairComponentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_compName;
        break;
      }

      // optional string compName = 2;
      case 2: {
        if (tag == 18) {
         parse_compName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->compname().data(), this->compname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "compname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.RepairComponentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.RepairComponentRequest)
  return false;
#undef DO_
}

void RepairComponentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.RepairComponentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string compName = 2;
  if (has_compname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compname().data(), this->compname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->compname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.RepairComponentRequest)
}

::google::protobuf::uint8* RepairComponentRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.RepairComponentRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string compName = 2;
  if (has_compname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compname().data(), this->compname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->compname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.RepairComponentRequest)
  return target;
}

int RepairComponentRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string compName = 2;
    if (has_compname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->compname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepairComponentRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RepairComponentRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RepairComponentRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RepairComponentRequest::MergeFrom(const RepairComponentRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_compname()) {
      set_compname(from.compname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RepairComponentRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepairComponentRequest::CopyFrom(const RepairComponentRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepairComponentRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void RepairComponentRequest::Swap(RepairComponentRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(compname_, other->compname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata RepairComponentRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RepairComponentRequest_descriptor_;
  metadata.reflection = RepairComponentRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RepairComponentResponse::kErrFieldNumber;
#endif  // !_MSC_VER

RepairComponentResponse::RepairComponentResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.RepairComponentResponse)
}

void RepairComponentResponse::InitAsDefaultInstance() {
}

RepairComponentResponse::RepairComponentResponse(const RepairComponentResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.RepairComponentResponse)
}

void RepairComponentResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RepairComponentResponse::~RepairComponentResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.RepairComponentResponse)
  SharedDtor();
}

void RepairComponentResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RepairComponentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepairComponentResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RepairComponentResponse_descriptor_;
}

const RepairComponentResponse& RepairComponentResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

RepairComponentResponse* RepairComponentResponse::default_instance_ = NULL;

RepairComponentResponse* RepairComponentResponse::New() const {
  return new RepairComponentResponse;
}

void RepairComponentResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RepairComponentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.RepairComponentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.RepairComponentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.RepairComponentResponse)
  return false;
#undef DO_
}

void RepairComponentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.RepairComponentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.RepairComponentResponse)
}

::google::protobuf::uint8* RepairComponentResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.RepairComponentResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.RepairComponentResponse)
  return target;
}

int RepairComponentResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepairComponentResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RepairComponentResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RepairComponentResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RepairComponentResponse::MergeFrom(const RepairComponentResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RepairComponentResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepairComponentResponse::CopyFrom(const RepairComponentResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepairComponentResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void RepairComponentResponse::Swap(RepairComponentResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata RepairComponentResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RepairComponentResponse_descriptor_;
  metadata.reflection = RepairComponentResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RepairSURequest::kAmfMgmtHandleFieldNumber;
const int RepairSURequest::kSuNameFieldNumber;
#endif  // !_MSC_VER

RepairSURequest::RepairSURequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.RepairSURequest)
}

void RepairSURequest::InitAsDefaultInstance() {
}

RepairSURequest::RepairSURequest(const RepairSURequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.RepairSURequest)
}

void RepairSURequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RepairSURequest::~RepairSURequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.RepairSURequest)
  SharedDtor();
}

void RepairSURequest::SharedDtor() {
  if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suname_;
  }
  if (this != default_instance_) {
  }
}

void RepairSURequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepairSURequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RepairSURequest_descriptor_;
}

const RepairSURequest& RepairSURequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

RepairSURequest* RepairSURequest::default_instance_ = NULL;

RepairSURequest* RepairSURequest::New() const {
  return new RepairSURequest;
}

void RepairSURequest::Clear() {
  _extensions_.Clear();
  if (has_suname()) {
    if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      suname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RepairSURequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.RepairSURequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_suName;
        break;
      }

      // optional string suName = 2;
      case 2: {
        if (tag == 18) {
         parse_suName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suname().data(), this->suname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.RepairSURequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.RepairSURequest)
  return false;
#undef DO_
}

void RepairSURequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.RepairSURequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.RepairSURequest)
}

::google::protobuf::uint8* RepairSURequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.RepairSURequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->suname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.RepairSURequest)
  return target;
}

int RepairSURequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string suName = 2;
    if (has_suname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepairSURequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RepairSURequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RepairSURequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RepairSURequest::MergeFrom(const RepairSURequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_suname()) {
      set_suname(from.suname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RepairSURequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepairSURequest::CopyFrom(const RepairSURequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepairSURequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void RepairSURequest::Swap(RepairSURequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(suname_, other->suname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata RepairSURequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RepairSURequest_descriptor_;
  metadata.reflection = RepairSURequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RepairSUResponse::kErrFieldNumber;
#endif  // !_MSC_VER

RepairSUResponse::RepairSUResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.RepairSUResponse)
}

void RepairSUResponse::InitAsDefaultInstance() {
}

RepairSUResponse::RepairSUResponse(const RepairSUResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.RepairSUResponse)
}

void RepairSUResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RepairSUResponse::~RepairSUResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.RepairSUResponse)
  SharedDtor();
}

void RepairSUResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RepairSUResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RepairSUResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RepairSUResponse_descriptor_;
}

const RepairSUResponse& RepairSUResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

RepairSUResponse* RepairSUResponse::default_instance_ = NULL;

RepairSUResponse* RepairSUResponse::New() const {
  return new RepairSUResponse;
}

void RepairSUResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RepairSUResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.RepairSUResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.RepairSUResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.RepairSUResponse)
  return false;
#undef DO_
}

void RepairSUResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.RepairSUResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.RepairSUResponse)
}

::google::protobuf::uint8* RepairSUResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.RepairSUResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.RepairSUResponse)
  return target;
}

int RepairSUResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RepairSUResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RepairSUResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RepairSUResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RepairSUResponse::MergeFrom(const RepairSUResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RepairSUResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepairSUResponse::CopyFrom(const RepairSUResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepairSUResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void RepairSUResponse::Swap(RepairSUResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata RepairSUResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RepairSUResponse_descriptor_;
  metadata.reflection = RepairSUResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetComponentConfigRequest::kAmfMgmtHandleFieldNumber;
const int GetComponentConfigRequest::kCompNameFieldNumber;
#endif  // !_MSC_VER

GetComponentConfigRequest::GetComponentConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigRequest)
}

void GetComponentConfigRequest::InitAsDefaultInstance() {
}

GetComponentConfigRequest::GetComponentConfigRequest(const GetComponentConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigRequest)
}

void GetComponentConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  compname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetComponentConfigRequest::~GetComponentConfigRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigRequest)
  SharedDtor();
}

void GetComponentConfigRequest::SharedDtor() {
  if (compname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete compname_;
  }
  if (this != default_instance_) {
  }
}

void GetComponentConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetComponentConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetComponentConfigRequest_descriptor_;
}

const GetComponentConfigRequest& GetComponentConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetComponentConfigRequest* GetComponentConfigRequest::default_instance_ = NULL;

GetComponentConfigRequest* GetComponentConfigRequest::New() const {
  return new GetComponentConfigRequest;
}

void GetComponentConfigRequest::Clear() {
  _extensions_.Clear();
  if (has_compname()) {
    if (compname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      compname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetComponentConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_compName;
        break;
      }

      // optional string compName = 2;
      case 2: {
        if (tag == 18) {
         parse_compName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->compname().data(), this->compname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "compname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigRequest)
  return false;
#undef DO_
}

void GetComponentConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string compName = 2;
  if (has_compname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compname().data(), this->compname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->compname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigRequest)
}

::google::protobuf::uint8* GetComponentConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string compName = 2;
  if (has_compname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compname().data(), this->compname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->compname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigRequest)
  return target;
}

int GetComponentConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string compName = 2;
    if (has_compname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->compname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetComponentConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetComponentConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetComponentConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetComponentConfigRequest::MergeFrom(const GetComponentConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_compname()) {
      set_compname(from.compname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetComponentConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetComponentConfigRequest::CopyFrom(const GetComponentConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetComponentConfigRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetComponentConfigRequest::Swap(GetComponentConfigRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(compname_, other->compname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetComponentConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetComponentConfigRequest_descriptor_;
  metadata.reflection = GetComponentConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetComponentConfigResponse::kComponentConfigFieldNumber;
const int GetComponentConfigResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetComponentConfigResponse::GetComponentConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigResponse)
}

void GetComponentConfigResponse::InitAsDefaultInstance() {
  componentconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ComponentConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ComponentConfig::default_instance());
}

GetComponentConfigResponse::GetComponentConfigResponse(const GetComponentConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigResponse)
}

void GetComponentConfigResponse::SharedCtor() {
  _cached_size_ = 0;
  componentconfig_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetComponentConfigResponse::~GetComponentConfigResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigResponse)
  SharedDtor();
}

void GetComponentConfigResponse::SharedDtor() {
  if (this != default_instance_) {
    delete componentconfig_;
  }
}

void GetComponentConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetComponentConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetComponentConfigResponse_descriptor_;
}

const GetComponentConfigResponse& GetComponentConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetComponentConfigResponse* GetComponentConfigResponse::default_instance_ = NULL;

GetComponentConfigResponse* GetComponentConfigResponse::New() const {
  return new GetComponentConfigResponse;
}

void GetComponentConfigResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_componentconfig()) {
      if (componentconfig_ != NULL) componentconfig_->::SAFplus::Rpc::amfMgmtRpc::ComponentConfig::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetComponentConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_componentconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigResponse)
  return false;
#undef DO_
}

void GetComponentConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 1;
  if (has_componentconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->componentconfig(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigResponse)
}

::google::protobuf::uint8* GetComponentConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 1;
  if (has_componentconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->componentconfig(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetComponentConfigResponse)
  return target;
}

int GetComponentConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ComponentConfig ComponentConfig = 1;
    if (has_componentconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->componentconfig());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetComponentConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetComponentConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetComponentConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetComponentConfigResponse::MergeFrom(const GetComponentConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_componentconfig()) {
      mutable_componentconfig()->::SAFplus::Rpc::amfMgmtRpc::ComponentConfig::MergeFrom(from.componentconfig());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetComponentConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetComponentConfigResponse::CopyFrom(const GetComponentConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetComponentConfigResponse::IsInitialized() const {

  if (has_componentconfig()) {
    if (!this->componentconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetComponentConfigResponse::Swap(GetComponentConfigResponse* other) {
  if (other != this) {
    std::swap(componentconfig_, other->componentconfig_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetComponentConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetComponentConfigResponse_descriptor_;
  metadata.reflection = GetComponentConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetNodeConfigRequest::kAmfMgmtHandleFieldNumber;
const int GetNodeConfigRequest::kNodeNameFieldNumber;
#endif  // !_MSC_VER

GetNodeConfigRequest::GetNodeConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigRequest)
}

void GetNodeConfigRequest::InitAsDefaultInstance() {
}

GetNodeConfigRequest::GetNodeConfigRequest(const GetNodeConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigRequest)
}

void GetNodeConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNodeConfigRequest::~GetNodeConfigRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigRequest)
  SharedDtor();
}

void GetNodeConfigRequest::SharedDtor() {
  if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nodename_;
  }
  if (this != default_instance_) {
  }
}

void GetNodeConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNodeConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNodeConfigRequest_descriptor_;
}

const GetNodeConfigRequest& GetNodeConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetNodeConfigRequest* GetNodeConfigRequest::default_instance_ = NULL;

GetNodeConfigRequest* GetNodeConfigRequest::New() const {
  return new GetNodeConfigRequest;
}

void GetNodeConfigRequest::Clear() {
  _extensions_.Clear();
  if (has_nodename()) {
    if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      nodename_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNodeConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_nodeName;
        break;
      }

      // optional string nodeName = 2;
      case 2: {
        if (tag == 18) {
         parse_nodeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nodename().data(), this->nodename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nodename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigRequest)
  return false;
#undef DO_
}

void GetNodeConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigRequest)
}

::google::protobuf::uint8* GetNodeConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigRequest)
  return target;
}

int GetNodeConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string nodeName = 2;
    if (has_nodename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nodename());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNodeConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNodeConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNodeConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNodeConfigRequest::MergeFrom(const GetNodeConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodename()) {
      set_nodename(from.nodename());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNodeConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNodeConfigRequest::CopyFrom(const GetNodeConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNodeConfigRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetNodeConfigRequest::Swap(GetNodeConfigRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(nodename_, other->nodename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetNodeConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNodeConfigRequest_descriptor_;
  metadata.reflection = GetNodeConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetNodeConfigResponse::kNodeConfigFieldNumber;
const int GetNodeConfigResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetNodeConfigResponse::GetNodeConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigResponse)
}

void GetNodeConfigResponse::InitAsDefaultInstance() {
  nodeconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NodeConfig*>(&::SAFplus::Rpc::amfMgmtRpc::NodeConfig::default_instance());
}

GetNodeConfigResponse::GetNodeConfigResponse(const GetNodeConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigResponse)
}

void GetNodeConfigResponse::SharedCtor() {
  _cached_size_ = 0;
  nodeconfig_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNodeConfigResponse::~GetNodeConfigResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigResponse)
  SharedDtor();
}

void GetNodeConfigResponse::SharedDtor() {
  if (this != default_instance_) {
    delete nodeconfig_;
  }
}

void GetNodeConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNodeConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNodeConfigResponse_descriptor_;
}

const GetNodeConfigResponse& GetNodeConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetNodeConfigResponse* GetNodeConfigResponse::default_instance_ = NULL;

GetNodeConfigResponse* GetNodeConfigResponse::New() const {
  return new GetNodeConfigResponse;
}

void GetNodeConfigResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_nodeconfig()) {
      if (nodeconfig_ != NULL) nodeconfig_->::SAFplus::Rpc::amfMgmtRpc::NodeConfig::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNodeConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nodeconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigResponse)
  return false;
#undef DO_
}

void GetNodeConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 1;
  if (has_nodeconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodeconfig(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigResponse)
}

::google::protobuf::uint8* GetNodeConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 1;
  if (has_nodeconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->nodeconfig(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetNodeConfigResponse)
  return target;
}

int GetNodeConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.NodeConfig NodeConfig = 1;
    if (has_nodeconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodeconfig());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNodeConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNodeConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNodeConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNodeConfigResponse::MergeFrom(const GetNodeConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeconfig()) {
      mutable_nodeconfig()->::SAFplus::Rpc::amfMgmtRpc::NodeConfig::MergeFrom(from.nodeconfig());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNodeConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNodeConfigResponse::CopyFrom(const GetNodeConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNodeConfigResponse::IsInitialized() const {

  if (has_nodeconfig()) {
    if (!this->nodeconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetNodeConfigResponse::Swap(GetNodeConfigResponse* other) {
  if (other != this) {
    std::swap(nodeconfig_, other->nodeconfig_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetNodeConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNodeConfigResponse_descriptor_;
  metadata.reflection = GetNodeConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSUConfigRequest::kAmfMgmtHandleFieldNumber;
const int GetSUConfigRequest::kSuNameFieldNumber;
#endif  // !_MSC_VER

GetSUConfigRequest::GetSUConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSUConfigRequest)
}

void GetSUConfigRequest::InitAsDefaultInstance() {
}

GetSUConfigRequest::GetSUConfigRequest(const GetSUConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSUConfigRequest)
}

void GetSUConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSUConfigRequest::~GetSUConfigRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSUConfigRequest)
  SharedDtor();
}

void GetSUConfigRequest::SharedDtor() {
  if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suname_;
  }
  if (this != default_instance_) {
  }
}

void GetSUConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSUConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSUConfigRequest_descriptor_;
}

const GetSUConfigRequest& GetSUConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSUConfigRequest* GetSUConfigRequest::default_instance_ = NULL;

GetSUConfigRequest* GetSUConfigRequest::New() const {
  return new GetSUConfigRequest;
}

void GetSUConfigRequest::Clear() {
  _extensions_.Clear();
  if (has_suname()) {
    if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      suname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSUConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSUConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_suName;
        break;
      }

      // optional string suName = 2;
      case 2: {
        if (tag == 18) {
         parse_suName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suname().data(), this->suname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSUConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSUConfigRequest)
  return false;
#undef DO_
}

void GetSUConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSUConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSUConfigRequest)
}

::google::protobuf::uint8* GetSUConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSUConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->suname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSUConfigRequest)
  return target;
}

int GetSUConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string suName = 2;
    if (has_suname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSUConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSUConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSUConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSUConfigRequest::MergeFrom(const GetSUConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_suname()) {
      set_suname(from.suname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSUConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSUConfigRequest::CopyFrom(const GetSUConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSUConfigRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSUConfigRequest::Swap(GetSUConfigRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(suname_, other->suname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSUConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSUConfigRequest_descriptor_;
  metadata.reflection = GetSUConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSUConfigResponse::kServiceUnitConfigFieldNumber;
const int GetSUConfigResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetSUConfigResponse::GetSUConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSUConfigResponse)
}

void GetSUConfigResponse::InitAsDefaultInstance() {
  serviceunitconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig::default_instance());
}

GetSUConfigResponse::GetSUConfigResponse(const GetSUConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSUConfigResponse)
}

void GetSUConfigResponse::SharedCtor() {
  _cached_size_ = 0;
  serviceunitconfig_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSUConfigResponse::~GetSUConfigResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSUConfigResponse)
  SharedDtor();
}

void GetSUConfigResponse::SharedDtor() {
  if (this != default_instance_) {
    delete serviceunitconfig_;
  }
}

void GetSUConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSUConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSUConfigResponse_descriptor_;
}

const GetSUConfigResponse& GetSUConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSUConfigResponse* GetSUConfigResponse::default_instance_ = NULL;

GetSUConfigResponse* GetSUConfigResponse::New() const {
  return new GetSUConfigResponse;
}

void GetSUConfigResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_serviceunitconfig()) {
      if (serviceunitconfig_ != NULL) serviceunitconfig_->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSUConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSUConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serviceunitconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSUConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSUConfigResponse)
  return false;
#undef DO_
}

void GetSUConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSUConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 1;
  if (has_serviceunitconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->serviceunitconfig(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSUConfigResponse)
}

::google::protobuf::uint8* GetSUConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSUConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 1;
  if (has_serviceunitconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->serviceunitconfig(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSUConfigResponse)
  return target;
}

int GetSUConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitConfig ServiceUnitConfig = 1;
    if (has_serviceunitconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serviceunitconfig());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSUConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSUConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSUConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSUConfigResponse::MergeFrom(const GetSUConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serviceunitconfig()) {
      mutable_serviceunitconfig()->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitConfig::MergeFrom(from.serviceunitconfig());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSUConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSUConfigResponse::CopyFrom(const GetSUConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSUConfigResponse::IsInitialized() const {

  if (has_serviceunitconfig()) {
    if (!this->serviceunitconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSUConfigResponse::Swap(GetSUConfigResponse* other) {
  if (other != this) {
    std::swap(serviceunitconfig_, other->serviceunitconfig_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSUConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSUConfigResponse_descriptor_;
  metadata.reflection = GetSUConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSGConfigRequest::kAmfMgmtHandleFieldNumber;
const int GetSGConfigRequest::kSgNameFieldNumber;
#endif  // !_MSC_VER

GetSGConfigRequest::GetSGConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSGConfigRequest)
}

void GetSGConfigRequest::InitAsDefaultInstance() {
}

GetSGConfigRequest::GetSGConfigRequest(const GetSGConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSGConfigRequest)
}

void GetSGConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sgname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSGConfigRequest::~GetSGConfigRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSGConfigRequest)
  SharedDtor();
}

void GetSGConfigRequest::SharedDtor() {
  if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sgname_;
  }
  if (this != default_instance_) {
  }
}

void GetSGConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSGConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSGConfigRequest_descriptor_;
}

const GetSGConfigRequest& GetSGConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSGConfigRequest* GetSGConfigRequest::default_instance_ = NULL;

GetSGConfigRequest* GetSGConfigRequest::New() const {
  return new GetSGConfigRequest;
}

void GetSGConfigRequest::Clear() {
  _extensions_.Clear();
  if (has_sgname()) {
    if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      sgname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSGConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSGConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_sgName;
        break;
      }

      // optional string sgName = 2;
      case 2: {
        if (tag == 18) {
         parse_sgName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sgname().data(), this->sgname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sgname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSGConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSGConfigRequest)
  return false;
#undef DO_
}

void GetSGConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSGConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSGConfigRequest)
}

::google::protobuf::uint8* GetSGConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSGConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sgname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSGConfigRequest)
  return target;
}

int GetSGConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string sgName = 2;
    if (has_sgname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sgname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSGConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSGConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSGConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSGConfigRequest::MergeFrom(const GetSGConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_sgname()) {
      set_sgname(from.sgname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSGConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSGConfigRequest::CopyFrom(const GetSGConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSGConfigRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSGConfigRequest::Swap(GetSGConfigRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(sgname_, other->sgname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSGConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSGConfigRequest_descriptor_;
  metadata.reflection = GetSGConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSGConfigResponse::kServiceGroupConfigFieldNumber;
const int GetSGConfigResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetSGConfigResponse::GetSGConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSGConfigResponse)
}

void GetSGConfigResponse::InitAsDefaultInstance() {
  servicegroupconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig::default_instance());
}

GetSGConfigResponse::GetSGConfigResponse(const GetSGConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSGConfigResponse)
}

void GetSGConfigResponse::SharedCtor() {
  _cached_size_ = 0;
  servicegroupconfig_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSGConfigResponse::~GetSGConfigResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSGConfigResponse)
  SharedDtor();
}

void GetSGConfigResponse::SharedDtor() {
  if (this != default_instance_) {
    delete servicegroupconfig_;
  }
}

void GetSGConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSGConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSGConfigResponse_descriptor_;
}

const GetSGConfigResponse& GetSGConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSGConfigResponse* GetSGConfigResponse::default_instance_ = NULL;

GetSGConfigResponse* GetSGConfigResponse::New() const {
  return new GetSGConfigResponse;
}

void GetSGConfigResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_servicegroupconfig()) {
      if (servicegroupconfig_ != NULL) servicegroupconfig_->::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSGConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSGConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_servicegroupconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSGConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSGConfigResponse)
  return false;
#undef DO_
}

void GetSGConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSGConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 1;
  if (has_servicegroupconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->servicegroupconfig(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSGConfigResponse)
}

::google::protobuf::uint8* GetSGConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSGConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 1;
  if (has_servicegroupconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->servicegroupconfig(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSGConfigResponse)
  return target;
}

int GetSGConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupConfig ServiceGroupConfig = 1;
    if (has_servicegroupconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->servicegroupconfig());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSGConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSGConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSGConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSGConfigResponse::MergeFrom(const GetSGConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_servicegroupconfig()) {
      mutable_servicegroupconfig()->::SAFplus::Rpc::amfMgmtRpc::ServiceGroupConfig::MergeFrom(from.servicegroupconfig());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSGConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSGConfigResponse::CopyFrom(const GetSGConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSGConfigResponse::IsInitialized() const {

  if (has_servicegroupconfig()) {
    if (!this->servicegroupconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSGConfigResponse::Swap(GetSGConfigResponse* other) {
  if (other != this) {
    std::swap(servicegroupconfig_, other->servicegroupconfig_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSGConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSGConfigResponse_descriptor_;
  metadata.reflection = GetSGConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSIConfigRequest::kAmfMgmtHandleFieldNumber;
const int GetSIConfigRequest::kSiNameFieldNumber;
#endif  // !_MSC_VER

GetSIConfigRequest::GetSIConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSIConfigRequest)
}

void GetSIConfigRequest::InitAsDefaultInstance() {
}

GetSIConfigRequest::GetSIConfigRequest(const GetSIConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSIConfigRequest)
}

void GetSIConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  siname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSIConfigRequest::~GetSIConfigRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSIConfigRequest)
  SharedDtor();
}

void GetSIConfigRequest::SharedDtor() {
  if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete siname_;
  }
  if (this != default_instance_) {
  }
}

void GetSIConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSIConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSIConfigRequest_descriptor_;
}

const GetSIConfigRequest& GetSIConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSIConfigRequest* GetSIConfigRequest::default_instance_ = NULL;

GetSIConfigRequest* GetSIConfigRequest::New() const {
  return new GetSIConfigRequest;
}

void GetSIConfigRequest::Clear() {
  _extensions_.Clear();
  if (has_siname()) {
    if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      siname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSIConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSIConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_siName;
        break;
      }

      // optional string siName = 2;
      case 2: {
        if (tag == 18) {
         parse_siName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_siname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->siname().data(), this->siname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "siname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSIConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSIConfigRequest)
  return false;
#undef DO_
}

void GetSIConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSIConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->siname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSIConfigRequest)
}

::google::protobuf::uint8* GetSIConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSIConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->siname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSIConfigRequest)
  return target;
}

int GetSIConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string siName = 2;
    if (has_siname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->siname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSIConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSIConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSIConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSIConfigRequest::MergeFrom(const GetSIConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_siname()) {
      set_siname(from.siname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSIConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSIConfigRequest::CopyFrom(const GetSIConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSIConfigRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSIConfigRequest::Swap(GetSIConfigRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(siname_, other->siname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSIConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSIConfigRequest_descriptor_;
  metadata.reflection = GetSIConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSIConfigResponse::kServiceInstanceConfigFieldNumber;
const int GetSIConfigResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetSIConfigResponse::GetSIConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSIConfigResponse)
}

void GetSIConfigResponse::InitAsDefaultInstance() {
  serviceinstanceconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig::default_instance());
}

GetSIConfigResponse::GetSIConfigResponse(const GetSIConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSIConfigResponse)
}

void GetSIConfigResponse::SharedCtor() {
  _cached_size_ = 0;
  serviceinstanceconfig_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSIConfigResponse::~GetSIConfigResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSIConfigResponse)
  SharedDtor();
}

void GetSIConfigResponse::SharedDtor() {
  if (this != default_instance_) {
    delete serviceinstanceconfig_;
  }
}

void GetSIConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSIConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSIConfigResponse_descriptor_;
}

const GetSIConfigResponse& GetSIConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSIConfigResponse* GetSIConfigResponse::default_instance_ = NULL;

GetSIConfigResponse* GetSIConfigResponse::New() const {
  return new GetSIConfigResponse;
}

void GetSIConfigResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_serviceinstanceconfig()) {
      if (serviceinstanceconfig_ != NULL) serviceinstanceconfig_->::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSIConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSIConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serviceinstanceconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSIConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSIConfigResponse)
  return false;
#undef DO_
}

void GetSIConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSIConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 1;
  if (has_serviceinstanceconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->serviceinstanceconfig(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSIConfigResponse)
}

::google::protobuf::uint8* GetSIConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSIConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 1;
  if (has_serviceinstanceconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->serviceinstanceconfig(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSIConfigResponse)
  return target;
}

int GetSIConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceConfig ServiceInstanceConfig = 1;
    if (has_serviceinstanceconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serviceinstanceconfig());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSIConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSIConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSIConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSIConfigResponse::MergeFrom(const GetSIConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serviceinstanceconfig()) {
      mutable_serviceinstanceconfig()->::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceConfig::MergeFrom(from.serviceinstanceconfig());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSIConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSIConfigResponse::CopyFrom(const GetSIConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSIConfigResponse::IsInitialized() const {

  if (has_serviceinstanceconfig()) {
    if (!this->serviceinstanceconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSIConfigResponse::Swap(GetSIConfigResponse* other) {
  if (other != this) {
    std::swap(serviceinstanceconfig_, other->serviceinstanceconfig_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSIConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSIConfigResponse_descriptor_;
  metadata.reflection = GetSIConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetCSIConfigRequest::kAmfMgmtHandleFieldNumber;
const int GetCSIConfigRequest::kCsiNameFieldNumber;
#endif  // !_MSC_VER

GetCSIConfigRequest::GetCSIConfigRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigRequest)
}

void GetCSIConfigRequest::InitAsDefaultInstance() {
}

GetCSIConfigRequest::GetCSIConfigRequest(const GetCSIConfigRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigRequest)
}

void GetCSIConfigRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  csiname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetCSIConfigRequest::~GetCSIConfigRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigRequest)
  SharedDtor();
}

void GetCSIConfigRequest::SharedDtor() {
  if (csiname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete csiname_;
  }
  if (this != default_instance_) {
  }
}

void GetCSIConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCSIConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCSIConfigRequest_descriptor_;
}

const GetCSIConfigRequest& GetCSIConfigRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetCSIConfigRequest* GetCSIConfigRequest::default_instance_ = NULL;

GetCSIConfigRequest* GetCSIConfigRequest::New() const {
  return new GetCSIConfigRequest;
}

void GetCSIConfigRequest::Clear() {
  _extensions_.Clear();
  if (has_csiname()) {
    if (csiname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      csiname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetCSIConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_csiName;
        break;
      }

      // optional string csiName = 2;
      case 2: {
        if (tag == 18) {
         parse_csiName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_csiname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->csiname().data(), this->csiname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "csiname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigRequest)
  return false;
#undef DO_
}

void GetCSIConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string csiName = 2;
  if (has_csiname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csiname().data(), this->csiname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csiname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->csiname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigRequest)
}

::google::protobuf::uint8* GetCSIConfigRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string csiName = 2;
  if (has_csiname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csiname().data(), this->csiname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csiname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->csiname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigRequest)
  return target;
}

int GetCSIConfigRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string csiName = 2;
    if (has_csiname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->csiname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCSIConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetCSIConfigRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetCSIConfigRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetCSIConfigRequest::MergeFrom(const GetCSIConfigRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_csiname()) {
      set_csiname(from.csiname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetCSIConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCSIConfigRequest::CopyFrom(const GetCSIConfigRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCSIConfigRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetCSIConfigRequest::Swap(GetCSIConfigRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(csiname_, other->csiname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetCSIConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCSIConfigRequest_descriptor_;
  metadata.reflection = GetCSIConfigRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetCSIConfigResponse::kComponentServiceInstanceConfigFieldNumber;
const int GetCSIConfigResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetCSIConfigResponse::GetCSIConfigResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigResponse)
}

void GetCSIConfigResponse::InitAsDefaultInstance() {
  componentserviceinstanceconfig_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig*>(&::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig::default_instance());
}

GetCSIConfigResponse::GetCSIConfigResponse(const GetCSIConfigResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigResponse)
}

void GetCSIConfigResponse::SharedCtor() {
  _cached_size_ = 0;
  componentserviceinstanceconfig_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetCSIConfigResponse::~GetCSIConfigResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigResponse)
  SharedDtor();
}

void GetCSIConfigResponse::SharedDtor() {
  if (this != default_instance_) {
    delete componentserviceinstanceconfig_;
  }
}

void GetCSIConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCSIConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCSIConfigResponse_descriptor_;
}

const GetCSIConfigResponse& GetCSIConfigResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetCSIConfigResponse* GetCSIConfigResponse::default_instance_ = NULL;

GetCSIConfigResponse* GetCSIConfigResponse::New() const {
  return new GetCSIConfigResponse;
}

void GetCSIConfigResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_componentserviceinstanceconfig()) {
      if (componentserviceinstanceconfig_ != NULL) componentserviceinstanceconfig_->::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetCSIConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_componentserviceinstanceconfig()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigResponse)
  return false;
#undef DO_
}

void GetCSIConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 1;
  if (has_componentserviceinstanceconfig()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->componentserviceinstanceconfig(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigResponse)
}

::google::protobuf::uint8* GetCSIConfigResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 1;
  if (has_componentserviceinstanceconfig()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->componentserviceinstanceconfig(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetCSIConfigResponse)
  return target;
}

int GetCSIConfigResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceConfig ComponentServiceInstanceConfig = 1;
    if (has_componentserviceinstanceconfig()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->componentserviceinstanceconfig());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCSIConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetCSIConfigResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetCSIConfigResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetCSIConfigResponse::MergeFrom(const GetCSIConfigResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_componentserviceinstanceconfig()) {
      mutable_componentserviceinstanceconfig()->::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceConfig::MergeFrom(from.componentserviceinstanceconfig());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetCSIConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCSIConfigResponse::CopyFrom(const GetCSIConfigResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCSIConfigResponse::IsInitialized() const {

  if (has_componentserviceinstanceconfig()) {
    if (!this->componentserviceinstanceconfig().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetCSIConfigResponse::Swap(GetCSIConfigResponse* other) {
  if (other != this) {
    std::swap(componentserviceinstanceconfig_, other->componentserviceinstanceconfig_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetCSIConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCSIConfigResponse_descriptor_;
  metadata.reflection = GetCSIConfigResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetComponentStatusRequest::kAmfMgmtHandleFieldNumber;
const int GetComponentStatusRequest::kCompNameFieldNumber;
#endif  // !_MSC_VER

GetComponentStatusRequest::GetComponentStatusRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusRequest)
}

void GetComponentStatusRequest::InitAsDefaultInstance() {
}

GetComponentStatusRequest::GetComponentStatusRequest(const GetComponentStatusRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusRequest)
}

void GetComponentStatusRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  compname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetComponentStatusRequest::~GetComponentStatusRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusRequest)
  SharedDtor();
}

void GetComponentStatusRequest::SharedDtor() {
  if (compname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete compname_;
  }
  if (this != default_instance_) {
  }
}

void GetComponentStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetComponentStatusRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetComponentStatusRequest_descriptor_;
}

const GetComponentStatusRequest& GetComponentStatusRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetComponentStatusRequest* GetComponentStatusRequest::default_instance_ = NULL;

GetComponentStatusRequest* GetComponentStatusRequest::New() const {
  return new GetComponentStatusRequest;
}

void GetComponentStatusRequest::Clear() {
  _extensions_.Clear();
  if (has_compname()) {
    if (compname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      compname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetComponentStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_compName;
        break;
      }

      // optional string compName = 2;
      case 2: {
        if (tag == 18) {
         parse_compName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->compname().data(), this->compname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "compname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusRequest)
  return false;
#undef DO_
}

void GetComponentStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string compName = 2;
  if (has_compname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compname().data(), this->compname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->compname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusRequest)
}

::google::protobuf::uint8* GetComponentStatusRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string compName = 2;
  if (has_compname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compname().data(), this->compname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->compname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusRequest)
  return target;
}

int GetComponentStatusRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string compName = 2;
    if (has_compname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->compname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetComponentStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetComponentStatusRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetComponentStatusRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetComponentStatusRequest::MergeFrom(const GetComponentStatusRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_compname()) {
      set_compname(from.compname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetComponentStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetComponentStatusRequest::CopyFrom(const GetComponentStatusRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetComponentStatusRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetComponentStatusRequest::Swap(GetComponentStatusRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(compname_, other->compname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetComponentStatusRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetComponentStatusRequest_descriptor_;
  metadata.reflection = GetComponentStatusRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetComponentStatusResponse::kComponentStatusFieldNumber;
const int GetComponentStatusResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetComponentStatusResponse::GetComponentStatusResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusResponse)
}

void GetComponentStatusResponse::InitAsDefaultInstance() {
  componentstatus_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ComponentStatus*>(&::SAFplus::Rpc::amfMgmtRpc::ComponentStatus::default_instance());
}

GetComponentStatusResponse::GetComponentStatusResponse(const GetComponentStatusResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusResponse)
}

void GetComponentStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  componentstatus_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetComponentStatusResponse::~GetComponentStatusResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusResponse)
  SharedDtor();
}

void GetComponentStatusResponse::SharedDtor() {
  if (this != default_instance_) {
    delete componentstatus_;
  }
}

void GetComponentStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetComponentStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetComponentStatusResponse_descriptor_;
}

const GetComponentStatusResponse& GetComponentStatusResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetComponentStatusResponse* GetComponentStatusResponse::default_instance_ = NULL;

GetComponentStatusResponse* GetComponentStatusResponse::New() const {
  return new GetComponentStatusResponse;
}

void GetComponentStatusResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_componentstatus()) {
      if (componentstatus_ != NULL) componentstatus_->::SAFplus::Rpc::amfMgmtRpc::ComponentStatus::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetComponentStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.ComponentStatus ComponentStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_componentstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusResponse)
  return false;
#undef DO_
}

void GetComponentStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentStatus ComponentStatus = 1;
  if (has_componentstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->componentstatus(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusResponse)
}

::google::protobuf::uint8* GetComponentStatusResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentStatus ComponentStatus = 1;
  if (has_componentstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->componentstatus(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetComponentStatusResponse)
  return target;
}

int GetComponentStatusResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ComponentStatus ComponentStatus = 1;
    if (has_componentstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->componentstatus());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetComponentStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetComponentStatusResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetComponentStatusResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetComponentStatusResponse::MergeFrom(const GetComponentStatusResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_componentstatus()) {
      mutable_componentstatus()->::SAFplus::Rpc::amfMgmtRpc::ComponentStatus::MergeFrom(from.componentstatus());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetComponentStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetComponentStatusResponse::CopyFrom(const GetComponentStatusResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetComponentStatusResponse::IsInitialized() const {

  if (has_componentstatus()) {
    if (!this->componentstatus().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetComponentStatusResponse::Swap(GetComponentStatusResponse* other) {
  if (other != this) {
    std::swap(componentstatus_, other->componentstatus_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetComponentStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetComponentStatusResponse_descriptor_;
  metadata.reflection = GetComponentStatusResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetNodeStatusRequest::kAmfMgmtHandleFieldNumber;
const int GetNodeStatusRequest::kNodeNameFieldNumber;
#endif  // !_MSC_VER

GetNodeStatusRequest::GetNodeStatusRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusRequest)
}

void GetNodeStatusRequest::InitAsDefaultInstance() {
}

GetNodeStatusRequest::GetNodeStatusRequest(const GetNodeStatusRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusRequest)
}

void GetNodeStatusRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNodeStatusRequest::~GetNodeStatusRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusRequest)
  SharedDtor();
}

void GetNodeStatusRequest::SharedDtor() {
  if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nodename_;
  }
  if (this != default_instance_) {
  }
}

void GetNodeStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNodeStatusRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNodeStatusRequest_descriptor_;
}

const GetNodeStatusRequest& GetNodeStatusRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetNodeStatusRequest* GetNodeStatusRequest::default_instance_ = NULL;

GetNodeStatusRequest* GetNodeStatusRequest::New() const {
  return new GetNodeStatusRequest;
}

void GetNodeStatusRequest::Clear() {
  _extensions_.Clear();
  if (has_nodename()) {
    if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      nodename_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNodeStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_nodeName;
        break;
      }

      // optional string nodeName = 2;
      case 2: {
        if (tag == 18) {
         parse_nodeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nodename().data(), this->nodename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nodename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusRequest)
  return false;
#undef DO_
}

void GetNodeStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusRequest)
}

::google::protobuf::uint8* GetNodeStatusRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusRequest)
  return target;
}

int GetNodeStatusRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string nodeName = 2;
    if (has_nodename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nodename());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNodeStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNodeStatusRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNodeStatusRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNodeStatusRequest::MergeFrom(const GetNodeStatusRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodename()) {
      set_nodename(from.nodename());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNodeStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNodeStatusRequest::CopyFrom(const GetNodeStatusRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNodeStatusRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetNodeStatusRequest::Swap(GetNodeStatusRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(nodename_, other->nodename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetNodeStatusRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNodeStatusRequest_descriptor_;
  metadata.reflection = GetNodeStatusRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetNodeStatusResponse::kNodeStatusFieldNumber;
const int GetNodeStatusResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetNodeStatusResponse::GetNodeStatusResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusResponse)
}

void GetNodeStatusResponse::InitAsDefaultInstance() {
  nodestatus_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::NodeStatus*>(&::SAFplus::Rpc::amfMgmtRpc::NodeStatus::default_instance());
}

GetNodeStatusResponse::GetNodeStatusResponse(const GetNodeStatusResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusResponse)
}

void GetNodeStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  nodestatus_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetNodeStatusResponse::~GetNodeStatusResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusResponse)
  SharedDtor();
}

void GetNodeStatusResponse::SharedDtor() {
  if (this != default_instance_) {
    delete nodestatus_;
  }
}

void GetNodeStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetNodeStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetNodeStatusResponse_descriptor_;
}

const GetNodeStatusResponse& GetNodeStatusResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetNodeStatusResponse* GetNodeStatusResponse::default_instance_ = NULL;

GetNodeStatusResponse* GetNodeStatusResponse::New() const {
  return new GetNodeStatusResponse;
}

void GetNodeStatusResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_nodestatus()) {
      if (nodestatus_ != NULL) nodestatus_->::SAFplus::Rpc::amfMgmtRpc::NodeStatus::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetNodeStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.NodeStatus NodeStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nodestatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusResponse)
  return false;
#undef DO_
}

void GetNodeStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.NodeStatus NodeStatus = 1;
  if (has_nodestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodestatus(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusResponse)
}

::google::protobuf::uint8* GetNodeStatusResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.NodeStatus NodeStatus = 1;
  if (has_nodestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->nodestatus(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetNodeStatusResponse)
  return target;
}

int GetNodeStatusResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.NodeStatus NodeStatus = 1;
    if (has_nodestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nodestatus());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetNodeStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetNodeStatusResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetNodeStatusResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetNodeStatusResponse::MergeFrom(const GetNodeStatusResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodestatus()) {
      mutable_nodestatus()->::SAFplus::Rpc::amfMgmtRpc::NodeStatus::MergeFrom(from.nodestatus());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetNodeStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetNodeStatusResponse::CopyFrom(const GetNodeStatusResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetNodeStatusResponse::IsInitialized() const {

  if (has_nodestatus()) {
    if (!this->nodestatus().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetNodeStatusResponse::Swap(GetNodeStatusResponse* other) {
  if (other != this) {
    std::swap(nodestatus_, other->nodestatus_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetNodeStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetNodeStatusResponse_descriptor_;
  metadata.reflection = GetNodeStatusResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSUStatusRequest::kAmfMgmtHandleFieldNumber;
const int GetSUStatusRequest::kSuNameFieldNumber;
#endif  // !_MSC_VER

GetSUStatusRequest::GetSUStatusRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSUStatusRequest)
}

void GetSUStatusRequest::InitAsDefaultInstance() {
}

GetSUStatusRequest::GetSUStatusRequest(const GetSUStatusRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSUStatusRequest)
}

void GetSUStatusRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSUStatusRequest::~GetSUStatusRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSUStatusRequest)
  SharedDtor();
}

void GetSUStatusRequest::SharedDtor() {
  if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suname_;
  }
  if (this != default_instance_) {
  }
}

void GetSUStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSUStatusRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSUStatusRequest_descriptor_;
}

const GetSUStatusRequest& GetSUStatusRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSUStatusRequest* GetSUStatusRequest::default_instance_ = NULL;

GetSUStatusRequest* GetSUStatusRequest::New() const {
  return new GetSUStatusRequest;
}

void GetSUStatusRequest::Clear() {
  _extensions_.Clear();
  if (has_suname()) {
    if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      suname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSUStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSUStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_suName;
        break;
      }

      // optional string suName = 2;
      case 2: {
        if (tag == 18) {
         parse_suName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suname().data(), this->suname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSUStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSUStatusRequest)
  return false;
#undef DO_
}

void GetSUStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSUStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSUStatusRequest)
}

::google::protobuf::uint8* GetSUStatusRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSUStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->suname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSUStatusRequest)
  return target;
}

int GetSUStatusRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string suName = 2;
    if (has_suname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSUStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSUStatusRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSUStatusRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSUStatusRequest::MergeFrom(const GetSUStatusRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_suname()) {
      set_suname(from.suname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSUStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSUStatusRequest::CopyFrom(const GetSUStatusRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSUStatusRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSUStatusRequest::Swap(GetSUStatusRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(suname_, other->suname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSUStatusRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSUStatusRequest_descriptor_;
  metadata.reflection = GetSUStatusRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSUStatusResponse::kServiceUnitStatusFieldNumber;
const int GetSUStatusResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetSUStatusResponse::GetSUStatusResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSUStatusResponse)
}

void GetSUStatusResponse::InitAsDefaultInstance() {
  serviceunitstatus_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitStatus*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceUnitStatus::default_instance());
}

GetSUStatusResponse::GetSUStatusResponse(const GetSUStatusResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSUStatusResponse)
}

void GetSUStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  serviceunitstatus_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSUStatusResponse::~GetSUStatusResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSUStatusResponse)
  SharedDtor();
}

void GetSUStatusResponse::SharedDtor() {
  if (this != default_instance_) {
    delete serviceunitstatus_;
  }
}

void GetSUStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSUStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSUStatusResponse_descriptor_;
}

const GetSUStatusResponse& GetSUStatusResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSUStatusResponse* GetSUStatusResponse::default_instance_ = NULL;

GetSUStatusResponse* GetSUStatusResponse::New() const {
  return new GetSUStatusResponse;
}

void GetSUStatusResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_serviceunitstatus()) {
      if (serviceunitstatus_ != NULL) serviceunitstatus_->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitStatus::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSUStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSUStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus ServiceUnitStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serviceunitstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSUStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSUStatusResponse)
  return false;
#undef DO_
}

void GetSUStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSUStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus ServiceUnitStatus = 1;
  if (has_serviceunitstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->serviceunitstatus(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSUStatusResponse)
}

::google::protobuf::uint8* GetSUStatusResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSUStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus ServiceUnitStatus = 1;
  if (has_serviceunitstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->serviceunitstatus(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSUStatusResponse)
  return target;
}

int GetSUStatusResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceUnitStatus ServiceUnitStatus = 1;
    if (has_serviceunitstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serviceunitstatus());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSUStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSUStatusResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSUStatusResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSUStatusResponse::MergeFrom(const GetSUStatusResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serviceunitstatus()) {
      mutable_serviceunitstatus()->::SAFplus::Rpc::amfMgmtRpc::ServiceUnitStatus::MergeFrom(from.serviceunitstatus());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSUStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSUStatusResponse::CopyFrom(const GetSUStatusResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSUStatusResponse::IsInitialized() const {

  if (has_serviceunitstatus()) {
    if (!this->serviceunitstatus().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSUStatusResponse::Swap(GetSUStatusResponse* other) {
  if (other != this) {
    std::swap(serviceunitstatus_, other->serviceunitstatus_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSUStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSUStatusResponse_descriptor_;
  metadata.reflection = GetSUStatusResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSGStatusRequest::kAmfMgmtHandleFieldNumber;
const int GetSGStatusRequest::kSgNameFieldNumber;
#endif  // !_MSC_VER

GetSGStatusRequest::GetSGStatusRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSGStatusRequest)
}

void GetSGStatusRequest::InitAsDefaultInstance() {
}

GetSGStatusRequest::GetSGStatusRequest(const GetSGStatusRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSGStatusRequest)
}

void GetSGStatusRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sgname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSGStatusRequest::~GetSGStatusRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSGStatusRequest)
  SharedDtor();
}

void GetSGStatusRequest::SharedDtor() {
  if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sgname_;
  }
  if (this != default_instance_) {
  }
}

void GetSGStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSGStatusRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSGStatusRequest_descriptor_;
}

const GetSGStatusRequest& GetSGStatusRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSGStatusRequest* GetSGStatusRequest::default_instance_ = NULL;

GetSGStatusRequest* GetSGStatusRequest::New() const {
  return new GetSGStatusRequest;
}

void GetSGStatusRequest::Clear() {
  _extensions_.Clear();
  if (has_sgname()) {
    if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      sgname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSGStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSGStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_sgName;
        break;
      }

      // optional string sgName = 2;
      case 2: {
        if (tag == 18) {
         parse_sgName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sgname().data(), this->sgname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sgname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSGStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSGStatusRequest)
  return false;
#undef DO_
}

void GetSGStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSGStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSGStatusRequest)
}

::google::protobuf::uint8* GetSGStatusRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSGStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sgname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSGStatusRequest)
  return target;
}

int GetSGStatusRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string sgName = 2;
    if (has_sgname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sgname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSGStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSGStatusRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSGStatusRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSGStatusRequest::MergeFrom(const GetSGStatusRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_sgname()) {
      set_sgname(from.sgname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSGStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSGStatusRequest::CopyFrom(const GetSGStatusRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSGStatusRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSGStatusRequest::Swap(GetSGStatusRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(sgname_, other->sgname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSGStatusRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSGStatusRequest_descriptor_;
  metadata.reflection = GetSGStatusRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSGStatusResponse::kServiceGroupStatusFieldNumber;
const int GetSGStatusResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetSGStatusResponse::GetSGStatusResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSGStatusResponse)
}

void GetSGStatusResponse::InitAsDefaultInstance() {
  servicegroupstatus_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceGroupStatus*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceGroupStatus::default_instance());
}

GetSGStatusResponse::GetSGStatusResponse(const GetSGStatusResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSGStatusResponse)
}

void GetSGStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  servicegroupstatus_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSGStatusResponse::~GetSGStatusResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSGStatusResponse)
  SharedDtor();
}

void GetSGStatusResponse::SharedDtor() {
  if (this != default_instance_) {
    delete servicegroupstatus_;
  }
}

void GetSGStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSGStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSGStatusResponse_descriptor_;
}

const GetSGStatusResponse& GetSGStatusResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSGStatusResponse* GetSGStatusResponse::default_instance_ = NULL;

GetSGStatusResponse* GetSGStatusResponse::New() const {
  return new GetSGStatusResponse;
}

void GetSGStatusResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_servicegroupstatus()) {
      if (servicegroupstatus_ != NULL) servicegroupstatus_->::SAFplus::Rpc::amfMgmtRpc::ServiceGroupStatus::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSGStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSGStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus ServiceGroupStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_servicegroupstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSGStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSGStatusResponse)
  return false;
#undef DO_
}

void GetSGStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSGStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus ServiceGroupStatus = 1;
  if (has_servicegroupstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->servicegroupstatus(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSGStatusResponse)
}

::google::protobuf::uint8* GetSGStatusResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSGStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus ServiceGroupStatus = 1;
  if (has_servicegroupstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->servicegroupstatus(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSGStatusResponse)
  return target;
}

int GetSGStatusResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceGroupStatus ServiceGroupStatus = 1;
    if (has_servicegroupstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->servicegroupstatus());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSGStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSGStatusResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSGStatusResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSGStatusResponse::MergeFrom(const GetSGStatusResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_servicegroupstatus()) {
      mutable_servicegroupstatus()->::SAFplus::Rpc::amfMgmtRpc::ServiceGroupStatus::MergeFrom(from.servicegroupstatus());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSGStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSGStatusResponse::CopyFrom(const GetSGStatusResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSGStatusResponse::IsInitialized() const {

  if (has_servicegroupstatus()) {
    if (!this->servicegroupstatus().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSGStatusResponse::Swap(GetSGStatusResponse* other) {
  if (other != this) {
    std::swap(servicegroupstatus_, other->servicegroupstatus_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSGStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSGStatusResponse_descriptor_;
  metadata.reflection = GetSGStatusResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSIStatusRequest::kAmfMgmtHandleFieldNumber;
const int GetSIStatusRequest::kSiNameFieldNumber;
#endif  // !_MSC_VER

GetSIStatusRequest::GetSIStatusRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSIStatusRequest)
}

void GetSIStatusRequest::InitAsDefaultInstance() {
}

GetSIStatusRequest::GetSIStatusRequest(const GetSIStatusRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSIStatusRequest)
}

void GetSIStatusRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  siname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSIStatusRequest::~GetSIStatusRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSIStatusRequest)
  SharedDtor();
}

void GetSIStatusRequest::SharedDtor() {
  if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete siname_;
  }
  if (this != default_instance_) {
  }
}

void GetSIStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSIStatusRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSIStatusRequest_descriptor_;
}

const GetSIStatusRequest& GetSIStatusRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSIStatusRequest* GetSIStatusRequest::default_instance_ = NULL;

GetSIStatusRequest* GetSIStatusRequest::New() const {
  return new GetSIStatusRequest;
}

void GetSIStatusRequest::Clear() {
  _extensions_.Clear();
  if (has_siname()) {
    if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      siname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSIStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSIStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_siName;
        break;
      }

      // optional string siName = 2;
      case 2: {
        if (tag == 18) {
         parse_siName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_siname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->siname().data(), this->siname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "siname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSIStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSIStatusRequest)
  return false;
#undef DO_
}

void GetSIStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSIStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->siname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSIStatusRequest)
}

::google::protobuf::uint8* GetSIStatusRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSIStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->siname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSIStatusRequest)
  return target;
}

int GetSIStatusRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string siName = 2;
    if (has_siname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->siname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSIStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSIStatusRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSIStatusRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSIStatusRequest::MergeFrom(const GetSIStatusRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_siname()) {
      set_siname(from.siname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSIStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSIStatusRequest::CopyFrom(const GetSIStatusRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSIStatusRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSIStatusRequest::Swap(GetSIStatusRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(siname_, other->siname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSIStatusRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSIStatusRequest_descriptor_;
  metadata.reflection = GetSIStatusRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSIStatusResponse::kServiceInstanceStatusFieldNumber;
const int GetSIStatusResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetSIStatusResponse::GetSIStatusResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetSIStatusResponse)
}

void GetSIStatusResponse::InitAsDefaultInstance() {
  serviceinstancestatus_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceStatus*>(&::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceStatus::default_instance());
}

GetSIStatusResponse::GetSIStatusResponse(const GetSIStatusResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetSIStatusResponse)
}

void GetSIStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  serviceinstancestatus_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSIStatusResponse::~GetSIStatusResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetSIStatusResponse)
  SharedDtor();
}

void GetSIStatusResponse::SharedDtor() {
  if (this != default_instance_) {
    delete serviceinstancestatus_;
  }
}

void GetSIStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSIStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSIStatusResponse_descriptor_;
}

const GetSIStatusResponse& GetSIStatusResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetSIStatusResponse* GetSIStatusResponse::default_instance_ = NULL;

GetSIStatusResponse* GetSIStatusResponse::New() const {
  return new GetSIStatusResponse;
}

void GetSIStatusResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_serviceinstancestatus()) {
      if (serviceinstancestatus_ != NULL) serviceinstancestatus_->::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceStatus::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSIStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetSIStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus ServiceInstanceStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serviceinstancestatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetSIStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetSIStatusResponse)
  return false;
#undef DO_
}

void GetSIStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetSIStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus ServiceInstanceStatus = 1;
  if (has_serviceinstancestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->serviceinstancestatus(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetSIStatusResponse)
}

::google::protobuf::uint8* GetSIStatusResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetSIStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus ServiceInstanceStatus = 1;
  if (has_serviceinstancestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->serviceinstancestatus(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetSIStatusResponse)
  return target;
}

int GetSIStatusResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ServiceInstanceStatus ServiceInstanceStatus = 1;
    if (has_serviceinstancestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serviceinstancestatus());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSIStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSIStatusResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSIStatusResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSIStatusResponse::MergeFrom(const GetSIStatusResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_serviceinstancestatus()) {
      mutable_serviceinstancestatus()->::SAFplus::Rpc::amfMgmtRpc::ServiceInstanceStatus::MergeFrom(from.serviceinstancestatus());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSIStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSIStatusResponse::CopyFrom(const GetSIStatusResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSIStatusResponse::IsInitialized() const {

  if (has_serviceinstancestatus()) {
    if (!this->serviceinstancestatus().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetSIStatusResponse::Swap(GetSIStatusResponse* other) {
  if (other != this) {
    std::swap(serviceinstancestatus_, other->serviceinstancestatus_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetSIStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSIStatusResponse_descriptor_;
  metadata.reflection = GetSIStatusResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetCSIStatusRequest::kAmfMgmtHandleFieldNumber;
const int GetCSIStatusRequest::kCsiNameFieldNumber;
#endif  // !_MSC_VER

GetCSIStatusRequest::GetCSIStatusRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusRequest)
}

void GetCSIStatusRequest::InitAsDefaultInstance() {
}

GetCSIStatusRequest::GetCSIStatusRequest(const GetCSIStatusRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusRequest)
}

void GetCSIStatusRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  csiname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetCSIStatusRequest::~GetCSIStatusRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusRequest)
  SharedDtor();
}

void GetCSIStatusRequest::SharedDtor() {
  if (csiname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete csiname_;
  }
  if (this != default_instance_) {
  }
}

void GetCSIStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCSIStatusRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCSIStatusRequest_descriptor_;
}

const GetCSIStatusRequest& GetCSIStatusRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetCSIStatusRequest* GetCSIStatusRequest::default_instance_ = NULL;

GetCSIStatusRequest* GetCSIStatusRequest::New() const {
  return new GetCSIStatusRequest;
}

void GetCSIStatusRequest::Clear() {
  _extensions_.Clear();
  if (has_csiname()) {
    if (csiname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      csiname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetCSIStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_csiName;
        break;
      }

      // optional string csiName = 2;
      case 2: {
        if (tag == 18) {
         parse_csiName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_csiname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->csiname().data(), this->csiname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "csiname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusRequest)
  return false;
#undef DO_
}

void GetCSIStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string csiName = 2;
  if (has_csiname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csiname().data(), this->csiname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csiname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->csiname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusRequest)
}

::google::protobuf::uint8* GetCSIStatusRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string csiName = 2;
  if (has_csiname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csiname().data(), this->csiname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "csiname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->csiname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusRequest)
  return target;
}

int GetCSIStatusRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string csiName = 2;
    if (has_csiname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->csiname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCSIStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetCSIStatusRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetCSIStatusRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetCSIStatusRequest::MergeFrom(const GetCSIStatusRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_csiname()) {
      set_csiname(from.csiname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetCSIStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCSIStatusRequest::CopyFrom(const GetCSIStatusRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCSIStatusRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetCSIStatusRequest::Swap(GetCSIStatusRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(csiname_, other->csiname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetCSIStatusRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCSIStatusRequest_descriptor_;
  metadata.reflection = GetCSIStatusRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetCSIStatusResponse::kComponentServiceInstanceStatusFieldNumber;
const int GetCSIStatusResponse::kErrFieldNumber;
#endif  // !_MSC_VER

GetCSIStatusResponse::GetCSIStatusResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusResponse)
}

void GetCSIStatusResponse::InitAsDefaultInstance() {
  componentserviceinstancestatus_ = const_cast< ::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceStatus*>(&::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceStatus::default_instance());
}

GetCSIStatusResponse::GetCSIStatusResponse(const GetCSIStatusResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusResponse)
}

void GetCSIStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  componentserviceinstancestatus_ = NULL;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetCSIStatusResponse::~GetCSIStatusResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusResponse)
  SharedDtor();
}

void GetCSIStatusResponse::SharedDtor() {
  if (this != default_instance_) {
    delete componentserviceinstancestatus_;
  }
}

void GetCSIStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCSIStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCSIStatusResponse_descriptor_;
}

const GetCSIStatusResponse& GetCSIStatusResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

GetCSIStatusResponse* GetCSIStatusResponse::default_instance_ = NULL;

GetCSIStatusResponse* GetCSIStatusResponse::New() const {
  return new GetCSIStatusResponse;
}

void GetCSIStatusResponse::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 3) {
    if (has_componentserviceinstancestatus()) {
      if (componentserviceinstancestatus_ != NULL) componentserviceinstancestatus_->::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceStatus::Clear();
    }
    err_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetCSIStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus ComponentServiceInstanceStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_componentserviceinstancestatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_err;
        break;
      }

      // optional sint32 err = 2;
      case 2: {
        if (tag == 16) {
         parse_err:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusResponse)
  return false;
#undef DO_
}

void GetCSIStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus ComponentServiceInstanceStatus = 1;
  if (has_componentserviceinstancestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->componentserviceinstancestatus(), output);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusResponse)
}

::google::protobuf::uint8* GetCSIStatusResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusResponse)
  // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus ComponentServiceInstanceStatus = 1;
  if (has_componentserviceinstancestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->componentserviceinstancestatus(), target);
  }

  // optional sint32 err = 2;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.GetCSIStatusResponse)
  return target;
}

int GetCSIStatusResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .SAFplus.Rpc.amfMgmtRpc.ComponentServiceInstanceStatus ComponentServiceInstanceStatus = 1;
    if (has_componentserviceinstancestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->componentserviceinstancestatus());
    }

    // optional sint32 err = 2;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCSIStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetCSIStatusResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetCSIStatusResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetCSIStatusResponse::MergeFrom(const GetCSIStatusResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_componentserviceinstancestatus()) {
      mutable_componentserviceinstancestatus()->::SAFplus::Rpc::amfMgmtRpc::ComponentServiceInstanceStatus::MergeFrom(from.componentserviceinstancestatus());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetCSIStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCSIStatusResponse::CopyFrom(const GetCSIStatusResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCSIStatusResponse::IsInitialized() const {

  if (has_componentserviceinstancestatus()) {
    if (!this->componentserviceinstancestatus().IsInitialized()) return false;
  }

  if (!_extensions_.IsInitialized()) return false;  return true;
}

void GetCSIStatusResponse::Swap(GetCSIStatusResponse* other) {
  if (other != this) {
    std::swap(componentserviceinstancestatus_, other->componentserviceinstancestatus_);
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata GetCSIStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCSIStatusResponse_descriptor_;
  metadata.reflection = GetCSIStatusResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NodeRestartRequest::kAmfMgmtHandleFieldNumber;
const int NodeRestartRequest::kNodeNameFieldNumber;
#endif  // !_MSC_VER

NodeRestartRequest::NodeRestartRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NodeRestartRequest)
}

void NodeRestartRequest::InitAsDefaultInstance() {
}

NodeRestartRequest::NodeRestartRequest(const NodeRestartRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NodeRestartRequest)
}

void NodeRestartRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nodename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeRestartRequest::~NodeRestartRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NodeRestartRequest)
  SharedDtor();
}

void NodeRestartRequest::SharedDtor() {
  if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nodename_;
  }
  if (this != default_instance_) {
  }
}

void NodeRestartRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeRestartRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeRestartRequest_descriptor_;
}

const NodeRestartRequest& NodeRestartRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NodeRestartRequest* NodeRestartRequest::default_instance_ = NULL;

NodeRestartRequest* NodeRestartRequest::New() const {
  return new NodeRestartRequest;
}

void NodeRestartRequest::Clear() {
  _extensions_.Clear();
  if (has_nodename()) {
    if (nodename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      nodename_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeRestartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NodeRestartRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_nodeName;
        break;
      }

      // optional string nodeName = 2;
      case 2: {
        if (tag == 18) {
         parse_nodeName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nodename().data(), this->nodename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nodename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NodeRestartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NodeRestartRequest)
  return false;
#undef DO_
}

void NodeRestartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NodeRestartRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NodeRestartRequest)
}

::google::protobuf::uint8* NodeRestartRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NodeRestartRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string nodeName = 2;
  if (has_nodename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nodename().data(), this->nodename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nodename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NodeRestartRequest)
  return target;
}

int NodeRestartRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string nodeName = 2;
    if (has_nodename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nodename());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeRestartRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeRestartRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeRestartRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeRestartRequest::MergeFrom(const NodeRestartRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodename()) {
      set_nodename(from.nodename());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeRestartRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeRestartRequest::CopyFrom(const NodeRestartRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeRestartRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NodeRestartRequest::Swap(NodeRestartRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(nodename_, other->nodename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NodeRestartRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeRestartRequest_descriptor_;
  metadata.reflection = NodeRestartRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NodeRestartResponse::kErrFieldNumber;
#endif  // !_MSC_VER

NodeRestartResponse::NodeRestartResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.NodeRestartResponse)
}

void NodeRestartResponse::InitAsDefaultInstance() {
}

NodeRestartResponse::NodeRestartResponse(const NodeRestartResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.NodeRestartResponse)
}

void NodeRestartResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeRestartResponse::~NodeRestartResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.NodeRestartResponse)
  SharedDtor();
}

void NodeRestartResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NodeRestartResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeRestartResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeRestartResponse_descriptor_;
}

const NodeRestartResponse& NodeRestartResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

NodeRestartResponse* NodeRestartResponse::default_instance_ = NULL;

NodeRestartResponse* NodeRestartResponse::New() const {
  return new NodeRestartResponse;
}

void NodeRestartResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeRestartResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.NodeRestartResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.NodeRestartResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.NodeRestartResponse)
  return false;
#undef DO_
}

void NodeRestartResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.NodeRestartResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.NodeRestartResponse)
}

::google::protobuf::uint8* NodeRestartResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.NodeRestartResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.NodeRestartResponse)
  return target;
}

int NodeRestartResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeRestartResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeRestartResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeRestartResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeRestartResponse::MergeFrom(const NodeRestartResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeRestartResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeRestartResponse::CopyFrom(const NodeRestartResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeRestartResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void NodeRestartResponse::Swap(NodeRestartResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata NodeRestartResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeRestartResponse_descriptor_;
  metadata.reflection = NodeRestartResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServiceUnitRestartRequest::kAmfMgmtHandleFieldNumber;
const int ServiceUnitRestartRequest::kSuNameFieldNumber;
#endif  // !_MSC_VER

ServiceUnitRestartRequest::ServiceUnitRestartRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartRequest)
}

void ServiceUnitRestartRequest::InitAsDefaultInstance() {
}

ServiceUnitRestartRequest::ServiceUnitRestartRequest(const ServiceUnitRestartRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartRequest)
}

void ServiceUnitRestartRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  suname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceUnitRestartRequest::~ServiceUnitRestartRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartRequest)
  SharedDtor();
}

void ServiceUnitRestartRequest::SharedDtor() {
  if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete suname_;
  }
  if (this != default_instance_) {
  }
}

void ServiceUnitRestartRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceUnitRestartRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceUnitRestartRequest_descriptor_;
}

const ServiceUnitRestartRequest& ServiceUnitRestartRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ServiceUnitRestartRequest* ServiceUnitRestartRequest::default_instance_ = NULL;

ServiceUnitRestartRequest* ServiceUnitRestartRequest::New() const {
  return new ServiceUnitRestartRequest;
}

void ServiceUnitRestartRequest::Clear() {
  _extensions_.Clear();
  if (has_suname()) {
    if (suname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      suname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceUnitRestartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_suName;
        break;
      }

      // optional string suName = 2;
      case 2: {
        if (tag == 18) {
         parse_suName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->suname().data(), this->suname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "suname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartRequest)
  return false;
#undef DO_
}

void ServiceUnitRestartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->suname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartRequest)
}

::google::protobuf::uint8* ServiceUnitRestartRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string suName = 2;
  if (has_suname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->suname().data(), this->suname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "suname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->suname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartRequest)
  return target;
}

int ServiceUnitRestartRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string suName = 2;
    if (has_suname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceUnitRestartRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceUnitRestartRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceUnitRestartRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceUnitRestartRequest::MergeFrom(const ServiceUnitRestartRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_suname()) {
      set_suname(from.suname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceUnitRestartRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceUnitRestartRequest::CopyFrom(const ServiceUnitRestartRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceUnitRestartRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ServiceUnitRestartRequest::Swap(ServiceUnitRestartRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(suname_, other->suname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ServiceUnitRestartRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceUnitRestartRequest_descriptor_;
  metadata.reflection = ServiceUnitRestartRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ServiceUnitRestartResponse::kErrFieldNumber;
#endif  // !_MSC_VER

ServiceUnitRestartResponse::ServiceUnitRestartResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartResponse)
}

void ServiceUnitRestartResponse::InitAsDefaultInstance() {
}

ServiceUnitRestartResponse::ServiceUnitRestartResponse(const ServiceUnitRestartResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartResponse)
}

void ServiceUnitRestartResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceUnitRestartResponse::~ServiceUnitRestartResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartResponse)
  SharedDtor();
}

void ServiceUnitRestartResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServiceUnitRestartResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceUnitRestartResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceUnitRestartResponse_descriptor_;
}

const ServiceUnitRestartResponse& ServiceUnitRestartResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ServiceUnitRestartResponse* ServiceUnitRestartResponse::default_instance_ = NULL;

ServiceUnitRestartResponse* ServiceUnitRestartResponse::New() const {
  return new ServiceUnitRestartResponse;
}

void ServiceUnitRestartResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceUnitRestartResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartResponse)
  return false;
#undef DO_
}

void ServiceUnitRestartResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartResponse)
}

::google::protobuf::uint8* ServiceUnitRestartResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ServiceUnitRestartResponse)
  return target;
}

int ServiceUnitRestartResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceUnitRestartResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceUnitRestartResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceUnitRestartResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceUnitRestartResponse::MergeFrom(const ServiceUnitRestartResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceUnitRestartResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceUnitRestartResponse::CopyFrom(const ServiceUnitRestartResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceUnitRestartResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ServiceUnitRestartResponse::Swap(ServiceUnitRestartResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ServiceUnitRestartResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceUnitRestartResponse_descriptor_;
  metadata.reflection = ServiceUnitRestartResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentRestartRequest::kAmfMgmtHandleFieldNumber;
const int ComponentRestartRequest::kCompNameFieldNumber;
#endif  // !_MSC_VER

ComponentRestartRequest::ComponentRestartRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ComponentRestartRequest)
}

void ComponentRestartRequest::InitAsDefaultInstance() {
}

ComponentRestartRequest::ComponentRestartRequest(const ComponentRestartRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ComponentRestartRequest)
}

void ComponentRestartRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  compname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentRestartRequest::~ComponentRestartRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ComponentRestartRequest)
  SharedDtor();
}

void ComponentRestartRequest::SharedDtor() {
  if (compname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete compname_;
  }
  if (this != default_instance_) {
  }
}

void ComponentRestartRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentRestartRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentRestartRequest_descriptor_;
}

const ComponentRestartRequest& ComponentRestartRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ComponentRestartRequest* ComponentRestartRequest::default_instance_ = NULL;

ComponentRestartRequest* ComponentRestartRequest::New() const {
  return new ComponentRestartRequest;
}

void ComponentRestartRequest::Clear() {
  _extensions_.Clear();
  if (has_compname()) {
    if (compname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      compname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentRestartRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ComponentRestartRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_compName;
        break;
      }

      // optional string compName = 2;
      case 2: {
        if (tag == 18) {
         parse_compName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->compname().data(), this->compname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "compname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ComponentRestartRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ComponentRestartRequest)
  return false;
#undef DO_
}

void ComponentRestartRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ComponentRestartRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string compName = 2;
  if (has_compname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compname().data(), this->compname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->compname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ComponentRestartRequest)
}

::google::protobuf::uint8* ComponentRestartRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ComponentRestartRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string compName = 2;
  if (has_compname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compname().data(), this->compname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->compname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ComponentRestartRequest)
  return target;
}

int ComponentRestartRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string compName = 2;
    if (has_compname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->compname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentRestartRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentRestartRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentRestartRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentRestartRequest::MergeFrom(const ComponentRestartRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_compname()) {
      set_compname(from.compname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentRestartRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentRestartRequest::CopyFrom(const ComponentRestartRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentRestartRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ComponentRestartRequest::Swap(ComponentRestartRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(compname_, other->compname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ComponentRestartRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentRestartRequest_descriptor_;
  metadata.reflection = ComponentRestartRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComponentRestartResponse::kErrFieldNumber;
#endif  // !_MSC_VER

ComponentRestartResponse::ComponentRestartResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.ComponentRestartResponse)
}

void ComponentRestartResponse::InitAsDefaultInstance() {
}

ComponentRestartResponse::ComponentRestartResponse(const ComponentRestartResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.ComponentRestartResponse)
}

void ComponentRestartResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComponentRestartResponse::~ComponentRestartResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.ComponentRestartResponse)
  SharedDtor();
}

void ComponentRestartResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComponentRestartResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentRestartResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentRestartResponse_descriptor_;
}

const ComponentRestartResponse& ComponentRestartResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

ComponentRestartResponse* ComponentRestartResponse::default_instance_ = NULL;

ComponentRestartResponse* ComponentRestartResponse::New() const {
  return new ComponentRestartResponse;
}

void ComponentRestartResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComponentRestartResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.ComponentRestartResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.ComponentRestartResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.ComponentRestartResponse)
  return false;
#undef DO_
}

void ComponentRestartResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.ComponentRestartResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.ComponentRestartResponse)
}

::google::protobuf::uint8* ComponentRestartResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.ComponentRestartResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.ComponentRestartResponse)
  return target;
}

int ComponentRestartResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentRestartResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComponentRestartResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComponentRestartResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComponentRestartResponse::MergeFrom(const ComponentRestartResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComponentRestartResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentRestartResponse::CopyFrom(const ComponentRestartResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentRestartResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void ComponentRestartResponse::Swap(ComponentRestartResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata ComponentRestartResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentRestartResponse_descriptor_;
  metadata.reflection = ComponentRestartResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AdjustSGRequest::kAmfMgmtHandleFieldNumber;
const int AdjustSGRequest::kSgNameFieldNumber;
const int AdjustSGRequest::kEnabledFieldNumber;
#endif  // !_MSC_VER

AdjustSGRequest::AdjustSGRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.AdjustSGRequest)
}

void AdjustSGRequest::InitAsDefaultInstance() {
}

AdjustSGRequest::AdjustSGRequest(const AdjustSGRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.AdjustSGRequest)
}

void AdjustSGRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sgname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enabled_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AdjustSGRequest::~AdjustSGRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.AdjustSGRequest)
  SharedDtor();
}

void AdjustSGRequest::SharedDtor() {
  if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sgname_;
  }
  if (this != default_instance_) {
  }
}

void AdjustSGRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdjustSGRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdjustSGRequest_descriptor_;
}

const AdjustSGRequest& AdjustSGRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

AdjustSGRequest* AdjustSGRequest::default_instance_ = NULL;

AdjustSGRequest* AdjustSGRequest::New() const {
  return new AdjustSGRequest;
}

void AdjustSGRequest::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 6) {
    if (has_sgname()) {
      if (sgname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sgname_->clear();
      }
    }
    enabled_ = false;
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AdjustSGRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.AdjustSGRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_sgName;
        break;
      }

      // optional string sgName = 2;
      case 2: {
        if (tag == 18) {
         parse_sgName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sgname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sgname().data(), this->sgname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sgname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_enabled;
        break;
      }

      // optional bool enabled = 3;
      case 3: {
        if (tag == 24) {
         parse_enabled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
          set_has_enabled();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.AdjustSGRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.AdjustSGRequest)
  return false;
#undef DO_
}

void AdjustSGRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.AdjustSGRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sgname(), output);
  }

  // optional bool enabled = 3;
  if (has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enabled(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.AdjustSGRequest)
}

::google::protobuf::uint8* AdjustSGRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.AdjustSGRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string sgName = 2;
  if (has_sgname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sgname().data(), this->sgname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sgname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sgname(), target);
  }

  // optional bool enabled = 3;
  if (has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enabled(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.AdjustSGRequest)
  return target;
}

int AdjustSGRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string sgName = 2;
    if (has_sgname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sgname());
    }

    // optional bool enabled = 3;
    if (has_enabled()) {
      total_size += 1 + 1;
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdjustSGRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AdjustSGRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AdjustSGRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AdjustSGRequest::MergeFrom(const AdjustSGRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_sgname()) {
      set_sgname(from.sgname());
    }
    if (from.has_enabled()) {
      set_enabled(from.enabled());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AdjustSGRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdjustSGRequest::CopyFrom(const AdjustSGRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdjustSGRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void AdjustSGRequest::Swap(AdjustSGRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(sgname_, other->sgname_);
    std::swap(enabled_, other->enabled_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata AdjustSGRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AdjustSGRequest_descriptor_;
  metadata.reflection = AdjustSGRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AdjustSGResponse::kErrFieldNumber;
#endif  // !_MSC_VER

AdjustSGResponse::AdjustSGResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.AdjustSGResponse)
}

void AdjustSGResponse::InitAsDefaultInstance() {
}

AdjustSGResponse::AdjustSGResponse(const AdjustSGResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.AdjustSGResponse)
}

void AdjustSGResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AdjustSGResponse::~AdjustSGResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.AdjustSGResponse)
  SharedDtor();
}

void AdjustSGResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AdjustSGResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdjustSGResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdjustSGResponse_descriptor_;
}

const AdjustSGResponse& AdjustSGResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

AdjustSGResponse* AdjustSGResponse::default_instance_ = NULL;

AdjustSGResponse* AdjustSGResponse::New() const {
  return new AdjustSGResponse;
}

void AdjustSGResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AdjustSGResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.AdjustSGResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.AdjustSGResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.AdjustSGResponse)
  return false;
#undef DO_
}

void AdjustSGResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.AdjustSGResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.AdjustSGResponse)
}

::google::protobuf::uint8* AdjustSGResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.AdjustSGResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.AdjustSGResponse)
  return target;
}

int AdjustSGResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdjustSGResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AdjustSGResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AdjustSGResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AdjustSGResponse::MergeFrom(const AdjustSGResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AdjustSGResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdjustSGResponse::CopyFrom(const AdjustSGResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdjustSGResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void AdjustSGResponse::Swap(AdjustSGResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata AdjustSGResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AdjustSGResponse_descriptor_;
  metadata.reflection = AdjustSGResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SwapSIRequest::kAmfMgmtHandleFieldNumber;
const int SwapSIRequest::kSiNameFieldNumber;
#endif  // !_MSC_VER

SwapSIRequest::SwapSIRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.SwapSIRequest)
}

void SwapSIRequest::InitAsDefaultInstance() {
}

SwapSIRequest::SwapSIRequest(const SwapSIRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.SwapSIRequest)
}

void SwapSIRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  siname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SwapSIRequest::~SwapSIRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.SwapSIRequest)
  SharedDtor();
}

void SwapSIRequest::SharedDtor() {
  if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete siname_;
  }
  if (this != default_instance_) {
  }
}

void SwapSIRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwapSIRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwapSIRequest_descriptor_;
}

const SwapSIRequest& SwapSIRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

SwapSIRequest* SwapSIRequest::default_instance_ = NULL;

SwapSIRequest* SwapSIRequest::New() const {
  return new SwapSIRequest;
}

void SwapSIRequest::Clear() {
  _extensions_.Clear();
  if (has_siname()) {
    if (siname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      siname_->clear();
    }
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SwapSIRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.SwapSIRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_siName;
        break;
      }

      // optional string siName = 2;
      case 2: {
        if (tag == 18) {
         parse_siName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_siname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->siname().data(), this->siname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "siname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.SwapSIRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.SwapSIRequest)
  return false;
#undef DO_
}

void SwapSIRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.SwapSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->siname(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.SwapSIRequest)
}

::google::protobuf::uint8* SwapSIRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.SwapSIRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string siName = 2;
  if (has_siname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->siname().data(), this->siname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "siname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->siname(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.SwapSIRequest)
  return target;
}

int SwapSIRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string siName = 2;
    if (has_siname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->siname());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwapSIRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SwapSIRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SwapSIRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SwapSIRequest::MergeFrom(const SwapSIRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_siname()) {
      set_siname(from.siname());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SwapSIRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwapSIRequest::CopyFrom(const SwapSIRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwapSIRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void SwapSIRequest::Swap(SwapSIRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(siname_, other->siname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata SwapSIRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SwapSIRequest_descriptor_;
  metadata.reflection = SwapSIRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SwapSIResponse::kErrFieldNumber;
#endif  // !_MSC_VER

SwapSIResponse::SwapSIResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.SwapSIResponse)
}

void SwapSIResponse::InitAsDefaultInstance() {
}

SwapSIResponse::SwapSIResponse(const SwapSIResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.SwapSIResponse)
}

void SwapSIResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SwapSIResponse::~SwapSIResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.SwapSIResponse)
  SharedDtor();
}

void SwapSIResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SwapSIResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SwapSIResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SwapSIResponse_descriptor_;
}

const SwapSIResponse& SwapSIResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

SwapSIResponse* SwapSIResponse::default_instance_ = NULL;

SwapSIResponse* SwapSIResponse::New() const {
  return new SwapSIResponse;
}

void SwapSIResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SwapSIResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.SwapSIResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.SwapSIResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.SwapSIResponse)
  return false;
#undef DO_
}

void SwapSIResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.SwapSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.SwapSIResponse)
}

::google::protobuf::uint8* SwapSIResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.SwapSIResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.SwapSIResponse)
  return target;
}

int SwapSIResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SwapSIResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SwapSIResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SwapSIResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SwapSIResponse::MergeFrom(const SwapSIResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SwapSIResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwapSIResponse::CopyFrom(const SwapSIResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwapSIResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void SwapSIResponse::Swap(SwapSIResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata SwapSIResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SwapSIResponse_descriptor_;
  metadata.reflection = SwapSIResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CompErrorReportRequest::kAmfMgmtHandleFieldNumber;
const int CompErrorReportRequest::kCompNameFieldNumber;
const int CompErrorReportRequest::kRecommendedRecoveryFieldNumber;
#endif  // !_MSC_VER

CompErrorReportRequest::CompErrorReportRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CompErrorReportRequest)
}

void CompErrorReportRequest::InitAsDefaultInstance() {
}

CompErrorReportRequest::CompErrorReportRequest(const CompErrorReportRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CompErrorReportRequest)
}

void CompErrorReportRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  compname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recommendedrecovery_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CompErrorReportRequest::~CompErrorReportRequest() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CompErrorReportRequest)
  SharedDtor();
}

void CompErrorReportRequest::SharedDtor() {
  if (compname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete compname_;
  }
  if (this != default_instance_) {
  }
}

void CompErrorReportRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompErrorReportRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompErrorReportRequest_descriptor_;
}

const CompErrorReportRequest& CompErrorReportRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CompErrorReportRequest* CompErrorReportRequest::default_instance_ = NULL;

CompErrorReportRequest* CompErrorReportRequest::New() const {
  return new CompErrorReportRequest;
}

void CompErrorReportRequest::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & 6) {
    if (has_compname()) {
      if (compname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        compname_->clear();
      }
    }
    recommendedrecovery_ = 1;
  }
  amfmgmthandle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CompErrorReportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CompErrorReportRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes amfMgmtHandle = 1;
      case 1: {
        if (tag == 10) {
         parse_amfMgmtHandle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_amfmgmthandle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_amfMgmtHandle;
        if (input->ExpectTag(18)) goto parse_compName;
        break;
      }

      // optional string compName = 2;
      case 2: {
        if (tag == 18) {
         parse_compName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->compname().data(), this->compname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "compname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_recommendedRecovery;
        break;
      }

      // optional .SAFplus.Rpc.amfMgmtRpc.Recovery recommendedRecovery = 3;
      case 3: {
        if (tag == 24) {
         parse_recommendedRecovery:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SAFplus::Rpc::amfMgmtRpc::Recovery_IsValid(value)) {
            set_recommendedrecovery(static_cast< ::SAFplus::Rpc::amfMgmtRpc::Recovery >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CompErrorReportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CompErrorReportRequest)
  return false;
#undef DO_
}

void CompErrorReportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CompErrorReportRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->amfmgmthandle(i), output);
  }

  // optional string compName = 2;
  if (has_compname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compname().data(), this->compname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->compname(), output);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Recovery recommendedRecovery = 3;
  if (has_recommendedrecovery()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->recommendedrecovery(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CompErrorReportRequest)
}

::google::protobuf::uint8* CompErrorReportRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CompErrorReportRequest)
  // repeated bytes amfMgmtHandle = 1;
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->amfmgmthandle(i), target);
  }

  // optional string compName = 2;
  if (has_compname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compname().data(), this->compname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->compname(), target);
  }

  // optional .SAFplus.Rpc.amfMgmtRpc.Recovery recommendedRecovery = 3;
  if (has_recommendedrecovery()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->recommendedrecovery(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CompErrorReportRequest)
  return target;
}

int CompErrorReportRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string compName = 2;
    if (has_compname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->compname());
    }

    // optional .SAFplus.Rpc.amfMgmtRpc.Recovery recommendedRecovery = 3;
    if (has_recommendedrecovery()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->recommendedrecovery());
    }

  }
  // repeated bytes amfMgmtHandle = 1;
  total_size += 1 * this->amfmgmthandle_size();
  for (int i = 0; i < this->amfmgmthandle_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->amfmgmthandle(i));
  }

  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompErrorReportRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CompErrorReportRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CompErrorReportRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CompErrorReportRequest::MergeFrom(const CompErrorReportRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  amfmgmthandle_.MergeFrom(from.amfmgmthandle_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_compname()) {
      set_compname(from.compname());
    }
    if (from.has_recommendedrecovery()) {
      set_recommendedrecovery(from.recommendedrecovery());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CompErrorReportRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompErrorReportRequest::CopyFrom(const CompErrorReportRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompErrorReportRequest::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CompErrorReportRequest::Swap(CompErrorReportRequest* other) {
  if (other != this) {
    amfmgmthandle_.Swap(&other->amfmgmthandle_);
    std::swap(compname_, other->compname_);
    std::swap(recommendedrecovery_, other->recommendedrecovery_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CompErrorReportRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompErrorReportRequest_descriptor_;
  metadata.reflection = CompErrorReportRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CompErrorReportResponse::kErrFieldNumber;
#endif  // !_MSC_VER

CompErrorReportResponse::CompErrorReportResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAFplus.Rpc.amfMgmtRpc.CompErrorReportResponse)
}

void CompErrorReportResponse::InitAsDefaultInstance() {
}

CompErrorReportResponse::CompErrorReportResponse(const CompErrorReportResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SAFplus.Rpc.amfMgmtRpc.CompErrorReportResponse)
}

void CompErrorReportResponse::SharedCtor() {
  _cached_size_ = 0;
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CompErrorReportResponse::~CompErrorReportResponse() {
  // @@protoc_insertion_point(destructor:SAFplus.Rpc.amfMgmtRpc.CompErrorReportResponse)
  SharedDtor();
}

void CompErrorReportResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CompErrorReportResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompErrorReportResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompErrorReportResponse_descriptor_;
}

const CompErrorReportResponse& CompErrorReportResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amfMgmtRpc_2eproto();
  return *default_instance_;
}

CompErrorReportResponse* CompErrorReportResponse::default_instance_ = NULL;

CompErrorReportResponse* CompErrorReportResponse::New() const {
  return new CompErrorReportResponse;
}

void CompErrorReportResponse::Clear() {
  _extensions_.Clear();
  err_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CompErrorReportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAFplus.Rpc.amfMgmtRpc.CompErrorReportResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 err = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &err_)));
          set_has_err();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAFplus.Rpc.amfMgmtRpc.CompErrorReportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAFplus.Rpc.amfMgmtRpc.CompErrorReportResponse)
  return false;
#undef DO_
}

void CompErrorReportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAFplus.Rpc.amfMgmtRpc.CompErrorReportResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->err(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SAFplus.Rpc.amfMgmtRpc.CompErrorReportResponse)
}

::google::protobuf::uint8* CompErrorReportResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAFplus.Rpc.amfMgmtRpc.CompErrorReportResponse)
  // optional sint32 err = 1;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->err(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SAFplus.Rpc.amfMgmtRpc.CompErrorReportResponse)
  return target;
}

int CompErrorReportResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional sint32 err = 1;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->err());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompErrorReportResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CompErrorReportResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CompErrorReportResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CompErrorReportResponse::MergeFrom(const CompErrorReportResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_err(from.err());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CompErrorReportResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompErrorReportResponse::CopyFrom(const CompErrorReportResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompErrorReportResponse::IsInitialized() const {


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void CompErrorReportResponse::Swap(CompErrorReportResponse* other) {
  if (other != this) {
    std::swap(err_, other->err_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata CompErrorReportResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompErrorReportResponse_descriptor_;
  metadata.reflection = CompErrorReportResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace amfMgmtRpc
}  // namespace Rpc
}  // namespace SAFplus

// @@protoc_insertion_point(global_scope)
