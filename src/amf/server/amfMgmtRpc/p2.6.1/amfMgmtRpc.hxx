// Generated by the protocol buffer compiler.
#pragma once
#include <string>

#include <google/protobuf/service.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <clRpcService.hxx>
#include "amfMgmtRpc.pb.hxx"

namespace SAFplus {
  namespace Rpc {
    class RpcChannel;
  }
}

namespace SAFplus {
namespace Rpc {
namespace amfMgmtRpc {
class amfMgmtRpc_Stub;

class amfMgmtRpc : public SAFplus::Rpc::RpcService {
 protected:
  // This class should be treated as an abstract interface.
  inline amfMgmtRpc() {};
 public:
  virtual ~amfMgmtRpc();

  typedef amfMgmtRpc_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();


  // implements amfMgmtRpcImpl ----------------------------------------------
  virtual void initialize(const ::SAFplus::Rpc::amfMgmtRpc::InitializeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::InitializeResponse* response);
  virtual void finalize(const ::SAFplus::Rpc::amfMgmtRpc::FinalizeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::FinalizeResponse* response);
  virtual void commit(const ::SAFplus::Rpc::amfMgmtRpc::CommitRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CommitResponse* response);
  virtual void createComponent(const ::SAFplus::Rpc::amfMgmtRpc::CreateComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateComponentResponse* response);
  virtual void updateComponent(const ::SAFplus::Rpc::amfMgmtRpc::UpdateComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateComponentResponse* response);
  virtual void deleteComponent(const ::SAFplus::Rpc::amfMgmtRpc::DeleteComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteComponentResponse* response);
  virtual void createSG(const ::SAFplus::Rpc::amfMgmtRpc::CreateSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSGResponse* response);
  virtual void updateSG(const ::SAFplus::Rpc::amfMgmtRpc::UpdateSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSGResponse* response);
  virtual void deleteSG(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGResponse* response);
  virtual void createNode(const ::SAFplus::Rpc::amfMgmtRpc::CreateNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateNodeResponse* response);
  virtual void updateNode(const ::SAFplus::Rpc::amfMgmtRpc::UpdateNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateNodeResponse* response);
  virtual void deleteNode(const ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeResponse* response);
  virtual void createSU(const ::SAFplus::Rpc::amfMgmtRpc::CreateSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSUResponse* response);
  virtual void updateSU(const ::SAFplus::Rpc::amfMgmtRpc::UpdateSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSUResponse* response);
  virtual void deleteSU(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSUResponse* response);
  virtual void createSI(const ::SAFplus::Rpc::amfMgmtRpc::CreateSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSIResponse* response);
  virtual void updateSI(const ::SAFplus::Rpc::amfMgmtRpc::UpdateSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSIResponse* response);
  virtual void deleteSI(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSIResponse* response);
  virtual void createCSI(const ::SAFplus::Rpc::amfMgmtRpc::CreateCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateCSIResponse* response);
  virtual void updateCSI(const ::SAFplus::Rpc::amfMgmtRpc::UpdateCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateCSIResponse* response);
  virtual void deleteCSI(const ::SAFplus::Rpc::amfMgmtRpc::DeleteCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteCSIResponse* response);
  virtual void deleteCSINVP(const ::SAFplus::Rpc::amfMgmtRpc::DeleteCSINVPRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteCSINVPResponse* response);
  virtual void deleteNodeSUList(const ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeSUListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeSUListResponse* response);
  virtual void deleteSGSUList(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSUListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSUListResponse* response);
  virtual void deleteSGSIList(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSIListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSIListResponse* response);
  virtual void deleteSUCompList(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSUCompListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSUCompListResponse* response);
  virtual void deleteSICSIList(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSICSIListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSICSIListResponse* response);
  virtual void lockNodeAssignment(const ::SAFplus::Rpc::amfMgmtRpc::LockNodeAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockNodeAssignmentResponse* response);
  virtual void lockSGAssignment(const ::SAFplus::Rpc::amfMgmtRpc::LockSGAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSGAssignmentResponse* response);
  virtual void lockSUAssignment(const ::SAFplus::Rpc::amfMgmtRpc::LockSUAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSUAssignmentResponse* response);
  virtual void lockSIAssignment(const ::SAFplus::Rpc::amfMgmtRpc::LockSIAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSIAssignmentResponse* response);
  virtual void lockNodeInstantiation(const ::SAFplus::Rpc::amfMgmtRpc::LockNodeInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockNodeInstantiationResponse* response);
  virtual void lockSGInstantiation(const ::SAFplus::Rpc::amfMgmtRpc::LockSGInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSGInstantiationResponse* response);
  virtual void lockSUInstantiation(const ::SAFplus::Rpc::amfMgmtRpc::LockSUInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSUInstantiationResponse* response);
  virtual void unlockNode(const ::SAFplus::Rpc::amfMgmtRpc::UnlockNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockNodeResponse* response);
  virtual void unlockSG(const ::SAFplus::Rpc::amfMgmtRpc::UnlockSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSGResponse* response);
  virtual void unlockSU(const ::SAFplus::Rpc::amfMgmtRpc::UnlockSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSUResponse* response);
  virtual void unlockSI(const ::SAFplus::Rpc::amfMgmtRpc::UnlockSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSIResponse* response);
  virtual void repairNode(const ::SAFplus::Rpc::amfMgmtRpc::RepairNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairNodeResponse* response);
  virtual void repairComponent(const ::SAFplus::Rpc::amfMgmtRpc::RepairComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairComponentResponse* response);
  virtual void repairSU(const ::SAFplus::Rpc::amfMgmtRpc::RepairSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairSUResponse* response);
  virtual void getComponentConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetComponentConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetComponentConfigResponse* response);
  virtual void getNodeConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetNodeConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetNodeConfigResponse* response);
  virtual void getSUConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetSUConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSUConfigResponse* response);
  virtual void getSGConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetSGConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSGConfigResponse* response);
  virtual void getSIConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetSIConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSIConfigResponse* response);
  virtual void getCSIConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetCSIConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetCSIConfigResponse* response);
  virtual void getComponentStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetComponentStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetComponentStatusResponse* response);
  virtual void getNodeStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetNodeStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetNodeStatusResponse* response);
  virtual void getSUStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetSUStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSUStatusResponse* response);
  virtual void getSGStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetSGStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSGStatusResponse* response);
  virtual void getSIStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetSIStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSIStatusResponse* response);
  virtual void getCSIStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetCSIStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetCSIStatusResponse* response);
  virtual void nodeRestart(const ::SAFplus::Rpc::amfMgmtRpc::NodeRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::NodeRestartResponse* response);
  virtual void serviceUnitRestart(const ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestartResponse* response);
  virtual void componentRestart(const ::SAFplus::Rpc::amfMgmtRpc::ComponentRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::ComponentRestartResponse* response);
  virtual void adjustSG(const ::SAFplus::Rpc::amfMgmtRpc::AdjustSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::AdjustSGResponse* response);
  virtual void swapSI(const ::SAFplus::Rpc::amfMgmtRpc::SwapSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::SwapSIResponse* response);

  // implements amfMgmtRpc ------------------------------------------
  virtual void initialize(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::InitializeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::InitializeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void finalize(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::FinalizeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::FinalizeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void commit(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CommitRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CommitResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void createComponent(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateComponentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void updateComponent(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateComponentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteComponent(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteComponentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void createSG(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSGResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void updateSG(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSGResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteSG(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void createNode(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateNodeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void updateNode(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateNodeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteNode(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void createSU(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSUResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void updateSU(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSUResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteSU(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSUResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void createSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void updateSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void createCSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateCSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void updateCSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateCSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteCSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteCSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteCSINVP(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteCSINVPRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteCSINVPResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteNodeSUList(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeSUListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeSUListResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteSGSUList(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSUListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSUListResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteSGSIList(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSIListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSIListResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteSUCompList(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSUCompListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSUCompListResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void deleteSICSIList(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSICSIListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSICSIListResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void lockNodeAssignment(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockNodeAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockNodeAssignmentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void lockSGAssignment(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockSGAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSGAssignmentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void lockSUAssignment(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockSUAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSUAssignmentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void lockSIAssignment(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockSIAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSIAssignmentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void lockNodeInstantiation(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockNodeInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockNodeInstantiationResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void lockSGInstantiation(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockSGInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSGInstantiationResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void lockSUInstantiation(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockSUInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSUInstantiationResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void unlockNode(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UnlockNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockNodeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void unlockSG(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UnlockSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSGResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void unlockSU(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UnlockSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSUResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void unlockSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UnlockSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void repairNode(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::RepairNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairNodeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void repairComponent(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::RepairComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairComponentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void repairSU(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::RepairSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairSUResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getComponentConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetComponentConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetComponentConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getNodeConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetNodeConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetNodeConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getSUConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSUConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSUConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getSGConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSGConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSGConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getSIConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSIConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSIConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getCSIConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetCSIConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetCSIConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getComponentStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetComponentStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetComponentStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getNodeStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetNodeStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetNodeStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getSUStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSUStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSUStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getSGStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSGStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSGStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getSIStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSIStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSIStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void getCSIStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetCSIStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetCSIStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void nodeRestart(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::NodeRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::NodeRestartResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void serviceUnitRestart(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestartResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void componentRestart(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::ComponentRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::ComponentRestartResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void adjustSG(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::AdjustSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::AdjustSGResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  virtual void swapSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::SwapSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::SwapSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));


  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  SAFplus::Handle destination,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(amfMgmtRpc);
};

class amfMgmtRpc_Stub : public amfMgmtRpc {
 public:
  amfMgmtRpc_Stub(SAFplus::Rpc::RpcChannel* channel);
  amfMgmtRpc_Stub(SAFplus::Rpc::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~amfMgmtRpc_Stub();

  inline SAFplus::Rpc::RpcChannel* channel() { return channel_; }


  // implements amfMgmtRpc ------------------------------------------
  void initialize(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::InitializeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::InitializeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void finalize(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::FinalizeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::FinalizeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void commit(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CommitRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CommitResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void createComponent(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateComponentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void updateComponent(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateComponentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteComponent(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteComponentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void createSG(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSGResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void updateSG(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSGResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteSG(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void createNode(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateNodeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void updateNode(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateNodeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteNode(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void createSU(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSUResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void updateSU(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSUResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteSU(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSUResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void createSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void updateSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void createCSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::CreateCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateCSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void updateCSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UpdateCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateCSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteCSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteCSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteCSINVP(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteCSINVPRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteCSINVPResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteNodeSUList(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeSUListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeSUListResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteSGSUList(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSUListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSUListResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteSGSIList(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSIListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSIListResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteSUCompList(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSUCompListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSUCompListResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void deleteSICSIList(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::DeleteSICSIListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSICSIListResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void lockNodeAssignment(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockNodeAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockNodeAssignmentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void lockSGAssignment(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockSGAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSGAssignmentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void lockSUAssignment(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockSUAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSUAssignmentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void lockSIAssignment(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockSIAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSIAssignmentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void lockNodeInstantiation(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockNodeInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockNodeInstantiationResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void lockSGInstantiation(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockSGInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSGInstantiationResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void lockSUInstantiation(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::LockSUInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSUInstantiationResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void unlockNode(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UnlockNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockNodeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void unlockSG(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UnlockSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSGResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void unlockSU(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UnlockSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSUResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void unlockSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::UnlockSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void repairNode(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::RepairNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairNodeResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void repairComponent(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::RepairComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairComponentResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void repairSU(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::RepairSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairSUResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getComponentConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetComponentConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetComponentConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getNodeConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetNodeConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetNodeConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getSUConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSUConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSUConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getSGConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSGConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSGConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getSIConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSIConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSIConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getCSIConfig(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetCSIConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetCSIConfigResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getComponentStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetComponentStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetComponentStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getNodeStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetNodeStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetNodeStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getSUStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSUStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSUStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getSGStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSGStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSGStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getSIStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetSIStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSIStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void getCSIStatus(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::GetCSIStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetCSIStatusResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void nodeRestart(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::NodeRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::NodeRestartResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void serviceUnitRestart(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestartResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void componentRestart(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::ComponentRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::ComponentRestartResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void adjustSG(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::AdjustSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::AdjustSGResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
  void swapSI(SAFplus::Handle destination,
                       const ::SAFplus::Rpc::amfMgmtRpc::SwapSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::SwapSIResponse* response,
                       SAFplus::Wakeable& wakeable = *((SAFplus::Wakeable*)nullptr));
 private:
  SAFplus::Rpc::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(amfMgmtRpc_Stub);
};

class amfMgmtRpcImpl : public amfMgmtRpc {
 public:
  amfMgmtRpcImpl();
  ~amfMgmtRpcImpl();


  // implements amfMgmtRpcImpl ----------------------------------------------
  void initialize(const ::SAFplus::Rpc::amfMgmtRpc::InitializeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::InitializeResponse* response);
  void finalize(const ::SAFplus::Rpc::amfMgmtRpc::FinalizeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::FinalizeResponse* response);
  void commit(const ::SAFplus::Rpc::amfMgmtRpc::CommitRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CommitResponse* response);
  void createComponent(const ::SAFplus::Rpc::amfMgmtRpc::CreateComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateComponentResponse* response);
  void updateComponent(const ::SAFplus::Rpc::amfMgmtRpc::UpdateComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateComponentResponse* response);
  void deleteComponent(const ::SAFplus::Rpc::amfMgmtRpc::DeleteComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteComponentResponse* response);
  void createSG(const ::SAFplus::Rpc::amfMgmtRpc::CreateSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSGResponse* response);
  void updateSG(const ::SAFplus::Rpc::amfMgmtRpc::UpdateSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSGResponse* response);
  void deleteSG(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGResponse* response);
  void createNode(const ::SAFplus::Rpc::amfMgmtRpc::CreateNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateNodeResponse* response);
  void updateNode(const ::SAFplus::Rpc::amfMgmtRpc::UpdateNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateNodeResponse* response);
  void deleteNode(const ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeResponse* response);
  void createSU(const ::SAFplus::Rpc::amfMgmtRpc::CreateSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSUResponse* response);
  void updateSU(const ::SAFplus::Rpc::amfMgmtRpc::UpdateSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSUResponse* response);
  void deleteSU(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSUResponse* response);
  void createSI(const ::SAFplus::Rpc::amfMgmtRpc::CreateSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateSIResponse* response);
  void updateSI(const ::SAFplus::Rpc::amfMgmtRpc::UpdateSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateSIResponse* response);
  void deleteSI(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSIResponse* response);
  void createCSI(const ::SAFplus::Rpc::amfMgmtRpc::CreateCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::CreateCSIResponse* response);
  void updateCSI(const ::SAFplus::Rpc::amfMgmtRpc::UpdateCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UpdateCSIResponse* response);
  void deleteCSI(const ::SAFplus::Rpc::amfMgmtRpc::DeleteCSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteCSIResponse* response);
  void deleteCSINVP(const ::SAFplus::Rpc::amfMgmtRpc::DeleteCSINVPRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteCSINVPResponse* response);
  void deleteNodeSUList(const ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeSUListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteNodeSUListResponse* response);
  void deleteSGSUList(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSUListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSUListResponse* response);
  void deleteSGSIList(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSIListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSGSIListResponse* response);
  void deleteSUCompList(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSUCompListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSUCompListResponse* response);
  void deleteSICSIList(const ::SAFplus::Rpc::amfMgmtRpc::DeleteSICSIListRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::DeleteSICSIListResponse* response);
  void lockNodeAssignment(const ::SAFplus::Rpc::amfMgmtRpc::LockNodeAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockNodeAssignmentResponse* response);
  void lockSGAssignment(const ::SAFplus::Rpc::amfMgmtRpc::LockSGAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSGAssignmentResponse* response);
  void lockSUAssignment(const ::SAFplus::Rpc::amfMgmtRpc::LockSUAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSUAssignmentResponse* response);
  void lockSIAssignment(const ::SAFplus::Rpc::amfMgmtRpc::LockSIAssignmentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSIAssignmentResponse* response);
  void lockNodeInstantiation(const ::SAFplus::Rpc::amfMgmtRpc::LockNodeInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockNodeInstantiationResponse* response);
  void lockSGInstantiation(const ::SAFplus::Rpc::amfMgmtRpc::LockSGInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSGInstantiationResponse* response);
  void lockSUInstantiation(const ::SAFplus::Rpc::amfMgmtRpc::LockSUInstantiationRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::LockSUInstantiationResponse* response);
  void unlockNode(const ::SAFplus::Rpc::amfMgmtRpc::UnlockNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockNodeResponse* response);
  void unlockSG(const ::SAFplus::Rpc::amfMgmtRpc::UnlockSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSGResponse* response);
  void unlockSU(const ::SAFplus::Rpc::amfMgmtRpc::UnlockSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSUResponse* response);
  void unlockSI(const ::SAFplus::Rpc::amfMgmtRpc::UnlockSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::UnlockSIResponse* response);
  void repairNode(const ::SAFplus::Rpc::amfMgmtRpc::RepairNodeRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairNodeResponse* response);
  void repairComponent(const ::SAFplus::Rpc::amfMgmtRpc::RepairComponentRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairComponentResponse* response);
  void repairSU(const ::SAFplus::Rpc::amfMgmtRpc::RepairSURequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::RepairSUResponse* response);
  void getComponentConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetComponentConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetComponentConfigResponse* response);
  void getNodeConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetNodeConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetNodeConfigResponse* response);
  void getSUConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetSUConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSUConfigResponse* response);
  void getSGConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetSGConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSGConfigResponse* response);
  void getSIConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetSIConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSIConfigResponse* response);
  void getCSIConfig(const ::SAFplus::Rpc::amfMgmtRpc::GetCSIConfigRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetCSIConfigResponse* response);
  void getComponentStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetComponentStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetComponentStatusResponse* response);
  void getNodeStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetNodeStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetNodeStatusResponse* response);
  void getSUStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetSUStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSUStatusResponse* response);
  void getSGStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetSGStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSGStatusResponse* response);
  void getSIStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetSIStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetSIStatusResponse* response);
  void getCSIStatus(const ::SAFplus::Rpc::amfMgmtRpc::GetCSIStatusRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::GetCSIStatusResponse* response);
  void nodeRestart(const ::SAFplus::Rpc::amfMgmtRpc::NodeRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::NodeRestartResponse* response);
  void serviceUnitRestart(const ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::ServiceUnitRestartResponse* response);
  void componentRestart(const ::SAFplus::Rpc::amfMgmtRpc::ComponentRestartRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::ComponentRestartResponse* response);
  void adjustSG(const ::SAFplus::Rpc::amfMgmtRpc::AdjustSGRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::AdjustSGResponse* response);
  void swapSI(const ::SAFplus::Rpc::amfMgmtRpc::SwapSIRequest* request,
                       ::SAFplus::Rpc::amfMgmtRpc::SwapSIResponse* response);
};

}  // namespace amfMgmtRpc
}  // namespace Rpc
}  // namespace SAFplus
