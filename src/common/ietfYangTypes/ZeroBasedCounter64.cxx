/* 
 * File ZeroBasedCounter64.cxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 
#include "ietfYangTypesCommon.hxx"

#include <iostream>
#include "clTransaction.hxx"
#include "ZeroBasedCounter64.hxx"


namespace ietfYangTypes
  {

    ZeroBasedCounter64::ZeroBasedCounter64()
    {
    };

    unsigned long int ZeroBasedCounter64::getValue()
    {
        return this->value;
    };

    void ZeroBasedCounter64::setValue(unsigned long int value, SAFplus::Transaction &t)
    {
        if(&t == &SAFplus::NO_TXN) this->value = value;
        else
        {
            SAFplus::SimpleTxnOperation<unsigned long int> *opt = new SAFplus::SimpleTxnOperation<unsigned long int>(&this->value,value);
            t.addOperation(opt);
        }
    };

    ietfYangTypes::ZeroBasedCounter64& ZeroBasedCounter64::operator=(const ietfYangTypes::ZeroBasedCounter64 &zeroBasedCounter64)
    {
        value = zeroBasedCounter64.value;
        return *this;
    };

    ZeroBasedCounter64::~ZeroBasedCounter64()
    {
    };

    std::ostream& operator<<(std::ostream &os, const ietfYangTypes::ZeroBasedCounter64 &zeroBasedCounter64)
    {
        return os << zeroBasedCounter64.value;
    };

    std::istream& operator>>(std::istream &is, ietfYangTypes::ZeroBasedCounter64 &zeroBasedCounter64)
    {
        return is >> zeroBasedCounter64.value;
    };

}
/* namespace ietfYangTypes */
