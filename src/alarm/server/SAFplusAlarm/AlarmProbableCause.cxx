/* 
 * File AlarmProbableCause.cxx
 * This file has been auto-generated by Y2CPP, the
 * plug-in of pyang.
 */ 

#include "MgtEnumType.hxx"
#include "SAFplusAlarmCommon.hxx"
#include <iostream>
#include "AlarmProbableCause.hxx"


namespace SAFplusAlarm
  {

    /*
     * Provide an implementation of the en2str_map lookup table.
     */
    const AlarmProbableCauseManager::map_t AlarmProbableCauseManager::en2str_map = {
            pair_t(AlarmProbableCause::INVALID, "INVALID"),
            pair_t(AlarmProbableCause::LOSS_OF_SIGNAL, "LOSS_OF_SIGNAL"),
            pair_t(AlarmProbableCause::LOSS_OF_FRAME, "LOSS_OF_FRAME"),
            pair_t(AlarmProbableCause::FRAMING_ERROR, "FRAMING_ERROR"),
            pair_t(AlarmProbableCause::LOCAL_NODE_TRANSMISSION_ERROR, "LOCAL_NODE_TRANSMISSION_ERROR"),
            pair_t(AlarmProbableCause::REMOTE_NODE_TRANSMISSION_ERROR, "REMOTE_NODE_TRANSMISSION_ERROR"),
            pair_t(AlarmProbableCause::CALL_ESTABLISHMENT_ERROR, "CALL_ESTABLISHMENT_ERROR"),
            pair_t(AlarmProbableCause::DEGRADED_SIGNAL, "DEGRADED_SIGNAL"),
            pair_t(AlarmProbableCause::SUBSYSTEM_FAILURE, "SUBSYSTEM_FAILURE"),
            pair_t(AlarmProbableCause::PROTOCOL_ERROR, "PROTOCOL_ERROR"),
            pair_t(AlarmProbableCause::LAN_ERROR, "LAN_ERROR"),
            pair_t(AlarmProbableCause::DTE, "DTE"),
            pair_t(AlarmProbableCause::RESPONSE_TIME_EXCESSIVE, "RESPONSE_TIME_EXCESSIVE"),
            pair_t(AlarmProbableCause::QUEUE_SIZE_EXCEEDED, "QUEUE_SIZE_EXCEEDED"),
            pair_t(AlarmProbableCause::BANDWIDTH_REDUCED, "BANDWIDTH_REDUCED"),
            pair_t(AlarmProbableCause::RETRANSMISSION_RATE_EXCESSIVE, "RETRANSMISSION_RATE_EXCESSIVE"),
            pair_t(AlarmProbableCause::CAUSE_THRESHOLD_CROSSED, "CAUSE_THRESHOLD_CROSSED"),
            pair_t(AlarmProbableCause::PERFORMANCE_DEGRADED, "PERFORMANCE_DEGRADED"),
            pair_t(AlarmProbableCause::CONGESTION, "CONGESTION"),
            pair_t(AlarmProbableCause::RESOURCE_CREATOR_NEARING_CAPACITY, "RESOURCE_CREATOR_NEARING_CAPACITY"),
            pair_t(AlarmProbableCause::STORAGE_CAPACITY_PROBLEM, "STORAGE_CAPACITY_PROBLEM"),
            pair_t(AlarmProbableCause::VERSION_MISMATCH, "VERSION_MISMATCH"),
            pair_t(AlarmProbableCause::CORRUPT_DATA, "CORRUPT_DATA"),
            pair_t(AlarmProbableCause::CPU_CYCLES_LIMIT_EXCEEDED, "CPU_CYCLES_LIMIT_EXCEEDED"),
            pair_t(AlarmProbableCause::SOFTWARE_ERROR, "SOFTWARE_ERROR"),
            pair_t(AlarmProbableCause::SOFTWARE_PROGRAM_ERROR, "SOFTWARE_PROGRAM_ERROR"),
            pair_t(AlarmProbableCause::SOFTWARE_PROGRAM_ABNORMALLY_TERMINAGED, "SOFTWARE_PROGRAM_ABNORMALLY_TERMINAGED"),
            pair_t(AlarmProbableCause::FILE_ERROR, "FILE_ERROR"),
            pair_t(AlarmProbableCause::OUT_OF_MEMORY, "OUT_OF_MEMORY"),
            pair_t(AlarmProbableCause::UNDERLYING_RESOURCE_UNAVAILABLE, "UNDERLYING_RESOURCE_UNAVAILABLE"),
            pair_t(AlarmProbableCause::APPLICATION_SUBSYSTEM_FAILURE, "APPLICATION_SUBSYSTEM_FAILURE"),
            pair_t(AlarmProbableCause::CONFIGURATION_OR_CUSTOMIZATION_ERROR, "CONFIGURATION_OR_CUSTOMIZATION_ERROR"),
            pair_t(AlarmProbableCause::POWER_PROBLEM, "POWER_PROBLEM"),
            pair_t(AlarmProbableCause::TIMING_PROBLEM, "TIMING_PROBLEM"),
            pair_t(AlarmProbableCause::PROCESSOR_PROBLEM, "PROCESSOR_PROBLEM"),
            pair_t(AlarmProbableCause::DATASET_OR_MODEM_ERROR, "DATASET_OR_MODEM_ERROR"),
            pair_t(AlarmProbableCause::MULTIPLEXER_PROBLEM, "MULTIPLEXER_PROBLEM"),
            pair_t(AlarmProbableCause::RECEIVER_FAILURE, "RECEIVER_FAILURE"),
            pair_t(AlarmProbableCause::TRANSMITTER_FAILURE, "TRANSMITTER_FAILURE"),
            pair_t(AlarmProbableCause::RECEIVE_FAILURE, "RECEIVE_FAILURE"),
            pair_t(AlarmProbableCause::TRANSMIT_FAILURE, "TRANSMIT_FAILURE"),
            pair_t(AlarmProbableCause::OUTPUT_DEVICE_ERROR, "OUTPUT_DEVICE_ERROR"),
            pair_t(AlarmProbableCause::INPUT_DEVICE_ERROR, "INPUT_DEVICE_ERROR"),
            pair_t(AlarmProbableCause::INPUT_OUTPUT_DEVICE_ERROR, "INPUT_OUTPUT_DEVICE_ERROR"),
            pair_t(AlarmProbableCause::EQUIPMENT_MALFUNCTION, "EQUIPMENT_MALFUNCTION"),
            pair_t(AlarmProbableCause::ADAPTER_ERROR, "ADAPTER_ERROR"),
            pair_t(AlarmProbableCause::TEMPERATURE_UNACCEPTABLE, "TEMPERATURE_UNACCEPTABLE"),
            pair_t(AlarmProbableCause::HUMIDITY_UNACCEPTABLE, "HUMIDITY_UNACCEPTABLE"),
            pair_t(AlarmProbableCause::HEATING_OR_VENTILATION_OR_COOLING_SYSTEM_PROBLEM, "HEATING_OR_VENTILATION_OR_COOLING_SYSTEM_PROBLEM"),
            pair_t(AlarmProbableCause::FIRE_DETECTED, "FIRE_DETECTED"),
            pair_t(AlarmProbableCause::FLOOD_DETECTED, "FLOOD_DETECTED"),
            pair_t(AlarmProbableCause::TOXIC_LEAK_DETECTED, "TOXIC_LEAK_DETECTED"),
            pair_t(AlarmProbableCause::LEAK_DETECTED, "LEAK_DETECTED"),
            pair_t(AlarmProbableCause::PRESSURE_UNACCEPTABLE, "PRESSURE_UNACCEPTABLE"),
            pair_t(AlarmProbableCause::EXCESSIVE_VIBRATION, "EXCESSIVE_VIBRATION"),
            pair_t(AlarmProbableCause::MATERIAL_SUPPLY_EXHAUSTED, "MATERIAL_SUPPLY_EXHAUSTED"),
            pair_t(AlarmProbableCause::PUMP_FAILURE, "PUMP_FAILURE"),
            pair_t(AlarmProbableCause::ENCLOSURE_DOOR_OPEN, "ENCLOSURE_DOOR_OPEN")
    }; // uses c++11 initializer lists 

    const char* c_str(const ::SAFplusAlarm::AlarmProbableCause &alarmProbableCause)
    {
        return AlarmProbableCauseManager::c_str(alarmProbableCause);
    };

    std::ostream& operator<<(std::ostream &os, const ::SAFplusAlarm::AlarmProbableCause &alarmProbableCause)
    {
        return os << AlarmProbableCauseManager::toString(alarmProbableCause);
    };

    std::istream& operator>>(std::istream &is, ::SAFplusAlarm::AlarmProbableCause &alarmProbableCause)
    {
        std::string buf;
        is >> buf;
        alarmProbableCause = AlarmProbableCauseManager::toEnum(buf);
        return is;
    };

}
/* namespace ::SAFplusAlarm */
