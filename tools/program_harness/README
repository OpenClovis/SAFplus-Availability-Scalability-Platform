The program_harness.py script installs a debugging harness on a specific
program (or component).  This means that when you tell it which binary
you want harnessed it will change the name of the binary to:
harnessed_binary_<program_name>
where <program_name> is the original name of the binary.  It will then
create a shell script named: <program_name> that will create an output
file, dump the environment in the output file, dump the command line
arguments in the output file and then start up the original binary with
it's output redirected to the output file.  It is also possible to
request that the script invoke the original binary under strace.


Usage: 
usage: program_harness.py [-d directory] [-t program_name] [-s path_to_strace]

options:
    -h, --help              show this help message and exit
    -d DIRECTORY, --directory=DIRECTORY
                            directory where binaries reside,
                            default=/root/asp/bin
    -t, --trace             Run the harnessed binary with strace.
    -u, --unharness         Uninstall the debugging harness from named
                            binaries.
    -s STRACE_PROG, --straceprog=STRACE_PROG
                            Specify full path name of strace (or equivalent)
                            program.


The output file will be created in whatever directory is the current working
directory when the shell script is invoked.  It will be named:
<program>.output.<pid>
where <program> is the name of the original binary and <pid> is the process
ID of the process running the script (and then the binary).  The output file
will have a dump of the environment of the script, followed by the command
line arguments passed to the script, followed by the output of the script.
If the --trace (or -t) flag was set when the program_harness.py script was
run then the output of the script will be the strace output of the script.
That means that the output of the program and the output of strace will be
interleaved.  I'd like to emphasize that the output file will be located in
the current working directory when the shell script is invoked.  Currently
this is /root/asp/tmp by default.  It would be easy to change the python
to cause the output file to be generated elsewhere.  It'd even be pretty
easy to have program_harness.py take a command line argument that specifies
the output directory.  I'm not sure that that would be a good feature so I
am not putting it in.
