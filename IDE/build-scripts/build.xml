<?xml version='1.0'?>
<project name="OpenClovisIDE" default="plugin" basedir="..">
<!-- set global properties for this build -->
<property name="debug"             value="true"/>
<property name="deprecation"       value="false"/>
<property name="optimize"          value="true"/>   

<property name="include.dir"       value="${eclipse.home}/plugins"/>  
<property name="cdt.plugins.dir"   value="${cdt.home}/eclipse/plugins"/>

<property name="build.dir"         value="build"/>
<property name="dist.dir"          value="dist"/>
<property name="dist.plugins.dir"  value="${dist.dir}/cw/plugins"/>
<property name="dist.features.dir" value="${dist.dir}/cw/features"/>
<property name="dist.bin.dir"      value="${dist.dir}/bin"/>
<property name="dist.update.dir"      value="${dist.dir}/update"/>

<property name="product.name" value="OpenClovisIDE"/>
<property name="utils.dir"    value="com.clovis.common.utils"/>
<property name="zipname"      value="${product.name}.zip"/>
<property name="deployZipname"      value="${product.name}-SDK-${version}-${os}-deploy.zip"/>
<!-- ===== End of all the source plugins //-->

<!--
    ===================================================================
        Set the paths used in the build
    ===================================================================
-->

<path id="app.classpath">
    <!--Add classpath elements here-->
    <fileset dir="${dist.plugins.dir}">
        <include name="**/*.jar"/>
    </fileset>            
    <fileset dir="${include.dir}">
        <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${cdt.plugins.dir}">
        <include name="**/*.jar"/>
    </fileset>
    <fileset dir="plugins/${utils.dir}">
        <include name="**/*.jar"/>
    </fileset>
</path>

<!-- Creat destination directories -->
<target name="init">
    <!-- Create the directory for the plugins and features -->
    <mkdir dir="${dist.plugins.dir}/cw"/>
    <mkdir dir="${dist.features.dir}"/>
    <mkdir dir="${dist.update.dir}"/>
    <mkdir  dir="${dist.update.dir}/plugins"/>

</target>

<!-- Check if classgen.xml exist for plugin -->
<target name="plugin-gen-required">
    <available file="plugins/${plugin_name}/classgen.xml" 
        property="gen.present"/>
</target>

<!-- Run ant on classgen.xml for plugin -->
<target name="plugin-gen" depends="plugin-gen-required" if="gen.present">
    <ant antfile="classgen.xml" dir="plugins/${plugin_name}" target="full"/>
</target>

<!-- Compilation for plugin -->  

<target name="plugin" depends="plugin-gen">
    <mkdir dir="${dist.update.dir}"/>
    <mkdir dir="${dist.update.dir}/plugins"/>
    <mkdir dir="${build.dir}/${plugin_name}/src"/>
    <mkdir dir="${dist.plugins.dir}/${plugin_name}_${version}"/>
    <copy todir="${dist.plugins.dir}/${plugin_name}_${version}">
        <fileset dir="plugins/${plugin_name}" casesensitive="no">
	    <include name="**/*.txt"/>
            <include name="*.jar"/>
            <include name="**/*.jar"/>
            <include name="**/*.gif"/>
            <include name="**/*.png"/>
            <include name="**/*.JPG"/>
            <include name="**/*.css"/>
            <include name="about.*"/>
            <include name="plugin.*"/>
	    <include name="**/*.bmp"/>
            <include name="**/*.ini"/>
            <include name="**/*.xml"/>
            <include name="**/*.xmi"/>
            <include name="**/*.ecore"/>
            <include name="**/*.properties"/>
	    <include name="**/*.lax"/>
            <include name="**/*guiffy"/>
		<include name="**/*.htm"/>
		<include name="**/*.html"/>
		<include name="**/*.css"/>
		<include name="**/*.MF"/>
	    	<include name="**/*.py"/>
		<include name="**/*.kid"/>
	    	<include name="**/*.c"/>
	    	<include name="**/*.h"/>
	    	<include name="**/*.template"/>
		<include name="**/*.sh"/>
            <include name="**/.templates"/>
            <include name="**/.mergeImmuneFile"/>
        </fileset>
    </copy>
    <javac  srcdir="plugins/${plugin_name}/src"
            destdir="${build.dir}/${plugin_name}/src"
            debug="${debug}"
            deprecation="${deprecation}"
            optimize="${optimize}">
        <classpath>
            <path refid="app.classpath"/>
            <fileset dir="plugins/${plugin_name}">
                <include name="*.jar"/>
            </fileset>
        </classpath>
    </javac>
    <jar jarfile="${dist.plugins.dir}/${plugin_name}_${version}/${plugin_name}.jar">
        <fileset dir="${build.dir}/${plugin_name}/src"/>
        <fileset dir="plugins/${plugin_name}/src/" casesensitive="no">
	    <include name="**/*.txt"/>
            <include name="**/*.xml"/>
            <include name="**/*.xmi"/>
            <include name="**/*.gif"/>
            <include name="**/*.png"/>
            <include name="**/*.ecore"/>
            <include name="**/*.properties"/>
        </fileset>
    </jar>
   <jar jarfile="${dist.update.dir}/plugins/${plugin_name}_${version}.jar" filesetmanifest="merge">
        <fileset dir="${dist.plugins.dir}/${plugin_name}_${version}" casesensitive="no">
	    <include name="**/*.txt"/>
            <include name="**/*.jar"/>
            <include name="**/*.xml"/>
            <include name="**/*.xmi"/>
            <include name="**/*.gif"/>
            <include name="**/*.png"/>
            <include name="**/*.ecore"/>
            <include name="**/*.properties"/>
            <include name="**/*.py"/>
            <include name="**/*.c"/>
            <include name="**/*.h"/>
            <include name="**/*.htm"/>
            <include name="**/*.html"/>
            <include name="**/*.*"/>
            <include name="**/*.MF"/>
	    <include name="**/*.lax"/>
            <include name="**/*guiffy"/>
            <include name="**/*.JPG"/>
            <include name="**/*.css"/>
            <include name="**/*.bmp"/>
            <include name="**/.templates"/>
        </fileset>
    </jar>
</target>

<!-- Cleans up build area.  -->
<target name="clean">
    <delete   dir="${dist.dir}"/>
    <delete   dir="${build.dir}"/>
</target>

<target  name="feature">
    <delete   dir="${dist.update.dir}/features"/>
    <mkdir dir="${dist.update.dir}/features"/>
    <jar jarfile="${dist.update.dir}/features/com.clovis.cw.clovisworks_${version}.jar">
        <fileset dir="plugins/com.clovis.cw.clovisworks" casesensitive="no">
        <include name="feature.xml"/>
        </fileset>
</jar>
</target>
<target  name="update" depends="feature">
    <copy todir="${dist.update.dir}">
        <fileset dir="update">
        <include name="site.xml"/>
        </fileset>
     </copy>
    <delete  file="${dist.update.dir}/OpenClovisIDE_UpdateSite.jar"/>
    <jar jarfile="${dist.update.dir}/OpenClovisIDE_UpdateSite.jar">
        <fileset dir="${dist.update.dir}" casesensitive="no">
        <include name="*.xml"/>
        <include name="**/*.jar"/>
        </fileset>
</jar>
</target>

<!--
Target to create final Zip file.
Changed (from original eclipse) File contents are
    -eclipse
        -install.ini
        +jre
        +plugins
            -All GEF     plugins. 
            -All clovis  plugins. 
        +feature
            -All GEF     feature. 
            -All clovis  feature. 
-->
<target name="dist">
    <mkdir    dir="${dist.update.dir}"/>
    <mkdir    dir="${dist.update.dir}/plugins"/>
    <mkdir    dir="${dist.bin.dir}"/>
    <delete  file="${dist.bin.dir}/${zipname}"/>
    <zip destfile="${dist.bin.dir}/${zipname}"
        duplicate="preserve" compress="false">
        <!-- plugins  and features -->
        <zipfileset dir="${dist.dir}/cw/plugins" 
            prefix="plugins"/>
	<!-- shortcut to start eclipse. -->
        <zipfileset includes="openclovisIDE.sh"
            prefix="openclovisIDE/" dir="utils"  filemode="755"/>
        <zipfileset includes="config.ini"
            prefix="openclovisIDE/" dir="utils"  filemode="755"/>
	<!-- packages the specified models from the models dir >
	<zipfileset dir="models/${sample_models}" 
		prefix="openclovisIDE/models/${sample_models}" filemode="755"/-->
   </zip>            
    <echo message="Please find OpenClovis IDE Binary in ${dist.bin.dir}/${zipname}"/>
</target>

<java classname="BuildIDGenerator">
    <arg value="plugins"/>	
    <classpath>
	<pathelement location="plugins"/>
	<pathelement path="${java.class.path}"/>
    </classpath>		
</java>

<target name="deploy">
    <mkdir    dir="${dist.update.dir}"/>
    <mkdir    dir="${dist.update.dir}/plugins"/>
    <mkdir    dir="${dist.bin.dir}"/>
    <delete  file="${dist.bin.dir}/${deployZipname}"/>
    <zip destfile="${dist.bin.dir}/${deployZipname}"
        duplicate="preserve" compress="false">
	<!-- plugins  and features --> 
        <zipfileset dir="${dist.dir}/cw" 
            prefix="${product.name}/eclipse"/>
        <!-- eclipse  -->
        <zipfileset prefix="${product.name}/"
            dir="external-binaries/${os}/eclipse3.1.0/"   filemode="755"/>
	<!-- shortcut to start eclipse (linux and windows). -->
        <zipfileset includes="openclovisIDE.sh"
            prefix="${product.name}" dir="utils"  filemode="755"/>
	<!-- packages the specified models from the models dir >
        <zipfileset includes="${sample_models}"
            prefix="${product.name}/models" dir="models"  filemode="755"/-->

    </zip>            
    <echo message="Please find OpenClovis IDE deploy zip file in ${dist.bin.dir}/${deployZipname}"/>
</target>

</project>
