#!/bin/bash

debug=0

picmg_netfn=0x2c
picmg_id=0
led2_mask=0x07
green=3
amber=4
green_mask=0x08
amber_mask=0x10

# simple debug message interface (print to stderr)
dbmsg () {
    if [ $debug == 1 ]; then
        echo $1 >&2
    fi
}
    
# arg 1:          cmd
# arg 2, 3, ...: cmd arguments
ipmi_req () {
    cmd="ipmitool raw $picmg_netfn $1 $picmg_id $2 $3 $4 $5 $6 $7"
    dbmsg "running command: [$cmd]"
    res=$($cmd)
    if [ ! $? == 0 ]; then
        echo "***ERROR: Command [$cmd] failed; exiting" >&2
        exit 1
    fi
    dbmsg "--> result back: [$res]"
    echo $res
}
    
#   
# If ipmitool is not available or it does not respond properly, write
# an error message and exit. Check in the same time if LED 2 is available.
#
let "res=`echo $(ipmi_req 5 0) | awk '{print $2}'` & $led2_mask"
dbmsg "LED 2 mask result: [$res]"
if [ $res == 0 ]; then
    echo "***ERROR: No LED 2; exiting" >&2
    exit 1
fi
dbmsg "LED 2 is OK to use"

#
# Check if we can use AMBER and GREEN for status indication
#
res=`echo $(ipmi_req 6 0 2) | awk '{printf "0x%s", $2}'`
dbmsg "LED 2 color mask result: [$res]"

let "green_ok = ($res & ($green_mask)) != 0"
dbmsg "GREEN OK: [$green_ok]"

let "amber_ok = ($res & ($amber_mask)) != 0"
dbmsg "AMBER OK: [$amber_ok]"

#
# Define functions to operate the LED in certain ways
#
slow_blink_green () { ipmi_req 7 0 2 100       100      $green > /dev/null ; }
strobe_green ()     { ipmi_req 7 0 2 200       50       $green > /dev/null ; }
strobe_amber ()     { ipmi_req 7 0 2 200       50       $amber > /dev/null ; }
on_green ()         { ipmi_req 7 0 2 0xff      0        $green > /dev/null ; }
on_amber ()         { ipmi_req 7 0 2 0xff      0        $amber > /dev/null ; }

#
# Start with strobing amber when this script is started
#
strobe_amber

#
# Start checking for asp status and do the following:
# - once asp_amf is started, but still booting, slow blink green
# - once asp_amf is fully booted, start a green + amber-strobe pattern
# - if asp_amf crashes, switch on continuous amber
# FIXME: graceful shutdown of this script should restore solid green
#
trap 'on_green; exit' 1 2 3 15
mydir=$(cd $(dirname $0); pwd)
dbmsg "script is running from dir [$mydir]"
asp="$(dirname $mydir)/etc/init.d/asp"
dbmsg "will use init.d script [$asp]"
state=down
while true; do
    dbmsg ""
    dbmsg "time to check asp_amf state..."
    status=$($asp status 2>&1)
    dbmsg "status is [$status]"
    if echo $status | grep "ASP is running on node" > /dev/null; then
        dbmsg "Fully booted"
        on_amber
        sleep 0.5
        on_green
        state=up
    elif echo $status | grep booting > /dev/null; then
        dbmsg "Still booting"
	if [ ! $state == booting ]; then
            slow_blink_green
            state=booting
        fi    
    else
        dbmsg "ASP is not running"
	if [ ! $state == down ]; then
            on_amber
	    state=down
        fi
    fi
    sleep 2
done
